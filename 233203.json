{"path":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","commits":[{"id":"a3d6eb0072094d94624002318ba2d4c840946833","date":1424947971,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","sourceNew":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","sourceNew":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6731f1d5845801b30e64591bab60e3f29064a25","date":1428161777,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","sourceNew":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positioned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d277693481ea6007c1d83cd503d0859bb3b64d20","date":1447445281,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","sourceNew":"  /** Return whether the current doc ID that {@link #approximation()} is on matches. This\n   *  method should only be called when the iterator is positioned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positioned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d277693481ea6007c1d83cd503d0859bb3b64d20":["f6731f1d5845801b30e64591bab60e3f29064a25"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a3d6eb0072094d94624002318ba2d4c840946833"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3d6eb0072094d94624002318ba2d4c840946833":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6731f1d5845801b30e64591bab60e3f29064a25":["a3d6eb0072094d94624002318ba2d4c840946833"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d277693481ea6007c1d83cd503d0859bb3b64d20"]},"commit2Childs":{"d277693481ea6007c1d83cd503d0859bb3b64d20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a3d6eb0072094d94624002318ba2d4c840946833"],"a3d6eb0072094d94624002318ba2d4c840946833":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","f6731f1d5845801b30e64591bab60e3f29064a25"],"f6731f1d5845801b30e64591bab60e3f29064a25":["d277693481ea6007c1d83cd503d0859bb3b64d20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}