{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void doSetNextReader(LeafReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(LeafReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      leafComparators[i] = comparators[i].getLeafComparator(readerContext);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doSetNextReader(LeafReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e0d5825f76d6bd3636a0dbaf6aa020cb357334","date":1435740067,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(LeafReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.scorer(readerContext);\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      leafComparators[i] = comparators[i].getLeafComparator(readerContext);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doSetNextReader(LeafReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      leafComparators[i] = comparators[i].getLeafComparator(readerContext);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(LeafReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(LeafReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    Scorer s = lastDocPerGroup.scorer(readerContext);\n    if (s == null) {\n      lastDocPerGroupBits = null;\n    } else {\n      lastDocPerGroupBits = s.iterator();\n    }\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      leafComparators[i] = comparators[i].getLeafComparator(readerContext);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doSetNextReader(LeafReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.scorer(readerContext);\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      leafComparators[i] = comparators[i].getLeafComparator(readerContext);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"41e0d5825f76d6bd3636a0dbaf6aa020cb357334":["901e951cec2e6af4e503209a6721c8834db23279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"901e951cec2e6af4e503209a6721c8834db23279":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["41e0d5825f76d6bd3636a0dbaf6aa020cb357334"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"41e0d5825f76d6bd3636a0dbaf6aa020cb357334":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"901e951cec2e6af4e503209a6721c8834db23279":["41e0d5825f76d6bd3636a0dbaf6aa020cb357334"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["901e951cec2e6af4e503209a6721c8834db23279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}