{"path":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#generateParseException().mjava","commits":[{"id":"d04b321158481d3895702b3cbf6821a3083e6c15","date":1120530543,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#generateParseException().mjava","pathOld":"/dev/null","sourceNew":"  public ParseException generateParseException() {\n    jj_expentries.removeAllElements();\n    boolean[] la1tokens = new boolean[24];\n    for (int i = 0; i < 24; i++) {\n      la1tokens[i] = false;\n    }\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 10; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 24; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.addElement(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = (int[])jj_expentries.elementAt(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c80895407a253178cac9acedf29e0d70c1365b50","date":1255908073,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#generateParseException().mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[24];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 10; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 24; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  public ParseException generateParseException() {\n    jj_expentries.removeAllElements();\n    boolean[] la1tokens = new boolean[24];\n    for (int i = 0; i < 24; i++) {\n      la1tokens[i] = false;\n    }\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 10; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 24; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.addElement(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = (int[])jj_expentries.elementAt(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":["e91b7614171e0a6a82351457c2870d2a0124ba9a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#generateParseException().mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[24];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 10; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 24; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[24];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 10; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 24; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d04b321158481d3895702b3cbf6821a3083e6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c80895407a253178cac9acedf29e0d70c1365b50":["d04b321158481d3895702b3cbf6821a3083e6c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c80895407a253178cac9acedf29e0d70c1365b50"]},"commit2Childs":{"d04b321158481d3895702b3cbf6821a3083e6c15":["c80895407a253178cac9acedf29e0d70c1365b50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d04b321158481d3895702b3cbf6821a3083e6c15"],"c80895407a253178cac9acedf29e0d70c1365b50":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}