{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","commits":[{"id":"6cc97ef80489825587c37e0ca2efa790041f7f76","date":1437752845,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link SetKeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link SnowballFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    TokenStream result = new StandardFilter(source);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new SetKeywordMarkerFilter(result, stemExclusionSet);\n    result = new SnowballFilter(result, new LithuanianStemmer());\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a7bf5d44fd9c84c577166b93b23c9774b063d46","date":1530097523,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link SetKeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link SnowballFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    TokenStream result = new LowerCaseFilter(source);\n    result = new StopFilter(result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new SetKeywordMarkerFilter(result, stemExclusionSet);\n    result = new SnowballFilter(result, new LithuanianStemmer());\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link SetKeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link SnowballFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    TokenStream result = new StandardFilter(source);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new SetKeywordMarkerFilter(result, stemExclusionSet);\n    result = new SnowballFilter(result, new LithuanianStemmer());\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link SetKeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link SnowballFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    TokenStream result = new LowerCaseFilter(source);\n    result = new StopFilter(result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new SetKeywordMarkerFilter(result, stemExclusionSet);\n    result = new SnowballFilter(result, new LithuanianStemmer());\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link SetKeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link SnowballFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    TokenStream result = new StandardFilter(source);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new SetKeywordMarkerFilter(result, stemExclusionSet);\n    result = new SnowballFilter(result, new LithuanianStemmer());\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lt/LithuanianAnalyzer#createComponents(String).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link SetKeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link SnowballFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    TokenStream result = new LowerCaseFilter(source);\n    result = new StopFilter(result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new SetKeywordMarkerFilter(result, stemExclusionSet);\n    result = new SnowballFilter(result, new LithuanianStemmer());\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link SetKeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link SnowballFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    TokenStream result = new StandardFilter(source);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new SetKeywordMarkerFilter(result, stemExclusionSet);\n    result = new SnowballFilter(result, new LithuanianStemmer());\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6cc97ef80489825587c37e0ca2efa790041f7f76","8a7bf5d44fd9c84c577166b93b23c9774b063d46"],"8a7bf5d44fd9c84c577166b93b23c9774b063d46":["6cc97ef80489825587c37e0ca2efa790041f7f76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6cc97ef80489825587c37e0ca2efa790041f7f76":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a7bf5d44fd9c84c577166b93b23c9774b063d46"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["6cc97ef80489825587c37e0ca2efa790041f7f76","8a7bf5d44fd9c84c577166b93b23c9774b063d46"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"8a7bf5d44fd9c84c577166b93b23c9774b063d46":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6cc97ef80489825587c37e0ca2efa790041f7f76"],"6cc97ef80489825587c37e0ca2efa790041f7f76":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8a7bf5d44fd9c84c577166b93b23c9774b063d46","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}