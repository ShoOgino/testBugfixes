{"path":"src/java/org/apache/lucene/index/IndexModifier#init(Directory,Analyzer,boolean).mjava","commits":[{"id":"0afa0bff72bc189cdf6fc95f80d80365a6417e3b","date":1118096970,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#init(Directory,Analyzer,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initialize an IndexWriter.\n   * @throws IOException\n   */\n  protected void init(Directory directory, Analyzer analyzer, boolean create) throws IOException {\n    this.directory = directory;\n    synchronized(this.directory) {\n      this.analyzer = analyzer;\n      indexWriter = new IndexWriter(directory, analyzer, create);\n      open = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#init(Directory,Analyzer,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexModifier#init(Directory,Analyzer,boolean).mjava","sourceNew":"  /**\n   * Initialize an IndexWriter.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws LockObtainFailedException if another writer\n   *  has this index open (<code>write.lock</code> could not\n   *  be obtained)\n   * @throws IOException if there is a low-level IO error\n   */\n  protected void init(Directory directory, Analyzer analyzer, boolean create) throws CorruptIndexException, LockObtainFailedException, IOException {\n    this.directory = directory;\n    synchronized(this.directory) {\n      this.analyzer = analyzer;\n      indexWriter = new IndexWriter(directory, analyzer, create);\n      open = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Initialize an IndexWriter.\n   * @throws IOException\n   */\n  protected void init(Directory directory, Analyzer analyzer, boolean create) throws IOException {\n    this.directory = directory;\n    synchronized(this.directory) {\n      this.analyzer = analyzer;\n      indexWriter = new IndexWriter(directory, analyzer, create);\n      open = true;\n    }\n  }\n\n","bugFix":["0afa0bff72bc189cdf6fc95f80d80365a6417e3b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#init(Directory,Analyzer,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexModifier#init(Directory,Analyzer,boolean).mjava","sourceNew":"  /**\n   * Initialize an IndexWriter.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws LockObtainFailedException if another writer\n   *  has this index open (<code>write.lock</code> could not\n   *  be obtained)\n   * @throws IOException if there is a low-level IO error\n   */\n  protected void init(Directory directory, Analyzer analyzer, boolean create) throws CorruptIndexException, LockObtainFailedException, IOException {\n    this.directory = directory;\n    synchronized(this.directory) {\n      this.analyzer = analyzer;\n      indexWriter = new IndexWriter(directory, analyzer, create, IndexWriter.MaxFieldLength.LIMITED);\n      open = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Initialize an IndexWriter.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws LockObtainFailedException if another writer\n   *  has this index open (<code>write.lock</code> could not\n   *  be obtained)\n   * @throws IOException if there is a low-level IO error\n   */\n  protected void init(Directory directory, Analyzer analyzer, boolean create) throws CorruptIndexException, LockObtainFailedException, IOException {\n    this.directory = directory;\n    synchronized(this.directory) {\n      this.analyzer = analyzer;\n      indexWriter = new IndexWriter(directory, analyzer, create);\n      open = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eaea03be31988a41275d45a429ac71ff0ad740fb","date":1254612554,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexModifier#init(Directory,Analyzer,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Initialize an IndexWriter.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws LockObtainFailedException if another writer\n   *  has this index open (<code>write.lock</code> could not\n   *  be obtained)\n   * @throws IOException if there is a low-level IO error\n   */\n  protected void init(Directory directory, Analyzer analyzer, boolean create) throws CorruptIndexException, LockObtainFailedException, IOException {\n    this.directory = directory;\n    synchronized(this.directory) {\n      this.analyzer = analyzer;\n      indexWriter = new IndexWriter(directory, analyzer, create, IndexWriter.MaxFieldLength.LIMITED);\n      open = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"1b54a9bc667895a2095a886184bf69a3179e63df":["0afa0bff72bc189cdf6fc95f80d80365a6417e3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["1b54a9bc667895a2095a886184bf69a3179e63df"],"0afa0bff72bc189cdf6fc95f80d80365a6417e3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eaea03be31988a41275d45a429ac71ff0ad740fb"]},"commit2Childs":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1b54a9bc667895a2095a886184bf69a3179e63df":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0afa0bff72bc189cdf6fc95f80d80365a6417e3b"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["eaea03be31988a41275d45a429ac71ff0ad740fb"],"0afa0bff72bc189cdf6fc95f80d80365a6417e3b":["1b54a9bc667895a2095a886184bf69a3179e63df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}