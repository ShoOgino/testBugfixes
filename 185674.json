{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","commits":[{"id":"fb02351ae2b114dd41585916d1e35fb2cff98fb0","date":1337171337,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      BytesRef docValue = termsIndex.getTerm(doc, tempBR);\n      if (docValue == null) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      return docValue.compareTo(value);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      BytesRef docValue = termsIndex.getTerm(doc, tempBR);\n      if (docValue == null) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      return docValue.compareTo(value);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","sourceNew":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      int ord = termsIndex.getOrd(doc);\n      if (ord == -1) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      termsIndex.lookupOrd(ord, tempBR);\n      return tempBR.compareTo(value);\n    }\n\n","sourceOld":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      BytesRef docValue = termsIndex.getTerm(doc, tempBR);\n      if (docValue == null) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      return docValue.compareTo(value);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","sourceNew":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      int ord = termsIndex.getOrd(doc);\n      if (ord == -1) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      termsIndex.lookupOrd(ord, tempBR);\n      return tempBR.compareTo(value);\n    }\n\n","sourceOld":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      BytesRef docValue = termsIndex.getTerm(doc, tempBR);\n      if (docValue == null) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      return docValue.compareTo(value);\n    }\n\n","bugFix":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7615b855702e008d91a95a2578bf05d27372f599","date":1389802891,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      int ord = termsIndex.getOrd(doc);\n      if (ord == -1) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      termsIndex.lookupOrd(ord, tempBR);\n      return tempBR.compareTo(value);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27ab7b234eab0cbc020836989b96ed430e1065bb","date":1389894025,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compareDocToValue(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compareDocToValue(int doc, BytesRef value) {\n      int ord = termsIndex.getOrd(doc);\n      if (ord == -1) {\n        if (value == null) {\n          return 0;\n        }\n        return -1;\n      } else if (value == null) {\n        return 1;\n      }\n      termsIndex.lookupOrd(ord, tempBR);\n      return tempBR.compareTo(value);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"27ab7b234eab0cbc020836989b96ed430e1065bb":["d4d69c535930b5cce125cff868d40f6373dc27d4","7615b855702e008d91a95a2578bf05d27372f599"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7615b855702e008d91a95a2578bf05d27372f599":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["27ab7b234eab0cbc020836989b96ed430e1065bb"]},"commit2Childs":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["d4d69c535930b5cce125cff868d40f6373dc27d4","9d7e5f3aa5935964617824d1f9b2599ddb334464","ef0d8a69209261514c5739c770bba706c2308450"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["27ab7b234eab0cbc020836989b96ed430e1065bb","7615b855702e008d91a95a2578bf05d27372f599"],"27ab7b234eab0cbc020836989b96ed430e1065bb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","ef0d8a69209261514c5739c770bba706c2308450"],"7615b855702e008d91a95a2578bf05d27372f599":["27ab7b234eab0cbc020836989b96ed430e1065bb"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}