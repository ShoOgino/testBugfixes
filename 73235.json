{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#reverseMap(Map[String,String]).mjava","commits":[{"id":"26de7f978abe868807e55377d3e5837c0a7883d3","date":1516908224,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#reverseMap(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"    private static Map<String, String> reverseMap(Map<String, String> input) { // swap keys and values\n      Map<String, String> attrToParams = new HashMap<>(input.size());\n      for (Map.Entry<String, String> entry :input.entrySet()) {\n        final String existing = attrToParams.put(entry.getValue(), entry.getKey());\n        if (existing != null) {\n          throw new IllegalArgumentException(\"keys and values must collectively be unique\");\n        }\n      }\n      return attrToParams;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"26de7f978abe868807e55377d3e5837c0a7883d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["26de7f978abe868807e55377d3e5837c0a7883d3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["26de7f978abe868807e55377d3e5837c0a7883d3"],"26de7f978abe868807e55377d3e5837c0a7883d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}