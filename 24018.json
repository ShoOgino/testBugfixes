{"path":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"/dev/null","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(\"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"/dev/null","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(\"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"/dev/null","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(\"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3","date":1327626756,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, \"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(\"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["ab93989824d8169d9dc1f37c9915d1320b86edfe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, \"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(\"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, \"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(\"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab93989824d8169d9dc1f37c9915d1320b86edfe","date":1331117603,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, \"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","bugFix":["91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, \"%s.%019d\", TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ENGLISH, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      try {\n        tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Can't open new tlog!\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  protected void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  protected void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","sourceOld":"  private void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#ensureLog().mjava","sourceNew":"  protected void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = newTransactionLog(new File(tlogDir, newLogName), globalStrings, false);\n    }\n  }\n\n","sourceOld":"  protected void ensureLog() {\n    if (tlog == null) {\n      String newLogName = String.format(Locale.ROOT, LOG_FILENAME_PATTERN, TLOG_NAME, id);\n      tlog = new TransactionLog(new File(tlogDir, newLogName), globalStrings);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3","ab93989824d8169d9dc1f37c9915d1320b86edfe"],"78a55f24d9b493c2a1cecf79f1d78279062b545b":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["2acf500f78aa12b92e371fd89c719291986b6b90","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["0d22ac6a4146774c1bc8400160fc0b6150294e92","91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"2acf500f78aa12b92e371fd89c719291986b6b90":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"46d8ada1fff8d18cb197c38c7983225162599948":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","2acf500f78aa12b92e371fd89c719291986b6b90"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["2acf500f78aa12b92e371fd89c719291986b6b90"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"ab93989824d8169d9dc1f37c9915d1320b86edfe":["91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["ab93989824d8169d9dc1f37c9915d1320b86edfe","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["ab93989824d8169d9dc1f37c9915d1320b86edfe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86290366cefc1b9d4eced13b430858c4a4c0421d"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["78a55f24d9b493c2a1cecf79f1d78279062b545b"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3":["38e3b736c7ca086d61b7dbb841c905ee115490da","78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","ab93989824d8169d9dc1f37c9915d1320b86edfe"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["37a0f60745e53927c4c876cfe5b5a58170f0646c","46d8ada1fff8d18cb197c38c7983225162599948","849494cf2f3a96af5c8c84995108ddd8456fcd04","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","86290366cefc1b9d4eced13b430858c4a4c0421d"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab93989824d8169d9dc1f37c9915d1320b86edfe":["38e3b736c7ca086d61b7dbb841c905ee115490da","fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["fd92b8bcc88e969302510acf77bd6970da3994c4"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","91ee61479f2f42bdc7f6ac0b1a7e1dde03c345c3","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","78a55f24d9b493c2a1cecf79f1d78279062b545b","37a0f60745e53927c4c876cfe5b5a58170f0646c","fd92b8bcc88e969302510acf77bd6970da3994c4","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}