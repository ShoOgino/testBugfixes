{"path":"lucene/src/java/org/apache/lucene/index/IndexReaderPool#close().mjava","commits":[{"id":"5ef87af8c7bd0f8429622b83aa74202383f2e757","date":1280262785,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReaderPool#close().mjava","pathOld":"/dev/null","sourceNew":"  /** Remove all our references to readers, and commits\n   *  any pending changes. */\n  synchronized void close() throws IOException {\n    Iterator<Map.Entry<SegmentInfo,SegmentReader>> iter = readerMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      \n      Map.Entry<SegmentInfo,SegmentReader> ent = iter.next();\n\n      SegmentReader sr = ent.getValue();\n      if (sr.hasChanges) {\n        assert writer.infoIsLive(sr.getSegmentInfo());\n        sr.startCommit();\n        boolean success = false;\n        try {\n          sr.doCommit(null);\n          success = true;\n        } finally {\n          if (!success) {\n            sr.rollbackCommit();\n          }\n        }\n      }\n\n      iter.remove();\n\n      // NOTE: it is allowed that this decRef does not\n      // actually close the SR; this can happen when a\n      // near real-time reader is kept open after the\n      // IndexWriter instance is closed\n      sr.decRef();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ca38aecd0204be91049ec782668f642a68d9935","date":1292975343,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReaderPool#close().mjava","sourceNew":null,"sourceOld":"  /** Remove all our references to readers, and commits\n   *  any pending changes. */\n  synchronized void close() throws IOException {\n    Iterator<Map.Entry<SegmentInfo,SegmentReader>> iter = readerMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      \n      Map.Entry<SegmentInfo,SegmentReader> ent = iter.next();\n\n      SegmentReader sr = ent.getValue();\n      if (sr.hasChanges) {\n        assert writer.infoIsLive(sr.getSegmentInfo());\n        sr.startCommit();\n        boolean success = false;\n        try {\n          sr.doCommit(null);\n          success = true;\n        } finally {\n          if (!success) {\n            sr.rollbackCommit();\n          }\n        }\n      }\n\n      iter.remove();\n\n      // NOTE: it is allowed that this decRef does not\n      // actually close the SR; this can happen when a\n      // near real-time reader is kept open after the\n      // IndexWriter instance is closed\n      sr.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ca38aecd0204be91049ec782668f642a68d9935":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1ca38aecd0204be91049ec782668f642a68d9935":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ef87af8c7bd0f8429622b83aa74202383f2e757","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["1ca38aecd0204be91049ec782668f642a68d9935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1ca38aecd0204be91049ec782668f642a68d9935","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}