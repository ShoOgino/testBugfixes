{"path":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":null,"sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"35a2b6f25b096169a2701a954c17b623ce9b7a94","date":1269373468,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b2de4fce4f00c1fd8ccf5d361b57f970d8be986e","date":1269389568,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f20bb72b0dfa147c6f1fcd7693102c63a2714eae","date":1303767270,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0663cc678850ea2c51151f9fd217342ea35b8568","date":1303828523,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21486a8058ee8d7503c7d7a5e55b6c3a218d0942","date":1303841712,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a405e749df166cf8c456ac9381f77f6c99a6270","date":1303842176,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8f944ac3fe3f9d40d825177507fb381d2b106b3","date":1303868525,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d5df8e07c035d62d982894b439322da40e0938","date":1303923139,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","sourceOld":"  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dea805b16da0748ae2eada3c2a449bbb7dcb19","date":1308741523,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase#testMultiCore().mjava","sourceNew":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCore() throws Exception\n  {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction( ACTION.COMMIT, true, true );\n    up.deleteByQuery( \"*:*\" );\n    up.process( getSolrCore0() );\n    up.process( getSolrCore1() );\n    up.clear();\n    \n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"id\", \"AAA\" );\n    doc.setField( \"name\", \"AAA1\" );\n    doc.setField( \"type\", \"BBB1\" );\n    doc.setField( \"core0\", \"yup\" );\n   \n    // Add to core0\n    up.add( doc );\n    up.process( getSolrCore0() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore1() );\n      fail( \"Can't add core0 field to core1!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n\n    // Add to core1\n    doc.setField( \"id\", \"BBB\" );\n    doc.setField( \"name\", \"BBB1\" );\n    doc.setField( \"type\", \"AAA1\" );\n    doc.setField( \"core1\", \"yup\" );\n    doc.removeField( \"core0\" );\n    up.add( doc );\n    up.process( getSolrCore1() );\n\n    // You can't add it to core1\n    try {\n      ignoreException(\"unknown field\");\n      up.process( getSolrCore0() );\n      fail( \"Can't add core1 field to core0!\" );\n    }\n    catch( Exception ex ) {}\n    resetExceptionIgnores();\n    \n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest( q );\n    q.setQuery( \"id:AAA\" );\n    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );\n    assertEquals( 0, r.process( getSolrCore1() ).getResults().size() );\n    \n    // Now test Changing the default core\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    assertEquals( 0, getSolrCore1().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    // cross-core join\n    assertEquals( 0, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name}*:*\" ) ).getResults().size() );  // normal join\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"{!join from=type to=name fromIndex=core1}id:BBB\" ) ).getResults().size() );\n    assertEquals( 1, getSolrCore1().query( new SolrQuery( \"{!join from=type to=name fromIndex=core0}id:AAA\" ) ).getResults().size() );\n\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long before = mcr.getStartTime( name ).getTime();\n    CoreAdminRequest.reloadCore( name, coreadmin );\n    \n    // core should still have docs\n    assertEquals( 1, getSolrCore0().query( new SolrQuery( \"id:AAA\" ) ).getResults().size() );\n    \n    mcr = CoreAdminRequest.getStatus( name, coreadmin );\n    long after = mcr.getStartTime( name ).getTime();\n    assertTrue( \"should have more recent time: \"+after+\",\"+before, after > before );\n\n    // test move\n    CoreAdminRequest.renameCore(\"core1\",\"corea\",coreadmin);\n    CoreAdminRequest.renameCore(\"corea\",\"coreb\",coreadmin);\n    CoreAdminRequest.renameCore(\"coreb\",\"corec\",coreadmin);\n    CoreAdminRequest.renameCore(\"corec\",\"cored\",coreadmin);\n    CoreAdminRequest.renameCore(\"cored\",\"corefoo\",coreadmin);\n    try {\n      getSolrCore(\"core1\").query( new SolrQuery( \"id:BBB\" ) );\n      fail( \"core1 should be gone\" );\n    }\n    catch( Exception ex ) {}\n    assertEquals( 1, getSolrCore(\"corefoo\").query( new SolrQuery( \"id:BBB\" ) ).getResults().size() );\n\n    NamedList<Object> response = getSolrCore(\"corefoo\").query(new SolrQuery().setQueryType(\"/admin/system\")).getResponse();\n    NamedList<Object> coreInfo = (NamedList<Object>) response.get(\"core\");\n    String indexDir = (String) ((NamedList<Object>) coreInfo.get(\"directory\")).get(\"index\");\n    // test delete index on core\n    CoreAdminRequest.unloadCore(\"corefoo\", true, coreadmin);\n    File dir = new File(indexDir);\n    assertFalse(\"Index directory exists after core unload with deleteIndex=true\", dir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d5df8e07c035d62d982894b439322da40e0938":["b2de4fce4f00c1fd8ccf5d361b57f970d8be986e","f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"7a405e749df166cf8c456ac9381f77f6c99a6270":["21486a8058ee8d7503c7d7a5e55b6c3a218d0942"],"f20bb72b0dfa147c6f1fcd7693102c63a2714eae":["b2de4fce4f00c1fd8ccf5d361b57f970d8be986e"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["b7dea805b16da0748ae2eada3c2a449bbb7dcb19","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["b2de4fce4f00c1fd8ccf5d361b57f970d8be986e","f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"0663cc678850ea2c51151f9fd217342ea35b8568":["f20bb72b0dfa147c6f1fcd7693102c63a2714eae"],"2553b00f699380c64959ccb27991289aae87be2e":["a3776dccca01c11e7046323cfad46a3b4a471233","b7dea805b16da0748ae2eada3c2a449bbb7dcb19"],"f8f944ac3fe3f9d40d825177507fb381d2b106b3":["7a405e749df166cf8c456ac9381f77f6c99a6270"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["f8f944ac3fe3f9d40d825177507fb381d2b106b3","b7dea805b16da0748ae2eada3c2a449bbb7dcb19"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["2553b00f699380c64959ccb27991289aae87be2e"],"a3776dccca01c11e7046323cfad46a3b4a471233":["b2de4fce4f00c1fd8ccf5d361b57f970d8be986e","f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"b7dea805b16da0748ae2eada3c2a449bbb7dcb19":["f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b7dea805b16da0748ae2eada3c2a449bbb7dcb19"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"35a2b6f25b096169a2701a954c17b623ce9b7a94":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"21486a8058ee8d7503c7d7a5e55b6c3a218d0942":["0663cc678850ea2c51151f9fd217342ea35b8568"],"b2de4fce4f00c1fd8ccf5d361b57f970d8be986e":["35a2b6f25b096169a2701a954c17b623ce9b7a94"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"d4d5df8e07c035d62d982894b439322da40e0938":[],"7a405e749df166cf8c456ac9381f77f6c99a6270":["f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"f20bb72b0dfa147c6f1fcd7693102c63a2714eae":["0663cc678850ea2c51151f9fd217342ea35b8568"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"0663cc678850ea2c51151f9fd217342ea35b8568":["21486a8058ee8d7503c7d7a5e55b6c3a218d0942"],"2553b00f699380c64959ccb27991289aae87be2e":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"f8f944ac3fe3f9d40d825177507fb381d2b106b3":["d4d5df8e07c035d62d982894b439322da40e0938","135621f3a0670a9394eb563224a3b76cc4dddc0f","d083e83f225b11e5fdd900e83d26ddb385b6955c","a3776dccca01c11e7046323cfad46a3b4a471233","b7dea805b16da0748ae2eada3c2a449bbb7dcb19"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"1da8d55113b689b06716246649de6f62430f15c0":["35a2b6f25b096169a2701a954c17b623ce9b7a94"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["2553b00f699380c64959ccb27991289aae87be2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"b7dea805b16da0748ae2eada3c2a449bbb7dcb19":["c26f00b574427b55127e869b935845554afde1fa","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"35a2b6f25b096169a2701a954c17b623ce9b7a94":["b2de4fce4f00c1fd8ccf5d361b57f970d8be986e"],"b2de4fce4f00c1fd8ccf5d361b57f970d8be986e":["d4d5df8e07c035d62d982894b439322da40e0938","f20bb72b0dfa147c6f1fcd7693102c63a2714eae","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233"],"21486a8058ee8d7503c7d7a5e55b6c3a218d0942":["7a405e749df166cf8c456ac9381f77f6c99a6270"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d4d5df8e07c035d62d982894b439322da40e0938","135621f3a0670a9394eb563224a3b76cc4dddc0f","d083e83f225b11e5fdd900e83d26ddb385b6955c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}