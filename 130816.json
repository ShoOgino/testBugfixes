{"path":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(IndexReader).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(IndexReader).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(IndexReader).mjava","sourceNew":"  /**\n   * Some tests expect the directory to contain a single segment, and want to do tests on that segment's reader.\n   * This is an utility method to help them.\n   */\n  public static SegmentReader getOnlySegmentReader(IndexReader reader) {\n    if (reader instanceof SegmentReader)\n      return (SegmentReader) reader;\n\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders.length != 1)\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.length + \" segments instead of exactly one\");\n\n    return (SegmentReader) subReaders[0];\n  }\n\n","sourceOld":"  /**\n   * Some tests expect the directory to contain a single segment, and want to do tests on that segment's reader.\n   * This is an utility method to help them.\n   */\n  public static SegmentReader getOnlySegmentReader(IndexReader reader) {\n    if (reader instanceof SegmentReader)\n      return (SegmentReader) reader;\n\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders.length != 1)\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.length + \" segments instead of exactly one\");\n\n    return (SegmentReader) subReaders[0];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a85e7319b5cf755cba8f1bfa7365afeb9cc3ad94","date":1327846543,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(DirectoryReader).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(IndexReader).mjava","sourceNew":"  /**\n   * Some tests expect the directory to contain a single segment, and want to do tests on that segment's reader.\n   * This is an utility method to help them.\n   */\n  public static SegmentReader getOnlySegmentReader(DirectoryReader reader) {\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders.length != 1)\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.length + \" segments instead of exactly one\");\n    assertTrue(subReaders[0] instanceof SegmentReader);\n    return (SegmentReader) subReaders[0];\n  }\n\n","sourceOld":"  /**\n   * Some tests expect the directory to contain a single segment, and want to do tests on that segment's reader.\n   * This is an utility method to help them.\n   */\n  public static SegmentReader getOnlySegmentReader(IndexReader reader) {\n    if (reader instanceof SegmentReader)\n      return (SegmentReader) reader;\n\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders.length != 1)\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.length + \" segments instead of exactly one\");\n\n    return (SegmentReader) subReaders[0];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(DirectoryReader).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(IndexReader).mjava","sourceNew":"  /**\n   * Some tests expect the directory to contain a single segment, and want to do tests on that segment's reader.\n   * This is an utility method to help them.\n   */\n  public static SegmentReader getOnlySegmentReader(DirectoryReader reader) {\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders.length != 1)\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.length + \" segments instead of exactly one\");\n    assertTrue(subReaders[0] instanceof SegmentReader);\n    return (SegmentReader) subReaders[0];\n  }\n\n","sourceOld":"  /**\n   * Some tests expect the directory to contain a single segment, and want to do tests on that segment's reader.\n   * This is an utility method to help them.\n   */\n  public static SegmentReader getOnlySegmentReader(IndexReader reader) {\n    if (reader instanceof SegmentReader)\n      return (SegmentReader) reader;\n\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders.length != 1)\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.length + \" segments instead of exactly one\");\n\n    return (SegmentReader) subReaders[0];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a85e7319b5cf755cba8f1bfa7365afeb9cc3ad94":["7b91922b55d15444d554721b352861d028eb8278"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["7b91922b55d15444d554721b352861d028eb8278","a85e7319b5cf755cba8f1bfa7365afeb9cc3ad94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a85e7319b5cf755cba8f1bfa7365afeb9cc3ad94","5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a85e7319b5cf755cba8f1bfa7365afeb9cc3ad94":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}