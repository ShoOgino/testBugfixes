{"path":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","commits":[{"id":"1fb70d5d797131bf722eac86615eae787b5af9ea","date":1112363464,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof FuzzyQuery)) return false;\n    if (!super.equals(o)) return false;\n\n    final FuzzyQuery fuzzyQuery = (FuzzyQuery) o;\n\n    if (minimumSimilarity != fuzzyQuery.minimumSimilarity) return false;\n    if (prefixLength != fuzzyQuery.prefixLength) return false;\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58d0a32bc578c175fa42d65d95f21290d3473d84","date":1241610125,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","sourceNew":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    FuzzyQuery other = (FuzzyQuery) obj;\n    if (Float.floatToIntBits(minimumSimilarity) != Float\n        .floatToIntBits(other.minimumSimilarity))\n      return false;\n    if (prefixLength != other.prefixLength)\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof FuzzyQuery)) return false;\n    if (!super.equals(o)) return false;\n\n    final FuzzyQuery fuzzyQuery = (FuzzyQuery) o;\n\n    if (minimumSimilarity != fuzzyQuery.minimumSimilarity) return false;\n    if (prefixLength != fuzzyQuery.prefixLength) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bba073edfb860aaa4c71d8d6e49253463326942","date":1246810500,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","sourceNew":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    FuzzyQuery other = (FuzzyQuery) obj;\n    if (Float.floatToIntBits(minimumSimilarity) != Float\n        .floatToIntBits(other.minimumSimilarity))\n      return false;\n    if (prefixLength != other.prefixLength)\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    FuzzyQuery other = (FuzzyQuery) obj;\n    if (Float.floatToIntBits(minimumSimilarity) != Float\n        .floatToIntBits(other.minimumSimilarity))\n      return false;\n    if (prefixLength != other.prefixLength)\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3","date":1255442836,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    FuzzyQuery other = (FuzzyQuery) obj;\n    if (Float.floatToIntBits(minimumSimilarity) != Float\n        .floatToIntBits(other.minimumSimilarity))\n      return false;\n    if (prefixLength != other.prefixLength)\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    FuzzyQuery other = (FuzzyQuery) obj;\n    if (Float.floatToIntBits(minimumSimilarity) != Float\n        .floatToIntBits(other.minimumSimilarity))\n      return false;\n    if (prefixLength != other.prefixLength)\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    FuzzyQuery other = (FuzzyQuery) obj;\n    if (Float.floatToIntBits(minimumSimilarity) != Float\n        .floatToIntBits(other.minimumSimilarity))\n      return false;\n    if (prefixLength != other.prefixLength)\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    FuzzyQuery other = (FuzzyQuery) obj;\n    if (Float.floatToIntBits(minimumSimilarity) != Float\n        .floatToIntBits(other.minimumSimilarity))\n      return false;\n    if (prefixLength != other.prefixLength)\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1fb70d5d797131bf722eac86615eae787b5af9ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"58d0a32bc578c175fa42d65d95f21290d3473d84":["1fb70d5d797131bf722eac86615eae787b5af9ea"],"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3":["9bba073edfb860aaa4c71d8d6e49253463326942"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bba073edfb860aaa4c71d8d6e49253463326942":["58d0a32bc578c175fa42d65d95f21290d3473d84"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["322d95cfb0c59ace7533e19e5cec7f359ce6d6d3"]},"commit2Childs":{"1fb70d5d797131bf722eac86615eae787b5af9ea":["58d0a32bc578c175fa42d65d95f21290d3473d84"],"58d0a32bc578c175fa42d65d95f21290d3473d84":["9bba073edfb860aaa4c71d8d6e49253463326942"],"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1fb70d5d797131bf722eac86615eae787b5af9ea"],"9bba073edfb860aaa4c71d8d6e49253463326942":["322d95cfb0c59ace7533e19e5cec7f359ce6d6d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}