{"path":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","commits":[{"id":"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976","date":1500994164,"type":1,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = toSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = toSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = toSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = toSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"487de3f55283f58d7e02a16993f8be55bbe32061","date":1502123368,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = collectSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = collectSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = toSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = toSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":["a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = collectSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = collectSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = collectSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = collectSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = toSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = toSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a52341299179de5479672f7cf518bf4b173f34b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["a52341299179de5479672f7cf518bf4b173f34b3","487de3f55283f58d7e02a16993f8be55bbe32061"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","487de3f55283f58d7e02a16993f8be55bbe32061"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"487de3f55283f58d7e02a16993f8be55bbe32061":["a52341299179de5479672f7cf518bf4b173f34b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["487de3f55283f58d7e02a16993f8be55bbe32061"]},"commit2Childs":{"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976":["a52341299179de5479672f7cf518bf4b173f34b3"],"a52341299179de5479672f7cf518bf4b173f34b3":["58884af1f68e9d61c217c753fbd6266d86a63b14","487de3f55283f58d7e02a16993f8be55bbe32061"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976","a52341299179de5479672f7cf518bf4b173f34b3","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"487de3f55283f58d7e02a16993f8be55bbe32061":["58884af1f68e9d61c217c753fbd6266d86a63b14","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}