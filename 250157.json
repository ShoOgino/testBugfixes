{"path":"modules/spatial-lucene/src/main/java/org/apache/lucene/spatial/base/distance/GeodesicSphereDistCalc#pointOnBearing(Point,double,double,SpatialContext).mjava","commits":[{"id":"b17c5c53627893d93f9261826cc6d9c447c5ee3a","date":1329777932,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial-lucene/src/main/java/org/apache/lucene/spatial/base/distance/GeodesicSphereDistCalc#pointOnBearing(Point,double,double,SpatialContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Point pointOnBearing(Point from, double dist, double bearingDEG, SpatialContext ctx) {\n    //TODO avoid unnecessary double[] intermediate object\n    if (dist == 0)\n      return from;\n    double[] latLon = DistanceUtils.pointOnBearingRAD(\n        toRadians(from.getY()), toRadians(from.getX()),\n        DistanceUtils.dist2Radians(dist,ctx.getUnits().earthRadius()),\n        toRadians(bearingDEG), null);\n    return ctx.makePoint(Math.toDegrees(latLon[1]), Math.toDegrees(latLon[0]));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef186f4ac90644cd4e8df6b66acb56a52e5ca602","date":1329778037,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/main/java/org/apache/lucene/spatial/base/distance/GeodesicSphereDistCalc#pointOnBearing(Point,double,double,SpatialContext).mjava","pathOld":"modules/spatial-lucene/src/main/java/org/apache/lucene/spatial/base/distance/GeodesicSphereDistCalc#pointOnBearing(Point,double,double,SpatialContext).mjava","sourceNew":"  @Override\n  public Point pointOnBearing(Point from, double dist, double bearingDEG, SpatialContext ctx) {\n    //TODO avoid unnecessary double[] intermediate object\n    if (dist == 0)\n      return from;\n    double[] latLon = DistanceUtils.pointOnBearingRAD(\n        toRadians(from.getY()), toRadians(from.getX()),\n        DistanceUtils.dist2Radians(dist,ctx.getUnits().earthRadius()),\n        toRadians(bearingDEG), null);\n    return ctx.makePoint(Math.toDegrees(latLon[1]), Math.toDegrees(latLon[0]));\n  }\n\n","sourceOld":"  @Override\n  public Point pointOnBearing(Point from, double dist, double bearingDEG, SpatialContext ctx) {\n    //TODO avoid unnecessary double[] intermediate object\n    if (dist == 0)\n      return from;\n    double[] latLon = DistanceUtils.pointOnBearingRAD(\n        toRadians(from.getY()), toRadians(from.getX()),\n        DistanceUtils.dist2Radians(dist,ctx.getUnits().earthRadius()),\n        toRadians(bearingDEG), null);\n    return ctx.makePoint(Math.toDegrees(latLon[1]), Math.toDegrees(latLon[0]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["b17c5c53627893d93f9261826cc6d9c447c5ee3a"],"b17c5c53627893d93f9261826cc6d9c447c5ee3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b17c5c53627893d93f9261826cc6d9c447c5ee3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":[],"b17c5c53627893d93f9261826cc6d9c447c5ee3a":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}