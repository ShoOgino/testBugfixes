{"path":"solr/core/src/test/org/apache/solr/update/processor/DefaultValueUpdateProcessorTest#testDefaults().mjava","commits":[{"id":"65361f676e554809b5c59b53f3117e45d3ab760a","date":1338509206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/DefaultValueUpdateProcessorTest#testDefaults().mjava","pathOld":"/dev/null","sourceNew":"  public void testDefaults() throws Exception {\n    SolrInputDocument d = null;\n\n    Date now = new Date();\n\n    // get all defaults\n    d = processAdd(\"default-values\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"name\", \"Existing\", \"Values\")));\n    \n    assertNotNull(d);\n    \n    assertEquals(\"X\", d.getFieldValue(\"processor_default_s\"));\n    assertEquals(42, d.getFieldValue(\"processor_default_i\"));\n    assertNotNull(d.getFieldValue(\"uuid\"));\n    assertNotNull(UUID.fromString(d.getFieldValue(\"uuid\").toString()));\n    assertNotNull(d.getFieldValue(\"timestamp\"));\n    assertTrue(\"timestamp not a date: \" + \n               d.getFieldValue(\"timestamp\").getClass(), \n               d.getFieldValue(\"timestamp\") instanceof Date);\n    assertEquals(Arrays.asList(\"Existing\",\"Values\"), \n                   d.getFieldValues(\"name\"));\n    \n    // defaults already specified\n    d = processAdd(\"default-values\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"timestamp\", now),\n                       f(\"uuid\", \"550e8400-e29b-41d4-a716-446655440000\"),\n                       f(\"processor_default_s\", \"I HAVE A VALUE\"),\n                       f(\"processor_default_i\", 12345),\n                       f(\"name\", \"Existing\", \"Values\")));\n    \n    assertNotNull(d);\n    \n    assertEquals(\"I HAVE A VALUE\", d.getFieldValue(\"processor_default_s\"));\n    assertEquals(12345, d.getFieldValue(\"processor_default_i\"));\n    assertEquals(\"550e8400-e29b-41d4-a716-446655440000\",\n                 d.getFieldValue(\"uuid\"));\n    assertEquals(now, d.getFieldValue(\"timestamp\"));\n    assertEquals(Arrays.asList(\"Existing\",\"Values\"), \n                 d.getFieldValues(\"name\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65361f676e554809b5c59b53f3117e45d3ab760a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65361f676e554809b5c59b53f3117e45d3ab760a"]},"commit2Childs":{"65361f676e554809b5c59b53f3117e45d3ab760a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["65361f676e554809b5c59b53f3117e45d3ab760a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}