{"path":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d46584d4a299aaed53fdd79f1cd77f222aee1e","date":1331071171,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = getErrorInfo(solrRsp.getException(),info);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","bugFix":null,"bugIntro":["9272dcea19192a5fb261980a4737677abfcabab3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = getErrorInfo(solrRsp.getException(),info);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct); \n\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          String charset = ContentStreamBase.getCharsetFromContentType(ct);\n          Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n            ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n            : new OutputStreamWriter(response.getOutputStream(), charset);\n          out = new FastWriter(out);\n          responseWriter.write(out, solrReq, solrRsp);\n          out.flush();\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = getErrorInfo(solrRsp.getException(),info);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null)\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","bugFix":null,"bugIntro":["9272dcea19192a5fb261980a4737677abfcabab3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null)\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null || charset.equalsIgnoreCase(\"UTF-8\"))\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272dcea19192a5fb261980a4737677abfcabab3","date":1409771900,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n        binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n      } else {\n        String charset = ContentStreamBase.getCharsetFromContentType(ct);\n        Writer out = (charset == null)\n          ? new OutputStreamWriter(response.getOutputStream(), UTF8)\n          : new OutputStreamWriter(response.getOutputStream(), charset);\n        out = new FastWriter(out);\n        responseWriter.write(out, solrReq, solrRsp);\n        out.flush();\n      }\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","bugFix":["9d3d365762604952e436b51980101dfc84cc1b3e","d8d46584d4a299aaed53fdd79f1cd77f222aee1e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d805d691fbf3ca8aafa5397568ec761790b88622","date":1417093891,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    try {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct);\n\n      if (solrRsp.getException() != null) {\n        NamedList info = new SimpleOrderedMap();\n        int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n        solrRsp.add(\"error\", info);\n        ((HttpServletResponse) response).setStatus(code);\n      }\n\n      if (Method.HEAD != reqMethod) {\n        QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n    catch (EOFException e) {\n      log.info(\"Unable to write response, client closed connection or we are shutting down\", e);\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n\n    // Now write it out\n    final String ct = responseWriter.getContentType(solrReq, solrRsp);\n    // don't call setContentType on null\n    if (null != ct) response.setContentType(ct); \n\n    if (solrRsp.getException() != null) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n      solrRsp.add(\"error\", info);\n      ((HttpServletResponse) response).setStatus(code);\n    }\n    \n    if (Method.HEAD != reqMethod) {\n      QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n    }\n    //else http HEAD request, nothing to write out, waited this long just to get ContentType\n  }\n\n","bugFix":null,"bugIntro":["26ab43e1a461b9c1d9db0739ee0eb5caed8bc521"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a20a867de92263c94258f9778db64a5efc7956d","date":1424955868,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    try {\n      Object invalidStates = solrReq.getContext().get(CloudSolrClient.STATE_VERSION);\n      //This is the last item added to the response and the client would expect it that way.\n      //If that assumption is changed , it would fail. This is done to avoid an O(n) scan on\n      // the response for each request\n      if(invalidStates != null) solrRsp.add(CloudSolrClient.STATE_VERSION, invalidStates);\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct);\n\n      if (solrRsp.getException() != null) {\n        NamedList info = new SimpleOrderedMap();\n        int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n        solrRsp.add(\"error\", info);\n        ((HttpServletResponse) response).setStatus(code);\n      }\n\n      if (Method.HEAD != reqMethod) {\n        QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n    catch (EOFException e) {\n      log.info(\"Unable to write response, client closed connection or we are shutting down\", e);\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    try {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct);\n\n      if (solrRsp.getException() != null) {\n        NamedList info = new SimpleOrderedMap();\n        int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n        solrRsp.add(\"error\", info);\n        ((HttpServletResponse) response).setStatus(code);\n      }\n\n      if (Method.HEAD != reqMethod) {\n        QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n    catch (EOFException e) {\n      log.info(\"Unable to write response, client closed connection or we are shutting down\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    try {\n      Object invalidStates = solrReq.getContext().get(CloudSolrClient.STATE_VERSION);\n      //This is the last item added to the response and the client would expect it that way.\n      //If that assumption is changed , it would fail. This is done to avoid an O(n) scan on\n      // the response for each request\n      if(invalidStates != null) solrRsp.add(CloudSolrClient.STATE_VERSION, invalidStates);\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct);\n\n      if (solrRsp.getException() != null) {\n        NamedList info = new SimpleOrderedMap();\n        int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n        solrRsp.add(\"error\", info);\n        ((HttpServletResponse) response).setStatus(code);\n      }\n\n      if (Method.HEAD != reqMethod) {\n        QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n    catch (EOFException e) {\n      log.info(\"Unable to write response, client closed connection or we are shutting down\", e);\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    try {\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct);\n\n      if (solrRsp.getException() != null) {\n        NamedList info = new SimpleOrderedMap();\n        int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n        solrRsp.add(\"error\", info);\n        ((HttpServletResponse) response).setStatus(code);\n      }\n\n      if (Method.HEAD != reqMethod) {\n        QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n    catch (EOFException e) {\n      log.info(\"Unable to write response, client closed connection or we are shutting down\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a760e2135dfe20a04dea360873d4de1c6a0280bb","date":1430762855,"type":5,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#writeResponse(SolrQueryResponse,QueryResponseWriter,Method).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, QueryResponseWriter responseWriter, Method reqMethod)\n      throws IOException {\n    try {\n      Object invalidStates = solrReq.getContext().get(CloudSolrClient.STATE_VERSION);\n      //This is the last item added to the response and the client would expect it that way.\n      //If that assumption is changed , it would fail. This is done to avoid an O(n) scan on\n      // the response for each request\n      if (invalidStates != null) solrRsp.add(CloudSolrClient.STATE_VERSION, invalidStates);\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct);\n\n      if (solrRsp.getException() != null) {\n        NamedList info = new SimpleOrderedMap();\n        int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, SolrDispatchFilter.log);\n        solrRsp.add(\"error\", info);\n        response.setStatus(code);\n      }\n\n      if (Method.HEAD != reqMethod) {\n        QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    } catch (EOFException e) {\n      SolrDispatchFilter.log.info(\"Unable to write response, client closed connection or we are shutting down\", e);\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    try {\n      Object invalidStates = solrReq.getContext().get(CloudSolrClient.STATE_VERSION);\n      //This is the last item added to the response and the client would expect it that way.\n      //If that assumption is changed , it would fail. This is done to avoid an O(n) scan on\n      // the response for each request\n      if(invalidStates != null) solrRsp.add(CloudSolrClient.STATE_VERSION, invalidStates);\n      // Now write it out\n      final String ct = responseWriter.getContentType(solrReq, solrRsp);\n      // don't call setContentType on null\n      if (null != ct) response.setContentType(ct);\n\n      if (solrRsp.getException() != null) {\n        NamedList info = new SimpleOrderedMap();\n        int code = ResponseUtils.getErrorInfo(solrRsp.getException(), info, log);\n        solrRsp.add(\"error\", info);\n        ((HttpServletResponse) response).setStatus(code);\n      }\n\n      if (Method.HEAD != reqMethod) {\n        QueryResponseWriterUtil.writeQueryResponse(response.getOutputStream(), responseWriter, solrReq, solrRsp, ct);\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n    catch (EOFException e) {\n      log.info(\"Unable to write response, client closed connection or we are shutting down\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","9d3d365762604952e436b51980101dfc84cc1b3e"],"d8d46584d4a299aaed53fdd79f1cd77f222aee1e":["c26f00b574427b55127e869b935845554afde1fa"],"0a20a867de92263c94258f9778db64a5efc7956d":["d805d691fbf3ca8aafa5397568ec761790b88622"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","d8d46584d4a299aaed53fdd79f1cd77f222aee1e"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a760e2135dfe20a04dea360873d4de1c6a0280bb":["0a20a867de92263c94258f9778db64a5efc7956d"],"9272dcea19192a5fb261980a4737677abfcabab3":["9d3d365762604952e436b51980101dfc84cc1b3e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d805d691fbf3ca8aafa5397568ec761790b88622","0a20a867de92263c94258f9778db64a5efc7956d"],"d805d691fbf3ca8aafa5397568ec761790b88622":["9272dcea19192a5fb261980a4737677abfcabab3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9d3d365762604952e436b51980101dfc84cc1b3e":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["d8d46584d4a299aaed53fdd79f1cd77f222aee1e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a760e2135dfe20a04dea360873d4de1c6a0280bb"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"d8d46584d4a299aaed53fdd79f1cd77f222aee1e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"0a20a867de92263c94258f9778db64a5efc7956d":["a760e2135dfe20a04dea360873d4de1c6a0280bb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c26f00b574427b55127e869b935845554afde1fa":["d8d46584d4a299aaed53fdd79f1cd77f222aee1e","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"a760e2135dfe20a04dea360873d4de1c6a0280bb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9272dcea19192a5fb261980a4737677abfcabab3":["d805d691fbf3ca8aafa5397568ec761790b88622"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"d805d691fbf3ca8aafa5397568ec761790b88622":["0a20a867de92263c94258f9778db64a5efc7956d","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","9272dcea19192a5fb261980a4737677abfcabab3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}