{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","sourceNew":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","sourceOld":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"673d1479bcc124ba45b876b686d19f67435bca90","date":1351013999,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","sourceNew":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\" + Integer.toHexString(c));\n      // nocommit\n      /*\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n      */\n    }\n  }\n\n","sourceOld":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ba222c174ec1943d8d14d012d1d6e24a1cc4972","date":1351522220,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","sourceNew":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","sourceOld":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\" + Integer.toHexString(c));\n      // nocommit\n      /*\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n      */\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","sourceNew":null,"sourceOld":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#appendCharString(int,StringBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition#appendCharString(int,StringBuilder).mjava","sourceNew":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","sourceOld":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ba222c174ec1943d8d14d012d1d6e24a1cc4972":["673d1479bcc124ba45b876b686d19f67435bca90"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5c84485629d80d203608e8975a1139de9933cc38":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"673d1479bcc124ba45b876b686d19f67435bca90":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a","5c84485629d80d203608e8975a1139de9933cc38","673d1479bcc124ba45b876b686d19f67435bca90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0ba222c174ec1943d8d14d012d1d6e24a1cc4972":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"673d1479bcc124ba45b876b686d19f67435bca90":["0ba222c174ec1943d8d14d012d1d6e24a1cc4972"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0ba222c174ec1943d8d14d012d1d6e24a1cc4972","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}