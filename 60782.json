{"path":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","commits":[{"id":"fece021cb08205522fc31ec8ab01095d4ef8c606","date":1489119165,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(FieldType).mjava","sourceNew":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(IndexableFieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dimensionCount = ref.pointDimensionCount();\n    this.dimensionNumBytes = ref.pointNumBytes();\n    // Do not copy frozen!\n  }\n\n","sourceOld":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(FieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dimensionCount = ref.dimensionCount;\n    this.dimensionNumBytes = ref.dimensionNumBytes;\n    // Do not copy frozen!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","sourceNew":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(IndexableFieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dataDimensionCount = ref.pointDataDimensionCount();\n    this.indexDimensionCount = ref.pointIndexDimensionCount();\n    this.dimensionNumBytes = ref.pointNumBytes();\n    // Do not copy frozen!\n  }\n\n","sourceOld":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(IndexableFieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dimensionCount = ref.pointDimensionCount();\n    this.dimensionNumBytes = ref.pointNumBytes();\n    // Do not copy frozen!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1dbcafacd03baeb0f18199de611a1619606073c5","date":1546559081,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","sourceNew":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(IndexableFieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dataDimensionCount = ref.pointDataDimensionCount();\n    this.indexDimensionCount = ref.pointIndexDimensionCount();\n    this.dimensionNumBytes = ref.pointNumBytes();\n    if (ref.getAttributes() != null) {\n      this.attributes = new HashMap<>(ref.getAttributes());\n    }\n    // Do not copy frozen!\n  }\n\n","sourceOld":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(IndexableFieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dataDimensionCount = ref.pointDataDimensionCount();\n    this.indexDimensionCount = ref.pointIndexDimensionCount();\n    this.dimensionNumBytes = ref.pointNumBytes();\n    // Do not copy frozen!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#FieldType(IndexableFieldType).mjava","sourceNew":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(IndexableFieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dimensionCount = ref.pointDimensionCount();\n    this.indexDimensionCount = ref.pointIndexDimensionCount();\n    this.dimensionNumBytes = ref.pointNumBytes();\n    if (ref.getAttributes() != null) {\n      this.attributes = new HashMap<>(ref.getAttributes());\n    }\n    // Do not copy frozen!\n  }\n\n","sourceOld":"  /**\n   * Create a new mutable FieldType with all of the properties from <code>ref</code>\n   */\n  public FieldType(IndexableFieldType ref) {\n    this.stored = ref.stored();\n    this.tokenized = ref.tokenized();\n    this.storeTermVectors = ref.storeTermVectors();\n    this.storeTermVectorOffsets = ref.storeTermVectorOffsets();\n    this.storeTermVectorPositions = ref.storeTermVectorPositions();\n    this.storeTermVectorPayloads = ref.storeTermVectorPayloads();\n    this.omitNorms = ref.omitNorms();\n    this.indexOptions = ref.indexOptions();\n    this.docValuesType = ref.docValuesType();\n    this.dataDimensionCount = ref.pointDataDimensionCount();\n    this.indexDimensionCount = ref.pointIndexDimensionCount();\n    this.dimensionNumBytes = ref.pointNumBytes();\n    if (ref.getAttributes() != null) {\n      this.attributes = new HashMap<>(ref.getAttributes());\n    }\n    // Do not copy frozen!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1dbcafacd03baeb0f18199de611a1619606073c5":["f6652c943595e92c187ee904c382863013eae28f"],"fece021cb08205522fc31ec8ab01095d4ef8c606":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["1dbcafacd03baeb0f18199de611a1619606073c5"],"f6652c943595e92c187ee904c382863013eae28f":["fece021cb08205522fc31ec8ab01095d4ef8c606"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"1dbcafacd03baeb0f18199de611a1619606073c5":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"fece021cb08205522fc31ec8ab01095d4ef8c606":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["1dbcafacd03baeb0f18199de611a1619606073c5"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fece021cb08205522fc31ec8ab01095d4ef8c606"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}