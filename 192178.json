{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary#getJavaEncoding(String).mjava","commits":[{"id":"c214bc712d04c78c4d434119d560d0a4dd2fce4f","date":1393216863,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary#getJavaEncoding(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Retrieves the CharsetDecoder for the given encoding.  Note, This isn't perfect as I think ISCII-DEVANAGARI and\n   * MICROSOFT-CP1251 etc are allowed...\n   *\n   * @param encoding Encoding to retrieve the CharsetDecoder for\n   * @return CharSetDecoder for the given encoding\n   */\n  private CharsetDecoder getJavaEncoding(String encoding) {\n    if (\"ISO8859-14\".equals(encoding)) {\n      return new ISO8859_14Decoder();\n    }\n    String canon = CHARSET_ALIASES.get(encoding);\n    if (canon != null) {\n      encoding = canon;\n    }\n    Charset charset = Charset.forName(encoding);\n    return charset.newDecoder().onMalformedInput(CodingErrorAction.REPLACE);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#getJavaEncoding(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary#getJavaEncoding(String).mjava","sourceNew":"  /**\n   * Retrieves the CharsetDecoder for the given encoding.  Note, This isn't perfect as I think ISCII-DEVANAGARI and\n   * MICROSOFT-CP1251 etc are allowed...\n   *\n   * @param encoding Encoding to retrieve the CharsetDecoder for\n   * @return CharSetDecoder for the given encoding\n   */\n  private CharsetDecoder getJavaEncoding(String encoding) {\n    if (\"ISO8859-14\".equals(encoding)) {\n      return new ISO8859_14Decoder();\n    }\n    String canon = CHARSET_ALIASES.get(encoding);\n    if (canon != null) {\n      encoding = canon;\n    }\n    Charset charset = Charset.forName(encoding);\n    return charset.newDecoder().onMalformedInput(CodingErrorAction.REPLACE);\n  }\n\n","sourceOld":"  /**\n   * Retrieves the CharsetDecoder for the given encoding.  Note, This isn't perfect as I think ISCII-DEVANAGARI and\n   * MICROSOFT-CP1251 etc are allowed...\n   *\n   * @param encoding Encoding to retrieve the CharsetDecoder for\n   * @return CharSetDecoder for the given encoding\n   */\n  private CharsetDecoder getJavaEncoding(String encoding) {\n    if (\"ISO8859-14\".equals(encoding)) {\n      return new ISO8859_14Decoder();\n    }\n    String canon = CHARSET_ALIASES.get(encoding);\n    if (canon != null) {\n      encoding = canon;\n    }\n    Charset charset = Charset.forName(encoding);\n    return charset.newDecoder().onMalformedInput(CodingErrorAction.REPLACE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["c214bc712d04c78c4d434119d560d0a4dd2fce4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c214bc712d04c78c4d434119d560d0a4dd2fce4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}