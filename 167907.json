{"path":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","commits":[{"id":"a27a24aac4a53ec0af1f168a3b1ab4a06a042250","date":1211570705,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","pathOld":"/dev/null","sourceNew":"  private Filter[] getChainWithOldFilters(Filter[] chain) {\n    Filter[] oldFilters = new Filter[chain.length];\n    for (int i = 0; i < chain.length; i++) {\n      oldFilters[i] = new OldBitSetFilterWrapper(chain[i]);\n    }\n    return oldFilters;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f5f7d7abdf974f73cb0bbcd2215552db1f2e5c2","date":1211591790,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","sourceNew":"  private Filter[] getChainWithOldFilters(Filter[] chain) {\n    Filter[] oldFilters = new Filter[chain.length];\n    for (int i = 0; i < chain.length; i++) {\n      final Filter f = chain[i];\n    // create old BitSet-based Filter as wrapper\n      oldFilters[i] = new Filter() {\n        public BitSet bits(IndexReader reader) throws IOException {\n          BitSet bits = new BitSet(reader.maxDoc());\n        DocIdSetIterator it = f.getDocIdSet(reader).iterator();          \n          while(it.next()) {\n            bits.set(it.doc());\n          }\n          return bits;\n        }\n    };\n    }\n    return oldFilters;\n  }\n\n","sourceOld":"  private Filter[] getChainWithOldFilters(Filter[] chain) {\n    Filter[] oldFilters = new Filter[chain.length];\n    for (int i = 0; i < chain.length; i++) {\n      oldFilters[i] = new OldBitSetFilterWrapper(chain[i]);\n    }\n    return oldFilters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","sourceNew":"  private Filter[] getChainWithOldFilters(Filter[] chain) {\n    Filter[] oldFilters = new Filter[chain.length];\n    for (int i = 0; i < chain.length; i++) {\n      final Filter f = chain[i];\n    // create old BitSet-based Filter as wrapper\n      oldFilters[i] = new Filter() {\n        /** @deprecated */\n        public BitSet bits(IndexReader reader) throws IOException {\n          BitSet bits = new BitSet(reader.maxDoc());\n          DocIdSetIterator it = f.getDocIdSet(reader).iterator();  \n          int doc;\n          while((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n            bits.set(doc);\n          }\n          return bits;\n        }\n      };\n    }\n    return oldFilters;\n  }\n\n","sourceOld":"  private Filter[] getChainWithOldFilters(Filter[] chain) {\n    Filter[] oldFilters = new Filter[chain.length];\n    for (int i = 0; i < chain.length; i++) {\n      final Filter f = chain[i];\n    // create old BitSet-based Filter as wrapper\n      oldFilters[i] = new Filter() {\n        public BitSet bits(IndexReader reader) throws IOException {\n          BitSet bits = new BitSet(reader.maxDoc());\n        DocIdSetIterator it = f.getDocIdSet(reader).iterator();          \n          while(it.next()) {\n            bits.set(it.doc());\n          }\n          return bits;\n        }\n    };\n    }\n    return oldFilters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#getChainWithOldFilters(Filter[]).mjava","sourceNew":"  private Filter[] getChainWithOldFilters(Filter[] chain) {\n    Filter[] oldFilters = new Filter[chain.length];\n    for (int i = 0; i < chain.length; i++) {\n      final Filter f = chain[i];\n    // create old BitSet-based Filter as wrapper\n      oldFilters[i] = new Filter() {\n        /** @deprecated */\n        public BitSet bits(IndexReader reader) throws IOException {\n          BitSet bits = new BitSet(reader.maxDoc());\n          DocIdSetIterator it = f.getDocIdSet(reader).iterator();  \n          int doc;\n          while((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n            bits.set(doc);\n          }\n          return bits;\n        }\n      };\n    }\n    return oldFilters;\n  }\n\n","sourceOld":"  private Filter[] getChainWithOldFilters(Filter[] chain) {\n    Filter[] oldFilters = new Filter[chain.length];\n    for (int i = 0; i < chain.length; i++) {\n      final Filter f = chain[i];\n    // create old BitSet-based Filter as wrapper\n      oldFilters[i] = new Filter() {\n        /** @deprecated */\n        public BitSet bits(IndexReader reader) throws IOException {\n          BitSet bits = new BitSet(reader.maxDoc());\n          DocIdSetIterator it = f.getDocIdSet(reader).iterator();  \n          int doc;\n          while((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n            bits.set(doc);\n          }\n          return bits;\n        }\n      };\n    }\n    return oldFilters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["4f5f7d7abdf974f73cb0bbcd2215552db1f2e5c2"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["30a558487f2298c2c19ceca9103c1b6865d64708"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4f5f7d7abdf974f73cb0bbcd2215552db1f2e5c2":["a27a24aac4a53ec0af1f168a3b1ab4a06a042250"],"a27a24aac4a53ec0af1f168a3b1ab4a06a042250":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a27a24aac4a53ec0af1f168a3b1ab4a06a042250"],"4f5f7d7abdf974f73cb0bbcd2215552db1f2e5c2":["30a558487f2298c2c19ceca9103c1b6865d64708"],"a27a24aac4a53ec0af1f168a3b1ab4a06a042250":["4f5f7d7abdf974f73cb0bbcd2215552db1f2e5c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}