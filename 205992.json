{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","sourceNew":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","sourceOld":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","sourceNew":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","sourceOld":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85da33268a9a33d1a1dc71ad826ff61037f42cbf","date":1513200768,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","sourceNew":null,"sourceOld":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"85da33268a9a33d1a1dc71ad826ff61037f42cbf":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85da33268a9a33d1a1dc71ad826ff61037f42cbf"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["85da33268a9a33d1a1dc71ad826ff61037f42cbf"],"85da33268a9a33d1a1dc71ad826ff61037f42cbf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}