{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#BlockPostingsReader(Directory,FieldInfos,SegmentInfo,IOContext,String,int).mjava","commits":[{"id":"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","date":1342716838,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#BlockPostingsReader(Directory,FieldInfos,SegmentInfo,IOContext,String,int).mjava","pathOld":"/dev/null","sourceNew":"  public BlockPostingsReader(Directory dir, FieldInfos fieldInfos, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix, int blockSize) throws IOException {\n    boolean success = false;\n    segment = segmentInfo.name;\n    IndexInput docIn = null;\n    IndexInput posIn = null;\n    IndexInput payIn = null;\n    try {\n      docIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.DOC_EXTENSION),\n                            ioContext);\n      CodecUtil.checkHeader(docIn,\n                            BlockPostingsWriter.DOC_CODEC,\n                            BlockPostingsWriter.VERSION_START,\n                            BlockPostingsWriter.VERSION_START);\n\n      if (fieldInfos.hasProx()) {\n        posIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.POS_EXTENSION),\n                              ioContext);\n        CodecUtil.checkHeader(posIn,\n                              BlockPostingsWriter.POS_CODEC,\n                              BlockPostingsWriter.VERSION_START,\n                              BlockPostingsWriter.VERSION_START);\n\n        if (fieldInfos.hasPayloads() || fieldInfos.hasOffsets()) {\n          payIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.PAY_EXTENSION),\n                                ioContext);\n          CodecUtil.checkHeader(payIn,\n                                BlockPostingsWriter.PAY_CODEC,\n                                BlockPostingsWriter.VERSION_START,\n                                BlockPostingsWriter.VERSION_START);\n        }\n      }\n\n      this.docIn = docIn;\n      this.posIn = posIn;\n      this.payIn = payIn;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docIn, posIn, payIn);\n      }\n    }\n\n    this.blockSize = blockSize;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c2808fd811f853d032fff6b48bb83a4b7b6f48e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#BlockPostingsReader(Directory,FieldInfos,SegmentInfo,IOContext,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#BlockPostingsReader(Directory,FieldInfos,SegmentInfo,IOContext,String,int).mjava","sourceNew":"  public BlockPostingsReader(Directory dir, FieldInfos fieldInfos, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix) throws IOException {\n    boolean success = false;\n    segment = segmentInfo.name;\n    IndexInput docIn = null;\n    IndexInput posIn = null;\n    IndexInput payIn = null;\n    try {\n      docIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.DOC_EXTENSION),\n                            ioContext);\n      CodecUtil.checkHeader(docIn,\n                            BlockPostingsWriter.DOC_CODEC,\n                            BlockPostingsWriter.VERSION_START,\n                            BlockPostingsWriter.VERSION_START);\n\n      if (fieldInfos.hasProx()) {\n        posIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.POS_EXTENSION),\n                              ioContext);\n        CodecUtil.checkHeader(posIn,\n                              BlockPostingsWriter.POS_CODEC,\n                              BlockPostingsWriter.VERSION_START,\n                              BlockPostingsWriter.VERSION_START);\n\n        if (fieldInfos.hasPayloads() || fieldInfos.hasOffsets()) {\n          payIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.PAY_EXTENSION),\n                                ioContext);\n          CodecUtil.checkHeader(payIn,\n                                BlockPostingsWriter.PAY_CODEC,\n                                BlockPostingsWriter.VERSION_START,\n                                BlockPostingsWriter.VERSION_START);\n        }\n      }\n\n      this.docIn = docIn;\n      this.posIn = posIn;\n      this.payIn = payIn;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docIn, posIn, payIn);\n      }\n    }\n  }\n\n","sourceOld":"  public BlockPostingsReader(Directory dir, FieldInfos fieldInfos, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix, int blockSize) throws IOException {\n    boolean success = false;\n    segment = segmentInfo.name;\n    IndexInput docIn = null;\n    IndexInput posIn = null;\n    IndexInput payIn = null;\n    try {\n      docIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.DOC_EXTENSION),\n                            ioContext);\n      CodecUtil.checkHeader(docIn,\n                            BlockPostingsWriter.DOC_CODEC,\n                            BlockPostingsWriter.VERSION_START,\n                            BlockPostingsWriter.VERSION_START);\n\n      if (fieldInfos.hasProx()) {\n        posIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.POS_EXTENSION),\n                              ioContext);\n        CodecUtil.checkHeader(posIn,\n                              BlockPostingsWriter.POS_CODEC,\n                              BlockPostingsWriter.VERSION_START,\n                              BlockPostingsWriter.VERSION_START);\n\n        if (fieldInfos.hasPayloads() || fieldInfos.hasOffsets()) {\n          payIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, BlockPostingsFormat.PAY_EXTENSION),\n                                ioContext);\n          CodecUtil.checkHeader(payIn,\n                                BlockPostingsWriter.PAY_CODEC,\n                                BlockPostingsWriter.VERSION_START,\n                                BlockPostingsWriter.VERSION_START);\n        }\n      }\n\n      this.docIn = docIn;\n      this.posIn = posIn;\n      this.payIn = payIn;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docIn, posIn, payIn);\n      }\n    }\n\n    this.blockSize = blockSize;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8081d5018e8846bf4080f2809432c759996e749f":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["8081d5018e8846bf4080f2809432c759996e749f"],"8081d5018e8846bf4080f2809432c759996e749f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8081d5018e8846bf4080f2809432c759996e749f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}