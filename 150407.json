{"path":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(),\n        IndexWriter.MaxFieldLength.UNLIMITED);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\");\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7edb20114e86ec883b0b08bd624eee852c565c06","date":1273941247,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new MockAnalyzer(),\n        IndexWriter.MaxFieldLength.UNLIMITED);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\");\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(),\n        IndexWriter.MaxFieldLength.UNLIMITED);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\");\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"360822d1ddafcb26e237d1e6a02f80031df52e09","date":1274119123,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new MockAnalyzer(),\n        IndexWriter.MaxFieldLength.UNLIMITED);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new MockAnalyzer(),\n        IndexWriter.MaxFieldLength.UNLIMITED);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\");\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new MockAnalyzer(),\n        IndexWriter.MaxFieldLength.UNLIMITED);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new MockAnalyzer(),\n        IndexWriter.MaxFieldLength.UNLIMITED);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bbd254c1506df5299c4df8c148262c7bd6301e","date":1279913113,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new MockRAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new MockRAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"150488c1317972164a9a824be05b1ba2ba0fc68c","date":1284316090,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    \n    Document doc = new Document();\n    Field field = new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"0000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 10000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["c084e47df29de3330311d69dabf515ceaa989512"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["150488c1317972164a9a824be05b1ba2ba0fc68c"],"c084e47df29de3330311d69dabf515ceaa989512":["360822d1ddafcb26e237d1e6a02f80031df52e09"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["43b04c27924fe393e38e9f0986e32c634f261859","790e1fde4caa765b3faaad3fbcd25c6973450336"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cca56866c19997e28ef073622656669c15210540":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a3776dccca01c11e7046323cfad46a3b4a471233","cca56866c19997e28ef073622656669c15210540"],"7edb20114e86ec883b0b08bd624eee852c565c06":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["c084e47df29de3330311d69dabf515ceaa989512","15bbd254c1506df5299c4df8c148262c7bd6301e"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"5f4e87790277826a2aea119328600dfb07761f32":["360822d1ddafcb26e237d1e6a02f80031df52e09","c084e47df29de3330311d69dabf515ceaa989512"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["cca56866c19997e28ef073622656669c15210540"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["43b04c27924fe393e38e9f0986e32c634f261859"],"360822d1ddafcb26e237d1e6a02f80031df52e09":["7edb20114e86ec883b0b08bd624eee852c565c06"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","cca56866c19997e28ef073622656669c15210540"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7edb20114e86ec883b0b08bd624eee852c565c06"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["150488c1317972164a9a824be05b1ba2ba0fc68c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"43b04c27924fe393e38e9f0986e32c634f261859":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","29ef99d61cda9641b6250bf9567329a6e65f901d","790e1fde4caa765b3faaad3fbcd25c6973450336"],"c084e47df29de3330311d69dabf515ceaa989512":["15bbd254c1506df5299c4df8c148262c7bd6301e","4b103252dee6afa1b6d7a622c773d178788eb85a","5f4e87790277826a2aea119328600dfb07761f32"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["cca56866c19997e28ef073622656669c15210540","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cca56866c19997e28ef073622656669c15210540":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","60ba444201d2570214b6fcf1d15600dc1a01f548","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7edb20114e86ec883b0b08bd624eee852c565c06":["360822d1ddafcb26e237d1e6a02f80031df52e09"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","3242a09f703274d3b9283f2064a1a33064b53a1b"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"962d04139994fce5193143ef35615499a9a96d78":[],"790e1fde4caa765b3faaad3fbcd25c6973450336":["f2c5f0cb44df114db4228c8f77861714b5cabaea","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","a3776dccca01c11e7046323cfad46a3b4a471233"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"360822d1ddafcb26e237d1e6a02f80031df52e09":["c084e47df29de3330311d69dabf515ceaa989512","5f4e87790277826a2aea119328600dfb07761f32"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"150488c1317972164a9a824be05b1ba2ba0fc68c":["43b04c27924fe393e38e9f0986e32c634f261859"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","962d04139994fce5193143ef35615499a9a96d78","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}