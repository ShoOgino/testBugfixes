{"path":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean,float).mjava","commits":[{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param needsScores   True if document scores ({@link Scorer#score}) or match\n   *                      frequencies ({@link Scorer#freq}) are needed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param needsScores   True if document scores ({@link Scorer#score}) or match\n   *                      frequencies ({@link Scorer#freq}) are needed.\n   */\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param needsScores   True if document scores ({@link Scorer#score}) or match\n   *                      frequencies ({@link Scorer#freq}) are needed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc14da055888b63b4f8c922d0e1579f3cb315ad7","date":1510744456,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param needsScores   True if document scores ({@link Scorer#score}) are needed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param needsScores   True if document scores ({@link Scorer#score}) or match\n   *                      frequencies ({@link Scorer#freq}) are needed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param scoreMode     How the produced scorers will be consumed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param needsScores   True if document scores ({@link Scorer#score}) are needed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Query#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param scoreMode     How the produced scorers will be consumed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs an appropriate Weight implementation for this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   *\n   * @param needsScores   True if document scores ({@link Scorer#score}) are needed.\n   * @param boost         The boost that is propagated by the parent queries.\n   */\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    throw new UnsupportedOperationException(\"Query \" + this + \" does not implement createWeight\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["dc14da055888b63b4f8c922d0e1579f3cb315ad7","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["dc14da055888b63b4f8c922d0e1579f3cb315ad7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"417142ff08fda9cf0b72d5133e63097a166c6458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}