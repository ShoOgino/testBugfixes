{"path":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","commits":[{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Retrieves the metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return registryName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Retrieves the metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return registryName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","sourceNew":"  /**\n   * Metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return registryName;\n  }\n\n","sourceOld":"  /**\n   * Retrieves the metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return registryName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","sourceNew":"  /**\n   * Metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return solrMetricsContext != null ? solrMetricsContext.registry : null;\n  }\n\n","sourceOld":"  /**\n   * Metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return registryName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager#getRegistryName().mjava","sourceNew":"  /**\n   * Metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return solrMetricsContext != null ? solrMetricsContext.getRegistryName() : null;\n  }\n\n","sourceOld":"  /**\n   * Metric registry name of the manager.\n   *\n   * In order to make it easier for reporting tools to aggregate metrics from\n   * different cores that logically belong to a single collection we convert the\n   * core name into a dot-separated hierarchy of: collection name, shard name (with optional split)\n   * and replica name.\n   *\n   * <p>For example, when the core name looks like this but it's NOT a SolrCloud collection:\n   * <code>my_collection_shard1_1_replica1</code> then this will be used as the registry name (plus\n   * the required <code>solr.core</code> prefix). However,\n   * if this is a SolrCloud collection <code>my_collection</code> then the registry name will become\n   * <code>solr.core.my_collection.shard1_1.replica1</code>.</p>\n   *\n   *\n   * @return the metric registry name of the manager.\n   */\n  public String getRegistryName() {\n    return solrMetricsContext != null ? solrMetricsContext.registry : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0265144286422ad99682a00904cc2536b79c8535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0265144286422ad99682a00904cc2536b79c8535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["0265144286422ad99682a00904cc2536b79c8535"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"]},"commit2Childs":{"0265144286422ad99682a00904cc2536b79c8535":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0265144286422ad99682a00904cc2536b79c8535","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}