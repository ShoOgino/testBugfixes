{"path":"lucene/contrib/analyzers/stempel/src/test/org/egothor/stemmer/TestStemmer#assertTrieContents(Trie,String[],String[]).mjava","commits":[{"id":"67748b41458c73d49a48168362cc7f4c960a2542","date":1272890662,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/stempel/src/test/org/egothor/stemmer/TestStemmer#assertTrieContents(Trie,String[],String[]).mjava","pathOld":"/dev/null","sourceNew":"  private static void assertTrieContents(Trie trie, String keys[], String vals[]) {\n    Trie[] tries = new Trie[] {\n        trie,\n        trie.reduce(new Optimizer()),\n        trie.reduce(new Optimizer2()),\n        trie.reduce(new Gener()),\n        trie.reduce(new Lift(true)),\n        trie.reduce(new Lift(false))\n    };\n    \n    for (Trie t : tries) {\n      for (int i = 0; i < keys.length; i++) {\n        assertEquals(vals[i], t.getFully(keys[i]).toString());\n        assertEquals(vals[i], t.getLastOnPath(keys[i]).toString());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/stempel/src/test/org/egothor/stemmer/TestStemmer#assertTrieContents(Trie,String[],String[]).mjava","pathOld":"lucene/contrib/analyzers/stempel/src/test/org/egothor/stemmer/TestStemmer#assertTrieContents(Trie,String[],String[]).mjava","sourceNew":"  private static void assertTrieContents(Trie trie, String keys[], String vals[]) {\n    Trie[] tries = new Trie[] {\n        trie,\n        trie.reduce(new Optimizer()),\n        trie.reduce(new Optimizer2()),\n        trie.reduce(new Gener()),\n        trie.reduce(new Lift(true)),\n        trie.reduce(new Lift(false))\n    };\n    \n    for (Trie t : tries) {\n      for (int i = 0; i < keys.length; i++) {\n        assertEquals(vals[i], t.getFully(keys[i]).toString());\n        assertEquals(vals[i], t.getLastOnPath(keys[i]).toString());\n      }\n    }\n  }\n\n","sourceOld":"  private static void assertTrieContents(Trie trie, String keys[], String vals[]) {\n    Trie[] tries = new Trie[] {\n        trie,\n        trie.reduce(new Optimizer()),\n        trie.reduce(new Optimizer2()),\n        trie.reduce(new Gener()),\n        trie.reduce(new Lift(true)),\n        trie.reduce(new Lift(false))\n    };\n    \n    for (Trie t : tries) {\n      for (int i = 0; i < keys.length; i++) {\n        assertEquals(vals[i], t.getFully(keys[i]).toString());\n        assertEquals(vals[i], t.getLastOnPath(keys[i]).toString());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"67748b41458c73d49a48168362cc7f4c960a2542":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["67748b41458c73d49a48168362cc7f4c960a2542"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["67748b41458c73d49a48168362cc7f4c960a2542"],"67748b41458c73d49a48168362cc7f4c960a2542":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}