{"path":"lucene/test-framework/src/java/org/apache/lucene/search/similarities/BaseSimilarityTestCase#beforeClass().mjava","commits":[{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/similarities/BaseSimilarityTestCase#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // without norms\n    WITHOUT_NORM_DIR = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), WITHOUT_NORM_DIR);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"value\", Field.Store.NO));\n    writer.addDocument(doc);\n    WITHOUT_NORM = getOnlyLeafReader(writer.getReader());\n    writer.close();\n\n    // with norms\n    WITH_NORM_DIR = newDirectory();\n    writer = new RandomIndexWriter(random(), WITH_NORM_DIR);\n    doc = new Document();\n    FieldType fieldType = new FieldType(TextField.TYPE_NOT_STORED);\n    fieldType.setOmitNorms(true);\n    doc.add(newField(\"field\", \"value\", fieldType));\n    writer.addDocument(doc);\n    WITH_NORM_BASE = getOnlyLeafReader(writer.getReader());\n    writer.close();\n    \n    // all possible norm values for the doc\n    NORM_VALUES = new ArrayList<>();\n    NORM_VALUES.add(WITHOUT_NORM);\n    for (int i = 1; i < 256; i++) {\n      final long value = i;\n      NORM_VALUES.add(new FilterLeafReader(WITH_NORM_BASE) {\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return null;\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return null;\n        }\n\n        @Override\n        public NumericDocValues getNormValues(String field) throws IOException {\n          if (field.equals(\"field\")) {\n            return new CannedNorm(value);\n          } else {\n            return super.getNormValues(field);\n          }\n        }\n      });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/similarities/BaseSimilarityTestCase#beforeClass().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/similarities/BaseSimilarityTestCase#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // with norms\n    DIR = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), DIR);\n    Document doc = new Document();\n    FieldType fieldType = new FieldType(TextField.TYPE_NOT_STORED);\n    fieldType.setOmitNorms(true);\n    doc.add(newField(\"field\", \"value\", fieldType));\n    writer.addDocument(doc);\n    READER = getOnlyLeafReader(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // without norms\n    WITHOUT_NORM_DIR = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), WITHOUT_NORM_DIR);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"value\", Field.Store.NO));\n    writer.addDocument(doc);\n    WITHOUT_NORM = getOnlyLeafReader(writer.getReader());\n    writer.close();\n\n    // with norms\n    WITH_NORM_DIR = newDirectory();\n    writer = new RandomIndexWriter(random(), WITH_NORM_DIR);\n    doc = new Document();\n    FieldType fieldType = new FieldType(TextField.TYPE_NOT_STORED);\n    fieldType.setOmitNorms(true);\n    doc.add(newField(\"field\", \"value\", fieldType));\n    writer.addDocument(doc);\n    WITH_NORM_BASE = getOnlyLeafReader(writer.getReader());\n    writer.close();\n    \n    // all possible norm values for the doc\n    NORM_VALUES = new ArrayList<>();\n    NORM_VALUES.add(WITHOUT_NORM);\n    for (int i = 1; i < 256; i++) {\n      final long value = i;\n      NORM_VALUES.add(new FilterLeafReader(WITH_NORM_BASE) {\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return null;\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return null;\n        }\n\n        @Override\n        public NumericDocValues getNormValues(String field) throws IOException {\n          if (field.equals(\"field\")) {\n            return new CannedNorm(value);\n          } else {\n            return super.getNormValues(field);\n          }\n        }\n      });\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/similarities/BaseSimilarityTestCase#beforeClass().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/similarities/BaseSimilarityTestCase#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // with norms\n    DIR = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), DIR);\n    Document doc = new Document();\n    FieldType fieldType = new FieldType(TextField.TYPE_NOT_STORED);\n    fieldType.setOmitNorms(true);\n    doc.add(newField(\"field\", \"value\", fieldType));\n    writer.addDocument(doc);\n    READER = getOnlyLeafReader(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // without norms\n    WITHOUT_NORM_DIR = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), WITHOUT_NORM_DIR);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"value\", Field.Store.NO));\n    writer.addDocument(doc);\n    WITHOUT_NORM = getOnlyLeafReader(writer.getReader());\n    writer.close();\n\n    // with norms\n    WITH_NORM_DIR = newDirectory();\n    writer = new RandomIndexWriter(random(), WITH_NORM_DIR);\n    doc = new Document();\n    FieldType fieldType = new FieldType(TextField.TYPE_NOT_STORED);\n    fieldType.setOmitNorms(true);\n    doc.add(newField(\"field\", \"value\", fieldType));\n    writer.addDocument(doc);\n    WITH_NORM_BASE = getOnlyLeafReader(writer.getReader());\n    writer.close();\n    \n    // all possible norm values for the doc\n    NORM_VALUES = new ArrayList<>();\n    NORM_VALUES.add(WITHOUT_NORM);\n    for (int i = 1; i < 256; i++) {\n      final long value = i;\n      NORM_VALUES.add(new FilterLeafReader(WITH_NORM_BASE) {\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return null;\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return null;\n        }\n\n        @Override\n        public NumericDocValues getNormValues(String field) throws IOException {\n          if (field.equals(\"field\")) {\n            return new CannedNorm(value);\n          } else {\n            return super.getNormValues(field);\n          }\n        }\n      });\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}