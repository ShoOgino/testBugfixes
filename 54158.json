{"path":"src/java/org/apache/solr/common/util/NamedListCodec#writeChars(FastOutputStream,String,int,int).mjava","commits":[{"id":"da0acfe5ceed804451d76c8f887855b3d060e132","date":1208287358,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/NamedListCodec#writeChars(FastOutputStream,String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Writes a sequence of UTF-8 encoded characters from a string.\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @see org.apache.lucene.store.IndexInput#readChars(char[],int,int)\n   */\n  public static void writeChars(FastOutputStream os, String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n\tos.write(code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\tos.write(0xC0 | (code >> 6));\n\tos.write(0x80 | (code & 0x3F));\n      } else {\n\tos.write(0xE0 | (code >>> 12));\n\tos.write(0x80 | ((code >> 6) & 0x3F));\n\tos.write(0x80 | (code & 0x3F));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/NamedListCodec#writeChars(FastOutputStream,String,int,int).mjava","pathOld":"src/java/org/apache/solr/common/util/NamedListCodec#writeChars(FastOutputStream,String,int,int).mjava","sourceNew":"  /** Writes a sequence of UTF-8 encoded characters from a string.\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @see org.apache.lucene.store.IndexInput#readChars(char[],int,int)\n   */\n  public static void writeChars(FastOutputStream os, String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n\tos.write(code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\tos.write(0xC0 | (code >> 6));\n\tos.write(0x80 | (code & 0x3F));\n      } else {\n\tos.write(0xE0 | (code >>> 12));\n\tos.write(0x80 | ((code >> 6) & 0x3F));\n\tos.write(0x80 | (code & 0x3F));\n      }\n    }\n  }\n\n","sourceOld":"  /** Writes a sequence of UTF-8 encoded characters from a string.\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @see org.apache.lucene.store.IndexInput#readChars(char[],int,int)\n   */\n  public static void writeChars(FastOutputStream os, String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n\tos.write(code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\tos.write(0xC0 | (code >> 6));\n\tos.write(0x80 | (code & 0x3F));\n      } else {\n\tos.write(0xE0 | (code >>> 12));\n\tos.write(0x80 | ((code >> 6) & 0x3F));\n\tos.write(0x80 | (code & 0x3F));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["da0acfe5ceed804451d76c8f887855b3d060e132"],"da0acfe5ceed804451d76c8f887855b3d060e132":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"da0acfe5ceed804451d76c8f887855b3d060e132":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["da0acfe5ceed804451d76c8f887855b3d060e132"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}