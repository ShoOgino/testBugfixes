{"path":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        Directory dir = newFSDirectory(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, dir);\n        SearcherThread searcher = new SearcherThread(100, dir);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        dir.close();\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["d572389229127c297dd1fa5ce4758e1cec41e799"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["d572389229127c297dd1fa5ce4758e1cec41e799","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}