{"path":"src/test/org/apache/lucene/index/TestDoc#merge(String,int,String,int,String,boolean).mjava","commits":[{"id":"a0c193c73d0dbc36f15189e21e3f1c5c3613fe11","date":1168445193,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestDoc#merge(String,int,String,int,String,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestDoc#merge(String,String,String,boolean).mjava","sourceNew":"   private void merge(String seg1, int docCount1, String seg2, int docCount2, String merged, boolean useCompoundFile)\n   throws Exception {\n      Directory directory = FSDirectory.getDirectory(indexDir, false);\n\n      SegmentReader r1 = SegmentReader.get(new SegmentInfo(seg1, docCount1, directory));\n      SegmentReader r2 = SegmentReader.get(new SegmentInfo(seg2, docCount2, directory));\n\n      SegmentMerger merger =\n        new SegmentMerger(directory, merged);\n\n      merger.add(r1);\n      merger.add(r2);\n      merger.merge();\n      merger.closeReaders();\n      \n      if (useCompoundFile) {\n        Vector filesToDelete = merger.createCompoundFile(merged + \".cfs\");\n        for (Iterator iter = filesToDelete.iterator(); iter.hasNext();)\n          directory.deleteFile((String) iter.next());\n      }\n\n      directory.close();\n   }\n\n","sourceOld":"   private void merge(String seg1, String seg2, String merged, boolean useCompoundFile)\n   throws Exception {\n      Directory directory = FSDirectory.getDirectory(indexDir, false);\n\n      SegmentReader r1 = SegmentReader.get(new SegmentInfo(seg1, 1, directory));\n      SegmentReader r2 = SegmentReader.get(new SegmentInfo(seg2, 1, directory));\n\n      SegmentMerger merger =\n        new SegmentMerger(directory, merged);\n\n      merger.add(r1);\n      merger.add(r2);\n      merger.merge();\n      merger.closeReaders();\n      \n      if (useCompoundFile) {\n        Vector filesToDelete = merger.createCompoundFile(merged + \".cfs\");\n        for (Iterator iter = filesToDelete.iterator(); iter.hasNext();)\n          directory.deleteFile((String) iter.next());\n      }\n\n      directory.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a5cfde941b2f8208d739344fef3821381885618","date":1168979092,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestDoc#merge(SegmentInfo,SegmentInfo,String,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestDoc#merge(String,int,String,int,String,boolean).mjava","sourceNew":"   private SegmentInfo merge(SegmentInfo si1, SegmentInfo si2, String merged, boolean useCompoundFile)\n   throws Exception {\n      Directory directory = FSDirectory.getDirectory(indexDir, false);\n\n      SegmentReader r1 = SegmentReader.get(si1);\n      SegmentReader r2 = SegmentReader.get(si2);\n\n      SegmentMerger merger = new SegmentMerger(directory, merged);\n\n      merger.add(r1);\n      merger.add(r2);\n      merger.merge();\n      merger.closeReaders();\n      \n      if (useCompoundFile) {\n        Vector filesToDelete = merger.createCompoundFile(merged + \".cfs\");\n        for (Iterator iter = filesToDelete.iterator(); iter.hasNext();)\n          directory.deleteFile((String) iter.next());\n      }\n\n      directory.close();\n      return new SegmentInfo(merged, si1.docCount + si2.docCount, directory, useCompoundFile, true);\n   }\n\n","sourceOld":"   private void merge(String seg1, int docCount1, String seg2, int docCount2, String merged, boolean useCompoundFile)\n   throws Exception {\n      Directory directory = FSDirectory.getDirectory(indexDir, false);\n\n      SegmentReader r1 = SegmentReader.get(new SegmentInfo(seg1, docCount1, directory));\n      SegmentReader r2 = SegmentReader.get(new SegmentInfo(seg2, docCount2, directory));\n\n      SegmentMerger merger =\n        new SegmentMerger(directory, merged);\n\n      merger.add(r1);\n      merger.add(r2);\n      merger.merge();\n      merger.closeReaders();\n      \n      if (useCompoundFile) {\n        Vector filesToDelete = merger.createCompoundFile(merged + \".cfs\");\n        for (Iterator iter = filesToDelete.iterator(); iter.hasNext();)\n          directory.deleteFile((String) iter.next());\n      }\n\n      directory.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a5cfde941b2f8208d739344fef3821381885618":["a0c193c73d0dbc36f15189e21e3f1c5c3613fe11"],"a0c193c73d0dbc36f15189e21e3f1c5c3613fe11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a5cfde941b2f8208d739344fef3821381885618"]},"commit2Childs":{"8a5cfde941b2f8208d739344fef3821381885618":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0c193c73d0dbc36f15189e21e3f1c5c3613fe11":["8a5cfde941b2f8208d739344fef3821381885618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0c193c73d0dbc36f15189e21e3f1c5c3613fe11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}