{"path":"src/java/org/apache/lucene/queryParser/QueryParser#getDateResolution(String).mjava","commits":[{"id":"bd9159d2966a77ae7e472d435eb5c9c5cad7f820","date":1168286571,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getDateResolution(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field. \n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = (DateTools.Resolution) fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20645c714ca2a7b7707c2707d58ee9fa384c7362","date":1256074979,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getDateResolution(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getDateResolution(String).mjava","sourceNew":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field. \n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","sourceOld":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field. \n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = (DateTools.Resolution) fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#getDateResolution(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getDateResolution(String).mjava","sourceNew":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field. \n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","sourceOld":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field. \n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["bd9159d2966a77ae7e472d435eb5c9c5cad7f820"],"bd9159d2966a77ae7e472d435eb5c9c5cad7f820":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["20645c714ca2a7b7707c2707d58ee9fa384c7362"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd9159d2966a77ae7e472d435eb5c9c5cad7f820"],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bd9159d2966a77ae7e472d435eb5c9c5cad7f820":["20645c714ca2a7b7707c2707d58ee9fa384c7362"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}