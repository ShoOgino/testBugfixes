{"path":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","commits":[{"id":"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","date":1224582283,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","pathOld":"/dev/null","sourceNew":"  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9","date":1225202752,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**The conf files are copied to the tmp dir to the config dir\n   * A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","sourceOld":"  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8620c64e323e74078214cf931e505179d14c888e","date":1225270494,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**\n   * The conf files are copied to the tmp dir to the conf dir.\n   * A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","sourceOld":"  /**The conf files are copied to the tmp dir to the config dir\n   * A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9be231d18ef58129524215a1d30331523320b744","date":1229505566,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","sourceOld":"  /**\n   * The conf files are copied to the tmp dir to the conf dir.\n   * A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"966b6744500bb2953baa42383dbd59ff490dc216","date":1237739626,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (status) {\n          FileUtils.sync(oldFile);\n        } else {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","sourceOld":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aab56102a66ad6123bbc7a10ec65d998b5e6117a","date":1238749717,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    for (File file : tmpconfDir.listFiles()) {\n      File oldFile = new File(confDir, file.getName());\n      if (oldFile.exists()) {\n        File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n        boolean status = oldFile.renameTo(backupFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n        }\n      }\n      boolean status = file.renameTo(oldFile);\n      if (status) {\n      } else {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                \"Unable to rename: \" + file + \" to: \" + oldFile);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    try {\n      for (File file : tmpconfDir.listFiles()) {\n        File oldFile = new File(confDir, file.getName());\n        if (oldFile.exists()) {\n          File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n          boolean status = oldFile.renameTo(backupFile);\n          if (!status) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                    \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n          }\n        }\n        boolean status = file.renameTo(oldFile);\n        if (status) {\n          FileUtils.sync(oldFile);\n        } else {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + file + \" to: \" + oldFile);\n        }\n      }\n    } finally {\n      delTree(tmpconfDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":["50ae164f36d6aa5da870a8c60eabf5709b680415","50ae164f36d6aa5da870a8c60eabf5709b680415","50ae164f36d6aa5da870a8c60eabf5709b680415"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    for (File file : tmpconfDir.listFiles()) {\n      File oldFile = new File(confDir, file.getName());\n      if (oldFile.exists()) {\n        File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n        boolean status = oldFile.renameTo(backupFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n        }\n      }\n      boolean status = file.renameTo(oldFile);\n      if (status) {\n      } else {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                \"Unable to rename: \" + file + \" to: \" + oldFile);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) throws IOException {\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    for (File file : tmpconfDir.listFiles()) {\n      File oldFile = new File(confDir, file.getName());\n      if (oldFile.exists()) {\n        File backupFile = new File(confDir, oldFile.getName() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n        boolean status = oldFile.renameTo(backupFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n        }\n      }\n      boolean status = file.renameTo(oldFile);\n      if (status) {\n      } else {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                \"Unable to rename: \" + file + \" to: \" + oldFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"9be231d18ef58129524215a1d30331523320b744":["8620c64e323e74078214cf931e505179d14c888e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"aab56102a66ad6123bbc7a10ec65d998b5e6117a":["966b6744500bb2953baa42383dbd59ff490dc216"],"8620c64e323e74078214cf931e505179d14c888e":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"ad94625fb8d088209f46650c8097196fec67f00c":["aab56102a66ad6123bbc7a10ec65d998b5e6117a"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"966b6744500bb2953baa42383dbd59ff490dc216":["9be231d18ef58129524215a1d30331523320b744"]},"commit2Childs":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"9be231d18ef58129524215a1d30331523320b744":["966b6744500bb2953baa42383dbd59ff490dc216"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8620c64e323e74078214cf931e505179d14c888e":["9be231d18ef58129524215a1d30331523320b744"],"aab56102a66ad6123bbc7a10ec65d998b5e6117a":["ad94625fb8d088209f46650c8097196fec67f00c"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["8620c64e323e74078214cf931e505179d14c888e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"966b6744500bb2953baa42383dbd59ff490dc216":["aab56102a66ad6123bbc7a10ec65d998b5e6117a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}