{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestCategoryPath#testLongPath().mjava","commits":[{"id":"95dac0f45251471041578dd8de89dfc7fbb28f8b","date":1370889677,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestCategoryPath#testLongPath().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLongPath() throws Exception {\n    String bigComp = null;\n    while (true) {\n      int len = CategoryPath.MAX_CATEGORY_PATH_LENGTH;\n      bigComp = _TestUtil.randomSimpleString(random(), len, len);\n      if (bigComp.indexOf('\\u001f') != -1) {\n        continue;\n      }\n      break;\n    }\n\n    try {\n      assertNotNull(new CategoryPath(\"dim\", bigComp));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n\n    try {\n      assertNotNull(new CategoryPath(\"dim\\u001f\" + bigComp, '\\u001f'));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestCategoryPath#testLongPath().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestCategoryPath#testLongPath().mjava","sourceNew":"  @Test\n  public void testLongPath() throws Exception {\n    String bigComp = null;\n    while (true) {\n      int len = FacetLabel.MAX_CATEGORY_PATH_LENGTH;\n      bigComp = _TestUtil.randomSimpleString(random(), len, len);\n      if (bigComp.indexOf('\\u001f') != -1) {\n        continue;\n      }\n      break;\n    }\n\n    try {\n      assertNotNull(new FacetLabel(\"dim\", bigComp));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n\n    try {\n      assertNotNull(new FacetLabel(\"dim\\u001f\" + bigComp, '\\u001f'));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testLongPath() throws Exception {\n    String bigComp = null;\n    while (true) {\n      int len = CategoryPath.MAX_CATEGORY_PATH_LENGTH;\n      bigComp = _TestUtil.randomSimpleString(random(), len, len);\n      if (bigComp.indexOf('\\u001f') != -1) {\n        continue;\n      }\n      break;\n    }\n\n    try {\n      assertNotNull(new CategoryPath(\"dim\", bigComp));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n\n    try {\n      assertNotNull(new CategoryPath(\"dim\\u001f\" + bigComp, '\\u001f'));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78522aad83283ca58fae08fd89406b65429d0229","date":1385573562,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestFacetLabel#testLongPath().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestCategoryPath#testLongPath().mjava","sourceNew":"  @Test\n  public void testLongPath() throws Exception {\n    String bigComp = null;\n    while (true) {\n      int len = FacetLabel.MAX_CATEGORY_PATH_LENGTH;\n      bigComp = _TestUtil.randomSimpleString(random(), len, len);\n      if (bigComp.indexOf('\\u001f') != -1) {\n        continue;\n      }\n      break;\n    }\n\n    try {\n      assertNotNull(new FacetLabel(\"dim\", bigComp));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n\n    try {\n      assertNotNull(new FacetLabel(\"dim\\u001f\" + bigComp, '\\u001f'));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testLongPath() throws Exception {\n    String bigComp = null;\n    while (true) {\n      int len = FacetLabel.MAX_CATEGORY_PATH_LENGTH;\n      bigComp = _TestUtil.randomSimpleString(random(), len, len);\n      if (bigComp.indexOf('\\u001f') != -1) {\n        continue;\n      }\n      break;\n    }\n\n    try {\n      assertNotNull(new FacetLabel(\"dim\", bigComp));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n\n    try {\n      assertNotNull(new FacetLabel(\"dim\\u001f\" + bigComp, '\\u001f'));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestCategoryPath#testLongPath().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testLongPath() throws Exception {\n    String bigComp = null;\n    while (true) {\n      int len = CategoryPath.MAX_CATEGORY_PATH_LENGTH;\n      bigComp = _TestUtil.randomSimpleString(random(), len, len);\n      if (bigComp.indexOf('\\u001f') != -1) {\n        continue;\n      }\n      break;\n    }\n\n    try {\n      assertNotNull(new CategoryPath(\"dim\", bigComp));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n\n    try {\n      assertNotNull(new CategoryPath(\"dim\\u001f\" + bigComp, '\\u001f'));\n      fail(\"long paths should not be allowed; len=\" + bigComp.length());\n    } catch (IllegalArgumentException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"95dac0f45251471041578dd8de89dfc7fbb28f8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"78522aad83283ca58fae08fd89406b65429d0229":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["95dac0f45251471041578dd8de89dfc7fbb28f8b","78522aad83283ca58fae08fd89406b65429d0229"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["95dac0f45251471041578dd8de89dfc7fbb28f8b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95dac0f45251471041578dd8de89dfc7fbb28f8b"],"95dac0f45251471041578dd8de89dfc7fbb28f8b":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"78522aad83283ca58fae08fd89406b65429d0229":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["78522aad83283ca58fae08fd89406b65429d0229"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}