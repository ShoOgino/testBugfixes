{"path":"src/java/org/apache/lucene/index/TermInfosReader#sameTermInfo(TermInfo,TermInfo,SegmentTermEnum).mjava","commits":[{"id":"4660ef85b024c0181bfc51cc57e955e5aa28a7d4","date":1259358519,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#sameTermInfo(TermInfo,TermInfo,SegmentTermEnum).mjava","pathOld":"/dev/null","sourceNew":"  // called only from asserts\n  private final boolean sameTermInfo(TermInfo ti1, TermInfo ti2, SegmentTermEnum enumerator) {\n    if (ti1.docFreq != ti2.docFreq) {\n      return false;\n    }\n    if (ti1.freqPointer != ti2.freqPointer) {\n      return false;\n    }\n    if (ti1.proxPointer != ti2.proxPointer) {\n      return false;\n    }\n    // skipOffset is only valid when docFreq >= skipInterval:\n    if (ti1.docFreq >= enumerator.skipInterval &&\n        ti1.skipOffset != ti2.skipOffset) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermInfosReader#sameTermInfo(TermInfo,TermInfo,SegmentTermEnum).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#sameTermInfo(TermInfo,TermInfo,SegmentTermEnum).mjava","sourceNew":"  // called only from asserts\n  private final boolean sameTermInfo(TermInfo ti1, TermInfo ti2, SegmentTermEnum enumerator) {\n    if (ti1.docFreq != ti2.docFreq) {\n      return false;\n    }\n    if (ti1.freqPointer != ti2.freqPointer) {\n      return false;\n    }\n    if (ti1.proxPointer != ti2.proxPointer) {\n      return false;\n    }\n    // skipOffset is only valid when docFreq >= skipInterval:\n    if (ti1.docFreq >= enumerator.skipInterval &&\n        ti1.skipOffset != ti2.skipOffset) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  // called only from asserts\n  private final boolean sameTermInfo(TermInfo ti1, TermInfo ti2, SegmentTermEnum enumerator) {\n    if (ti1.docFreq != ti2.docFreq) {\n      return false;\n    }\n    if (ti1.freqPointer != ti2.freqPointer) {\n      return false;\n    }\n    if (ti1.proxPointer != ti2.proxPointer) {\n      return false;\n    }\n    // skipOffset is only valid when docFreq >= skipInterval:\n    if (ti1.docFreq >= enumerator.skipInterval &&\n        ti1.skipOffset != ti2.skipOffset) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4660ef85b024c0181bfc51cc57e955e5aa28a7d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4660ef85b024c0181bfc51cc57e955e5aa28a7d4"]},"commit2Childs":{"4660ef85b024c0181bfc51cc57e955e5aa28a7d4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4660ef85b024c0181bfc51cc57e955e5aa28a7d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}