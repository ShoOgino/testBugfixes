{"path":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#isOffsetOverlap(WeightedPhraseInfo).mjava","commits":[{"id":"d64148a458eb3ddf4d1bb1f1753cb9af194e1707","date":1247144811,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#isOffsetOverlap(WeightedPhraseInfo).mjava","pathOld":"/dev/null","sourceNew":"    public boolean isOffsetOverlap( WeightedPhraseInfo other ){\n      int so = getStartOffset();\n      int eo = getEndOffset();\n      int oso = other.getStartOffset();\n      int oeo = other.getEndOffset();\n      if( so <= oso && oso <= eo ) return true;\n      if( so <= oeo && oeo <= eo ) return true;\n      if( oso <= so && so <= oeo ) return true;\n      if( oso <= eo && eo <= oeo ) return true;\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b","date":1253187690,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#isOffsetOverlap(WeightedPhraseInfo).mjava","pathOld":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#isOffsetOverlap(WeightedPhraseInfo).mjava","sourceNew":"    public boolean isOffsetOverlap( WeightedPhraseInfo other ){\n      int so = getStartOffset();\n      int eo = getEndOffset();\n      int oso = other.getStartOffset();\n      int oeo = other.getEndOffset();\n      if( so <= oso && oso < eo ) return true;\n      if( so < oeo && oeo <= eo ) return true;\n      if( oso <= so && so < oeo ) return true;\n      if( oso < eo && eo <= oeo ) return true;\n      return false;\n    }\n\n","sourceOld":"    public boolean isOffsetOverlap( WeightedPhraseInfo other ){\n      int so = getStartOffset();\n      int eo = getEndOffset();\n      int oso = other.getStartOffset();\n      int oeo = other.getEndOffset();\n      if( so <= oso && oso <= eo ) return true;\n      if( so <= oeo && oeo <= eo ) return true;\n      if( oso <= so && so <= oeo ) return true;\n      if( oso <= eo && eo <= oeo ) return true;\n      return false;\n    }\n\n","bugFix":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#isOffsetOverlap(WeightedPhraseInfo).mjava","pathOld":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#isOffsetOverlap(WeightedPhraseInfo).mjava","sourceNew":"    public boolean isOffsetOverlap( WeightedPhraseInfo other ){\n      int so = getStartOffset();\n      int eo = getEndOffset();\n      int oso = other.getStartOffset();\n      int oeo = other.getEndOffset();\n      if( so <= oso && oso < eo ) return true;\n      if( so < oeo && oeo <= eo ) return true;\n      if( oso <= so && so < oeo ) return true;\n      if( oso < eo && eo <= oeo ) return true;\n      return false;\n    }\n\n","sourceOld":"    public boolean isOffsetOverlap( WeightedPhraseInfo other ){\n      int so = getStartOffset();\n      int eo = getEndOffset();\n      int oso = other.getStartOffset();\n      int oeo = other.getEndOffset();\n      if( so <= oso && oso < eo ) return true;\n      if( so < oeo && oeo <= eo ) return true;\n      if( oso <= so && so < oeo ) return true;\n      if( oso < eo && eo <= oeo ) return true;\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}