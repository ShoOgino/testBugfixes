{"path":"src/java/org/apache/solr/common/params/SolrParams#toSolrParams(NamedList).mjava","commits":[{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/params/SolrParams#toSolrParams(NamedList).mjava","pathOld":"src/java/org/apache/solr/request/SolrParams#toSolrParams(NamedList).mjava","sourceNew":"  /** Create SolrParams from NamedList. */\n  public static SolrParams toSolrParams(NamedList params) {\n    // if no keys are repeated use the faster MapSolrParams\n    HashMap<String,String> map = new HashMap<String,String>();\n    for (int i=0; i<params.size(); i++) {\n      String prev = map.put(params.getName(i), params.getVal(i).toString());\n      if (prev!=null) return new MultiMapSolrParams(toMultiMap(params));\n    }\n    return new MapSolrParams(map);\n  }\n\n","sourceOld":"  /** Create SolrParams from NamedList. */\n  public static SolrParams toSolrParams(NamedList params) {\n    // if no keys are repeated use the faster MapSolrParams\n    HashMap<String,String> map = new HashMap<String,String>();\n    for (int i=0; i<params.size(); i++) {\n      String prev = map.put(params.getName(i), params.getVal(i).toString());\n      if (prev!=null) return new MultiMapSolrParams(toMultiMap(params));\n    }\n    return new MapSolrParams(map);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/params/SolrParams#toSolrParams(NamedList).mjava","pathOld":"src/java/org/apache/solr/common/params/SolrParams#toSolrParams(NamedList).mjava","sourceNew":"  /** Create SolrParams from NamedList. */\n  public static SolrParams toSolrParams(NamedList params) {\n    // if no keys are repeated use the faster MapSolrParams\n    HashMap<String,String> map = new HashMap<String,String>();\n    for (int i=0; i<params.size(); i++) {\n      String prev = map.put(params.getName(i), params.getVal(i).toString());\n      if (prev!=null) return new MultiMapSolrParams(toMultiMap(params));\n    }\n    return new MapSolrParams(map);\n  }\n\n","sourceOld":"  /** Create SolrParams from NamedList. */\n  public static SolrParams toSolrParams(NamedList params) {\n    // if no keys are repeated use the faster MapSolrParams\n    HashMap<String,String> map = new HashMap<String,String>();\n    for (int i=0; i<params.size(); i++) {\n      String prev = map.put(params.getName(i), params.getVal(i).toString());\n      if (prev!=null) return new MultiMapSolrParams(toMultiMap(params));\n    }\n    return new MapSolrParams(map);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}