{"path":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","commits":[{"id":"5a3e922257586797a261dd44101d4044e1d0487b","date":1362322627,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,String).mjava","sourceNew":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n    conf.mkdirs();\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","sourceOld":"  private void makeCore(File coreDir, File testSrcRoot, String coreName) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n    conf.mkdirs();\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4185e899497a40e256a0ae02a47da9e2872d79f2","date":1362408234,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","sourceNew":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.info(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","sourceOld":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n    conf.mkdirs();\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4fe02dffcf7ced367f3c6ba797e9c4035f3fd7e","date":1362676527,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","sourceNew":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.warn(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","sourceOld":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.info(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b16415d71f34d00bd12f3db116f7cac330f123e0","date":1372531249,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","sourceNew":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.warn(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n    FileUtils.copyFile(new File(testConf, \"solrconfig.snippet.randomindexconfig.xml\"),\n        new File(conf, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","sourceOld":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.warn(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","sourceNew":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.warn(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n    FileUtils.copyFile(new File(testConf, \"solrconfig.snippet.randomindexconfig.xml\"),\n        new File(conf, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","sourceOld":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.warn(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCore(File,File,boolean).mjava","sourceNew":"  private void makeCore(File coreDir, File testSrcRoot) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.warn(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n    FileUtils.copyFile(new File(testConf, \"solrconfig.snippet.randomindexconfig.xml\"),\n        new File(conf, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n\n  }\n\n","sourceOld":"  private void makeCore(File coreDir, File testSrcRoot, boolean oldStyle) throws IOException {\n    File conf = new File(coreDir, \"conf\");\n\n    if (!conf.mkdirs()) log.warn(\"mkdirs returned false in makeCore... ignoring\");\n\n    File testConf = new File(testSrcRoot, \"collection1/conf\");\n\n    FileUtils.copyFile(new File(testConf, \"schema-tiny.xml\"), new File(conf, \"schema-tiny.xml\"));\n\n    FileUtils.copyFile(new File(testConf, \"solrconfig-minimal.xml\"), new File(conf, \"solrconfig-minimal.xml\"));\n    FileUtils.copyFile(new File(testConf, \"solrconfig.snippet.randomindexconfig.xml\"),\n        new File(conf, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    if (!oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"conf/core.properties\"), new File(coreDir, \"core.properties\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a3e922257586797a261dd44101d4044e1d0487b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["e4fe02dffcf7ced367f3c6ba797e9c4035f3fd7e","b16415d71f34d00bd12f3db116f7cac330f123e0"],"4185e899497a40e256a0ae02a47da9e2872d79f2":["5a3e922257586797a261dd44101d4044e1d0487b"],"b16415d71f34d00bd12f3db116f7cac330f123e0":["e4fe02dffcf7ced367f3c6ba797e9c4035f3fd7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["b16415d71f34d00bd12f3db116f7cac330f123e0"],"e4fe02dffcf7ced367f3c6ba797e9c4035f3fd7e":["4185e899497a40e256a0ae02a47da9e2872d79f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"5a3e922257586797a261dd44101d4044e1d0487b":["4185e899497a40e256a0ae02a47da9e2872d79f2"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"4185e899497a40e256a0ae02a47da9e2872d79f2":["e4fe02dffcf7ced367f3c6ba797e9c4035f3fd7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a3e922257586797a261dd44101d4044e1d0487b"],"b16415d71f34d00bd12f3db116f7cac330f123e0":["37a0f60745e53927c4c876cfe5b5a58170f0646c","fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e4fe02dffcf7ced367f3c6ba797e9c4035f3fd7e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","b16415d71f34d00bd12f3db116f7cac330f123e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}