{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector#needGeneralImpl(SortField).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector#needGeneralImpl(SortField).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector#needGeneralImpl(SortField).mjava","sourceNew":"  // Returns when a sort field needs the general impl.\n  private static boolean needGeneralImpl(SortField sortField) {\n    SortField.Type sortType = sortField.getType();\n    // Note (MvG): We can also make an optimized impl when sorting is SortField.DOC\n    return sortType != SortField.Type.STRING_VAL && sortType != SortField.Type.STRING && sortType != SortField.Type.SCORE;\n  }\n\n","sourceOld":"  // Returns when a sort field needs the general impl.\n  private static boolean needGeneralImpl(SortField sortField) {\n    SortField.Type sortType = sortField.getType();\n    // Note (MvG): We can also make an optimized impl when sorting is SortField.DOC\n    return sortType != SortField.Type.STRING_VAL && sortType != SortField.Type.STRING && sortType != SortField.Type.SCORE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector#needGeneralImpl(SortField).mjava","sourceNew":null,"sourceOld":"  // Returns when a sort field needs the general impl.\n  private static boolean needGeneralImpl(SortField sortField) {\n    SortField.Type sortType = sortField.getType();\n    // Note (MvG): We can also make an optimized impl when sorting is SortField.DOC\n    return sortType != SortField.Type.STRING_VAL && sortType != SortField.Type.STRING && sortType != SortField.Type.SCORE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector#needGeneralImpl(SortField).mjava","sourceNew":null,"sourceOld":"  // Returns when a sort field needs the general impl.\n  private static boolean needGeneralImpl(SortField sortField) {\n    SortField.Type sortType = sortField.getType();\n    // Note (MvG): We can also make an optimized impl when sorting is SortField.DOC\n    return sortType != SortField.Type.STRING_VAL && sortType != SortField.Type.STRING && sortType != SortField.Type.SCORE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}