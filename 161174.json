{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","commits":[{"id":"d561885e9bb6238af1ff8afe8630dcfe49b66ac7","date":1469780634,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numDims != 1) {\n        throw new UnsupportedOperationException(\"numDims must be 1 but got \" + numDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numDims != 1) {\n        throw new UnsupportedOperationException(\"numDims must be 1 but got \" + numDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numDims != 1) {\n        throw new UnsupportedOperationException(\"numDims must be 1 but got \" + numDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numDims != 1) {\n        throw new UnsupportedOperationException(\"numDims must be 1 but got \" + numDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76a51551f05a6c96a115b5a656837ecc8fd0b1ff","date":1551422476,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78e689a3b60e84c75dc6dd7b181a71fc19ef8482","date":1591689554,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput metaOut, IndexOutput indexOut, IndexOutput dataOut) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.metaOut = metaOut;\n      this.indexOut = indexOut;\n      this.dataOut = dataOut;\n      this.dataStartFP = dataOut.getFilePointer();\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f6652c943595e92c187ee904c382863013eae28f":["d561885e9bb6238af1ff8afe8630dcfe49b66ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["76a51551f05a6c96a115b5a656837ecc8fd0b1ff"],"76a51551f05a6c96a115b5a656837ecc8fd0b1ff":["f6652c943595e92c187ee904c382863013eae28f"],"d561885e9bb6238af1ff8afe8630dcfe49b66ac7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d561885e9bb6238af1ff8afe8630dcfe49b66ac7"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d561885e9bb6238af1ff8afe8630dcfe49b66ac7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"]},"commit2Childs":{"f6652c943595e92c187ee904c382863013eae28f":["76a51551f05a6c96a115b5a656837ecc8fd0b1ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d561885e9bb6238af1ff8afe8630dcfe49b66ac7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d561885e9bb6238af1ff8afe8630dcfe49b66ac7":["f6652c943595e92c187ee904c382863013eae28f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"76a51551f05a6c96a115b5a656837ecc8fd0b1ff":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}