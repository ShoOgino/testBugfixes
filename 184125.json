{"path":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","commits":[{"id":"0d3072fffb39e4aa50fce38815821919b35fc194","date":1138579199,"type":0,"author":"Yoav Shapira","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public List getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\r\n    ArrayList lst = new ArrayList();\r\n    final List toks = tokens(input);\r\n    TokenStream ts = new TokenStream() {\r\n      Iterator iter = toks.iterator();\r\n      public Token next() throws IOException {\r\n        return iter.hasNext() ? (Token)iter.next() : null;\r\n      }\r\n    };\r\n\r\n    SynonymFilter sf = new SynonymFilter(ts, dict, true);\r\n\r\n    while(true) {\r\n      Token t = sf.next();\r\n      if (t==null) return lst;\r\n      lst.add(t);\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c1781d63ce2d5e979c8b3f35682b60a86f5df553"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c1781d63ce2d5e979c8b3f35682b60a86f5df553","date":1153254917,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","sourceNew":"  public List getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList lst = new ArrayList();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict, true);\n\n    while(true) {\n      Token t = sf.next();\n      if (t==null) return lst;\n      lst.add(t);\n    }\n  }\n\n","sourceOld":"  public List getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\r\n    ArrayList lst = new ArrayList();\r\n    final List toks = tokens(input);\r\n    TokenStream ts = new TokenStream() {\r\n      Iterator iter = toks.iterator();\r\n      public Token next() throws IOException {\r\n        return iter.hasNext() ? (Token)iter.next() : null;\r\n      }\r\n    };\r\n\r\n    SynonymFilter sf = new SynonymFilter(ts, dict, true);\r\n\r\n    while(true) {\r\n      Token t = sf.next();\r\n      if (t==null) return lst;\r\n      lst.add(t);\r\n    }\r\n  }\r\n\n","bugFix":["0d3072fffb39e4aa50fce38815821919b35fc194"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de4d615b00f60dce1293e87276b0685ce0f0d621","date":1179940685,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","sourceNew":"  public List<Token> getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList<Token> lst = new ArrayList<Token>();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      @Override\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict, true);\n\n    while(true) {\n      Token t = sf.next();\n      if (t==null) return lst;\n      lst.add(t);\n    }\n  }\n\n","sourceOld":"  public List getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList lst = new ArrayList();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict, true);\n\n    while(true) {\n      Token t = sf.next();\n      if (t==null) return lst;\n      lst.add(t);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92335bcfcb7158f0d7417ef5b9ac3a156f5a72ac","date":1201149698,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","sourceNew":"  public List<Token> getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList<Token> lst = new ArrayList<Token>();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      @Override\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict);\n\n    while(true) {\n      Token t = sf.next();\n      if (t==null) return lst;\n      lst.add(t);\n    }\n  }\n\n","sourceOld":"  public List<Token> getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList<Token> lst = new ArrayList<Token>();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      @Override\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict, true);\n\n    while(true) {\n      Token t = sf.next();\n      if (t==null) return lst;\n      lst.add(t);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a343ab0901fd528cc211c9731de1e0f4fd319e6d","date":1208117222,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","sourceNew":"  public List<Token> getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList<Token> lst = new ArrayList<Token>();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      @Override\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict);\n\n    Token target = new Token();  // test with token reuse\n    while(true) {\n      Token t = sf.next(target);\n      if (t==null) return lst;\n      lst.add((Token)t.clone());\n    }\n  }\n\n","sourceOld":"  public List<Token> getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList<Token> lst = new ArrayList<Token>();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      @Override\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict);\n\n    while(true) {\n      Token t = sf.next();\n      if (t==null) return lst;\n      lst.add(t);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fd023a662cc25ae7e0ad0f33d71c476a16d0579","date":1261403630,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#getTokList(SynonymMap,String,boolean).mjava","sourceNew":null,"sourceOld":"  public List<Token> getTokList(SynonymMap dict, String input, boolean includeOrig) throws IOException {\n    ArrayList<Token> lst = new ArrayList<Token>();\n    final List toks = tokens(input);\n    TokenStream ts = new TokenStream() {\n      Iterator iter = toks.iterator();\n      @Override\n      public Token next() throws IOException {\n        return iter.hasNext() ? (Token)iter.next() : null;\n      }\n    };\n\n    SynonymFilter sf = new SynonymFilter(ts, dict);\n\n    Token target = new Token();  // test with token reuse\n    while(true) {\n      Token t = sf.next(target);\n      if (t==null) return lst;\n      lst.add((Token)t.clone());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de4d615b00f60dce1293e87276b0685ce0f0d621":["c1781d63ce2d5e979c8b3f35682b60a86f5df553"],"92335bcfcb7158f0d7417ef5b9ac3a156f5a72ac":["de4d615b00f60dce1293e87276b0685ce0f0d621"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c1781d63ce2d5e979c8b3f35682b60a86f5df553":["0d3072fffb39e4aa50fce38815821919b35fc194"],"a343ab0901fd528cc211c9731de1e0f4fd319e6d":["92335bcfcb7158f0d7417ef5b9ac3a156f5a72ac"],"2fd023a662cc25ae7e0ad0f33d71c476a16d0579":["a343ab0901fd528cc211c9731de1e0f4fd319e6d"],"0d3072fffb39e4aa50fce38815821919b35fc194":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"de4d615b00f60dce1293e87276b0685ce0f0d621":["92335bcfcb7158f0d7417ef5b9ac3a156f5a72ac"],"92335bcfcb7158f0d7417ef5b9ac3a156f5a72ac":["a343ab0901fd528cc211c9731de1e0f4fd319e6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0d3072fffb39e4aa50fce38815821919b35fc194"],"c1781d63ce2d5e979c8b3f35682b60a86f5df553":["de4d615b00f60dce1293e87276b0685ce0f0d621"],"a343ab0901fd528cc211c9731de1e0f4fd319e6d":["2fd023a662cc25ae7e0ad0f33d71c476a16d0579"],"0d3072fffb39e4aa50fce38815821919b35fc194":["c1781d63ce2d5e979c8b3f35682b60a86f5df553"],"2fd023a662cc25ae7e0ad0f33d71c476a16d0579":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2fd023a662cc25ae7e0ad0f33d71c476a16d0579","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}