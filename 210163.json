{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#setValues().mjava","commits":[{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#setValues().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#setValues().mjava","sourceNew":"  private void setValues() throws IOException {\n    if (valuesDocID != currentDocs.docID()) {\n      assert valuesDocID < currentDocs.docID(): \" valuesDocID=\" + valuesDocID + \" vs \" + currentDocs.docID();\n      valuesDocID = currentDocs.docID();\n      int count = currentDocs.docValueCount();\n      if (count > currentValues.length) {\n        currentValues = new long[ArrayUtil.oversize(count, RamUsageEstimator.NUM_BYTES_LONG)];\n      }\n      for(int i=0;i<count;i++) {\n        currentValues[i] = currentDocs.nextValue();\n      }\n    }\n  }\n\n","sourceOld":"  private void setValues() throws IOException {\n    if (valuesDocID != currentDocs.docID()) {\n      assert valuesDocID < currentDocs.docID(): \" valuesDocID=\" + valuesDocID + \" vs \" + currentDocs.docID();\n      valuesDocID = currentDocs.docID();\n      int count = currentDocs.docValueCount();\n      if (count > currentValues.length) {\n        currentValues = new long[ArrayUtil.oversize(count, RamUsageEstimator.NUM_BYTES_LONG)];\n      }\n      for(int i=0;i<count;i++) {\n        currentValues[i] = currentDocs.nextValue();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff761c9ce9751a5dc27f17333b4f6549a31aa2c5","date":1536062604,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#setValues().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#setValues().mjava","sourceNew":"  private void setValues() throws IOException {\n    if (valuesDocID != currentDocs.docID()) {\n      assert valuesDocID < currentDocs.docID(): \" valuesDocID=\" + valuesDocID + \" vs \" + currentDocs.docID();\n      valuesDocID = currentDocs.docID();\n      int count = currentDocs.docValueCount();\n      if (count > currentValues.length) {\n        currentValues = new long[ArrayUtil.oversize(count, Long.BYTES)];\n      }\n      for(int i=0;i<count;i++) {\n        currentValues[i] = currentDocs.nextValue();\n      }\n    }\n  }\n\n","sourceOld":"  private void setValues() throws IOException {\n    if (valuesDocID != currentDocs.docID()) {\n      assert valuesDocID < currentDocs.docID(): \" valuesDocID=\" + valuesDocID + \" vs \" + currentDocs.docID();\n      valuesDocID = currentDocs.docID();\n      int count = currentDocs.docValueCount();\n      if (count > currentValues.length) {\n        currentValues = new long[ArrayUtil.oversize(count, RamUsageEstimator.NUM_BYTES_LONG)];\n      }\n      for(int i=0;i<count;i++) {\n        currentValues[i] = currentDocs.nextValue();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff761c9ce9751a5dc27f17333b4f6549a31aa2c5":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ff761c9ce9751a5dc27f17333b4f6549a31aa2c5"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["ff761c9ce9751a5dc27f17333b4f6549a31aa2c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"ff761c9ce9751a5dc27f17333b4f6549a31aa2c5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}