{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/email/UAX29URLEmailTokenizer#setMaxTokenLength(int).mjava","commits":[{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":1,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/email/UAX29URLEmailTokenizer#setMaxTokenLength(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer#setMaxTokenLength(int).mjava","sourceNew":"  /**\n   * Set the max allowed token length.  Tokens larger than this will be chopped\n   * up at this token length and emitted as multiple tokens.  If you need to\n   * skip such large tokens, you could increase this max length, and then\n   * use {@code LengthFilter} to remove long tokens.  The default is\n   * {@link UAX29URLEmailAnalyzer#DEFAULT_MAX_TOKEN_LENGTH}.\n   * \n   * @throws IllegalArgumentException if the given length is outside of the\n   *  range [1, {@value #MAX_TOKEN_LENGTH_LIMIT}].\n   */ \n  public void setMaxTokenLength(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"maxTokenLength must be greater than zero\");\n    } else if (length > MAX_TOKEN_LENGTH_LIMIT) {\n      throw new IllegalArgumentException(\"maxTokenLength may not exceed \" + MAX_TOKEN_LENGTH_LIMIT);\n    }\n    if (length != maxTokenLength) {\n      this.maxTokenLength = length;\n      scanner.setBufferSize(length);\n    }\n  }\n\n","sourceOld":"  /**\n   * Set the max allowed token length.  Tokens larger than this will be chopped\n   * up at this token length and emitted as multiple tokens.  If you need to\n   * skip such large tokens, you could increase this max length, and then\n   * use {@code LengthFilter} to remove long tokens.  The default is\n   * {@link UAX29URLEmailAnalyzer#DEFAULT_MAX_TOKEN_LENGTH}.\n   * \n   * @throws IllegalArgumentException if the given length is outside of the\n   *  range [1, {@value #MAX_TOKEN_LENGTH_LIMIT}].\n   */ \n  public void setMaxTokenLength(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"maxTokenLength must be greater than zero\");\n    } else if (length > MAX_TOKEN_LENGTH_LIMIT) {\n      throw new IllegalArgumentException(\"maxTokenLength may not exceed \" + MAX_TOKEN_LENGTH_LIMIT);\n    }\n    if (length != maxTokenLength) {\n      this.maxTokenLength = length;\n      scanner.setBufferSize(length);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}