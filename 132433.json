{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes());\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes());\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93f99fbcc3ed1f90a1c2f4130724420f00baa8f2","date":1341663916,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(\"UTF-8\"));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes());\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(\"UTF-8\"));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes());\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(\"UTF-8\"));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes());\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(\"UTF-8\"));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes());\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(StandardCharsets.UTF_8));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(\"UTF-8\"));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(StandardCharsets.UTF_8));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(\"UTF-8\"));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2713584a660051cd646423be682771e3bbd99985","date":1425046322,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":null,"sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(StandardCharsets.UTF_8));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#getDocumentFromString(String).mjava","sourceNew":null,"sourceOld":"  private static Document getDocumentFromString(String str)\n      throws SAXException, IOException, ParserConfigurationException {\n    InputStream is = new ByteArrayInputStream(str.getBytes(StandardCharsets.UTF_8));\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    factory.setNamespaceAware(true);\n    DocumentBuilder builder = factory.newDocumentBuilder();\n    Document doc = builder.parse(is);\n    is.close();\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["2acf500f78aa12b92e371fd89c719291986b6b90","7d89d7e4e5101347833eea558851bf4209218619"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7d89d7e4e5101347833eea558851bf4209218619","2713584a660051cd646423be682771e3bbd99985"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2713584a660051cd646423be682771e3bbd99985":["7d89d7e4e5101347833eea558851bf4209218619"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2acf500f78aa12b92e371fd89c719291986b6b90":["b89678825b68eccaf09e6ab71675fc0b0af1e099","93f99fbcc3ed1f90a1c2f4130724420f00baa8f2"],"7d89d7e4e5101347833eea558851bf4209218619":["2acf500f78aa12b92e371fd89c719291986b6b90"],"93f99fbcc3ed1f90a1c2f4130724420f00baa8f2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2713584a660051cd646423be682771e3bbd99985"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","93f99fbcc3ed1f90a1c2f4130724420f00baa8f2","46d8ada1fff8d18cb197c38c7983225162599948"],"2713584a660051cd646423be682771e3bbd99985":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2acf500f78aa12b92e371fd89c719291986b6b90":["5eb2511ababf862ea11e10761c70ee560cd84510","fe33227f6805edab2036cbb80645cc4e2d1fa424","7d89d7e4e5101347833eea558851bf4209218619","46d8ada1fff8d18cb197c38c7983225162599948"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2713584a660051cd646423be682771e3bbd99985"],"93f99fbcc3ed1f90a1c2f4130724420f00baa8f2":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}