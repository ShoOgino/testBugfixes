{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"    @Override\n    public void addPosition(int position, BytesRef payload) {\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","sourceOld":"    @Override\n    public void addPosition(int position, BytesRef payload) {\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"    @Override\n    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) {\n      assert startOffset == -1;\n      assert endOffset == -1;\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","sourceOld":"    @Override\n    public void addPosition(int position, BytesRef payload) {\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"31f025ae60076ae95274433f3fe8e6ace2857a87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}