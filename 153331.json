{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","commits":[{"id":"672d7b75cc3198c053fd48a3138a50f4ec7bf4c6","date":1353340695,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"/dev/null","sourceNew":"  public HighCompressionCompressingCodec() {\n    this(1 << 14);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["25308800fd7565ab31e6353077a56bba68fb0668"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e10e06dd3194bb067f1dc9ffe7558223862a6d4","date":1353340740,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    this(1 << 14);\n  }\n\n","sourceOld":"  public HighCompressionCompressingCodec() {\n    this(1 << 14);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"/dev/null","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    this(1 << 14);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"25308800fd7565ab31e6353077a56bba68fb0668","date":1355337658,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    this(1 << 14, false);\n  }\n\n","sourceOld":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    this(1 << 14);\n  }\n\n","bugFix":["672d7b75cc3198c053fd48a3138a50f4ec7bf4c6"],"bugIntro":["699a2199028b8eadcc558eebcf669e5fc708524a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    this(1 << 14, false);\n  }\n\n","sourceOld":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    this(1 << 14);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"699a2199028b8eadcc558eebcf669e5fc708524a","date":1417544403,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // no need to have a higher block length than 32KB since deflate splits\n    // into blocks of 32KB anyway, and this is a lower bound (try to avoid > 32KB)\n    this(24576, 512, false);\n  }\n\n","sourceOld":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    this(1 << 14, false);\n  }\n\n","bugFix":["25308800fd7565ab31e6353077a56bba68fb0668"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3","date":1418173179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // we don't worry about zlib block overhead as its\n    // not bad and try to save space instead:\n    this(61440, 512, false);\n  }\n\n","sourceOld":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // no need to have a higher block length than 32KB since deflate splits\n    // into blocks of 32KB anyway, and this is a lower bound (try to avoid > 32KB)\n    this(24576, 512, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // we don't worry about zlib block overhead as it's\n    // not bad and try to save space instead:\n    this(61440, 512, false);\n  }\n\n","sourceOld":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // we don't worry about zlib block overhead as its\n    // not bad and try to save space instead:\n    this(61440, 512, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59d4661023aa9541b0a759e4d2e11dcf83b923a0","date":1420124226,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // we don't worry about zlib block overhead as it's\n    // not bad and try to save space instead:\n    this(61440, 512, false, 1024);\n  }\n\n","sourceOld":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // we don't worry about zlib block overhead as it's\n    // not bad and try to save space instead:\n    this(61440, 512, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a4487b07c49a1861c05720e04624826ecbe9fa","date":1580924108,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/HighCompressionCompressingCodec#HighCompressionCompressingCodec().mjava","sourceNew":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // we don't worry about zlib block overhead as it's\n    // not bad and try to save space instead:\n    this(61440, 512, false, 10);\n  }\n\n","sourceOld":"  /** Default constructor. */\n  public HighCompressionCompressingCodec() {\n    // we don't worry about zlib block overhead as it's\n    // not bad and try to save space instead:\n    this(61440, 512, false, 1024);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","25308800fd7565ab31e6353077a56bba68fb0668"],"70a4487b07c49a1861c05720e04624826ecbe9fa":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3"],"25308800fd7565ab31e6353077a56bba68fb0668":["7e10e06dd3194bb067f1dc9ffe7558223862a6d4"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7e10e06dd3194bb067f1dc9ffe7558223862a6d4"],"f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3":["699a2199028b8eadcc558eebcf669e5fc708524a"],"672d7b75cc3198c053fd48a3138a50f4ec7bf4c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"699a2199028b8eadcc558eebcf669e5fc708524a":["25308800fd7565ab31e6353077a56bba68fb0668"],"7e10e06dd3194bb067f1dc9ffe7558223862a6d4":["672d7b75cc3198c053fd48a3138a50f4ec7bf4c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70a4487b07c49a1861c05720e04624826ecbe9fa"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"70a4487b07c49a1861c05720e04624826ecbe9fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"25308800fd7565ab31e6353077a56bba68fb0668":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","699a2199028b8eadcc558eebcf669e5fc708524a"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["70a4487b07c49a1861c05720e04624826ecbe9fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","672d7b75cc3198c053fd48a3138a50f4ec7bf4c6"],"f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"672d7b75cc3198c053fd48a3138a50f4ec7bf4c6":["7e10e06dd3194bb067f1dc9ffe7558223862a6d4"],"699a2199028b8eadcc558eebcf669e5fc708524a":["f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3"],"7e10e06dd3194bb067f1dc9ffe7558223862a6d4":["25308800fd7565ab31e6353077a56bba68fb0668","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}