{"path":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/File#File(JEDirectory,String,boolean).mjava","commits":[{"id":"87fc6f159522f12e67225691468cbf3d11be8590","date":1136423057,"type":0,"author":"Andreas Vajda","isMerge":false,"pathNew":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/File#File(JEDirectory,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    protected File(JEDirectory directory, String name, boolean create)\n            throws IOException {\n        this(name);\n\n        if (!exists(directory)) {\n            if (!create)\n                throw new IOException(\"File does not exist: \" + name);\n            else {\n                DatabaseEntry key = new DatabaseEntry(new byte[24]);\n                DatabaseEntry data = new DatabaseEntry(null);\n                Database blocks = directory.blocks;\n                Transaction txn = directory.txn;\n\n                data.setPartial(true);\n\n                uuid = new byte[16];\n\n                try {\n                    do {\n                        /* generate a v.4 random-uuid unique to this db */\n                        random.nextBytes(uuid);\n                        uuid[6] = (byte) ((byte) 0x40 | (uuid[6] & (byte) 0x0f));\n                        uuid[8] = (byte) ((byte) 0x80 | (uuid[8] & (byte) 0x3f));\n                        System.arraycopy(uuid, 0, key.getData(), 0, 16);\n                        // TODO check LockMode\n                    } while (blocks.get(txn, key, data, null) != OperationStatus.NOTFOUND);\n                } catch (DatabaseException e) {\n                    throw new IOException(e.getMessage());\n                }\n            }\n        } else if (create)\n            length = 0L;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/db/bdb-je/src/java/org/apache/lucene/store/je/File#File(JEDirectory,String,boolean).mjava","pathOld":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/File#File(JEDirectory,String,boolean).mjava","sourceNew":"    protected File(JEDirectory directory, String name, boolean create)\n            throws IOException {\n        this(name);\n\n        if (!exists(directory)) {\n            if (!create)\n                throw new IOException(\"File does not exist: \" + name);\n            else {\n                DatabaseEntry key = new DatabaseEntry(new byte[24]);\n                DatabaseEntry data = new DatabaseEntry(null);\n                Database blocks = directory.blocks;\n                Transaction txn = directory.txn;\n\n                data.setPartial(true);\n\n                uuid = new byte[16];\n\n                try {\n                    do {\n                        /* generate a v.4 random-uuid unique to this db */\n                        random.nextBytes(uuid);\n                        uuid[6] = (byte) ((byte) 0x40 | (uuid[6] & (byte) 0x0f));\n                        uuid[8] = (byte) ((byte) 0x80 | (uuid[8] & (byte) 0x3f));\n                        System.arraycopy(uuid, 0, key.getData(), 0, 16);\n                        // TODO check LockMode\n                    } while (blocks.get(txn, key, data, null) != OperationStatus.NOTFOUND);\n                } catch (DatabaseException e) {\n                    throw new IOException(e.getMessage());\n                }\n            }\n        } else if (create)\n            length = 0L;\n    }\n\n","sourceOld":"    protected File(JEDirectory directory, String name, boolean create)\n            throws IOException {\n        this(name);\n\n        if (!exists(directory)) {\n            if (!create)\n                throw new IOException(\"File does not exist: \" + name);\n            else {\n                DatabaseEntry key = new DatabaseEntry(new byte[24]);\n                DatabaseEntry data = new DatabaseEntry(null);\n                Database blocks = directory.blocks;\n                Transaction txn = directory.txn;\n\n                data.setPartial(true);\n\n                uuid = new byte[16];\n\n                try {\n                    do {\n                        /* generate a v.4 random-uuid unique to this db */\n                        random.nextBytes(uuid);\n                        uuid[6] = (byte) ((byte) 0x40 | (uuid[6] & (byte) 0x0f));\n                        uuid[8] = (byte) ((byte) 0x80 | (uuid[8] & (byte) 0x3f));\n                        System.arraycopy(uuid, 0, key.getData(), 0, 16);\n                        // TODO check LockMode\n                    } while (blocks.get(txn, key, data, null) != OperationStatus.NOTFOUND);\n                } catch (DatabaseException e) {\n                    throw new IOException(e.getMessage());\n                }\n            }\n        } else if (create)\n            length = 0L;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87fc6f159522f12e67225691468cbf3d11be8590":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["87fc6f159522f12e67225691468cbf3d11be8590"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87fc6f159522f12e67225691468cbf3d11be8590"],"87fc6f159522f12e67225691468cbf3d11be8590":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}