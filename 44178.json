{"path":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf795ee457272965bd751f513787065bbf0a650a","date":1385015231,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//arr[@name='distinctValues']/*)='8'\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)='8'\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)='4'\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\", \"indent\", \"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)='4'\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":["511309ff970d3c2a68d1ac453cc187df1198f0d1","d0c238d519ed8e8343ab723bcc8f1846786e42a6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//arr[@name='distinctValues']/*)='8'\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)='8'\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)='4'\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\", \"indent\", \"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)='4'\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\", \"indent\",\"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0c238d519ed8e8343ab723bcc8f1846786e42a6","date":1409789996,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//arr[@name='distinctValues']/*)=8\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\", \"indent\", \"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//arr[@name='distinctValues']/*)='8'\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)='8'\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)='4'\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\", \"indent\", \"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)='4'\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","bugFix":["bf795ee457272965bd751f513787065bbf0a650a"],"bugIntro":["511309ff970d3c2a68d1ac453cc187df1198f0d1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"511309ff970d3c2a68d1ac453cc187df1198f0d1","date":1410303604,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//arr[@name='distinctValues']/*)=8\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-100.0']\"\n            , \"//double[@name='max'][.='200.0']\"\n            , \"//double[@name='sum'][.='9.0']\"\n            , \"//long[@name='count'][.='8']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//double[@name='mean'][.='1.125']\"\n            , \"//double[@name='stddev'][.='87.08852228787508']\"\n    );\n\n    assertQ(\"test value for active_s=true\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\", \"indent\", \"true\")\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n    );\n\n\n  }\n\n","bugFix":["4002610a071fd76efb20afdc94b0e963256a9b33","5e62bfc99fea332bfdcdca0f73a821428d533279","bf795ee457272965bd751f513787065bbf0a650a","861fa37cce2d9d3f8978bbb767e87a91d41ed4a8","d0c238d519ed8e8343ab723bcc8f1846786e42a6","a56da5612f2fd2e0e08ecc709069a20adc9ab234"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10eb287e62f3e48c07b2a817c1750c859bb5e7e7","date":1410374187,"type":3,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"283ff02f401ec3e7a2fad73643970f052383fb0c","date":1411407953,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a4e2c829188fb99886a64558664d79c9ac0fdf1","date":1431021538,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fa9270995767ab6c92b235a5a62267aa426f47d","date":1575523102,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"),\n        params(\"json.facet\", // note: no distinctValues support and not comparing min/max values\n            \"{min:'min(\"+f+\")',count:'countvals(\"+f+\")',missing:'missing(\"+f+\")',max:'max(\"+f+\")', sum:'sum(\"+f+\")', \" +\n                \" countDistinct:'unique(\"+f+\")', sumOfSquares:'sumsq(\"+f+\")', mean:'avg(\"+f+\")', stddev:'stddev(\"+f+\")' }\")\n    }) {\n      // easy switch to know if/when we are using json.facet which doesn't support some options\n      final boolean json = (null != baseParams.get(\"json.facet\"));\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-100.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json ? \"//int[@name='countDistinct'][.='8']\": \"//long[@name='countDistinct'][.='8']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              ,json ? \"//*\" :  \"//double[@name='stddev'][.='87.08852228787508']\" // SOLR-11725\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-40.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json? \"//int[@name='countDistinct'][.='6']\" :\"//long[@name='countDistinct'][.='6']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , json ? \"//*\" : \"//double[@name='stddev'][.='90.15634568163611']\" // SOLR-11725\n              );\n      \n      if (!json) { // checking stats.facet makes no sense for json faceting\n        assertQ(\"test stats.facet (using boolean facet field)\",\n            req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n            // baseline\n            , \"//lst[@name='\"+f+\"']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sum'][.='9.0']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='count'][.='8']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='missing'][.='3']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='mean'][.='1.125']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='stddev'][.='87.08852228787508']\"\n            // facet 'true'\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n            // facet 'false'\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n        );\n      }\n    }\n\n    assertQ(\"cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f)\n        , \"//long[@name='cardinality'][.='8']\"\n    );\n    assertQ(\"json cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"json.facet\", \"{cardinality:'hll(\"+f+\")'}\")\n        , \"//int[@name='cardinality'][.='8']\" // SOLR-11775\n    );\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a90f561fc609ec007ba18b10dea9191dbbd71831","date":1575541054,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"),\n        params(\"json.facet\", // note: no distinctValues support and not comparing min/max values\n            \"{min:'min(\"+f+\")',count:'countvals(\"+f+\")',missing:'missing(\"+f+\")',max:'max(\"+f+\")', sum:'sum(\"+f+\")', \" +\n                \" countDistinct:'unique(\"+f+\")', sumOfSquares:'sumsq(\"+f+\")', mean:'avg(\"+f+\")', stddev:'stddev(\"+f+\")' }\")\n    }) {\n      // easy switch to know if/when we are using json.facet which doesn't support some options\n      final boolean json = (null != baseParams.get(\"json.facet\"));\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-100.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json ? \"//int[@name='countDistinct'][.='8']\": \"//long[@name='countDistinct'][.='8']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              ,json ? \"//*\" :  \"//double[@name='stddev'][.='87.08852228787508']\" // SOLR-11725\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-40.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json? \"//int[@name='countDistinct'][.='6']\" :\"//long[@name='countDistinct'][.='6']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , json ? \"//*\" : \"//double[@name='stddev'][.='90.15634568163611']\" // SOLR-11725\n              );\n      \n      if (!json) { // checking stats.facet makes no sense for json faceting\n        assertQ(\"test stats.facet (using boolean facet field)\",\n            req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n            // baseline\n            , \"//lst[@name='\"+f+\"']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sum'][.='9.0']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='count'][.='8']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='missing'][.='3']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='mean'][.='1.125']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='stddev'][.='87.08852228787508']\"\n            // facet 'true'\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n            // facet 'false'\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n        );\n      }\n    }\n\n    assertQ(\"cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f)\n        , \"//long[@name='cardinality'][.='8']\"\n    );\n    assertQ(\"json cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"json.facet\", \"{cardinality:'hll(\"+f+\")'}\")\n        , \"//int[@name='cardinality'][.='8']\" // SOLR-11775\n    );\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\")  }) {\n      \n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , \"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n      \n      // TODO: why are there 3 identical requests below?\n      \n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//double[@name='min'][.='-100.0']\"\n              , \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              , \"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='4']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='4']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n              , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n              );\n    }\n\n    assertQ(\"cardinality\"\n            , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f) \n            , \"//long[@name='cardinality'][.='8']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c323a47ee02cccb79b79272be52db023360d339d","date":1584625917,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"),\n        params(\"json.facet\", // note: no distinctValues support and not comparing min/max values\n            \"{min:'min(\"+f+\")',count:'countvals(\"+f+\")',missing:'missing(\"+f+\")',max:'max(\"+f+\")', sum:'sum(\"+f+\")', \" +\n                \" countDistinct:'unique(\"+f+\")', sumOfSquares:'sumsq(\"+f+\")', mean:'avg(\"+f+\")', stddev:'stddev(\"+f+\")' }\")\n    }) {\n      // easy switch to know if/when we are using json.facet which doesn't support some options\n      final boolean json = (null != baseParams.get(\"json.facet\"));\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-100.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json ? \"//int[@name='countDistinct'][.='8']\": \"//long[@name='countDistinct'][.='8']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              ,\"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-40.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json? \"//int[@name='countDistinct'][.='6']\" :\"//long[@name='countDistinct'][.='6']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              ,\"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n\n      assertQ(\"test stdDev\",\n          req(baseParams, \"q\", \"id:5\", \"rows\", \"0\")\n          ,\"//double[@name='stddev'][.='0.0']\"\n      );\n      \n      if (!json) { // checking stats.facet makes no sense for json faceting\n        assertQ(\"test stats.facet (using boolean facet field)\",\n            req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n            // baseline\n            , \"//lst[@name='\"+f+\"']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sum'][.='9.0']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='count'][.='8']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='missing'][.='3']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='mean'][.='1.125']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='stddev'][.='87.08852228787508']\"\n            // facet 'true'\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n            // facet 'false'\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n        );\n      }\n    }\n\n    assertQ(\"cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f)\n        , \"//long[@name='cardinality'][.='8']\"\n    );\n    assertQ(\"json cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"json.facet\", \"{cardinality:'hll(\"+f+\")'}\")\n        , \"//int[@name='cardinality'][.='8']\" // SOLR-11775\n    );\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"),\n        params(\"json.facet\", // note: no distinctValues support and not comparing min/max values\n            \"{min:'min(\"+f+\")',count:'countvals(\"+f+\")',missing:'missing(\"+f+\")',max:'max(\"+f+\")', sum:'sum(\"+f+\")', \" +\n                \" countDistinct:'unique(\"+f+\")', sumOfSquares:'sumsq(\"+f+\")', mean:'avg(\"+f+\")', stddev:'stddev(\"+f+\")' }\")\n    }) {\n      // easy switch to know if/when we are using json.facet which doesn't support some options\n      final boolean json = (null != baseParams.get(\"json.facet\"));\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-100.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json ? \"//int[@name='countDistinct'][.='8']\": \"//long[@name='countDistinct'][.='8']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              ,json ? \"//*\" :  \"//double[@name='stddev'][.='87.08852228787508']\" // SOLR-11725\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-40.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json? \"//int[@name='countDistinct'][.='6']\" :\"//long[@name='countDistinct'][.='6']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              , json ? \"//*\" : \"//double[@name='stddev'][.='90.15634568163611']\" // SOLR-11725\n              );\n      \n      if (!json) { // checking stats.facet makes no sense for json faceting\n        assertQ(\"test stats.facet (using boolean facet field)\",\n            req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n            // baseline\n            , \"//lst[@name='\"+f+\"']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sum'][.='9.0']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='count'][.='8']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='missing'][.='3']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='mean'][.='1.125']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='stddev'][.='87.08852228787508']\"\n            // facet 'true'\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n            // facet 'false'\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n        );\n      }\n    }\n\n    assertQ(\"cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f)\n        , \"//long[@name='cardinality'][.='8']\"\n    );\n    assertQ(\"json cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"json.facet\", \"{cardinality:'hll(\"+f+\")'}\")\n        , \"//int[@name='cardinality'][.='8']\" // SOLR-11775\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c","date":1584625917,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestMVFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"),\n        params(\"json.facet\", // note: no distinctValues support and not comparing min/max values\n            \"{min:'min(\"+f+\")',count:'countvals(\"+f+\")',missing:'missing(\"+f+\")',max:'max(\"+f+\")', sum:'sum(\"+f+\")', \" +\n                \" countDistinct:'unique(\"+f+\")', sumOfSquares:'sumsq(\"+f+\")', mean:'avg(\"+f+\")', stddev:'stddev(\"+f+\")' }\")\n    }) {\n      // easy switch to know if/when we are using json.facet which doesn't support some options\n      final boolean json = (null != baseParams.get(\"json.facet\"));\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-100.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='8']\"\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              ,\"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-40.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , \"//long[@name='countDistinct'][.='6']\"\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              ,\"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n\n      assertQ(\"test stdDev\",\n          req(baseParams, \"q\", \"id:5\", \"rows\", \"0\")\n          ,\"//double[@name='stddev'][.='0.0']\"\n      );\n      \n      if (!json) { // checking stats.facet makes no sense for json faceting\n        assertQ(\"test stats.facet (using boolean facet field)\",\n            req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n            // baseline\n            , \"//lst[@name='\"+f+\"']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sum'][.='9.0']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='count'][.='8']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='missing'][.='3']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='mean'][.='1.125']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='stddev'][.='87.08852228787508']\"\n            // facet 'true'\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n            // facet 'false'\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n        );\n      }\n    }\n\n    // cardinality\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", \"{!cardinality=true}\"+f, \"stats\", \"true\"),\n        params(\"json.facet\", \"{cardinality:'hll(\"+f+\")'}\")\n    }) {\n      assertQ(\"test cardinality\",\n          req(baseParams, \"q\", \"*:*\", \"rows\", \"0\"),\n          \"//long[@name='cardinality'][.='8']\"\n      );\n    }\n  }\n\n","sourceOld":"  public void doTestMVFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\", f, \"-100\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\", f, \"200\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\", f, \"-1\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\", f, \"10\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"5\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"6\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"7\", \"active_s\", \"true\"));\n    \n    assertU(commit());\n\n    // with or w/o these excluded filters, results should be the same\n    for (SolrParams baseParams : new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"),\n        params(\"json.facet\", // note: no distinctValues support and not comparing min/max values\n            \"{min:'min(\"+f+\")',count:'countvals(\"+f+\")',missing:'missing(\"+f+\")',max:'max(\"+f+\")', sum:'sum(\"+f+\")', \" +\n                \" countDistinct:'unique(\"+f+\")', sumOfSquares:'sumsq(\"+f+\")', mean:'avg(\"+f+\")', stddev:'stddev(\"+f+\")' }\")\n    }) {\n      // easy switch to know if/when we are using json.facet which doesn't support some options\n      final boolean json = (null != baseParams.get(\"json.facet\"));\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-100.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='9.0']\"\n              , \"//long[@name='count'][.='8']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json ? \"//int[@name='countDistinct'][.='8']\": \"//long[@name='countDistinct'][.='8']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=8\"\n              , \"//double[@name='sumOfSquares'][.='53101.0']\"\n              , \"//double[@name='mean'][.='1.125']\"\n              ,\"//double[@name='stddev'][.='87.08852228787508']\"\n              );\n\n      assertQ(\"test statistics values w/fq\", \n              req(baseParams, \"fq\", \"-id:1\",\n                  \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , json ? \"//*\" : \"//double[@name='min'][.='-40.0']\"\n              , json ? \"//*\" : \"//double[@name='max'][.='200.0']\"\n              , \"//double[@name='sum'][.='119.0']\"\n              , \"//long[@name='count'][.='6']\"\n              , \"//long[@name='missing'][.='3']\"\n              , json? \"//int[@name='countDistinct'][.='6']\" :\"//long[@name='countDistinct'][.='6']\" // SOLR-11775\n              , json ? \"//*\" : \"count(//arr[@name='distinctValues']/*)=6\"\n              , \"//double[@name='sumOfSquares'][.='43001.0']\"\n              , \"//double[@name='mean'][.='19.833333333333332']\"\n              ,\"//double[@name='stddev'][.='90.15634568163611']\"\n              );\n\n      assertQ(\"test stdDev\",\n          req(baseParams, \"q\", \"id:5\", \"rows\", \"0\")\n          ,\"//double[@name='stddev'][.='0.0']\"\n      );\n      \n      if (!json) { // checking stats.facet makes no sense for json faceting\n        assertQ(\"test stats.facet (using boolean facet field)\",\n            req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n            // baseline\n            , \"//lst[@name='\"+f+\"']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sum'][.='9.0']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='count'][.='8']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='missing'][.='3']\"\n            , \"//lst[@name='\"+f+\"']/long[@name='countDistinct'][.='8']\"\n            , \"count(//lst[@name='\" + f + \"']/arr[@name='distinctValues']/*)=8\"\n            , \"//lst[@name='\"+f+\"']/double[@name='sumOfSquares'][.='53101.0']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='mean'][.='1.125']\"\n            , \"//lst[@name='\"+f+\"']/double[@name='stddev'][.='87.08852228787508']\"\n            // facet 'true'\n            , \"//lst[@name='true']/double[@name='min'][.='-100.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='200.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='4']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='1']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='50500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='17.5']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='128.16005617976296']\"\n            // facet 'false'\n            , \"//lst[@name='false']/double[@name='min'][.='-40.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='10.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='-61.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='4']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='2']\"\n            , \"//lst[@name='true']//long[@name='countDistinct'][.='4']\"\n            , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=4\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2601.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='-15.25']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='23.59908190304586']\"\n        );\n      }\n    }\n\n    assertQ(\"cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + f)\n        , \"//long[@name='cardinality'][.='8']\"\n    );\n    assertQ(\"json cardinality\"\n        , req(\"q\", \"*:*\", \"rows\", \"0\", \"json.facet\", \"{cardinality:'hll(\"+f+\")'}\")\n        , \"//int[@name='cardinality'][.='8']\" // SOLR-11775\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fa9270995767ab6c92b235a5a62267aa426f47d":["28288370235ed02234a64753cdbf0c6ec096304a"],"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c":["c323a47ee02cccb79b79272be52db023360d339d"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["283ff02f401ec3e7a2fad73643970f052383fb0c"],"10eb287e62f3e48c07b2a817c1750c859bb5e7e7":["511309ff970d3c2a68d1ac453cc187df1198f0d1"],"c323a47ee02cccb79b79272be52db023360d339d":["2fa9270995767ab6c92b235a5a62267aa426f47d"],"a90f561fc609ec007ba18b10dea9191dbbd71831":["28288370235ed02234a64753cdbf0c6ec096304a","2fa9270995767ab6c92b235a5a62267aa426f47d"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"bf795ee457272965bd751f513787065bbf0a650a":["c26f00b574427b55127e869b935845554afde1fa"],"28288370235ed02234a64753cdbf0c6ec096304a":["4a4e2c829188fb99886a64558664d79c9ac0fdf1","a71f63026529f3c1f03cfdd664910873ab2369ae"],"d0c238d519ed8e8343ab723bcc8f1846786e42a6":["bf795ee457272965bd751f513787065bbf0a650a"],"283ff02f401ec3e7a2fad73643970f052383fb0c":["10eb287e62f3e48c07b2a817c1750c859bb5e7e7"],"511309ff970d3c2a68d1ac453cc187df1198f0d1":["d0c238d519ed8e8343ab723bcc8f1846786e42a6"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["c26f00b574427b55127e869b935845554afde1fa","bf795ee457272965bd751f513787065bbf0a650a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["4a4e2c829188fb99886a64558664d79c9ac0fdf1","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c"]},"commit2Childs":{"2fa9270995767ab6c92b235a5a62267aa426f47d":["c323a47ee02cccb79b79272be52db023360d339d","a90f561fc609ec007ba18b10dea9191dbbd71831"],"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"10eb287e62f3e48c07b2a817c1750c859bb5e7e7":["283ff02f401ec3e7a2fad73643970f052383fb0c"],"c323a47ee02cccb79b79272be52db023360d339d":["8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c"],"a90f561fc609ec007ba18b10dea9191dbbd71831":[],"c26f00b574427b55127e869b935845554afde1fa":["bf795ee457272965bd751f513787065bbf0a650a","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"bf795ee457272965bd751f513787065bbf0a650a":["d0c238d519ed8e8343ab723bcc8f1846786e42a6","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"28288370235ed02234a64753cdbf0c6ec096304a":["2fa9270995767ab6c92b235a5a62267aa426f47d","a90f561fc609ec007ba18b10dea9191dbbd71831"],"d0c238d519ed8e8343ab723bcc8f1846786e42a6":["511309ff970d3c2a68d1ac453cc187df1198f0d1"],"283ff02f401ec3e7a2fad73643970f052383fb0c":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"511309ff970d3c2a68d1ac453cc187df1198f0d1":["10eb287e62f3e48c07b2a817c1750c859bb5e7e7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a90f561fc609ec007ba18b10dea9191dbbd71831","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}