{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/OriginalSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                           wildcard=true; q = new WildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                                 prefix=true; q = new PrefixWildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                               wildcard=true; q = new WildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[12] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n       if (!wildcard && !prefix && fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[23] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[24] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                           wildcard=true; q = new WildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                                 prefix=true; q = new PrefixWildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                               wildcard=true; q = new WildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[12] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n       if (!wildcard && !prefix && fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[23] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[24] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f75cd88b219e040b204bff4c189784659752f786","date":1250640581,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                           wildcard=true; q = new WildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                                 prefix=true; q = new PrefixWildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                               wildcard=true; q = new WildcardQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[12] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n       if (!wildcard && !prefix && fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[23] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[24] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f75cd88b219e040b204bff4c189784659752f786":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f75cd88b219e040b204bff4c189784659752f786"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["f75cd88b219e040b204bff4c189784659752f786"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"f75cd88b219e040b204bff4c189784659752f786":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}