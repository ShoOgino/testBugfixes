{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer#score(ScorerWrapper).mjava","commits":[{"id":"835e9a6d1c5a6cc5684c905d972d68df554cfad5","date":1424111245,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer#score(ScorerWrapper).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer#score(ScorerWrapper,int).mjava","sourceNew":"  @Override\n  protected float score(ScorerWrapper topList) throws IOException {\n    double score = 0;\n    int freq = 0;\n    for (ScorerWrapper w = topList; w != null; w = w.next) {\n      score += w.scorer.score();\n      freq += 1;\n    }\n    return (float)score * coord[freq];\n  }\n\n","sourceOld":"  @Override\n  protected float score(ScorerWrapper topList, int freq) throws IOException {\n    double score = 0;\n    for (ScorerWrapper w = topList; w != null; w = w.next) {\n      score += w.scorer.score();\n    }\n    return (float)score * coord[freq];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","date":1429852340,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer#score(DisiWrapper[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer#score(ScorerWrapper).mjava","sourceNew":"  @Override\n  protected float score(DisiWrapper<Scorer> topList) throws IOException {\n    double score = 0;\n    int freq = 0;\n    for (DisiWrapper<Scorer> w = topList; w != null; w = w.next) {\n      score += w.iterator.score();\n      freq += 1;\n    }\n    return (float)score * coord[freq];\n  }\n\n","sourceOld":"  @Override\n  protected float score(ScorerWrapper topList) throws IOException {\n    double score = 0;\n    int freq = 0;\n    for (ScorerWrapper w = topList; w != null; w = w.next) {\n      score += w.scorer.score();\n      freq += 1;\n    }\n    return (float)score * coord[freq];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["835e9a6d1c5a6cc5684c905d972d68df554cfad5"],"835e9a6d1c5a6cc5684c905d972d68df554cfad5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"]},"commit2Childs":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"835e9a6d1c5a6cc5684c905d972d68df554cfad5":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["835e9a6d1c5a6cc5684c905d972d68df554cfad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}