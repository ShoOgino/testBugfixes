{"path":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"/dev/null","sourceNew":"  /** Create term vectors writer for the specified segment in specified\n   *  directory.  A new TermVectorsWriter should be created for each\n   *  segment. The parameter <code>maxFields</code> indicates how many total\n   *  fields are found in this document. Not all of these fields may require\n   *  termvectors to be stored, so the number of calls to\n   *  <code>openField</code> is less or equal to this number.\n   */\n  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createFile(segment + TVX_EXTENSION);\n    tvx.writeInt(FORMAT_VERSION);\n    tvd = directory.createFile(segment + TVD_EXTENSION);\n    tvd.writeInt(FORMAT_VERSION);\n    tvf = directory.createFile(segment + TVF_EXTENSION);\n    tvf.writeInt(FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n    fields = new Vector(fieldInfos.size());\n    terms = new Vector();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["11764865fb318bf86302eab36bdf9cd00c50c110"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  /** Create term vectors writer for the specified segment in specified\n   *  directory.  A new TermVectorsWriter should be created for each\n   *  segment. The parameter <code>maxFields</code> indicates how many total\n   *  fields are found in this document. Not all of these fields may require\n   *  termvectors to be stored, so the number of calls to\n   *  <code>openField</code> is less or equal to this number.\n   */\n  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + TVX_EXTENSION);\n    tvx.writeInt(FORMAT_VERSION);\n    tvd = directory.createOutput(segment + TVD_EXTENSION);\n    tvd.writeInt(FORMAT_VERSION);\n    tvf = directory.createOutput(segment + TVF_EXTENSION);\n    tvf.writeInt(FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n    fields = new Vector(fieldInfos.size());\n    terms = new Vector();\n  }\n\n","sourceOld":"  /** Create term vectors writer for the specified segment in specified\n   *  directory.  A new TermVectorsWriter should be created for each\n   *  segment. The parameter <code>maxFields</code> indicates how many total\n   *  fields are found in this document. Not all of these fields may require\n   *  termvectors to be stored, so the number of calls to\n   *  <code>openField</code> is less or equal to this number.\n   */\n  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createFile(segment + TVX_EXTENSION);\n    tvx.writeInt(FORMAT_VERSION);\n    tvd = directory.createFile(segment + TVD_EXTENSION);\n    tvd.writeInt(FORMAT_VERSION);\n    tvf = directory.createFile(segment + TVF_EXTENSION);\n    tvf.writeInt(FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n    fields = new Vector(fieldInfos.size());\n    terms = new Vector();\n  }\n\n","bugFix":null,"bugIntro":["11764865fb318bf86302eab36bdf9cd00c50c110"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + TVX_EXTENSION);\n    tvx.writeInt(FORMAT_VERSION);\n    tvd = directory.createOutput(segment + TVD_EXTENSION);\n    tvd.writeInt(FORMAT_VERSION);\n    tvf = directory.createOutput(segment + TVF_EXTENSION);\n    tvf.writeInt(FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n    fields = new Vector(fieldInfos.size());\n    terms = new Vector();\n  }\n\n","sourceOld":"  /** Create term vectors writer for the specified segment in specified\n   *  directory.  A new TermVectorsWriter should be created for each\n   *  segment. The parameter <code>maxFields</code> indicates how many total\n   *  fields are found in this document. Not all of these fields may require\n   *  termvectors to be stored, so the number of calls to\n   *  <code>openField</code> is less or equal to this number.\n   */\n  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + TVX_EXTENSION);\n    tvx.writeInt(FORMAT_VERSION);\n    tvd = directory.createOutput(segment + TVD_EXTENSION);\n    tvd.writeInt(FORMAT_VERSION);\n    tvf = directory.createOutput(segment + TVF_EXTENSION);\n    tvf.writeInt(FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n    fields = new Vector(fieldInfos.size());\n    terms = new Vector();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"11764865fb318bf86302eab36bdf9cd00c50c110","date":1190109214,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n    tvx.writeInt(TermVectorsReader.FORMAT_VERSION);\n    tvd = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n    tvd.writeInt(TermVectorsReader.FORMAT_VERSION);\n    tvf = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n    tvf.writeInt(TermVectorsReader.FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + TVX_EXTENSION);\n    tvx.writeInt(FORMAT_VERSION);\n    tvd = directory.createOutput(segment + TVD_EXTENSION);\n    tvd.writeInt(FORMAT_VERSION);\n    tvf = directory.createOutput(segment + TVF_EXTENSION);\n    tvf.writeInt(FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n    fields = new Vector(fieldInfos.size());\n    terms = new Vector();\n  }\n\n","bugFix":["dda77265180d41bf85c84c995e25eda7b8e1b74d","770281b8a8459cafcdd2354b6a06078fea2d83c9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33","date":1201260752,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n    tvx.writeInt(TermVectorsReader.FORMAT_VERSION2);\n    tvd = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n    tvd.writeInt(TermVectorsReader.FORMAT_VERSION2);\n    tvf = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n    tvf.writeInt(TermVectorsReader.FORMAT_VERSION2);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n    tvx.writeInt(TermVectorsReader.FORMAT_VERSION);\n    tvd = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n    tvd.writeInt(TermVectorsReader.FORMAT_VERSION);\n    tvf = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n    tvf.writeInt(TermVectorsReader.FORMAT_VERSION);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n    tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvd = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n    tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvf = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n    tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n    tvx.writeInt(TermVectorsReader.FORMAT_VERSION2);\n    tvd = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n    tvd.writeInt(TermVectorsReader.FORMAT_VERSION2);\n    tvf = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n    tvf.writeInt(TermVectorsReader.FORMAT_VERSION2);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"775efee7f959e0dd3df7960b93767d9e00b78751","date":1267203159,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_INDEX_EXTENSION));\n    tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n    tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_FIELDS_EXTENSION));\n    tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n    tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvd = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n    tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvf = directory.createOutput(segment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n    tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_INDEX_EXTENSION));\n    tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n    tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_FIELDS_EXTENSION));\n    tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos)\n    throws IOException {\n    // Open files for TermVector storage\n    tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_INDEX_EXTENSION));\n    tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n    tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n    tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_FIELDS_EXTENSION));\n    tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["11764865fb318bf86302eab36bdf9cd00c50c110"],"775efee7f959e0dd3df7960b93767d9e00b78751":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"11764865fb318bf86302eab36bdf9cd00c50c110":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["775efee7f959e0dd3df7960b93767d9e00b78751"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"775efee7f959e0dd3df7960b93767d9e00b78751":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"11764865fb318bf86302eab36bdf9cd00c50c110":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["775efee7f959e0dd3df7960b93767d9e00b78751"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["11764865fb318bf86302eab36bdf9cd00c50c110"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}