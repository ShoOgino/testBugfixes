{"path":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        if (payload != null) {\n          throw new UnsupportedOperationException(\"can't handle payloads\");\n        }\n        current.positions[posUpto++] = position;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7740a3e0858e88aaf6b09efe52e35c04a0d717f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7740a3e0858e88aaf6b09efe52e35c04a0d717f7","date":1286877329,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        current.positions[posUpto] = position;\n        if (payload != null && payload.length > 0) {\n          if (current.payloads == null) {\n            current.payloads = new byte[current.positions.length][];\n          }\n          byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n          System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n        }\n        posUpto++;\n      }\n\n","sourceOld":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        if (payload != null) {\n          throw new UnsupportedOperationException(\"can't handle payloads\");\n        }\n        current.positions[posUpto++] = position;\n      }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        current.positions[posUpto] = position;\n        if (payload != null && payload.length > 0) {\n          if (current.payloads == null) {\n            current.payloads = new byte[current.positions.length][];\n          }\n          byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n          System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n        }\n        posUpto++;\n      }\n\n","sourceOld":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        if (payload != null) {\n          throw new UnsupportedOperationException(\"can't handle payloads\");\n        }\n        current.positions[posUpto++] = position;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        current.positions[posUpto] = position;\n        if (payload != null && payload.length > 0) {\n          if (current.payloads == null) {\n            current.payloads = new byte[current.positions.length][];\n          }\n          byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n          System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n        }\n        posUpto++;\n      }\n\n","sourceOld":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        if (payload != null) {\n          throw new UnsupportedOperationException(\"can't handle payloads\");\n        }\n        current.positions[posUpto++] = position;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.RAMOnlyCodec.RAMPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":null,"sourceOld":"      @Override\n      public void addPosition(int position, BytesRef payload) {\n        current.positions[posUpto] = position;\n        if (payload != null && payload.length > 0) {\n          if (current.payloads == null) {\n            current.payloads = new byte[current.positions.length][];\n          }\n          byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n          System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n        }\n        posUpto++;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["7740a3e0858e88aaf6b09efe52e35c04a0d717f7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","7740a3e0858e88aaf6b09efe52e35c04a0d717f7"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","7740a3e0858e88aaf6b09efe52e35c04a0d717f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"7740a3e0858e88aaf6b09efe52e35c04a0d717f7":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","7740a3e0858e88aaf6b09efe52e35c04a0d717f7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"7740a3e0858e88aaf6b09efe52e35c04a0d717f7":["7b91922b55d15444d554721b352861d028eb8278","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}