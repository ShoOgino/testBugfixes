{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","commits":[{"id":"39d51e9acac1e629cffe47855e85dc6dedc4754d","date":1305711497,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","date":1308670974,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, indexOptions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39d51e9acac1e629cffe47855e85dc6dedc4754d"],"39d51e9acac1e629cffe47855e85dc6dedc4754d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["2e8d7ba2175f47e280231533f7d3016249cea88b","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["2553b00f699380c64959ccb27991289aae87be2e"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"39d51e9acac1e629cffe47855e85dc6dedc4754d":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","39d51e9acac1e629cffe47855e85dc6dedc4754d"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}