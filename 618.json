{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","commits":[{"id":"0ceb5bb30e401cb218b31197b1a9aa47e77cda17","date":1336330521,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"/dev/null","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      assertHits(new FunctionQuery(\n          new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"))),\n          new float[] { 0.5945349f, 0.5945349f });\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a701a7aab388afa1412a3dc23b4115c321f478c4","date":1413486320,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 0.5945349f, 0.5945349f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      assertHits(new FunctionQuery(\n          new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"))),\n          new float[] { 0.5945349f, 0.5945349f });\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","bugFix":null,"bugIntro":["6e75448368ba628d73e9967b45e29c40bbfe39fa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 0.5945349f, 0.5945349f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      assertHits(new FunctionQuery(\n          new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"))),\n          new float[] { 0.5945349f, 0.5945349f });\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"485545da3b4429d6f138b4baac573a97820ee93b","date":1433876557,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity(true);\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 0.5945349f, 0.5945349f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 0.5945349f, 0.5945349f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e75448368ba628d73e9967b45e29c40bbfe39fa","date":1441768575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity(true);\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 1.0f, 1.0f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity(true);\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 0.5945349f, 0.5945349f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","bugFix":["a701a7aab388afa1412a3dc23b4115c321f478c4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity(true);\n    try {\n      searcher.setSimilarity(new ClassicSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 1.0f, 1.0f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity(true);\n    try {\n      searcher.setSimilarity(new DefaultSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 1.0f, 1.0f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new ClassicSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 1.0f, 1.0f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity(true);\n    try {\n      searcher.setSimilarity(new ClassicSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 1.0f, 1.0f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testIDF().mjava","sourceNew":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new ClassicSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 1.0f, 1.0f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","sourceOld":"  public void testIDF() throws Exception {\n    Similarity saved = searcher.getSimilarity(true);\n    try {\n      searcher.setSimilarity(new ClassicSimilarity());\n      ValueSource vs = new IDFValueSource(\"bogus\", \"bogus\", \"text\", new BytesRef(\"test\"));\n      assertHits(new FunctionQuery(vs), new float[] { 1.0f, 1.0f });\n      assertAllExist(vs);\n    } finally {\n      searcher.setSimilarity(saved);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["81d0720146de53dd3a4a023d2a3d1089d86d748d","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"0ceb5bb30e401cb218b31197b1a9aa47e77cda17":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17","a701a7aab388afa1412a3dc23b4115c321f478c4"],"6e75448368ba628d73e9967b45e29c40bbfe39fa":["485545da3b4429d6f138b4baac573a97820ee93b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"485545da3b4429d6f138b4baac573a97820ee93b":["a701a7aab388afa1412a3dc23b4115c321f478c4"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["6e75448368ba628d73e9967b45e29c40bbfe39fa"],"a701a7aab388afa1412a3dc23b4115c321f478c4":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"0ceb5bb30e401cb218b31197b1a9aa47e77cda17":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","a701a7aab388afa1412a3dc23b4115c321f478c4"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17"],"6e75448368ba628d73e9967b45e29c40bbfe39fa":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"485545da3b4429d6f138b4baac573a97820ee93b":["6e75448368ba628d73e9967b45e29c40bbfe39fa"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"a701a7aab388afa1412a3dc23b4115c321f478c4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","485545da3b4429d6f138b4baac573a97820ee93b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}