{"path":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","commits":[{"id":"2b6f36bb733c575dd04fdfa785127ebf82b0033f","date":1497502741,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    ensureOpen();\n    return fields.terms(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    ensureOpen();\n    return fields.terms(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    ensureOpen();\n    return fields.terms(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7","date":1538404752,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    ensureOpen();\n    try {\n      return cachedTerms.computeIfAbsent(field, f -> {\n        try {\n          return MultiFields.getTerms(in, f);\n        } catch (IOException e) { // yuck!  ...sigh... checked exceptions with built-in lambdas are a pain\n          throw new RuntimeException(\"unwrapMe\", e);\n        }\n      });\n    } catch (RuntimeException e) {\n      if (e.getMessage().equals(\"unwrapMe\") && e.getCause() instanceof IOException) {\n        throw (IOException) e.getCause();\n      }\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    ensureOpen();\n    return fields.terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    ensureOpen();\n    try {\n      return cachedTerms.computeIfAbsent(field, f -> {\n        try {\n          return MultiTerms.getTerms(in, f);\n        } catch (IOException e) { // yuck!  ...sigh... checked exceptions with built-in lambdas are a pain\n          throw new RuntimeException(\"unwrapMe\", e);\n        }\n      });\n    } catch (RuntimeException e) {\n      if (e.getMessage().equals(\"unwrapMe\") && e.getCause() instanceof IOException) {\n        throw (IOException) e.getCause();\n      }\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    ensureOpen();\n    try {\n      return cachedTerms.computeIfAbsent(field, f -> {\n        try {\n          return MultiFields.getTerms(in, f);\n        } catch (IOException e) { // yuck!  ...sigh... checked exceptions with built-in lambdas are a pain\n          throw new RuntimeException(\"unwrapMe\", e);\n        }\n      });\n    } catch (RuntimeException e) {\n      if (e.getMessage().equals(\"unwrapMe\") && e.getCause() instanceof IOException) {\n        throw (IOException) e.getCause();\n      }\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2b6f36bb733c575dd04fdfa785127ebf82b0033f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"28288370235ed02234a64753cdbf0c6ec096304a":["9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}