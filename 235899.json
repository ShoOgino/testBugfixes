{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#sortsEqual(Bucket[],String,List[Pair[String,String]]).mjava","commits":[{"id":"36b1ce25b5b465615c00f409ce694664abbe7bd2","date":1481836328,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#sortsEqual(Bucket[],String,List[Pair[String,String]]).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean sortsEqual(Bucket[] buckets, String direction, List<Pair<String, String>> orders) {\n\n    if(buckets.length != orders.size()) {\n      return false;\n    }\n\n    for(int i=0; i< buckets.length; i++) {\n      Bucket bucket = buckets[i];\n      Pair<String, String> order = orders.get(i);\n      if(!bucket.toString().equals(order.getKey())) {\n        return false;\n      }\n\n      if(!order.getValue().toLowerCase(Locale.ROOT).contains(direction.toLowerCase(Locale.ROOT))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":1,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#sortsEqual(Bucket[],String,List[Pair[String,String]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#sortsEqual(Bucket[],String,List[SortItem],Map[String,String]).mjava","sourceNew":"  private static boolean sortsEqual(Bucket[] buckets, String direction, List<Pair<String, String>> orders) {\n\n    if(buckets.length != orders.size()) {\n      return false;\n    }\n\n    for(int i=0; i< buckets.length; i++) {\n      Bucket bucket = buckets[i];\n      Pair<String, String> order = orders.get(i);\n      if(!bucket.toString().equals(order.getKey())) {\n        return false;\n      }\n\n      if(!order.getValue().toLowerCase(Locale.ROOT).contains(direction.toLowerCase(Locale.ROOT))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  private static boolean sortsEqual(Bucket[] buckets, String direction, List<SortItem> sortItems, Map<String, String> reverseColumnAliases) {\n    if(buckets.length != sortItems.size()) {\n      return false;\n    }\n\n    for(int i=0; i< buckets.length; i++) {\n      Bucket bucket = buckets[i];\n      SortItem sortItem = sortItems.get(i);\n      if(!bucket.toString().equals(getSortField(sortItem, reverseColumnAliases))) {\n        return false;\n      }\n\n\n      if(!sortItem.getOrdering().toString().toLowerCase(Locale.ROOT).contains(direction.toLowerCase(Locale.ROOT))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","36b1ce25b5b465615c00f409ce694664abbe7bd2"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","36b1ce25b5b465615c00f409ce694664abbe7bd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}