{"path":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","commits":[{"id":"7e840df255b2fee55c459640e6cc2cd0ce8d8784","date":1180135387,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","pathOld":"/dev/null","sourceNew":"\tpublic int hashCode()\r\n\t{\r\n\t\tint hash=9;\r\n\t\tfor (Iterator iter = termsList.iterator(); iter.hasNext();)\r\n\t\t{\r\n\t\t\tTerm term = (Term) iter.next();\r\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86c487a0031f30e4a08cfb3d4ec49266d772f957","date":1205881260,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","sourceNew":"\tpublic int hashCode()\r\n\t{\r\n\t\tint hash=9;\r\n\t\tfor (Iterator iter = terms.iterator(); iter.hasNext();)\r\n\t\t{\r\n\t\t\tTerm term = (Term) iter.next();\r\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\n","sourceOld":"\tpublic int hashCode()\r\n\t{\r\n\t\tint hash=9;\r\n\t\tfor (Iterator iter = termsList.iterator(); iter.hasNext();)\r\n\t\t{\r\n\t\t\tTerm term = (Term) iter.next();\r\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","sourceNew":"\tpublic int hashCode()\n\t{\n\t\tint hash=9;\n\t\tfor (Iterator iter = terms.iterator(); iter.hasNext();)\n\t\t{\n\t\t\tTerm term = (Term) iter.next();\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\n\t\t}\n\t\treturn hash;\n\t}\n\n","sourceOld":"\tpublic int hashCode()\r\n\t{\r\n\t\tint hash=9;\r\n\t\tfor (Iterator iter = terms.iterator(); iter.hasNext();)\r\n\t\t{\r\n\t\t\tTerm term = (Term) iter.next();\r\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","sourceNew":"\t@Override\n\tpublic int hashCode()\n\t{\n\t\tint hash=9;\n\t\tfor (Iterator iter = terms.iterator(); iter.hasNext();)\n\t\t{\n\t\t\tTerm term = (Term) iter.next();\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\n\t\t}\n\t\treturn hash;\n\t}\n\n","sourceOld":"\tpublic int hashCode()\n\t{\n\t\tint hash=9;\n\t\tfor (Iterator iter = terms.iterator(); iter.hasNext();)\n\t\t{\n\t\t\tTerm term = (Term) iter.next();\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\n\t\t}\n\t\treturn hash;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60cdc0e643184821eb066795a8791cd82559f46e","date":1257941914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","sourceNew":"\t@Override\n\tpublic int hashCode()\n\t{\n\t\tint hash=9;\n\t\tfor (Iterator<Term> iter = terms.iterator(); iter.hasNext();)\n\t\t{\n\t\t\tTerm term = iter.next();\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\n\t\t}\n\t\treturn hash;\n\t}\n\n","sourceOld":"\t@Override\n\tpublic int hashCode()\n\t{\n\t\tint hash=9;\n\t\tfor (Iterator iter = terms.iterator(); iter.hasNext();)\n\t\t{\n\t\t\tTerm term = (Term) iter.next();\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\n\t\t}\n\t\treturn hash;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/TermsFilter#hashCode().mjava","sourceNew":"\t@Override\n\tpublic int hashCode()\n\t{\n\t\tint hash=9;\n\t\tfor (Iterator<Term> iter = terms.iterator(); iter.hasNext();)\n\t\t{\n\t\t\tTerm term = iter.next();\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\n\t\t}\n\t\treturn hash;\n\t}\n\n","sourceOld":"\t@Override\n\tpublic int hashCode()\n\t{\n\t\tint hash=9;\n\t\tfor (Iterator<Term> iter = terms.iterator(); iter.hasNext();)\n\t\t{\n\t\t\tTerm term = iter.next();\n\t\t\thash = 31 * hash + term.hashCode();\t\t\t\n\t\t}\n\t\treturn hash;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60cdc0e643184821eb066795a8791cd82559f46e":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"7e840df255b2fee55c459640e6cc2cd0ce8d8784":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["86c487a0031f30e4a08cfb3d4ec49266d772f957"],"86c487a0031f30e4a08cfb3d4ec49266d772f957":["7e840df255b2fee55c459640e6cc2cd0ce8d8784"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["60cdc0e643184821eb066795a8791cd82559f46e"]},"commit2Childs":{"60cdc0e643184821eb066795a8791cd82559f46e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7e840df255b2fee55c459640e6cc2cd0ce8d8784":["86c487a0031f30e4a08cfb3d4ec49266d772f957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e840df255b2fee55c459640e6cc2cd0ce8d8784"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["60cdc0e643184821eb066795a8791cd82559f46e"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"86c487a0031f30e4a08cfb3d4ec49266d772f957":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}