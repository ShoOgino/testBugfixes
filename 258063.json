{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,String).mjava","commits":[{"id":"7917a219001fa51c4289d6a8e1a98606995170b7","date":1376673362,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,File,String).mjava","sourceNew":"  public ConfigSolrXmlOld(Config config, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public ConfigSolrXmlOld(Config config, File configFile, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(configFile, originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(configFile, originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,File,String).mjava","sourceNew":"  public ConfigSolrXmlOld(Config config, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public ConfigSolrXmlOld(Config config, File configFile, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(configFile, originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(configFile, originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,String).mjava","pathOld":"/dev/null","sourceNew":"  public ConfigSolrXmlOld(Config config, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,String).mjava","sourceNew":"  public ConfigSolrXmlOld(Config config, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public ConfigSolrXmlOld(Config config, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#ConfigSolrXmlOld(Config,String).mjava","sourceNew":null,"sourceOld":"  public ConfigSolrXmlOld(Config config, String originalXML) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      initCoreList();\n      this.persistor = isPersistent() ? new SolrXMLCoresLocator(originalXML, this)\n                                      : new SolrXMLCoresLocator.NonPersistingLocator(originalXML, this);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["7917a219001fa51c4289d6a8e1a98606995170b7"],"7917a219001fa51c4289d6a8e1a98606995170b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","7917a219001fa51c4289d6a8e1a98606995170b7"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"7917a219001fa51c4289d6a8e1a98606995170b7":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","a877077e0a22a42eebce7d1052c58e97d3afb12d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}