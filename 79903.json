{"path":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","commits":[{"id":"33a8b1f99104f4144f210f5d068411c297cd7163","date":1287152748,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(TermsEnum,BytesRef,float).mjava","sourceNew":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        return true;\n      }\n\n","sourceOld":"      public boolean collect(TermsEnum termsEnum, BytesRef bytes, float boost) throws IOException {\n        termCount++;\n        if (termCount >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        pendingTerms.copyUsingLengthPrefix(bytes);\n        docVisitCount += termsEnum.docFreq();\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(TermsEnum,BytesRef,float).mjava","sourceNew":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        return true;\n      }\n\n","sourceOld":"      public boolean collect(TermsEnum termsEnum, BytesRef bytes, float boost) throws IOException {\n        termCount++;\n        if (termCount >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        pendingTerms.copyUsingLengthPrefix(bytes);\n        docVisitCount += termsEnum.docFreq();\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8143676b3cafe624f56b1b337c18311e145ab72","date":1287656578,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","sourceNew":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        return true;\n      }\n\n","sourceOld":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","sourceNew":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        return true;\n      }\n\n","sourceOld":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"744486748bc5bee772100e49230e5bca39bac99a","date":1289776426,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","sourceNew":null,"sourceOld":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.ConstantScoreAutoRewrite.CutOffTermCollector#collect(BytesRef).mjava","sourceNew":null,"sourceOld":"      @Override\n      public boolean collect(BytesRef bytes) throws IOException {\n        pendingTerms.add(bytes);\n        docVisitCount += termsEnum.docFreq();\n        if (pendingTerms.size() >= termCountLimit || docVisitCount >= docCountCutoff) {\n          hasCutOff = true;\n          return false;\n        }\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33a8b1f99104f4144f210f5d068411c297cd7163":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a8143676b3cafe624f56b1b337c18311e145ab72":["33a8b1f99104f4144f210f5d068411c297cd7163"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["b12d3e81e0f95a4527b5703953c503f71120ffcc","744486748bc5bee772100e49230e5bca39bac99a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","a8143676b3cafe624f56b1b337c18311e145ab72"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33a8b1f99104f4144f210f5d068411c297cd7163"],"744486748bc5bee772100e49230e5bca39bac99a":["a8143676b3cafe624f56b1b337c18311e145ab72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["744486748bc5bee772100e49230e5bca39bac99a"]},"commit2Childs":{"33a8b1f99104f4144f210f5d068411c297cd7163":["a8143676b3cafe624f56b1b337c18311e145ab72","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a8143676b3cafe624f56b1b337c18311e145ab72":["b12d3e81e0f95a4527b5703953c503f71120ffcc","744486748bc5bee772100e49230e5bca39bac99a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33a8b1f99104f4144f210f5d068411c297cd7163","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["b12d3e81e0f95a4527b5703953c503f71120ffcc"],"744486748bc5bee772100e49230e5bca39bac99a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}