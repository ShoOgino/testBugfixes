{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","commits":[{"id":"6108dae71b5018effc897a9669aa8a99133005e2","date":1264857193,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, flatQueries );\n    assertCollectionQueries( flatQueries, tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["94221e4190ec47a1ec4f0bd8f99b3648af295a06"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","sourceNew":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, flatQueries );\n    assertCollectionQueries( flatQueries, tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n  }\n\n","sourceOld":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, flatQueries );\n    assertCollectionQueries( flatQueries, tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6108dae71b5018effc897a9669aa8a99133005e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6108dae71b5018effc897a9669aa8a99133005e2"]},"commit2Childs":{"6108dae71b5018effc897a9669aa8a99133005e2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6108dae71b5018effc897a9669aa8a99133005e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}