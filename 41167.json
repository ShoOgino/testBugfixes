{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#testTermNonDefault().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#testTermNonDefault().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#testTermNonDefault().mjava","sourceNew":"  @Test\n  public void testTermNonDefault() {\n    Term termA = DrillDown.term(nonDefaultParams, new CategoryPath(\"a\"));\n    assertEquals(new Term(\"testing_facets_a\", \"a\"), termA);\n    \n    Term termB = DrillDown.term(nonDefaultParams, new CategoryPath(\"b\"));\n    assertEquals(new Term(\"testing_facets_b\", \"b\"), termB);\n  }\n\n","sourceOld":"  @Test\n  public void testTermNonDefault() {\n    Term termA = DrillDown.term(nonDefaultParams, new CategoryPath(\"a\"));\n    assertEquals(new Term(\"testing_facets_a\", \"a\"), termA);\n    \n    Term termB = DrillDown.term(nonDefaultParams, new CategoryPath(\"b\"));\n    assertEquals(new Term(\"testing_facets_b\", \"b\"), termB);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f793470bad5ce8422502e33eaae65fc6a3271bd2","date":1360479442,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/DrillDownQueryTest#testTermNonDefault().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#testTermNonDefault().mjava","sourceNew":"  @Test\n  public void testTermNonDefault() {\n    Term termA = DrillDownQuery.term(nonDefaultParams, new CategoryPath(\"a\"));\n    assertEquals(new Term(\"testing_facets_a\", \"a\"), termA);\n    \n    Term termB = DrillDownQuery.term(nonDefaultParams, new CategoryPath(\"b\"));\n    assertEquals(new Term(\"testing_facets_b\", \"b\"), termB);\n  }\n\n","sourceOld":"  @Test\n  public void testTermNonDefault() {\n    Term termA = DrillDown.term(nonDefaultParams, new CategoryPath(\"a\"));\n    assertEquals(new Term(\"testing_facets_a\", \"a\"), termA);\n    \n    Term termB = DrillDown.term(nonDefaultParams, new CategoryPath(\"b\"));\n    assertEquals(new Term(\"testing_facets_b\", \"b\"), termB);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f793470bad5ce8422502e33eaae65fc6a3271bd2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f793470bad5ce8422502e33eaae65fc6a3271bd2"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f793470bad5ce8422502e33eaae65fc6a3271bd2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f793470bad5ce8422502e33eaae65fc6a3271bd2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}