{"path":"src/java/org/apache/solr/schema/SpatialTileField#init(IndexSchema,Map[String,String]).mjava","commits":[{"id":"7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564","date":1262055526,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/SpatialTileField#init(IndexSchema,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    SolrParams p = new MapSolrParams(args);\n    start = p.getInt(START_LEVEL, DEFAULT_START_LEVEL);\n    end = p.getInt(END_LEVEL, DEFAULT_END_LEVEL);\n    if (end < start) {\n      //flip them around\n      int tmp = start;\n      start = end;\n      end = tmp;\n    }\n    args.remove(START_LEVEL);\n    args.remove(END_LEVEL);\n    projectorName = p.get(PROJECTOR_CLASS, SinusoidalProjector.class.getName());\n    super.init(schema, args);\n    tileDiff = (end - start) + 1;//add one since we are inclusive of the upper tier\n    createSuffixCache(tileDiff);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a3f3a9cb2b485a23c19f336256da8ec2ec5ad1d","date":1262087777,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/SpatialTileField#init(IndexSchema,Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/schema/SpatialTileField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    SolrParams p = new MapSolrParams(args);\n    start = p.getInt(START_LEVEL, DEFAULT_START_LEVEL);\n    end = p.getInt(END_LEVEL, DEFAULT_END_LEVEL);\n    if (end < start) {\n      //flip them around\n      int tmp = start;\n      start = end;\n      end = tmp;\n    }\n    args.remove(START_LEVEL);\n    args.remove(END_LEVEL);\n    projectorName = p.get(PROJECTOR_CLASS, SinusoidalProjector.class.getName());\n    args.remove(PROJECTOR_CLASS);\n    super.init(schema, args);\n    tileDiff = (end - start) + 1;//add one since we are inclusive of the upper tier\n    createSuffixCache(tileDiff);\n\n\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    SolrParams p = new MapSolrParams(args);\n    start = p.getInt(START_LEVEL, DEFAULT_START_LEVEL);\n    end = p.getInt(END_LEVEL, DEFAULT_END_LEVEL);\n    if (end < start) {\n      //flip them around\n      int tmp = start;\n      start = end;\n      end = tmp;\n    }\n    args.remove(START_LEVEL);\n    args.remove(END_LEVEL);\n    projectorName = p.get(PROJECTOR_CLASS, SinusoidalProjector.class.getName());\n    super.init(schema, args);\n    tileDiff = (end - start) + 1;//add one since we are inclusive of the upper tier\n    createSuffixCache(tileDiff);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/SpatialTileField#init(IndexSchema,Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/schema/SpatialTileField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    SolrParams p = new MapSolrParams(args);\n    start = p.getInt(START_LEVEL, DEFAULT_START_LEVEL);\n    end = p.getInt(END_LEVEL, DEFAULT_END_LEVEL);\n    if (end < start) {\n      //flip them around\n      int tmp = start;\n      start = end;\n      end = tmp;\n    }\n    args.remove(START_LEVEL);\n    args.remove(END_LEVEL);\n    projectorName = p.get(PROJECTOR_CLASS, SinusoidalProjector.class.getName());\n    args.remove(PROJECTOR_CLASS);\n    super.init(schema, args);\n    tileDiff = (end - start) + 1;//add one since we are inclusive of the upper tier\n    createSuffixCache(tileDiff);\n\n\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    SolrParams p = new MapSolrParams(args);\n    start = p.getInt(START_LEVEL, DEFAULT_START_LEVEL);\n    end = p.getInt(END_LEVEL, DEFAULT_END_LEVEL);\n    if (end < start) {\n      //flip them around\n      int tmp = start;\n      start = end;\n      end = tmp;\n    }\n    args.remove(START_LEVEL);\n    args.remove(END_LEVEL);\n    projectorName = p.get(PROJECTOR_CLASS, SinusoidalProjector.class.getName());\n    args.remove(PROJECTOR_CLASS);\n    super.init(schema, args);\n    tileDiff = (end - start) + 1;//add one since we are inclusive of the upper tier\n    createSuffixCache(tileDiff);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1a3f3a9cb2b485a23c19f336256da8ec2ec5ad1d"],"1a3f3a9cb2b485a23c19f336256da8ec2ec5ad1d":["7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564":["1a3f3a9cb2b485a23c19f336256da8ec2ec5ad1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"1a3f3a9cb2b485a23c19f336256da8ec2ec5ad1d":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}