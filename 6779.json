{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","commits":[{"id":"4b1110660886afcc62f57e9af901cd3f5dd294bc","date":1317830374,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", DefaultFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f1efe3edca215dd9891cb42af283fed96f792ca0","date":1320428891,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", DefaultFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", DefaultFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", DefaultStoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultStoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, DefaultStoredFieldsWriter.FORMAT_MINIMUM, DefaultStoredFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultStoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, DefaultStoredFieldsWriter.FORMAT_MINIMUM, DefaultStoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", DefaultFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["4b1110660886afcc62f57e9af901cd3f5dd294bc"],"06584e6e98d592b34e1329b384182f368d2025e8":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b1110660886afcc62f57e9af901cd3f5dd294bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06584e6e98d592b34e1329b384182f368d2025e8"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"06584e6e98d592b34e1329b384182f368d2025e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["06584e6e98d592b34e1329b384182f368d2025e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b1110660886afcc62f57e9af901cd3f5dd294bc"],"4b1110660886afcc62f57e9af901cd3f5dd294bc":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}