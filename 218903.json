{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","commits":[{"id":"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","date":1397789149,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets the next cell that is >= {@code fromCell}, compared using non-leaf bytes. If it returns null then\n   * the iterator is exhausted.\n   */\n  public Cell nextFrom(Cell fromCell) {\n    while (true) {\n      if (!hasNext())\n        return null;\n      Cell c = next();//will update thisCell\n      if (c.compareToNoLeaf(fromCell) >= 0) {\n        return c;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","sourceNew":"  /**\n   * Gets the next cell that is &gt;= {@code fromCell}, compared using non-leaf bytes. If it returns null then\n   * the iterator is exhausted.\n   */\n  public Cell nextFrom(Cell fromCell) {\n    while (true) {\n      if (!hasNext())\n        return null;\n      Cell c = next();//will update thisCell\n      if (c.compareToNoLeaf(fromCell) >= 0) {\n        return c;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Gets the next cell that is >= {@code fromCell}, compared using non-leaf bytes. If it returns null then\n   * the iterator is exhausted.\n   */\n  public Cell nextFrom(Cell fromCell) {\n    while (true) {\n      if (!hasNext())\n        return null;\n      Cell c = next();//will update thisCell\n      if (c.compareToNoLeaf(fromCell) >= 0) {\n        return c;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","sourceNew":"  /**\n   * Gets the next cell that is &gt;= {@code fromCell}, compared using non-leaf bytes. If it returns null then\n   * the iterator is exhausted.\n   */\n  public Cell nextFrom(Cell fromCell) {\n    while (true) {\n      if (!hasNext())\n        return null;\n      Cell c = next();//will update thisCell\n      if (c.compareToNoLeaf(fromCell) >= 0) {\n        return c;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Gets the next cell that is &gt;= {@code fromCell}, compared using non-leaf bytes. If it returns null then\n   * the iterator is exhausted.\n   */\n  public Cell nextFrom(Cell fromCell) {\n    while (true) {\n      if (!hasNext())\n        return null;\n      Cell c = next();//will update thisCell\n      if (c.compareToNoLeaf(fromCell) >= 0) {\n        return c;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/CellIterator#nextFrom(Cell).mjava","sourceNew":"  /**\n   * Gets the next cell that is &gt;= {@code fromCell}, compared using non-leaf bytes. If it returns null then\n   * the iterator is exhausted.\n   */\n  public Cell nextFrom(Cell fromCell) {\n    while (true) {\n      if (!hasNext())\n        return null;\n      Cell c = next();//will update thisCell\n      if (c.compareToNoLeaf(fromCell) >= 0) {\n        return c;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Gets the next cell that is &gt;= {@code fromCell}, compared using non-leaf bytes. If it returns null then\n   * the iterator is exhausted.\n   */\n  public Cell nextFrom(Cell fromCell) {\n    while (true) {\n      if (!hasNext())\n        return null;\n      Cell c = next();//will update thisCell\n      if (c.compareToNoLeaf(fromCell) >= 0) {\n        return c;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"af2638813028b254a88b418ebeafb541afb49653":["b1eb427f2c6beed80d1724555fc1db003ccf3030","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}