{"path":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","commits":[{"id":"0c81907bd971f786e378654d32b80da32b0e950d","date":1578330742,"type":1,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8381df1a98f2a399bf06d747fc8cea1b2a17ae38","date":1578526395,"type":5,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8381df1a98f2a399bf06d747fc8cea1b2a17ae38","date":1578526395,"type":6,"author":"Houston Putman","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da93834e39ce341a13e42b611d0a83bd3114bba","date":1578567362,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da93834e39ce341a13e42b611d0a83bd3114bba","date":1578567362,"type":6,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/CollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c7ba457c7f2595139254fab54362be336c5c355","date":1579734055,"type":1,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8381df1a98f2a399bf06d747fc8cea1b2a17ae38":["0c81907bd971f786e378654d32b80da32b0e950d"],"0c81907bd971f786e378654d32b80da32b0e950d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1da93834e39ce341a13e42b611d0a83bd3114bba":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","8381df1a98f2a399bf06d747fc8cea1b2a17ae38"],"5c7ba457c7f2595139254fab54362be336c5c355":["8381df1a98f2a399bf06d747fc8cea1b2a17ae38"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c81907bd971f786e378654d32b80da32b0e950d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c7ba457c7f2595139254fab54362be336c5c355"]},"commit2Childs":{"8381df1a98f2a399bf06d747fc8cea1b2a17ae38":["1da93834e39ce341a13e42b611d0a83bd3114bba","5c7ba457c7f2595139254fab54362be336c5c355"],"0c81907bd971f786e378654d32b80da32b0e950d":["8381df1a98f2a399bf06d747fc8cea1b2a17ae38","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c81907bd971f786e378654d32b80da32b0e950d","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"1da93834e39ce341a13e42b611d0a83bd3114bba":[],"5c7ba457c7f2595139254fab54362be336c5c355":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["1da93834e39ce341a13e42b611d0a83bd3114bba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1da93834e39ce341a13e42b611d0a83bd3114bba","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}