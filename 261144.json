{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"d64148a458eb3ddf4d1bb1f1753cb9af194e1707","date":1247144811,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"    public TokenStream tokenStream(String fieldName, Reader reader) {\n      return new TokenStream(){\n        int p = 0;\n        public Token next( Token reusableToken ) throws IOException {\n          if( p >= tokens.length ) return null;\n          return tokens[p++];\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    public TokenStream tokenStream(String fieldName, Reader reader) {\n      final Token reusableToken = new Token();\n      \n      TokenStream.setOnlyUseNewAPI(true);\n      TokenStream ts = new TokenStream(){\n        int p = 0;\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      ts.addAttributeImpl(reusableToken);\n      return ts;\n    }\n\n","sourceOld":"    public TokenStream tokenStream(String fieldName, Reader reader) {\n      return new TokenStream(){\n        int p = 0;\n        public Token next( Token reusableToken ) throws IOException {\n          if( p >= tokens.length ) return null;\n          return tokens[p++];\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4819d0d39bf17025f344afc085c1356e85075d76","date":1254404986,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","sourceOld":"    public TokenStream tokenStream(String fieldName, Reader reader) {\n      final Token reusableToken = new Token();\n      \n      TokenStream.setOnlyUseNewAPI(true);\n      TokenStream ts = new TokenStream(){\n        int p = 0;\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      ts.addAttributeImpl(reusableToken);\n      return ts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","sourceOld":"    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4819d0d39bf17025f344afc085c1356e85075d76":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["4819d0d39bf17025f344afc085c1356e85075d76"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"4819d0d39bf17025f344afc085c1356e85075d76":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["4819d0d39bf17025f344afc085c1356e85075d76"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}