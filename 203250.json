{"path":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  public final void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else \n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"823c992e3b766654f2a25f9b125dc5e849b4775e","date":1028137634,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","sourceNew":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public final void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else \n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":"  public final void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else \n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03ae70812bc33b0270c1366378b2c2da95fe86a6","date":1036648540,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","sourceNew":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public final void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public final void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else \n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","sourceNew":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public final void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e971ba25509e21a130fef61f0687be0446ca27a0":["03ae70812bc33b0270c1366378b2c2da95fe86a6"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"03ae70812bc33b0270c1366378b2c2da95fe86a6":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["03ae70812bc33b0270c1366378b2c2da95fe86a6"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"e971ba25509e21a130fef61f0687be0446ca27a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"03ae70812bc33b0270c1366378b2c2da95fe86a6":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}