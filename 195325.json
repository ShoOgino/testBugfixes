{"path":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","sourceNew":"    public PhraseWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term, true);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","sourceOld":"    public PhraseWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term, true);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","sourceNew":"    public PhraseWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","sourceOld":"    public PhraseWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term, true);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","sourceNew":"    public PhraseWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","sourceOld":"    public PhraseWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term, true);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#PhraseWeight(IndexSearcher).mjava","sourceNew":"    public PhraseWeight(IndexSearcher searcher, boolean needsScores)\n      throws IOException {\n      super(PhraseQuery.this);\n      this.needsScores = needsScores;\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","sourceOld":"    public PhraseWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      final IndexReaderContext context = searcher.getTopReaderContext();\n      states = new TermContext[terms.size()];\n      TermStatistics termStats[] = new TermStatistics[terms.size()];\n      for (int i = 0; i < terms.size(); i++) {\n        final Term term = terms.get(i);\n        states[i] = TermContext.build(context, term);\n        termStats[i] = searcher.termStatistics(term, states[i]);\n      }\n      stats = similarity.computeWeight(getBoost(), searcher.collectionStatistics(field), termStats);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb17639909a369c1e64866842e5c213440acc17e"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["fb17639909a369c1e64866842e5c213440acc17e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}