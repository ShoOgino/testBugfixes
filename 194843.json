{"path":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#getStoredHighlightFieldNames().mjava","commits":[{"id":"63a9344cff6a72bc4c1ef080c69e10ad0635b811","date":1490410892,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : searcher.getFieldInfos()) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = searcher.getSchema().getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : fieldInfos) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de548de3ce5405595899f548152d4b93ac9eb9cc","date":1490594650,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : searcher.getFieldInfos()) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = searcher.getSchema().getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : fieldInfos) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de548de3ce5405595899f548152d4b93ac9eb9cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"63a9344cff6a72bc4c1ef080c69e10ad0635b811":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["63a9344cff6a72bc4c1ef080c69e10ad0635b811"]},"commit2Childs":{"de548de3ce5405595899f548152d4b93ac9eb9cc":[],"63a9344cff6a72bc4c1ef080c69e10ad0635b811":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["de548de3ce5405595899f548152d4b93ac9eb9cc","63a9344cff6a72bc4c1ef080c69e10ad0635b811"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de548de3ce5405595899f548152d4b93ac9eb9cc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}