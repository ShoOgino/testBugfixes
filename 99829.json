{"path":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","commits":[{"id":"0ad31de9d3b830bc174d4c41df9f80f4cac82576","date":1328107867,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) throws IOException\n  {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","sourceNew":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","sourceOld":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) throws IOException\n  {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","bugFix":["0ad31de9d3b830bc174d4c41df9f80f4cac82576"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","sourceNew":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","sourceOld":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) throws IOException\n  {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","sourceNew":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","sourceOld":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#updateCommit(CommitUpdateCommand,SolrParams).mjava","sourceNew":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","sourceOld":"  /**\n   * Modify UpdateCommand based on request parameters\n   */\n  public static void updateCommit(CommitUpdateCommand cmd, SolrParams params) {\n    if( params == null ) return;\n\n    cmd.openSearcher = params.getBool( UpdateParams.OPEN_SEARCHER, cmd.openSearcher );\n    cmd.waitSearcher = params.getBool( UpdateParams.WAIT_SEARCHER, cmd.waitSearcher );\n    cmd.softCommit = params.getBool( UpdateParams.SOFT_COMMIT, cmd.softCommit );\n    cmd.expungeDeletes = params.getBool( UpdateParams.EXPUNGE_DELETES, cmd.expungeDeletes );\n    cmd.maxOptimizeSegments = params.getInt( UpdateParams.MAX_OPTIMIZE_SEGMENTS, cmd.maxOptimizeSegments );\n    cmd.prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   cmd.prepareCommit );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","19275ba31e621f6da1b83bf13af75233876fd3d4"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["0ad31de9d3b830bc174d4c41df9f80f4cac82576","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"0ad31de9d3b830bc174d4c41df9f80f4cac82576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["0ad31de9d3b830bc174d4c41df9f80f4cac82576"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"0ad31de9d3b830bc174d4c41df9f80f4cac82576":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad31de9d3b830bc174d4c41df9f80f4cac82576"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fe33227f6805edab2036cbb80645cc4e2d1fa424","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}