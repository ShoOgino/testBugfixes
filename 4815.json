{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","commits":[{"id":"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07","date":1270909388,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"lucene/contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new WhitespaceAnalyzer(Version.LUCENE_CURRENT)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new WhitespaceAnalyzer(Version.LUCENE_CURRENT)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new WhitespaceAnalyzer(Version.LUCENE_CURRENT)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new MockRAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new MockRAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":null,"sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"53a31399f2471493d67b19a95c028a74e0113b6a":["a05409176bd65129d67a785ee70e881e238a9aef"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a05409176bd65129d67a785ee70e881e238a9aef","53a31399f2471493d67b19a95c028a74e0113b6a"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"d572389229127c297dd1fa5ce4758e1cec41e799":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","53a31399f2471493d67b19a95c028a74e0113b6a"],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["53a31399f2471493d67b19a95c028a74e0113b6a"]},"commit2Childs":{"53a31399f2471493d67b19a95c028a74e0113b6a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["a05409176bd65129d67a785ee70e881e238a9aef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"a05409176bd65129d67a785ee70e881e238a9aef":["53a31399f2471493d67b19a95c028a74e0113b6a","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"d572389229127c297dd1fa5ce4758e1cec41e799":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}