{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","commits":[{"id":"a0e288a70f2f9b7ebd3942d8608636fe6f825894","date":1412362601,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","pathOld":"/dev/null","sourceNew":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    try {\n      cfs.renameFile(testfile, \"bogus\");\n      fail(\"didn't get expected exception\");\n    } catch (UnsupportedOperationException expected) {\n      // expected UOE\n    }\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","pathOld":"/dev/null","sourceNew":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    try {\n      cfs.renameFile(testfile, \"bogus\");\n      fail(\"didn't get expected exception\");\n    } catch (UnsupportedOperationException expected) {\n      // expected UOE\n    }\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","sourceNew":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    try {\n      cfs.renameFile(testfile, \"bogus\");\n      fail(\"didn't get expected exception\");\n    } catch (UnsupportedOperationException expected) {\n      // expected UOE\n    }\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    try {\n      cfs.renameFile(testfile, \"bogus\");\n      fail(\"didn't get expected exception\");\n    } catch (UnsupportedOperationException expected) {\n      // expected UOE\n    }\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"75d243fa001c0783996918dbbe60b55cbaeeff46","date":1422502815,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","sourceNew":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptyList());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    try {\n      cfs.renameFile(testfile, \"bogus\");\n      fail(\"didn't get expected exception\");\n    } catch (UnsupportedOperationException expected) {\n      // expected UOE\n    }\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    try {\n      cfs.renameFile(testfile, \"bogus\");\n      fail(\"didn't get expected exception\");\n    } catch (UnsupportedOperationException expected) {\n      // expected UOE\n    }\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","sourceNew":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptyList());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    expectThrows(UnsupportedOperationException.class, () -> {\n      cfs.renameFile(testfile, \"bogus\");\n    });\n\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptyList());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    try {\n      cfs.renameFile(testfile, \"bogus\");\n      fail(\"didn't get expected exception\");\n    } catch (UnsupportedOperationException expected) {\n      // expected UOE\n    }\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":["a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"214256b5eeeaba88b8293b37d30460b462b19562","date":1468250146,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","sourceNew":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptyList());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    expectThrows(UnsupportedOperationException.class, () -> {\n      cfs.rename(testfile, \"bogus\");\n    });\n\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptyList());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    expectThrows(UnsupportedOperationException.class, () -> {\n      cfs.renameFile(testfile, \"bogus\");\n    });\n\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testRenameFileDisabled().mjava","sourceNew":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptyList());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    expectThrows(UnsupportedOperationException.class, () -> {\n      cfs.rename(testfile, \"bogus\");\n    });\n\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that cfs reader is read-only\n  public void testRenameFileDisabled() throws IOException {\n    final String testfile = \"_123.test\";\n\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(testfile, IOContext.DEFAULT);\n    out.writeInt(3);\n    out.close();\n \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptyList());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    expectThrows(UnsupportedOperationException.class, () -> {\n      cfs.renameFile(testfile, \"bogus\");\n    });\n\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"214256b5eeeaba88b8293b37d30460b462b19562":["05fe562aa248790944d43cdd478f512572835ba0"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["75d243fa001c0783996918dbbe60b55cbaeeff46"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["9bb9a29a5e71a90295f175df8919802993142c9a"],"75d243fa001c0783996918dbbe60b55cbaeeff46":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["05fe562aa248790944d43cdd478f512572835ba0","214256b5eeeaba88b8293b37d30460b462b19562"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["214256b5eeeaba88b8293b37d30460b462b19562"]},"commit2Childs":{"214256b5eeeaba88b8293b37d30460b462b19562":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9bb9a29a5e71a90295f175df8919802993142c9a":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9bb9a29a5e71a90295f175df8919802993142c9a","a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"05fe562aa248790944d43cdd478f512572835ba0":["214256b5eeeaba88b8293b37d30460b462b19562","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["75d243fa001c0783996918dbbe60b55cbaeeff46"],"75d243fa001c0783996918dbbe60b55cbaeeff46":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["9bb9a29a5e71a90295f175df8919802993142c9a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}