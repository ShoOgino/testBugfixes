{"path":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int).mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":2,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readBytes(byte[],int,int).mjava","sourceNew":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see OutputStream#writeBytes(byte[],int)\n   */\n  public abstract void readBytes(byte[] b, int offset, int len)\n    throws IOException;\n\n","sourceOld":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see OutputStream#writeBytes(byte[],int)\n   */\n  public final void readBytes(byte[] b, int offset, int len)\n       throws IOException {\n    if (len < BUFFER_SIZE) {\n      for (int i = 0; i < len; i++)\t\t  // read byte-by-byte\n\tb[i + offset] = (byte)readByte();\n    } else {\t\t\t\t\t  // read all-at-once\n      long start = getFilePointer();\n      seekInternal(start);\n      readInternal(b, offset, len);\n\n      bufferStart = start + len;\t\t  // adjust stream variables\n      bufferPosition = 0;\n      bufferLength = 0;\t\t\t\t  // trigger refill() on read\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int).mjava","sourceNew":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see IndexOutput#writeBytes(byte[],int)\n   */\n  public abstract void readBytes(byte[] b, int offset, int len)\n    throws IOException;\n\n","sourceOld":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see OutputStream#writeBytes(byte[],int)\n   */\n  public abstract void readBytes(byte[] b, int offset, int len)\n    throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int).mjava","sourceNew":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see IndexOutput#writeBytes(byte[],int)\n   */\n  public abstract void readBytes(byte[] b, int offset, int len)\n    throws IOException;\n\n","sourceOld":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see IndexOutput#writeBytes(byte[],int)\n   */\n  public abstract void readBytes(byte[] b, int offset, int len)\n    throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["e971ba25509e21a130fef61f0687be0446ca27a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["dda77265180d41bf85c84c995e25eda7b8e1b74d"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}