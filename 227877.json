{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermPositions#next().mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermPositions#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermPositions#next().mjava","sourceNew":"  @Override\n  public final boolean next() throws IOException {\n    // we remember to skip the remaining positions of the current\n    // document lazily\n    lazySkipProxCount += proxCount;\n    \n    if (super.next()) {               // run super\n      proxCount = freq;               // note frequency\n      position = 0;               // reset position\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean next() throws IOException {\n    // we remember to skip the remaining positions of the current\n    // document lazily\n    lazySkipProxCount += proxCount;\n    \n    if (super.next()) {               // run super\n      proxCount = freq;               // note frequency\n      position = 0;               // reset position\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/SegmentTermPositions#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermPositions#next().mjava","sourceNew":"  @Override\n  public final boolean next() throws IOException {\n    // we remember to skip the remaining positions of the current\n    // document lazily\n    lazySkipProxCount += proxCount;\n    \n    if (super.next()) {               // run super\n      proxCount = freq;               // note frequency\n      position = 0;               // reset position\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean next() throws IOException {\n    // we remember to skip the remaining positions of the current\n    // document lazily\n    lazySkipProxCount += proxCount;\n    \n    if (super.next()) {               // run super\n      proxCount = freq;               // note frequency\n      position = 0;               // reset position\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}