{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#characters(char[],int,int).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#characters(char[],int,int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#characters(char[],int,int).mjava","sourceNew":"  /**\n   * @see org.xml.sax.ContentHandler#characters(char[], int, int)\n   */\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void characters(char ch[], int start, int length) {\n    StringBuffer chars = new StringBuffer(length);\n    chars.append(ch, start, length);\n    String word = readToken(chars);\n    while (word != null) {\n      // System.out.println(\"\\\"\" + word + \"\\\"\");\n      switch (currElement) {\n        case ELEM_CLASSES:\n          consumer.addClass(word);\n          break;\n        case ELEM_EXCEPTIONS:\n          exception.add(word);\n          exception = normalizeException(exception);\n          consumer.addException(getExceptionWord(exception),\n              (ArrayList) exception.clone());\n          exception.clear();\n          break;\n        case ELEM_PATTERNS:\n          consumer.addPattern(getPattern(word), getInterletterValues(word));\n          break;\n      }\n      word = readToken(chars);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * @see org.xml.sax.ContentHandler#characters(char[], int, int)\n   */\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void characters(char ch[], int start, int length) {\n    StringBuffer chars = new StringBuffer(length);\n    chars.append(ch, start, length);\n    String word = readToken(chars);\n    while (word != null) {\n      // System.out.println(\"\\\"\" + word + \"\\\"\");\n      switch (currElement) {\n        case ELEM_CLASSES:\n          consumer.addClass(word);\n          break;\n        case ELEM_EXCEPTIONS:\n          exception.add(word);\n          exception = normalizeException(exception);\n          consumer.addException(getExceptionWord(exception),\n              (ArrayList) exception.clone());\n          exception.clear();\n          break;\n        case ELEM_PATTERNS:\n          consumer.addPattern(getPattern(word), getInterletterValues(word));\n          break;\n      }\n      word = readToken(chars);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#characters(char[],int,int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#characters(char[],int,int).mjava","sourceNew":"  /**\n   * @see org.xml.sax.ContentHandler#characters(char[], int, int)\n   */\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void characters(char ch[], int start, int length) {\n    StringBuffer chars = new StringBuffer(length);\n    chars.append(ch, start, length);\n    String word = readToken(chars);\n    while (word != null) {\n      // System.out.println(\"\\\"\" + word + \"\\\"\");\n      switch (currElement) {\n        case ELEM_CLASSES:\n          consumer.addClass(word);\n          break;\n        case ELEM_EXCEPTIONS:\n          exception.add(word);\n          exception = normalizeException(exception);\n          consumer.addException(getExceptionWord(exception),\n              (ArrayList) exception.clone());\n          exception.clear();\n          break;\n        case ELEM_PATTERNS:\n          consumer.addPattern(getPattern(word), getInterletterValues(word));\n          break;\n      }\n      word = readToken(chars);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * @see org.xml.sax.ContentHandler#characters(char[], int, int)\n   */\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void characters(char ch[], int start, int length) {\n    StringBuffer chars = new StringBuffer(length);\n    chars.append(ch, start, length);\n    String word = readToken(chars);\n    while (word != null) {\n      // System.out.println(\"\\\"\" + word + \"\\\"\");\n      switch (currElement) {\n        case ELEM_CLASSES:\n          consumer.addClass(word);\n          break;\n        case ELEM_EXCEPTIONS:\n          exception.add(word);\n          exception = normalizeException(exception);\n          consumer.addException(getExceptionWord(exception),\n              (ArrayList) exception.clone());\n          exception.clear();\n          break;\n        case ELEM_PATTERNS:\n          consumer.addPattern(getPattern(word), getInterletterValues(word));\n          break;\n      }\n      word = readToken(chars);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}