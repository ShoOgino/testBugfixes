{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","commits":[{"id":"66ad19eb69be5720d673695d38a1f5a0fed70c06","date":1366664507,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","pathOld":"/dev/null","sourceNew":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54e3893378c69acef0a7c85bd25c43aeea3249c4","date":1394442120,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","sourceNew":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n    scoresDocsOutOfOrder = in.scoresDocsOutOfOrder() || random.nextBoolean();\n  }\n\n","sourceOld":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","sourceNew":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n    scoresDocsOutOfOrder = in.scoresDocsOutOfOrder() || random.nextBoolean();\n  }\n\n","sourceOld":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","sourceNew":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n  }\n\n","sourceOld":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n    scoresDocsOutOfOrder = in.scoresDocsOutOfOrder() || random.nextBoolean();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","sourceNew":"  AssertingWeight(Random random, Weight in) {\n    super(in.getQuery());\n    this.random = random;\n    this.in = in;\n  }\n\n","sourceOld":"  AssertingWeight(Random random, Weight in) {\n    this.random = random;\n    this.in = in;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c","date":1433506692,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#AssertingWeight(Random,Weight).mjava","sourceNew":"  AssertingWeight(Random random, Weight in, boolean needsScores) {\n    super(in.getQuery());\n    this.random = random;\n    this.in = in;\n    this.needsScores = needsScores;\n  }\n\n","sourceOld":"  AssertingWeight(Random random, Weight in) {\n    super(in.getQuery());\n    this.random = random;\n    this.in = in;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fb17639909a369c1e64866842e5c213440acc17e":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["66ad19eb69be5720d673695d38a1f5a0fed70c06","54e3893378c69acef0a7c85bd25c43aeea3249c4"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["54e3893378c69acef0a7c85bd25c43aeea3249c4"],"54e3893378c69acef0a7c85bd25c43aeea3249c4":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["fb17639909a369c1e64866842e5c213440acc17e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"]},"commit2Childs":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","54e3893378c69acef0a7c85bd25c43aeea3249c4"],"fb17639909a369c1e64866842e5c213440acc17e":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":[],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"54e3893378c69acef0a7c85bd25c43aeea3249c4":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}