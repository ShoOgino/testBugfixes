{"path":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    ManagedResource res = null;\n    ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      res = createManagedResource(registry.registered.get(resourceId));\n      managed.put(resourceId, res);\n      log.info(\"Registered new managed resource {}\", resourceId);\n      \n      // attach this new resource to the Restlet router\n      Matcher resourceIdValidator = resourceIdRegex.matcher(resourceId);\n      boolean validated = resourceIdValidator.matches();\n      assert validated : \"managed resourceId '\" + resourceId\n                       + \"' should already be validated by registerManagedResource()\";\n      String routerPath = resourceIdValidator.group(1);      \n      String path = resourceIdValidator.group(2);\n      Router router = SCHEMA_BASE_PATH.equals(routerPath) ? schemaRouter : configRouter;\n      if (router != null) {\n        attachManagedResource(res, path, router);\n      }\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d35560135e6b3b2342722663a31f943d88fd79a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bdf16ebe435fc9daea90a73b8683ff001c6d3523","date":1409931231,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","sourceNew":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    ManagedResource res = null;\n    ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","sourceOld":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    ManagedResource res = null;\n    ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      res = createManagedResource(registry.registered.get(resourceId));\n      managed.put(resourceId, res);\n      log.info(\"Registered new managed resource {}\", resourceId);\n      \n      // attach this new resource to the Restlet router\n      Matcher resourceIdValidator = resourceIdRegex.matcher(resourceId);\n      boolean validated = resourceIdValidator.matches();\n      assert validated : \"managed resourceId '\" + resourceId\n                       + \"' should already be validated by registerManagedResource()\";\n      String routerPath = resourceIdValidator.group(1);      \n      String path = resourceIdValidator.group(2);\n      Router router = SCHEMA_BASE_PATH.equals(routerPath) ? schemaRouter : configRouter;\n      if (router != null) {\n        attachManagedResource(res, path, router);\n      }\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":["4d35560135e6b3b2342722663a31f943d88fd79a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d35560135e6b3b2342722663a31f943d88fd79a","date":1464016940,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","sourceNew":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    final ManagedResource res;\n    final ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      res = addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","sourceOld":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    ManagedResource res = null;\n    ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","bugFix":["bdf16ebe435fc9daea90a73b8683ff001c6d3523","afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e616cfbf284ecbd0f40b4b9e4196daa27e92abd5","date":1464066565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","sourceNew":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    final ManagedResource res;\n    final ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      res = addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","sourceOld":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    ManagedResource res = null;\n    ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","sourceNew":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    final ManagedResource res;\n    final ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      res = addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","sourceOld":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    ManagedResource res = null;\n    ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#addManagedResource(String,Class[#-extends-ManagedResource]).mjava","sourceNew":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance. Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    final ManagedResource res;\n    final ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      res = addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","sourceOld":"  /**\n   * If not already registered, registers the given {@link ManagedResource} subclass\n   * at the given resourceId, creates an instance, and attaches it to the appropriate\n   * Restlet router.  Returns the corresponding instance.\n   */\n  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {\n    final ManagedResource res;\n    final ManagedResourceRegistration existingReg = registry.registered.get(resourceId);\n    if (existingReg == null) {\n      registry.registerManagedResource(resourceId, clazz, null);\n      res = addRegisteredResource(registry.registered.get(resourceId));\n    } else {\n      res = getManagedResource(resourceId);\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["e616cfbf284ecbd0f40b4b9e4196daa27e92abd5"],"4d35560135e6b3b2342722663a31f943d88fd79a":["bdf16ebe435fc9daea90a73b8683ff001c6d3523"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e616cfbf284ecbd0f40b4b9e4196daa27e92abd5":["bdf16ebe435fc9daea90a73b8683ff001c6d3523","4d35560135e6b3b2342722663a31f943d88fd79a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bdf16ebe435fc9daea90a73b8683ff001c6d3523","e616cfbf284ecbd0f40b4b9e4196daa27e92abd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"bdf16ebe435fc9daea90a73b8683ff001c6d3523":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d35560135e6b3b2342722663a31f943d88fd79a":["e616cfbf284ecbd0f40b4b9e4196daa27e92abd5"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["bdf16ebe435fc9daea90a73b8683ff001c6d3523"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"e616cfbf284ecbd0f40b4b9e4196daa27e92abd5":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"bdf16ebe435fc9daea90a73b8683ff001c6d3523":["4d35560135e6b3b2342722663a31f943d88fd79a","e616cfbf284ecbd0f40b4b9e4196daa27e92abd5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}