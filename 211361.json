{"path":"lucene/src/java/org/apache/lucene/index/IndexReaderPool#release(SegmentReader,boolean).mjava","commits":[{"id":"5ef87af8c7bd0f8429622b83aa74202383f2e757","date":1280262785,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReaderPool#release(SegmentReader,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Release the segment reader (i.e. decRef it and close if there\n   * are no more references.\n   * @param sr\n   * @throws IOException\n   */\n  public synchronized void release(SegmentReader sr, boolean drop) throws IOException {\n\n    final boolean pooled = readerMap.containsKey(sr.getSegmentInfo());\n\n    assert !pooled | readerMap.get(sr.getSegmentInfo()) == sr;\n\n    // Drop caller's ref; for an external reader (not\n    // pooled), this decRef will close it\n    sr.decRef();\n\n    if (pooled && (drop || (!writer.poolReaders && sr.getRefCount() == 1))) {\n\n      // We are the last ref to this reader; since we're\n      // not pooling readers, we release it:\n      readerMap.remove(sr.getSegmentInfo());\n\n      // nocommit\n      //assert !sr.hasChanges || Thread.holdsLock(IndexWriter.this);\n\n      // Drop our ref -- this will commit any pending\n      // changes to the dir\n      boolean success = false;\n      try {\n        sr.close();\n        success = true;\n      } finally {\n        if (!success && sr.hasChanges) {\n          // Abandon the changes & retry closing:\n          sr.hasChanges = false;\n          try {\n            sr.close();\n          } catch (Throwable ignore) {\n            // Keep throwing original exception\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ca38aecd0204be91049ec782668f642a68d9935","date":1292975343,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReaderPool#release(SegmentReader,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Release the segment reader (i.e. decRef it and close if there\n   * are no more references.\n   * @param sr\n   * @throws IOException\n   */\n  public synchronized void release(SegmentReader sr, boolean drop) throws IOException {\n\n    final boolean pooled = readerMap.containsKey(sr.getSegmentInfo());\n\n    assert !pooled | readerMap.get(sr.getSegmentInfo()) == sr;\n\n    // Drop caller's ref; for an external reader (not\n    // pooled), this decRef will close it\n    sr.decRef();\n\n    if (pooled && (drop || (!writer.poolReaders && sr.getRefCount() == 1))) {\n\n      // We are the last ref to this reader; since we're\n      // not pooling readers, we release it:\n      readerMap.remove(sr.getSegmentInfo());\n\n      // nocommit\n      //assert !sr.hasChanges || Thread.holdsLock(IndexWriter.this);\n\n      // Drop our ref -- this will commit any pending\n      // changes to the dir\n      boolean success = false;\n      try {\n        sr.close();\n        success = true;\n      } finally {\n        if (!success && sr.hasChanges) {\n          // Abandon the changes & retry closing:\n          sr.hasChanges = false;\n          try {\n            sr.close();\n          } catch (Throwable ignore) {\n            // Keep throwing original exception\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ca38aecd0204be91049ec782668f642a68d9935":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1ca38aecd0204be91049ec782668f642a68d9935":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ef87af8c7bd0f8429622b83aa74202383f2e757","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["1ca38aecd0204be91049ec782668f642a68d9935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1ca38aecd0204be91049ec782668f642a68d9935","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}