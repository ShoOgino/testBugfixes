{"path":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","commits":[{"id":"925fce43f3bac029d912b9b7de03c789e258a333","date":1461612714,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testEdgeInsideness().mjava","sourceNew":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertFalse(poly.contains(-2, 2));  // bottom right corner: false\n    assertFalse(poly.contains(2, -2));  // top left corner: false\n    assertFalse(poly.contains(2,  2));  // top right corner: false\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertFalse(poly.contains(2, -1));  // top side: false\n    assertFalse(poly.contains(2, 0));   // top side: false\n    assertFalse(poly.contains(2, 1));   // top side: false\n    assertFalse(poly.contains(-1, 2));  // right side: false\n    assertFalse(poly.contains(0, 2));   // right side: false\n    assertFalse(poly.contains(1, 2));   // right side: false\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","sourceOld":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon poly = new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 });\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertFalse(poly.contains(-2, 2));  // bottom right corner: false\n    assertFalse(poly.contains(2, -2));  // top left corner: false\n    assertFalse(poly.contains(2,  2));  // top right corner: false\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertFalse(poly.contains(2, -1));  // top side: false\n    assertFalse(poly.contains(2, 0));   // top side: false\n    assertFalse(poly.contains(2, 1));   // top side: false\n    assertFalse(poly.contains(-1, 2));  // right side: false\n    assertFalse(poly.contains(0, 2));   // right side: false\n    assertFalse(poly.contains(1, 2));   // right side: false\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testEdgeInsideness().mjava","sourceNew":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertFalse(poly.contains(-2, 2));  // bottom right corner: false\n    assertFalse(poly.contains(2, -2));  // top left corner: false\n    assertFalse(poly.contains(2,  2));  // top right corner: false\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertFalse(poly.contains(2, -1));  // top side: false\n    assertFalse(poly.contains(2, 0));   // top side: false\n    assertFalse(poly.contains(2, 1));   // top side: false\n    assertFalse(poly.contains(-1, 2));  // right side: false\n    assertFalse(poly.contains(0, 2));   // right side: false\n    assertFalse(poly.contains(1, 2));   // right side: false\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","sourceOld":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon poly = new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 });\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertFalse(poly.contains(-2, 2));  // bottom right corner: false\n    assertFalse(poly.contains(2, -2));  // top left corner: false\n    assertFalse(poly.contains(2,  2));  // top right corner: false\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertFalse(poly.contains(2, -1));  // top side: false\n    assertFalse(poly.contains(2, 0));   // top side: false\n    assertFalse(poly.contains(2, 1));   // top side: false\n    assertFalse(poly.contains(-1, 2));  // right side: false\n    assertFalse(poly.contains(0, 2));   // right side: false\n    assertFalse(poly.contains(1, 2));   // right side: false\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc005279ab64cbf458ccef2ada610bc1a04b6139","date":1554992856,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","sourceNew":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertTrue(poly.contains(-2, 2));  // bottom right corner: true\n    assertTrue(poly.contains(2, -2));  // top left corner: true\n    assertTrue(poly.contains(2,  2));  // top right corner: true\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertTrue(poly.contains(2, -1));  // top side: true\n    assertTrue(poly.contains(2, 0));   // top side: true\n    assertTrue(poly.contains(2, 1));   // top side: true\n    assertTrue(poly.contains(-1, 2));  // right side: true\n    assertTrue(poly.contains(0, 2));   // right side: true\n    assertTrue(poly.contains(1, 2));   // right side: true\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","sourceOld":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertFalse(poly.contains(-2, 2));  // bottom right corner: false\n    assertFalse(poly.contains(2, -2));  // top left corner: false\n    assertFalse(poly.contains(2,  2));  // top right corner: false\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertFalse(poly.contains(2, -1));  // top side: false\n    assertFalse(poly.contains(2, 0));   // top side: false\n    assertFalse(poly.contains(2, 1));   // top side: false\n    assertFalse(poly.contains(-1, 2));  // right side: false\n    assertFalse(poly.contains(0, 2));   // right side: false\n    assertFalse(poly.contains(1, 2));   // right side: false\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","sourceNew":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Component2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertTrue(poly.contains(2, -2));  // bottom right corner: true\n    assertTrue(poly.contains(-2, 2));  // top left corner: true\n    assertTrue(poly.contains(2,  2));  // top right corner: true\n    assertTrue(poly.contains(-1, -2)); // bottom side: true\n    assertTrue(poly.contains(0, -2));  // bottom side: true\n    assertTrue(poly.contains(1, -2));  // bottom side: true\n    assertTrue(poly.contains(-1, 2));  // top side: true\n    assertTrue(poly.contains(0, 2));   // top side: true\n    assertTrue(poly.contains(1, 2));   // top side: true\n    assertTrue(poly.contains(2, -1));  // right side: true\n    assertTrue(poly.contains(2, 0));   // right side: true\n    assertTrue(poly.contains(2, 1));   // right side: true\n    assertTrue(poly.contains(-2, -1)); // left side: true\n    assertTrue(poly.contains(-2, 0));  // left side: true\n    assertTrue(poly.contains(-2, 1));  // left side: true\n  }\n\n","sourceOld":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertTrue(poly.contains(-2, 2));  // bottom right corner: true\n    assertTrue(poly.contains(2, -2));  // top left corner: true\n    assertTrue(poly.contains(2,  2));  // top right corner: true\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertTrue(poly.contains(2, -1));  // top side: true\n    assertTrue(poly.contains(2, 0));   // top side: true\n    assertTrue(poly.contains(2, 1));   // top side: true\n    assertTrue(poly.contains(-1, 2));  // right side: true\n    assertTrue(poly.contains(0, 2));   // right side: true\n    assertTrue(poly.contains(1, 2));   // right side: true\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testEdgeInsideness().mjava","sourceNew":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Component2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertTrue(poly.contains(2, -2));  // bottom right corner: true\n    assertTrue(poly.contains(-2, 2));  // top left corner: true\n    assertTrue(poly.contains(2,  2));  // top right corner: true\n    assertTrue(poly.contains(-1, -2)); // bottom side: true\n    assertTrue(poly.contains(0, -2));  // bottom side: true\n    assertTrue(poly.contains(1, -2));  // bottom side: true\n    assertTrue(poly.contains(-1, 2));  // top side: true\n    assertTrue(poly.contains(0, 2));   // top side: true\n    assertTrue(poly.contains(1, 2));   // top side: true\n    assertTrue(poly.contains(2, -1));  // right side: true\n    assertTrue(poly.contains(2, 0));   // right side: true\n    assertTrue(poly.contains(2, 1));   // right side: true\n    assertTrue(poly.contains(-2, -1)); // left side: true\n    assertTrue(poly.contains(-2, 0));  // left side: true\n    assertTrue(poly.contains(-2, 1));  // left side: true\n  }\n\n","sourceOld":"  /** Tests edge case behavior with respect to insideness */\n  public void testEdgeInsideness() {\n    Polygon2D poly = Polygon2D.create(new Polygon(new double[] { -2, -2, 2, 2, -2 }, new double[] { -2, 2, 2, -2, -2 }));\n    assertTrue(poly.contains(-2, -2)); // bottom left corner: true\n    assertTrue(poly.contains(-2, 2));  // bottom right corner: true\n    assertTrue(poly.contains(2, -2));  // top left corner: true\n    assertTrue(poly.contains(2,  2));  // top right corner: true\n    assertTrue(poly.contains(-2, -1)); // bottom side: true\n    assertTrue(poly.contains(-2, 0));  // bottom side: true\n    assertTrue(poly.contains(-2, 1));  // bottom side: true\n    assertTrue(poly.contains(2, -1));  // top side: true\n    assertTrue(poly.contains(2, 0));   // top side: true\n    assertTrue(poly.contains(2, 1));   // top side: true\n    assertTrue(poly.contains(-1, 2));  // right side: true\n    assertTrue(poly.contains(0, 2));   // right side: true\n    assertTrue(poly.contains(1, 2));   // right side: true\n    assertTrue(poly.contains(-1, -2)); // left side: true\n    assertTrue(poly.contains(0, -2));  // left side: true\n    assertTrue(poly.contains(1, -2));  // left side: true\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","925fce43f3bac029d912b9b7de03c789e258a333"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"925fce43f3bac029d912b9b7de03c789e258a333":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0b597c65628ca9e73913a07e81691f8229bae35":["fc005279ab64cbf458ccef2ada610bc1a04b6139","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","925fce43f3bac029d912b9b7de03c789e258a333"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"925fce43f3bac029d912b9b7de03c789e258a333":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}