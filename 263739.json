{"path":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","commits":[{"id":"0902cc3e4d3f7e4fe37a1474010f51523cafbbef","date":1181874468,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","pathOld":"/dev/null","sourceNew":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3*5), doc.getFieldValues(\"f\").size() );\n    \n    try {\n      doc.setKeepDuplicateFieldValues( \"f\", false );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeFields( \"f\" );\n    doc.setKeepDuplicateFieldValues( \"f\", false );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3), doc.getFieldValues(\"f\").size() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e90486608f7012c992de10544f6940a730a00e6","date":1182105448,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","pathOld":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","sourceNew":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3*5), doc.getFieldValues(\"f\").size() );\n    \n    try {\n      doc.setRemoveDuplicateFieldValues( \"f\", true );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeFields( \"f\" );\n    doc.setRemoveDuplicateFieldValues( \"f\", true );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3), doc.getFieldValues(\"f\").size() );\n  }\n\n","sourceOld":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3*5), doc.getFieldValues(\"f\").size() );\n    \n    try {\n      doc.setKeepDuplicateFieldValues( \"f\", false );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeFields( \"f\" );\n    doc.setKeepDuplicateFieldValues( \"f\", false );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3), doc.getFieldValues(\"f\").size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ebb24ab555aab7c4dd5d2264c06a4f19fb217913","date":1183353562,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","pathOld":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","sourceNew":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, null );\n      doc.addField( \"f\", fval1, null );\n      doc.addField( \"f\", fval2, null );\n    }\n    assertEquals( (3*5), doc.getField(\"f\").getValueCount() );\n    \n    try {\n      doc.setRemoveDuplicateFieldValues( \"f\", true );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeField( \"f\" );\n    doc.setRemoveDuplicateFieldValues( \"f\", true );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, null );\n      doc.addField( \"f\", fval1, null );\n      doc.addField( \"f\", fval2, null );\n    }\n    assertEquals( (3), doc.getField(\"f\").getValueCount() );\n  }\n\n","sourceOld":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3*5), doc.getFieldValues(\"f\").size() );\n    \n    try {\n      doc.setRemoveDuplicateFieldValues( \"f\", true );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeFields( \"f\" );\n    doc.setRemoveDuplicateFieldValues( \"f\", true );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0 );\n      doc.addField( \"f\", fval1 );\n      doc.addField( \"f\", fval2 );\n    }\n    assertEquals( (3), doc.getFieldValues(\"f\").size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a51897f565610bcb8cd260561430de517d3de46","date":1183391823,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","pathOld":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","sourceNew":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, 1.0f );\n      doc.addField( \"f\", fval1, 1.0f );\n      doc.addField( \"f\", fval2, 1.0f );\n    }\n    assertEquals( (3*5), doc.getField(\"f\").getValueCount() );\n    \n    try {\n      doc.setRemoveDuplicateFieldValues( \"f\", true );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeField( \"f\" );\n    doc.setRemoveDuplicateFieldValues( \"f\", true );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, 1.0f );\n      doc.addField( \"f\", fval1, 1.0f );\n      doc.addField( \"f\", fval2, 1.0f );\n    }\n    assertEquals( (3), doc.getField(\"f\").getValueCount() );\n  }\n\n","sourceOld":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, null );\n      doc.addField( \"f\", fval1, null );\n      doc.addField( \"f\", fval2, null );\n    }\n    assertEquals( (3*5), doc.getField(\"f\").getValueCount() );\n    \n    try {\n      doc.setRemoveDuplicateFieldValues( \"f\", true );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeField( \"f\" );\n    doc.setRemoveDuplicateFieldValues( \"f\", true );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, null );\n      doc.addField( \"f\", fval1, null );\n      doc.addField( \"f\", fval2, null );\n    }\n    assertEquals( (3), doc.getField(\"f\").getValueCount() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31","date":1186291613,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","pathOld":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","sourceNew":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, 1.0f );\n      doc.addField( \"f\", fval1, 1.0f );\n      doc.addField( \"f\", fval2, 1.0f );\n    }\n    assertEquals( (3*5), doc.getField(\"f\").getValueCount() );\n  }\n\n","sourceOld":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, 1.0f );\n      doc.addField( \"f\", fval1, 1.0f );\n      doc.addField( \"f\", fval2, 1.0f );\n    }\n    assertEquals( (3*5), doc.getField(\"f\").getValueCount() );\n    \n    try {\n      doc.setRemoveDuplicateFieldValues( \"f\", true );\n      fail( \"can't change distinct for an existing field\" );\n    }\n    catch( Exception ex ) {}\n    \n    doc.removeField( \"f\" );\n    doc.setRemoveDuplicateFieldValues( \"f\", true );\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, 1.0f );\n      doc.addField( \"f\", fval1, 1.0f );\n      doc.addField( \"f\", fval2, 1.0f );\n    }\n    assertEquals( (3), doc.getField(\"f\").getValueCount() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","pathOld":"src/test/org/apache/solr/common/SolrDocumentTest#testDuplicate().mjava","sourceNew":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, 1.0f );\n      doc.addField( \"f\", fval1, 1.0f );\n      doc.addField( \"f\", fval2, 1.0f );\n    }\n    assertEquals( (3*5), doc.getField(\"f\").getValueCount() );\n  }\n\n","sourceOld":"  public void testDuplicate() \n  {\n    Float fval0 = new Float( 10.01f );\n    Float fval1 = new Float( 11.01f );\n    Float fval2 = new Float( 12.01f );\n    \n    // Set up a simple document\n    SolrInputDocument doc = new SolrInputDocument();\n    for( int i=0; i<5; i++ ) {\n      doc.addField( \"f\", fval0, 1.0f );\n      doc.addField( \"f\", fval1, 1.0f );\n      doc.addField( \"f\", fval2, 1.0f );\n    }\n    assertEquals( (3*5), doc.getField(\"f\").getValueCount() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e90486608f7012c992de10544f6940a730a00e6":["0902cc3e4d3f7e4fe37a1474010f51523cafbbef"],"ebb24ab555aab7c4dd5d2264c06a4f19fb217913":["9e90486608f7012c992de10544f6940a730a00e6"],"edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31":["9a51897f565610bcb8cd260561430de517d3de46"],"9a51897f565610bcb8cd260561430de517d3de46":["ebb24ab555aab7c4dd5d2264c06a4f19fb217913"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"0902cc3e4d3f7e4fe37a1474010f51523cafbbef":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9e90486608f7012c992de10544f6940a730a00e6":["ebb24ab555aab7c4dd5d2264c06a4f19fb217913"],"ebb24ab555aab7c4dd5d2264c06a4f19fb217913":["9a51897f565610bcb8cd260561430de517d3de46"],"edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31":["ad94625fb8d088209f46650c8097196fec67f00c"],"9a51897f565610bcb8cd260561430de517d3de46":["edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0902cc3e4d3f7e4fe37a1474010f51523cafbbef"],"0902cc3e4d3f7e4fe37a1474010f51523cafbbef":["9e90486608f7012c992de10544f6940a730a00e6"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}