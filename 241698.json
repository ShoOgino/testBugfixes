{"path":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","commits":[{"id":"8d0c1d69778439d99fc635727129e99480e64f06","date":1232050859,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","pathOld":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","sourceNew":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","sourceOld":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8d0c1d69778439d99fc635727129e99480e64f06":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["8d0c1d69778439d99fc635727129e99480e64f06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8d0c1d69778439d99fc635727129e99480e64f06":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8d0c1d69778439d99fc635727129e99480e64f06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}