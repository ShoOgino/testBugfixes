{"path":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#beforeRefresh().mjava","commits":[{"id":"aa09157b213a620622ccae0ef62a1da45a683222","date":1359149228,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#beforeRefresh().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void beforeRefresh() throws IOException {\n    old = current;\n    // Start sending all updates after this point to the new\n    // map.  While reopen is running, any lookup will first\n    // try this new map, then fallback to old, then to the\n    // current searcher:\n    current = new ConcurrentHashMap<String,T>();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#beforeRefresh().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void beforeRefresh() throws IOException {\n    old = current;\n    // Start sending all updates after this point to the new\n    // map.  While reopen is running, any lookup will first\n    // try this new map, then fallback to old, then to the\n    // current searcher:\n    current = new ConcurrentHashMap<String,T>();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#beforeRefresh().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#beforeRefresh().mjava","sourceNew":"  @Override\n  public void beforeRefresh() throws IOException {\n    old = current;\n    // Start sending all updates after this point to the new\n    // map.  While reopen is running, any lookup will first\n    // try this new map, then fallback to old, then to the\n    // current searcher:\n    current = new ConcurrentHashMap<>();\n  }\n\n","sourceOld":"  @Override\n  public void beforeRefresh() throws IOException {\n    old = current;\n    // Start sending all updates after this point to the new\n    // map.  While reopen is running, any lookup will first\n    // try this new map, then fallback to old, then to the\n    // current searcher:\n    current = new ConcurrentHashMap<String,T>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["aa09157b213a620622ccae0ef62a1da45a683222"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","aa09157b213a620622ccae0ef62a1da45a683222"],"aa09157b213a620622ccae0ef62a1da45a683222":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd45d4a2ee01a1932d33eec42f5272c2402da679","aa09157b213a620622ccae0ef62a1da45a683222"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"aa09157b213a620622ccae0ef62a1da45a683222":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","dd45d4a2ee01a1932d33eec42f5272c2402da679"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd45d4a2ee01a1932d33eec42f5272c2402da679","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}