{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","commits":[{"id":"a43b8655231010bd8d9a1bea43acc6001df4b0dd","date":1327331998,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","pathOld":"/dev/null","sourceNew":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    checkRandomData(random, a, 10000*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a89676536a5d3e2e875a9eed6b3f22a63cca643","date":1327356915,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","pathOld":"/dev/null","sourceNew":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    checkRandomData(random, a, 10000*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","pathOld":"/dev/null","sourceNew":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    checkRandomData(random, a, 10000*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"688409ce40f04eacb7ff4130f1dffa1d088798ac","date":1329108612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","sourceNew":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    \n    // dodge jre bug http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7104012\n    final UncaughtExceptionHandler savedHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      @Override\n      public void uncaughtException(Thread thread, Throwable throwable) {\n        assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(throwable));\n        // otherwise its some other bug, pass to default handler\n        savedHandler.uncaughtException(thread, throwable);\n      }\n    });\n    \n    try {\n      Thread.getDefaultUncaughtExceptionHandler();\n      checkRandomData(random, a, 10000*RANDOM_MULTIPLIER);\n    } catch (ArrayIndexOutOfBoundsException ex) {\n      assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(ex));\n      throw ex; // otherwise rethrow\n    } finally {\n      Thread.setDefaultUncaughtExceptionHandler(savedHandler);\n    }\n  }\n\n","sourceOld":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    checkRandomData(random, a, 10000*RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","sourceNew":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    \n    // dodge jre bug http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7104012\n    final UncaughtExceptionHandler savedHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      @Override\n      public void uncaughtException(Thread thread, Throwable throwable) {\n        assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(throwable));\n        // otherwise its some other bug, pass to default handler\n        savedHandler.uncaughtException(thread, throwable);\n      }\n    });\n    \n    try {\n      Thread.getDefaultUncaughtExceptionHandler();\n      checkRandomData(random(), a, 10000*RANDOM_MULTIPLIER);\n    } catch (ArrayIndexOutOfBoundsException ex) {\n      assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(ex));\n      throw ex; // otherwise rethrow\n    } finally {\n      Thread.setDefaultUncaughtExceptionHandler(savedHandler);\n    }\n  }\n\n","sourceOld":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    \n    // dodge jre bug http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7104012\n    final UncaughtExceptionHandler savedHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      @Override\n      public void uncaughtException(Thread thread, Throwable throwable) {\n        assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(throwable));\n        // otherwise its some other bug, pass to default handler\n        savedHandler.uncaughtException(thread, throwable);\n      }\n    });\n    \n    try {\n      Thread.getDefaultUncaughtExceptionHandler();\n      checkRandomData(random, a, 10000*RANDOM_MULTIPLIER);\n    } catch (ArrayIndexOutOfBoundsException ex) {\n      assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(ex));\n      throw ex; // otherwise rethrow\n    } finally {\n      Thread.setDefaultUncaughtExceptionHandler(savedHandler);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testRandomStrings().mjava","sourceNew":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    \n    // dodge jre bug http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7104012\n    final UncaughtExceptionHandler savedHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      @Override\n      public void uncaughtException(Thread thread, Throwable throwable) {\n        assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(throwable));\n        // otherwise its some other bug, pass to default handler\n        savedHandler.uncaughtException(thread, throwable);\n      }\n    });\n    \n    try {\n      Thread.getDefaultUncaughtExceptionHandler();\n      checkRandomData(random(), a, 10000*RANDOM_MULTIPLIER);\n    } catch (ArrayIndexOutOfBoundsException ex) {\n      assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(ex));\n      throw ex; // otherwise rethrow\n    } finally {\n      Thread.setDefaultUncaughtExceptionHandler(savedHandler);\n    }\n  }\n\n","sourceOld":"  /** blast some random strings through the analyzer */\n  public void testRandomStrings() throws Exception {\n    Analyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    \n    // dodge jre bug http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7104012\n    final UncaughtExceptionHandler savedHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      @Override\n      public void uncaughtException(Thread thread, Throwable throwable) {\n        assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(throwable));\n        // otherwise its some other bug, pass to default handler\n        savedHandler.uncaughtException(thread, throwable);\n      }\n    });\n    \n    try {\n      Thread.getDefaultUncaughtExceptionHandler();\n      checkRandomData(random(), a, 10000*RANDOM_MULTIPLIER);\n    } catch (ArrayIndexOutOfBoundsException ex) {\n      assumeTrue(\"not failing due to jre bug \", !isJREBug7104012(ex));\n      throw ex; // otherwise rethrow\n    } finally {\n      Thread.setDefaultUncaughtExceptionHandler(savedHandler);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a43b8655231010bd8d9a1bea43acc6001df4b0dd"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a43b8655231010bd8d9a1bea43acc6001df4b0dd"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["688409ce40f04eacb7ff4130f1dffa1d088798ac"],"688409ce40f04eacb7ff4130f1dffa1d088798ac":["a43b8655231010bd8d9a1bea43acc6001df4b0dd"],"a43b8655231010bd8d9a1bea43acc6001df4b0dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a43b8655231010bd8d9a1bea43acc6001df4b0dd"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a43b8655231010bd8d9a1bea43acc6001df4b0dd":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","688409ce40f04eacb7ff4130f1dffa1d088798ac"],"688409ce40f04eacb7ff4130f1dffa1d088798ac":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}