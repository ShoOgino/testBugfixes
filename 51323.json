{"path":"lucene/core/src/test/org/apache/lucene/search/TestWANDScorer#assertTopDocsEquals(TopDocs,TopDocs).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWANDScorer#assertTopDocsEquals(TopDocs,TopDocs).mjava","pathOld":"/dev/null","sourceNew":"  private static void assertTopDocsEquals(TopDocs td1, TopDocs td2) {\n    assertEquals(td1.scoreDocs.length, td2.scoreDocs.length);\n    for (int i = 0; i < td1.scoreDocs.length; ++i) {\n      ScoreDoc sd1 = td1.scoreDocs[i];\n      ScoreDoc sd2 = td2.scoreDocs[i];\n      assertEquals(sd1.doc, sd2.doc);\n      assertEquals(sd1.score, sd2.score, 0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWANDScorer#assertTopDocsEquals(TopDocs,TopDocs).mjava","pathOld":"/dev/null","sourceNew":"  private static void assertTopDocsEquals(TopDocs td1, TopDocs td2) {\n    assertEquals(td1.scoreDocs.length, td2.scoreDocs.length);\n    for (int i = 0; i < td1.scoreDocs.length; ++i) {\n      ScoreDoc sd1 = td1.scoreDocs[i];\n      ScoreDoc sd2 = td2.scoreDocs[i];\n      assertEquals(sd1.doc, sd2.doc);\n      assertEquals(sd1.score, sd2.score, 0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"523cc6563c99a55527ef7993efc5413c6648852d","date":1518704038,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWANDScorer#assertTopDocsEquals(TopDocs,TopDocs).mjava","sourceNew":null,"sourceOld":"  private static void assertTopDocsEquals(TopDocs td1, TopDocs td2) {\n    assertEquals(td1.scoreDocs.length, td2.scoreDocs.length);\n    for (int i = 0; i < td1.scoreDocs.length; ++i) {\n      ScoreDoc sd1 = td1.scoreDocs[i];\n      ScoreDoc sd2 = td2.scoreDocs[i];\n      assertEquals(sd1.doc, sd2.doc);\n      assertEquals(sd1.score, sd2.score, 0f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"523cc6563c99a55527ef7993efc5413c6648852d":["417142ff08fda9cf0b72d5133e63097a166c6458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["523cc6563c99a55527ef7993efc5413c6648852d"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"523cc6563c99a55527ef7993efc5413c6648852d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"417142ff08fda9cf0b72d5133e63097a166c6458":["523cc6563c99a55527ef7993efc5413c6648852d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}