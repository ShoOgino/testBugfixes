{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","commits":[{"id":"12cb83a3f761dc612e1ece020f46e1886fc2550e","date":1495722768,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72dc84475e6ad3fd8951c733b6e17916c03cd574","date":1497801058,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(2 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting two values but found %d\",expression,subEvaluators.size()));\n    }\n\n  }\n\n","sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(2 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting two values but found %d\",expression,subEvaluators.size()));\n    }\n\n  }\n\n","sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(2 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting two values but found %d\",expression,subEvaluators.size()));\n    }\n\n  }\n\n","sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":4,"author":"Dennis Gove","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":null,"sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(2 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting two values but found %d\",expression,subEvaluators.size()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":null,"sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(2 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting two values but found %d\",expression,subEvaluators.size()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":null,"sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(2 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting two values but found %d\",expression,subEvaluators.size()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f033e640613edeb07d8952279368806db4ab299","date":1511393468,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n    List<StreamExpressionNamedParameter> namedParams = factory.getNamedOperands(expression);\n    if(namedParams.size() > 0) {\n      if (namedParams.size() > 1) {\n        throw new IOException(\"distance function expects only one named parameter 'type'.\");\n      }\n\n      StreamExpressionNamedParameter namedParameter = namedParams.get(0);\n      String name = namedParameter.getName();\n      if (!name.equalsIgnoreCase(\"type\")) {\n        throw new IOException(\"distance function expects only one named parameter 'type'.\");\n      }\n\n      String typeParam = namedParameter.getParameter().toString().trim();\n      this.type= DistanceType.valueOf(typeParam);\n    } else {\n      this.type = DistanceType.euclidean;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d0b4707f3bab526e78877bedeebf53368dbc3d7","date":1524706692,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n  }\n\n","sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n    List<StreamExpressionNamedParameter> namedParams = factory.getNamedOperands(expression);\n    if(namedParams.size() > 0) {\n      if (namedParams.size() > 1) {\n        throw new IOException(\"distance function expects only one named parameter 'type'.\");\n      }\n\n      StreamExpressionNamedParameter namedParameter = namedParams.get(0);\n      String name = namedParameter.getName();\n      if (!name.equalsIgnoreCase(\"type\")) {\n        throw new IOException(\"distance function expects only one named parameter 'type'.\");\n      }\n\n      String typeParam = namedParameter.getParameter().toString().trim();\n      this.type= DistanceType.valueOf(typeParam);\n    } else {\n      this.type = DistanceType.euclidean;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"960f089602da7f0df48fb0e23de1ecbc791b95f0","date":1524725963,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DistanceEvaluator#DistanceEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n  }\n\n","sourceOld":"  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n    List<StreamExpressionNamedParameter> namedParams = factory.getNamedOperands(expression);\n    if(namedParams.size() > 0) {\n      if (namedParams.size() > 1) {\n        throw new IOException(\"distance function expects only one named parameter 'type'.\");\n      }\n\n      StreamExpressionNamedParameter namedParameter = namedParams.get(0);\n      String name = namedParameter.getName();\n      if (!name.equalsIgnoreCase(\"type\")) {\n        throw new IOException(\"distance function expects only one named parameter 'type'.\");\n      }\n\n      String typeParam = namedParameter.getParameter().toString().trim();\n      this.type= DistanceType.valueOf(typeParam);\n    } else {\n      this.type = DistanceType.euclidean;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12cb83a3f761dc612e1ece020f46e1886fc2550e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d0b4707f3bab526e78877bedeebf53368dbc3d7":["2f033e640613edeb07d8952279368806db4ab299"],"28288370235ed02234a64753cdbf0c6ec096304a":["d1f5728f32a4a256b36cfabd7a2636452f599bb9","72dc84475e6ad3fd8951c733b6e17916c03cd574"],"2f033e640613edeb07d8952279368806db4ab299":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","12cb83a3f761dc612e1ece020f46e1886fc2550e"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["28288370235ed02234a64753cdbf0c6ec096304a","ba1e7de64990e3928b90142a52fb92eeff556475"],"960f089602da7f0df48fb0e23de1ecbc791b95f0":["2f033e640613edeb07d8952279368806db4ab299","5d0b4707f3bab526e78877bedeebf53368dbc3d7"],"72dc84475e6ad3fd8951c733b6e17916c03cd574":["12cb83a3f761dc612e1ece020f46e1886fc2550e"],"ba1e7de64990e3928b90142a52fb92eeff556475":["28288370235ed02234a64753cdbf0c6ec096304a"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","12cb83a3f761dc612e1ece020f46e1886fc2550e"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","72dc84475e6ad3fd8951c733b6e17916c03cd574"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["960f089602da7f0df48fb0e23de1ecbc791b95f0"]},"commit2Childs":{"12cb83a3f761dc612e1ece020f46e1886fc2550e":["e9017cf144952056066919f1ebc7897ff9bd71b1","72dc84475e6ad3fd8951c733b6e17916c03cd574","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"5d0b4707f3bab526e78877bedeebf53368dbc3d7":["960f089602da7f0df48fb0e23de1ecbc791b95f0"],"28288370235ed02234a64753cdbf0c6ec096304a":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475"],"2f033e640613edeb07d8952279368806db4ab299":["5d0b4707f3bab526e78877bedeebf53368dbc3d7","960f089602da7f0df48fb0e23de1ecbc791b95f0"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12cb83a3f761dc612e1ece020f46e1886fc2550e","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["2f033e640613edeb07d8952279368806db4ab299","3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"960f089602da7f0df48fb0e23de1ecbc791b95f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"72dc84475e6ad3fd8951c733b6e17916c03cd574":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["28288370235ed02234a64753cdbf0c6ec096304a"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}