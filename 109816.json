{"path":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (liveDocs != null && !liveDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (liveDocs != null && !liveDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (liveDocs != null && !liveDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (liveDocs != null && !liveDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (liveDocs != null && !liveDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (liveDocs != null && !liveDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f598c898a474a16f5313a79aa0f0870baa52df2","date":1328889626,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (acceptDocs != null && !acceptDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (liveDocs != null && !liveDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (acceptDocs != null && !acceptDocs.get(doc)) continue;\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#nextDoc().mjava","sourceNew":null,"sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (!match()) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["0f598c898a474a16f5313a79aa0f0870baa52df2"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f598c898a474a16f5313a79aa0f0870baa52df2":["c26f00b574427b55127e869b935845554afde1fa"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["0f598c898a474a16f5313a79aa0f0870baa52df2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0f598c898a474a16f5313a79aa0f0870baa52df2":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}