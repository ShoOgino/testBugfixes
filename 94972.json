{"path":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","commits":[{"id":"0c51a42fa59b8539f35fd21ba7d88ee912af931d","date":1493700805,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if(until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if(until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f78c807c3692e5b227a71538672d87d78c3cd9ba","date":1495764154,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","sourceNew":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","sourceOld":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if(until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if(until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d1f7b3f5e5e45b15b9649564c72301c248de1b8","date":1498557572,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","sourceNew":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","sourceOld":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","sourceNew":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","sourceOld":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<Policy.ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.Suggester#getValidReplicas(boolean,boolean,int).mjava","sourceNew":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","sourceOld":"    List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n      List<Pair<ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n      if (sortDesc) {\n        if (until == -1) until = getMatrix().size();\n        for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      } else {\n        if (until == -1) until = 0;\n        for (int i = getMatrix().size() - 1; i >= until; i--)\n          addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n      }\n      return allPossibleReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c51a42fa59b8539f35fd21ba7d88ee912af931d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"8d1f7b3f5e5e45b15b9649564c72301c248de1b8":["f78c807c3692e5b227a71538672d87d78c3cd9ba"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f78c807c3692e5b227a71538672d87d78c3cd9ba":["0c51a42fa59b8539f35fd21ba7d88ee912af931d"],"98f11c416d30e556e0004a9a84960702d12d35b1":["8d1f7b3f5e5e45b15b9649564c72301c248de1b8","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c51a42fa59b8539f35fd21ba7d88ee912af931d":["f78c807c3692e5b227a71538672d87d78c3cd9ba"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["98f11c416d30e556e0004a9a84960702d12d35b1"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"8d1f7b3f5e5e45b15b9649564c72301c248de1b8":["98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c51a42fa59b8539f35fd21ba7d88ee912af931d","74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"f78c807c3692e5b227a71538672d87d78c3cd9ba":["8d1f7b3f5e5e45b15b9649564c72301c248de1b8"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}