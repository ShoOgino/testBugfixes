{"path":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI#validateName(String).mjava","commits":[{"id":"8476949555f799dff381770c01cfad051a264487","date":1570505073,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI#validateName(String).mjava","pathOld":"/dev/null","sourceNew":"  public static void validateName(String path) {\n    if (path == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"empty path\");\n    }\n    List<String> parts = StrUtils.splitSmart(path, '/', true);\n    for (String part : parts) {\n      if (part.charAt(0) == '.') {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"cannot start with period\");\n      }\n      for (int i = 0; i < part.length(); i++) {\n        for (int j = 0; j < INVALIDCHARS.length(); j++) {\n          if (part.charAt(i) == INVALIDCHARS.charAt(j))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unsupported char in file name: \" + part);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI#validateName(String).mjava","pathOld":"/dev/null","sourceNew":"  public static void validateName(String path) {\n    if (path == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"empty path\");\n    }\n    List<String> parts = StrUtils.splitSmart(path, '/', true);\n    for (String part : parts) {\n      if (part.charAt(0) == '.') {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"cannot start with period\");\n      }\n      for (int i = 0; i < part.length(); i++) {\n        for (int j = 0; j < INVALIDCHARS.length(); j++) {\n          if (part.charAt(i) == INVALIDCHARS.charAt(j))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unsupported char in file name: \" + part);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d218decf811b7a0a4d86218c54c79c74a962374b","date":1578632144,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI#validateName(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI#validateName(String).mjava","sourceNew":"  public static void validateName(String path, boolean failForTrusted) {\n    if (path == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"empty path\");\n    }\n    List<String> parts = StrUtils.splitSmart(path, '/', true);\n    for (String part : parts) {\n      if (part.charAt(0) == '.') {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"cannot start with period\");\n      }\n      for (int i = 0; i < part.length(); i++) {\n        for (int j = 0; j < INVALIDCHARS.length(); j++) {\n          if (part.charAt(i) == INVALIDCHARS.charAt(j))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unsupported char in file name: \" + part);\n        }\n      }\n    }\n    if (failForTrusted &&  TRUSTED_DIR.equals(parts.get(0))) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"trying to write into /_trusted_/ directory\");\n    }\n  }\n\n","sourceOld":"  public static void validateName(String path) {\n    if (path == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"empty path\");\n    }\n    List<String> parts = StrUtils.splitSmart(path, '/', true);\n    for (String part : parts) {\n      if (part.charAt(0) == '.') {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"cannot start with period\");\n      }\n      for (int i = 0; i < part.length(); i++) {\n        for (int j = 0; j < INVALIDCHARS.length(); j++) {\n          if (part.charAt(i) == INVALIDCHARS.charAt(j))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unsupported char in file name: \" + part);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8f0a7504661c8e51be5c63e87f9d79a36d9116c","date":1578657638,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI#validateName(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI#validateName(String).mjava","sourceNew":"  public static void validateName(String path, boolean failForTrusted) {\n    if (path == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"empty path\");\n    }\n    List<String> parts = StrUtils.splitSmart(path, '/', true);\n    for (String part : parts) {\n      if (part.charAt(0) == '.') {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"cannot start with period\");\n      }\n      for (int i = 0; i < part.length(); i++) {\n        for (int j = 0; j < INVALIDCHARS.length(); j++) {\n          if (part.charAt(i) == INVALIDCHARS.charAt(j))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unsupported char in file name: \" + part);\n        }\n      }\n    }\n    if (failForTrusted &&  TRUSTED_DIR.equals(parts.get(0))) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"trying to write into /_trusted_/ directory\");\n    }\n  }\n\n","sourceOld":"  public static void validateName(String path) {\n    if (path == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"empty path\");\n    }\n    List<String> parts = StrUtils.splitSmart(path, '/', true);\n    for (String part : parts) {\n      if (part.charAt(0) == '.') {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"cannot start with period\");\n      }\n      for (int i = 0; i < part.length(); i++) {\n        for (int j = 0; j < INVALIDCHARS.length(); j++) {\n          if (part.charAt(i) == INVALIDCHARS.charAt(j))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unsupported char in file name: \" + part);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":["8476949555f799dff381770c01cfad051a264487","d218decf811b7a0a4d86218c54c79c74a962374b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d218decf811b7a0a4d86218c54c79c74a962374b":["8476949555f799dff381770c01cfad051a264487"],"8476949555f799dff381770c01cfad051a264487":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d218decf811b7a0a4d86218c54c79c74a962374b"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8476949555f799dff381770c01cfad051a264487"]},"commit2Childs":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8476949555f799dff381770c01cfad051a264487","b0b597c65628ca9e73913a07e81691f8229bae35"],"d218decf811b7a0a4d86218c54c79c74a962374b":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8476949555f799dff381770c01cfad051a264487":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","d218decf811b7a0a4d86218c54c79c74a962374b","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}