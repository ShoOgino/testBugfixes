{"path":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","commits":[{"id":"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc","date":1241865401,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = (ScoreDoc) pq.updateTop();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce","date":1255993146,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","sourceNew":"    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = (ScoreDoc) pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1effa760e072a5b14de0dbde58ebd0471188ebc","date":1266787521,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1effa760e072a5b14de0dbde58ebd0471188ebc":["8a9e385641d717e641408d8fbbc62be8fc766357"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a1effa760e072a5b14de0dbde58ebd0471188ebc"]},"commit2Childs":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"8a9e385641d717e641408d8fbbc62be8fc766357":["a1effa760e072a5b14de0dbde58ebd0471188ebc"],"a1effa760e072a5b14de0dbde58ebd0471188ebc":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}