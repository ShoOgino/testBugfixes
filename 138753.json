{"path":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker#testResponseWithCBTiming().mjava","commits":[{"id":"c83e4e3bad02b24e922b644b91e819af19553a79","date":1593190221,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker#testResponseWithCBTiming().mjava","pathOld":"/dev/null","sourceNew":"  public void testResponseWithCBTiming() {\n    assertQ(req(\"q\", \"*:*\", CommonParams.DEBUG_QUERY, \"true\"),\n        \"//str[@name='rawquerystring']='*:*'\",\n        \"//str[@name='querystring']='*:*'\",\n        \"//str[@name='parsedquery']='MatchAllDocsQuery(*:*)'\",\n        \"//str[@name='parsedquery_toString']='*:*'\",\n        \"count(//lst[@name='explain']/*)=3\",\n        \"//lst[@name='explain']/str[@name='1']\",\n        \"//lst[@name='explain']/str[@name='2']\",\n        \"//lst[@name='explain']/str[@name='3']\",\n        \"//str[@name='QParser']\",\n        \"count(//lst[@name='timing']/*)=4\",\n        \"//lst[@name='timing']/double[@name='time']\",\n        \"count(//lst[@name='circuitbreaker']/*)>0\",\n        \"//lst[@name='circuitbreaker']/double[@name='time']\",\n        \"count(//lst[@name='prepare']/*)>0\",\n        \"//lst[@name='prepare']/double[@name='time']\",\n        \"count(//lst[@name='process']/*)>0\",\n        \"//lst[@name='process']/double[@name='time']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9c8a0d139a128916bbde3ee20210c0aec72f4f7","date":1593281638,"type":4,"author":"Atri Sharma","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker#testResponseWithCBTiming().mjava","sourceNew":null,"sourceOld":"  public void testResponseWithCBTiming() {\n    assertQ(req(\"q\", \"*:*\", CommonParams.DEBUG_QUERY, \"true\"),\n        \"//str[@name='rawquerystring']='*:*'\",\n        \"//str[@name='querystring']='*:*'\",\n        \"//str[@name='parsedquery']='MatchAllDocsQuery(*:*)'\",\n        \"//str[@name='parsedquery_toString']='*:*'\",\n        \"count(//lst[@name='explain']/*)=3\",\n        \"//lst[@name='explain']/str[@name='1']\",\n        \"//lst[@name='explain']/str[@name='2']\",\n        \"//lst[@name='explain']/str[@name='3']\",\n        \"//str[@name='QParser']\",\n        \"count(//lst[@name='timing']/*)=4\",\n        \"//lst[@name='timing']/double[@name='time']\",\n        \"count(//lst[@name='circuitbreaker']/*)>0\",\n        \"//lst[@name='circuitbreaker']/double[@name='time']\",\n        \"count(//lst[@name='prepare']/*)>0\",\n        \"//lst[@name='prepare']/double[@name='time']\",\n        \"count(//lst[@name='process']/*)>0\",\n        \"//lst[@name='process']/double[@name='time']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef8e4fae9bcd156a117f5758819aeabdae3e963","date":1593674028,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker#testResponseWithCBTiming().mjava","pathOld":"/dev/null","sourceNew":"  public void testResponseWithCBTiming() {\n    assertQ(req(\"q\", \"*:*\", CommonParams.DEBUG_QUERY, \"true\"),\n        \"//str[@name='rawquerystring']='*:*'\",\n        \"//str[@name='querystring']='*:*'\",\n        \"//str[@name='parsedquery']='MatchAllDocsQuery(*:*)'\",\n        \"//str[@name='parsedquery_toString']='*:*'\",\n        \"count(//lst[@name='explain']/*)=3\",\n        \"//lst[@name='explain']/str[@name='1']\",\n        \"//lst[@name='explain']/str[@name='2']\",\n        \"//lst[@name='explain']/str[@name='3']\",\n        \"//str[@name='QParser']\",\n        \"count(//lst[@name='timing']/*)=4\",\n        \"//lst[@name='timing']/double[@name='time']\",\n        \"count(//lst[@name='circuitbreaker']/*)>0\",\n        \"//lst[@name='circuitbreaker']/double[@name='time']\",\n        \"count(//lst[@name='prepare']/*)>0\",\n        \"//lst[@name='prepare']/double[@name='time']\",\n        \"count(//lst[@name='process']/*)>0\",\n        \"//lst[@name='process']/double[@name='time']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c83e4e3bad02b24e922b644b91e819af19553a79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9c8a0d139a128916bbde3ee20210c0aec72f4f7":["c83e4e3bad02b24e922b644b91e819af19553a79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["d9c8a0d139a128916bbde3ee20210c0aec72f4f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"]},"commit2Childs":{"c83e4e3bad02b24e922b644b91e819af19553a79":["d9c8a0d139a128916bbde3ee20210c0aec72f4f7"],"d9c8a0d139a128916bbde3ee20210c0aec72f4f7":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c83e4e3bad02b24e922b644b91e819af19553a79"],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}