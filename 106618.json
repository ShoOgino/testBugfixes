{"path":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Query,double,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","commits":[{"id":"ac9de183adbc9483681f275ac1e2d92ed19f52e1","date":1452414626,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Query,double,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Query,double,SolrIndexSearcher.QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","sourceNew":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Query reRankQuery,\n                           double reRankWeight,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankQuery = reRankQuery;\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankWeight = reRankWeight;\n    }\n\n","sourceOld":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Query reRankQuery,\n                           double reRankWeight,\n                           SolrIndexSearcher.QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankQuery = reRankQuery;\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankWeight = reRankWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffcff9959b822d9b743768173e0094d3ff62f0dd","date":1470415332,"type":5,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Rescorer,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Query,double,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","sourceNew":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Rescorer reRankQueryRescorer,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankQueryRescorer = reRankQueryRescorer;\n    }\n\n","sourceOld":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Query reRankQuery,\n                           double reRankWeight,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankQuery = reRankQuery;\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankWeight = reRankWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Query,double,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","sourceNew":null,"sourceOld":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Query reRankQuery,\n                           double reRankWeight,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankQuery = reRankQuery;\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankWeight = reRankWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Query,double,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","sourceNew":null,"sourceOld":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Query reRankQuery,\n                           double reRankWeight,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankQuery = reRankQuery;\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankWeight = reRankWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffcff9959b822d9b743768173e0094d3ff62f0dd":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ac9de183adbc9483681f275ac1e2d92ed19f52e1","ffcff9959b822d9b743768173e0094d3ff62f0dd"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["ac9de183adbc9483681f275ac1e2d92ed19f52e1","ffcff9959b822d9b743768173e0094d3ff62f0dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ffcff9959b822d9b743768173e0094d3ff62f0dd"]},"commit2Childs":{"ffcff9959b822d9b743768173e0094d3ff62f0dd":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["ffcff9959b822d9b743768173e0094d3ff62f0dd","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}