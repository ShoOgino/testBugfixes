{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","commits":[{"id":"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281","date":1260515652,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492","date":1260863347,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":["0d2b69725d5832c3c9fa9df6b9081c7d4e46a281"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0d2b69725d5832c3c9fa9df6b9081c7d4e46a281"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}