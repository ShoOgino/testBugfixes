{"path":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(ReaderContext,boolean,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, true, false);\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), searcher, context.reader, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(ReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, true, false);\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), searcher, context.reader, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, true, false);\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, true, false);\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), searcher, context.reader, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc63f17f42c64d6ccc8c361cfcdf074f115f770c","date":1294930751,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, true, false);\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c220849f876de24a79f756f65b3eb045db59f63f":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["c220849f876de24a79f756f65b3eb045db59f63f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"]},"commit2Childs":{"c220849f876de24a79f756f65b3eb045db59f63f":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["c220849f876de24a79f756f65b3eb045db59f63f"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}