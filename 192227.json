{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#save(File).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#save(File).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#save(File).mjava","sourceNew":"  /**\n   * Writes an automaton to a file. \n   */\n  public void save(final File file) throws IOException {\n    boolean success = false;\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(file));\n    try {\n      save(new OutputStreamDataOutput(os));\n      success = true;\n    } finally { \n      if (success) { \n        IOUtils.close(os);\n      } else {\n        IOUtils.closeWhileHandlingException(os); \n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Writes an automaton to a file. \n   */\n  public void save(final File file) throws IOException {\n    boolean success = false;\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(file));\n    try {\n      save(new OutputStreamDataOutput(os));\n      success = true;\n    } finally { \n      if (success) { \n        IOUtils.close(os);\n      } else {\n        IOUtils.closeWhileHandlingException(os); \n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#save(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Writes an automaton to a file. \n   */\n  public void save(final File file) throws IOException {\n    boolean success = false;\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(file));\n    try {\n      save(new OutputStreamDataOutput(os));\n      success = true;\n    } finally { \n      if (success) { \n        IOUtils.close(os);\n      } else {\n        IOUtils.closeWhileHandlingException(os); \n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}