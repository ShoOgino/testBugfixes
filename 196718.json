{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#resolveUpdateChainParam(SolrParams,Logger).mjava","commits":[{"id":"38cf2ff411b3f7342febd22163907bafb5342a6f","date":1316126478,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#resolveUpdateChainParam(SolrParams,Logger).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method helps resolve if the deprecated \"update.processor\" request parameter is used  \n   * and logs a warning if it is. In a future version, this method will be removed and\n   * Solr will assume \"update.chain\" and not look for \"update.processor\"\n   * @param params an instance of SolrParams from the request\n   * @param log an instance of a slf4j logger to log a warning in case of deprecated param usage\n   * @return null if neither is specified, else the value of the param specified\n   * @deprecated\n   */\n  public static String resolveUpdateChainParam(SolrParams params, Logger log) {\n    if(params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED) != null && log != null) {\n      log.warn(\"Use of deprecated update request parameter \"+UpdateParams.UPDATE_CHAIN_DEPRECATED+\n           \" detected. Please use the new parameter \"+UpdateParams.UPDATE_CHAIN+\" instead, as support\"+\n           \" for \"+UpdateParams.UPDATE_CHAIN_DEPRECATED+\" will be removed in a later version.\");\n    }\n    return (params.get(UpdateParams.UPDATE_CHAIN) != null) \n      ? params.get(UpdateParams.UPDATE_CHAIN) \n      : params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3a7218407032c06bc1d6c57edf979e7788f5def","date":1326793293,"type":4,"author":"Jan Høydahl","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#resolveUpdateChainParam(SolrParams,Logger).mjava","sourceNew":null,"sourceOld":"  /**\n   * This method helps resolve if the deprecated \"update.processor\" request parameter is used  \n   * and logs a warning if it is. In a future version, this method will be removed and\n   * Solr will assume \"update.chain\" and not look for \"update.processor\"\n   * @param params an instance of SolrParams from the request\n   * @param log an instance of a slf4j logger to log a warning in case of deprecated param usage\n   * @return null if neither is specified, else the value of the param specified\n   * @deprecated\n   */\n  public static String resolveUpdateChainParam(SolrParams params, Logger log) {\n    if(params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED) != null && log != null) {\n      log.warn(\"Use of deprecated update request parameter \"+UpdateParams.UPDATE_CHAIN_DEPRECATED+\n           \" detected. Please use the new parameter \"+UpdateParams.UPDATE_CHAIN+\" instead, as support\"+\n           \" for \"+UpdateParams.UPDATE_CHAIN_DEPRECATED+\" will be removed in a later version.\");\n    }\n    return (params.get(UpdateParams.UPDATE_CHAIN) != null) \n      ? params.get(UpdateParams.UPDATE_CHAIN) \n      : params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38cf2ff411b3f7342febd22163907bafb5342a6f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3a7218407032c06bc1d6c57edf979e7788f5def":["38cf2ff411b3f7342febd22163907bafb5342a6f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3a7218407032c06bc1d6c57edf979e7788f5def"]},"commit2Childs":{"38cf2ff411b3f7342febd22163907bafb5342a6f":["f3a7218407032c06bc1d6c57edf979e7788f5def"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38cf2ff411b3f7342febd22163907bafb5342a6f"],"f3a7218407032c06bc1d6c57edf979e7788f5def":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}