{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}