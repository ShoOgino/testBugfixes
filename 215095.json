{"path":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n        String shard = core.getCoreDescriptor().getCloudDescriptor().getShardId();\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collectionName, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5","date":1498283633,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","sourceNew":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collection, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","sourceOld":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n        String shard = core.getCoreDescriptor().getCloudDescriptor().getShardId();\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collectionName, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","sourceNew":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collection, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","sourceOld":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n        String shard = core.getCoreDescriptor().getCloudDescriptor().getShardId();\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collectionName, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","sourceNew":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collection, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","sourceOld":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n        String shard = core.getCoreDescriptor().getCloudDescriptor().getShardId();\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collectionName, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#registerCloseHook(SolrCore).mjava","sourceNew":null,"sourceOld":"  /**\n   * register a close hook to properly shutdown the state manager and scheduler\n   */\n  private void registerCloseHook(SolrCore core) {\n    core.addCloseHook(new CloseHook() {\n\n      @Override\n      public void preClose(SolrCore core) {\n        log.info(\"Solr core is being closed - shutting down CDCR handler @ {}:{}\", collection, shard);\n\n        updateLogSynchronizer.shutdown();\n        replicatorManager.shutdown();\n        bufferStateManager.shutdown();\n        processStateManager.shutdown();\n        leaderStateManager.shutdown();\n      }\n\n      @Override\n      public void postClose(SolrCore core) {\n      }\n\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["86290366cefc1b9d4eced13b430858c4a4c0421d","c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5"],"28288370235ed02234a64753cdbf0c6ec096304a":["86290366cefc1b9d4eced13b430858c4a4c0421d","c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}