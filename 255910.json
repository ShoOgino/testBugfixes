{"path":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/util/IOUtils#addToZipOutputStream(String,String,ZipOutputStream).mjava","commits":[{"id":"3fce85454a250d21604a63955fa07ab2da7a43fa","date":1030730633,"type":0,"author":"Kelvin Tan","isMerge":false,"pathNew":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/util/IOUtils#addToZipOutputStream(String,String,ZipOutputStream).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Writes an file to a ZipOutputStream.\n     * @param File to read data from\n     * @param Path of the ZipEntry\n     * @param ZipOutputStream to write to\n     */\n    public static void addToZipOutputStream(String file,\n                                            String zipPath,\n                                            ZipOutputStream out)\n            throws FileNotFoundException, IOException\n    {\n        File f = new File(file);\n        byte[] buffer = new byte[8192];  // Create a buffer for copying\n        int bytes_read;\n        FileInputStream in = null;\n        try\n        {\n            in = new FileInputStream(f); // Stream to read file\n            ZipEntry entry = new ZipEntry(zipPath);      // Make a ZipEntry\n            out.putNextEntry(entry);                     // Store entry in zipfile\n            while ((bytes_read = in.read(buffer)) != -1) // Copy bytes to zipfile\n                out.write(buffer, 0, bytes_read);\n        }\n        finally\n        {\n            if (in != null)\n                in.close(); // Close input stream\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3461c2f9e7fbdbc35cc20710cf75a221d2898e90","date":1051838935,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/util/IOUtils#addToZipOutputStream(String,String,ZipOutputStream).mjava","sourceNew":null,"sourceOld":"    /**\n     * Writes an file to a ZipOutputStream.\n     * @param File to read data from\n     * @param Path of the ZipEntry\n     * @param ZipOutputStream to write to\n     */\n    public static void addToZipOutputStream(String file,\n                                            String zipPath,\n                                            ZipOutputStream out)\n            throws FileNotFoundException, IOException\n    {\n        File f = new File(file);\n        byte[] buffer = new byte[8192];  // Create a buffer for copying\n        int bytes_read;\n        FileInputStream in = null;\n        try\n        {\n            in = new FileInputStream(f); // Stream to read file\n            ZipEntry entry = new ZipEntry(zipPath);      // Make a ZipEntry\n            out.putNextEntry(entry);                     // Store entry in zipfile\n            while ((bytes_read = in.read(buffer)) != -1) // Copy bytes to zipfile\n                out.write(buffer, 0, bytes_read);\n        }\n        finally\n        {\n            if (in != null)\n                in.close(); // Close input stream\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3fce85454a250d21604a63955fa07ab2da7a43fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3461c2f9e7fbdbc35cc20710cf75a221d2898e90":["3fce85454a250d21604a63955fa07ab2da7a43fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3461c2f9e7fbdbc35cc20710cf75a221d2898e90"]},"commit2Childs":{"3fce85454a250d21604a63955fa07ab2da7a43fa":["3461c2f9e7fbdbc35cc20710cf75a221d2898e90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fce85454a250d21604a63955fa07ab2da7a43fa"],"3461c2f9e7fbdbc35cc20710cf75a221d2898e90":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}