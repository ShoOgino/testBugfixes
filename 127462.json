{"path":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","commits":[{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (maxFieldLength != -1)\n      iwc.setMaxFieldLength(maxFieldLength);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c3465573b8d89796a7dc94c1b6461292f8708c6d","c3465573b8d89796a7dc94c1b6461292f8708c6d","c3465573b8d89796a7dc94c1b6461292f8708c6d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (maxFieldLength != -1)\n      iwc.setMaxFieldLength(maxFieldLength);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (maxFieldLength != -1)\n      iwc.setMaxFieldLength(maxFieldLength);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047784e704fe141e0ff36affac8a7cb6c7bbec","date":1295352100,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (maxFieldLength != -1)\n      iwc.setMaxFieldLength(maxFieldLength);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (maxFieldLength != -1)\n      iwc.setMaxFieldLength(maxFieldLength);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (maxFieldLength != -1)\n      iwc.setMaxFieldLength(maxFieldLength);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarity(schema.getSimilarity());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/update/SolrIndexConfig#toIndexWriterConfig(IndexSchema).mjava","sourceNew":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","sourceOld":"  public IndexWriterConfig toIndexWriterConfig(IndexSchema schema) {\n    IndexWriterConfig iwc = new IndexWriterConfig(luceneVersion, schema.getAnalyzer());\n    if (maxBufferedDocs != -1)\n      iwc.setMaxBufferedDocs(maxBufferedDocs);\n\n    if (ramBufferSizeMB != -1)\n      iwc.setRAMBufferSizeMB(ramBufferSizeMB);\n\n    if (termIndexInterval != -1)\n      iwc.setTermIndexInterval(termIndexInterval);\n\n    if (writeLockTimeout != -1)\n      iwc.setWriteLockTimeout(writeLockTimeout);\n\n    iwc.setSimilarityProvider(schema.getSimilarityProvider());\n    iwc.setMergePolicy(buildMergePolicy(schema));\n    iwc.setMergeScheduler(buildMergeScheduler(schema));\n\n    return iwc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["e79a6d080bdd5b2a8f56342cf571b5476de04180","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["c26f00b574427b55127e869b935845554afde1fa","bb9b72f7c3d7827c64dd4ec580ded81778da361d","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["e79a6d080bdd5b2a8f56342cf571b5476de04180","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c2047784e704fe141e0ff36affac8a7cb6c7bbec","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}