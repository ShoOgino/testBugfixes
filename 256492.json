{"path":"lucene/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":"  /**\n   * Called when the consumer of this API is doc with adding\n   * {@link DocValue} to this {@link DocValuesConsumer}\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, DocValue)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the consumer of this API is doc with adding\n   * {@link DocValue} to this {@link DocValuesConsumer}\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, DocValue)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, IndexableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the consumer of this API is doc with adding\n   * {@link DocValue} to this {@link DocValuesConsumer}\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, DocValue)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":["16dc5aef9648bb8fedce2ef55874f52e62c2766d","6cc9891f94df3a67986dfa9d463a3e2d76bbce7d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, IndexableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, IndexableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["fa0f44f887719e97183771e977cfc4bfb485b766"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}