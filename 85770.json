{"path":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupWithMinExactHitCount().mjava","commits":[{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupWithMinExactHitCount().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupWithMinExactHitCount() throws Exception {\n    final int NUM_DOCS = 20;\n    for (int i = 0; i < NUM_DOCS ; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), FOO_STRING_FIELD, \"Book1\"));\n      assertU(commit());\n    }\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"q\", FOO_STRING_FIELD + \":Book1\");\n    assertQ(req(params, CommonParams.MIN_EXACT_HITS, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/result[@numFoundExact='false']\"\n    );\n    params.set(\"group\", true);\n    params.set(\"group.field\", FOO_STRING_FIELD);\n    assertQ(req(params)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    assertQ(req(params, CommonParams.MIN_EXACT_HITS, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b8ad6d99eb2424679c78255c369b8fac243e7dd","date":1590104557,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupWithMinExactHitCount().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupWithMinExactHitCount().mjava","sourceNew":"  @Test\n  public void testGroupWithMinExactHitCount() throws Exception {\n    final int NUM_DOCS = 20;\n    for (int i = 0; i < NUM_DOCS ; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), FOO_STRING_FIELD, \"Book1\"));\n      assertU(commit());\n    }\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"q\", FOO_STRING_FIELD + \":Book1\");\n    assertQ(req(params, CommonParams.MIN_EXACT_COUNT, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/result[@numFoundExact='false']\"\n    );\n    params.set(\"group\", true);\n    params.set(\"group.field\", FOO_STRING_FIELD);\n    assertQ(req(params)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    assertQ(req(params, CommonParams.MIN_EXACT_COUNT, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    \n  }\n\n","sourceOld":"  @Test\n  public void testGroupWithMinExactHitCount() throws Exception {\n    final int NUM_DOCS = 20;\n    for (int i = 0; i < NUM_DOCS ; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), FOO_STRING_FIELD, \"Book1\"));\n      assertU(commit());\n    }\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"q\", FOO_STRING_FIELD + \":Book1\");\n    assertQ(req(params, CommonParams.MIN_EXACT_HITS, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/result[@numFoundExact='false']\"\n    );\n    params.set(\"group\", true);\n    params.set(\"group.field\", FOO_STRING_FIELD);\n    assertQ(req(params)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    assertQ(req(params, CommonParams.MIN_EXACT_HITS, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72afa881b0b5c361ebd0b6d37927fe072151fbe0","date":1590107364,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupWithMinExactHitCount().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupWithMinExactHitCount().mjava","sourceNew":"  @Test\n  public void testGroupWithMinExactHitCount() throws Exception {\n    final int NUM_DOCS = 20;\n    for (int i = 0; i < NUM_DOCS ; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), FOO_STRING_FIELD, \"Book1\"));\n      assertU(commit());\n    }\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"q\", FOO_STRING_FIELD + \":Book1\");\n    assertQ(req(params, CommonParams.MIN_EXACT_COUNT, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/result[@numFoundExact='false']\"\n    );\n    params.set(\"group\", true);\n    params.set(\"group.field\", FOO_STRING_FIELD);\n    assertQ(req(params)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    assertQ(req(params, CommonParams.MIN_EXACT_COUNT, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    \n  }\n\n","sourceOld":"  @Test\n  public void testGroupWithMinExactHitCount() throws Exception {\n    final int NUM_DOCS = 20;\n    for (int i = 0; i < NUM_DOCS ; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), FOO_STRING_FIELD, \"Book1\"));\n      assertU(commit());\n    }\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"q\", FOO_STRING_FIELD + \":Book1\");\n    assertQ(req(params, CommonParams.MIN_EXACT_HITS, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/result[@numFoundExact='false']\"\n    );\n    params.set(\"group\", true);\n    params.set(\"group.field\", FOO_STRING_FIELD);\n    assertQ(req(params)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    assertQ(req(params, CommonParams.MIN_EXACT_HITS, \"2\", CommonParams.ROWS, \"2\")\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+FOO_STRING_FIELD+\"']/arr[@name='groups']/lst[1]/result[@numFoundExact='true']\"\n    );\n    \n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["640ded7811e1b7d29236a5e2934ec3cd266a8199","6b8ad6d99eb2424679c78255c369b8fac243e7dd"],"6b8ad6d99eb2424679c78255c369b8fac243e7dd":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"]},"commit2Childs":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["72afa881b0b5c361ebd0b6d37927fe072151fbe0","6b8ad6d99eb2424679c78255c369b8fac243e7dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b8ad6d99eb2424679c78255c369b8fac243e7dd":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}