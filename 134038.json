{"path":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton,int).mjava","commits":[{"id":"afa43c2280907c22d8a132b79a2873becc002870","date":1415139362,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   * @param maxDeterminizedStates maximum number of states in the resulting\n   *   automata.  If the automata would need more than this many states\n   *   TooComplextToDeterminizeException is thrown.  Higher number require more\n   *   space but can process more complex automata.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton, int maxDeterminizedStates) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton, null, true, maxDeterminizedStates);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0088660bdc1c051f58fbc38626d61ccf22dfd3e0","date":1427444574,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton,int).mjava","sourceNew":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   * @param maxDeterminizedStates maximum number of states in the resulting\n   *   automata.  If the automata would need more than this many states\n   *   TooComplextToDeterminizeException is thrown.  Higher number require more\n   *   space but can process more complex automata.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton, int maxDeterminizedStates) {\n    this(term, automaton, maxDeterminizedStates, false);\n  }\n\n","sourceOld":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   * @param maxDeterminizedStates maximum number of states in the resulting\n   *   automata.  If the automata would need more than this many states\n   *   TooComplextToDeterminizeException is thrown.  Higher number require more\n   *   space but can process more complex automata.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton, int maxDeterminizedStates) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton, null, true, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton,int).mjava","sourceNew":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   * @param maxDeterminizedStates maximum number of states in the resulting\n   *   automata.  If the automata would need more than this many states\n   *   TooComplextToDeterminizeException is thrown.  Higher number require more\n   *   space but can process more complex automata.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton, int maxDeterminizedStates) {\n    this(term, automaton, maxDeterminizedStates, false);\n  }\n\n","sourceOld":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   * @param maxDeterminizedStates maximum number of states in the resulting\n   *   automata.  If the automata would need more than this many states\n   *   TooComplextToDeterminizeException is thrown.  Higher number require more\n   *   space but can process more complex automata.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton, int maxDeterminizedStates) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton, null, true, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["afa43c2280907c22d8a132b79a2873becc002870","0088660bdc1c051f58fbc38626d61ccf22dfd3e0"],"0088660bdc1c051f58fbc38626d61ccf22dfd3e0":["afa43c2280907c22d8a132b79a2873becc002870"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afa43c2280907c22d8a132b79a2873becc002870":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0088660bdc1c051f58fbc38626d61ccf22dfd3e0"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0088660bdc1c051f58fbc38626d61ccf22dfd3e0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afa43c2280907c22d8a132b79a2873becc002870"],"afa43c2280907c22d8a132b79a2873becc002870":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0088660bdc1c051f58fbc38626d61ccf22dfd3e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}