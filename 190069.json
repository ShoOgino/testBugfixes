{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.WFSTTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.WFSTTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.WFSTTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","sourceNew":"    @Override\n    protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n      if (spare.length + 5 >= buffer.length) {\n        buffer = ArrayUtil.grow(buffer, spare.length + 5);\n      }\n      output.reset(buffer);\n      output.writeBytes(spare.bytes, spare.offset, spare.length);\n      output.writeByte((byte)0); // separator: not used, just for sort order\n      output.writeInt(encodeWeight(weight));\n      writer.write(buffer, 0, output.getPosition());\n    }\n\n","sourceOld":"    @Override\n    protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n      if (spare.length + 5 >= buffer.length) {\n        buffer = ArrayUtil.grow(buffer, spare.length + 5);\n      }\n      output.reset(buffer);\n      output.writeBytes(spare.bytes, spare.offset, spare.length);\n      output.writeByte((byte)0); // separator: not used, just for sort order\n      output.writeInt(encodeWeight(weight));\n      writer.write(buffer, 0, output.getPosition());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c784b25e28b81ddedff2b97738c8286773f00f15","date":1352150231,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.WFSTTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.WFSTTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","sourceNew":"    @Override\n    protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n      if (spare.length + 4 >= buffer.length) {\n        buffer = ArrayUtil.grow(buffer, spare.length + 4);\n      }\n      output.reset(buffer);\n      output.writeBytes(spare.bytes, spare.offset, spare.length);\n      output.writeInt(encodeWeight(weight));\n      writer.write(buffer, 0, output.getPosition());\n    }\n\n","sourceOld":"    @Override\n    protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n      if (spare.length + 5 >= buffer.length) {\n        buffer = ArrayUtil.grow(buffer, spare.length + 5);\n      }\n      output.reset(buffer);\n      output.writeBytes(spare.bytes, spare.offset, spare.length);\n      output.writeByte((byte)0); // separator: not used, just for sort order\n      output.writeInt(encodeWeight(weight));\n      writer.write(buffer, 0, output.getPosition());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.WFSTTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,BytesRef,long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.WFSTTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","sourceNew":"    @Override\n    protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, BytesRef payload, long weight) throws IOException {\n      if (spare.length + 4 >= buffer.length) {\n        buffer = ArrayUtil.grow(buffer, spare.length + 4);\n      }\n      output.reset(buffer);\n      output.writeBytes(spare.bytes, spare.offset, spare.length);\n      output.writeInt(encodeWeight(weight));\n      writer.write(buffer, 0, output.getPosition());\n    }\n\n","sourceOld":"    @Override\n    protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n      if (spare.length + 4 >= buffer.length) {\n        buffer = ArrayUtil.grow(buffer, spare.length + 4);\n      }\n      output.reset(buffer);\n      output.writeBytes(spare.bytes, spare.offset, spare.length);\n      output.writeInt(encodeWeight(weight));\n      writer.write(buffer, 0, output.getPosition());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["c784b25e28b81ddedff2b97738c8286773f00f15"],"c784b25e28b81ddedff2b97738c8286773f00f15":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c784b25e28b81ddedff2b97738c8286773f00f15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c784b25e28b81ddedff2b97738c8286773f00f15":["ada2f7352a7f964fe49bccd13227c4ec38563d39"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}