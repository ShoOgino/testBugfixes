{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.toString();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.toString();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  @Override\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.toString();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.toString();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  @Override\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.toString();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.toString();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}