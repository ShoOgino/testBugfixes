{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGetStreamForEOFTuple().mjava","commits":[{"id":"033e4213755a8acad92da2ac9438d1ca659cbb39","date":1501002133,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGetStreamForEOFTuple().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetStreamForEOFTuple() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c e\", \"test_i\", \"5\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\", \"test_i\", \"4\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=\\\"id,test_t, test_i\\\", sort=\\\"id desc\\\")\";\n    String cat = \"let(a =\"+expr+\",get(a))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 0);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGetStreamForEOFTuple().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetStreamForEOFTuple() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c e\", \"test_i\", \"5\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\", \"test_i\", \"4\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=\\\"id,test_t, test_i\\\", sort=\\\"id desc\\\")\";\n    String cat = \"let(a =\"+expr+\",get(a))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 0);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGetStreamForEOFTuple().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetStreamForEOFTuple() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c e\", \"test_i\", \"5\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\", \"test_i\", \"4\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=\\\"id,test_t, test_i\\\", sort=\\\"id desc\\\")\";\n    String cat = \"let(a =\"+expr+\",get(a))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 0);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testGetStreamForEOFTuple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGetStreamForEOFTuple().mjava","sourceNew":"  @Test\n  public void testGetStreamForEOFTuple() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c e\", \"test_i\", \"5\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\", \"test_i\", \"4\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=\\\"id,test_t, test_i\\\", sort=\\\"id desc\\\")\";\n    String cat = \"let(a =\"+expr+\",get(a))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 0);\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGetStreamForEOFTuple() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c e\", \"test_i\", \"5\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\", \"test_i\", \"4\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=\\\"id,test_t, test_i\\\", sort=\\\"id desc\\\")\";\n    String cat = \"let(a =\"+expr+\",get(a))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 0);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a52341299179de5479672f7cf518bf4b173f34b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","033e4213755a8acad92da2ac9438d1ca659cbb39"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a52341299179de5479672f7cf518bf4b173f34b3"],"033e4213755a8acad92da2ac9438d1ca659cbb39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a52341299179de5479672f7cf518bf4b173f34b3"]},"commit2Childs":{"a52341299179de5479672f7cf518bf4b173f34b3":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"033e4213755a8acad92da2ac9438d1ca659cbb39":["a52341299179de5479672f7cf518bf4b173f34b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a52341299179de5479672f7cf518bf4b173f34b3","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","033e4213755a8acad92da2ac9438d1ca659cbb39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}