{"path":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","commits":[{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property will be\n   *         preserved.\n   */\n  public static CharArraySet copy(Version matchVersion, Set<?> set) {\n    if (set == null)\n      throw new NullPointerException(\"Given set is null\");\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    final boolean ignoreCase = set instanceof CharArraySet ? ((CharArraySet) set).ignoreCase\n        : false;\n    return new CharArraySet(matchVersion, set, ignoreCase);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ddbb40e897ef945a09991763daff7fa6b72ba87","date":1261610677,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      // use fast path instead of iterating all values\n      // this is even on very small sets ~10 times faster than iterating\n      final char[][] entries = new char[source.entries.length][];\n      System.arraycopy(source.entries, 0, entries, 0, entries.length);\n      return new CharArraySet(source.matchVersion, entries, source.ignoreCase, source.count);\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property will be\n   *         preserved.\n   */\n  public static CharArraySet copy(Version matchVersion, Set<?> set) {\n    if (set == null)\n      throw new NullPointerException(\"Given set is null\");\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    final boolean ignoreCase = set instanceof CharArraySet ? ((CharArraySet) set).ignoreCase\n        : false;\n    return new CharArraySet(matchVersion, set, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c09067bd60a59f680992d62794689898c0148ac","date":1265200673,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      // use fast path instead of iterating all values\n      // this is even on very small sets ~10 times faster than iterating\n      final char[][] entries = new char[source.entries.length][];\n      System.arraycopy(source.entries, 0, entries, 0, entries.length);\n      return new CharArraySet(source.matchVersion, entries, source.ignoreCase, source.count);\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Version,Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ddbb40e897ef945a09991763daff7fa6b72ba87":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"3c09067bd60a59f680992d62794689898c0148ac":["3ddbb40e897ef945a09991763daff7fa6b72ba87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3c09067bd60a59f680992d62794689898c0148ac"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3ddbb40e897ef945a09991763daff7fa6b72ba87":["3c09067bd60a59f680992d62794689898c0148ac"],"3c09067bd60a59f680992d62794689898c0148ac":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["3ddbb40e897ef945a09991763daff7fa6b72ba87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}