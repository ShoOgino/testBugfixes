{"path":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#files(Directory,SegmentInfo,int,Set[String]).mjava","commits":[{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#files(Directory,SegmentInfo,int,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void files(Directory dir, SegmentInfo segmentInfo, int codecId,\n      Set<String> files) throws IOException {\n    FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n    boolean indexed = false;\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.getCodecId() == codecId) {\n        indexed |= fieldInfo.isIndexed;\n        if (fieldInfo.hasDocValues()) {\n          String filename = docValuesId(segmentInfo.name, codecId, fieldInfo.number);\n          switch (fieldInfo.getDocValues()) {\n          case BYTES_FIXED_DEREF:\n          case BYTES_VAR_DEREF:\n          case BYTES_VAR_SORTED:\n          case BYTES_FIXED_SORTED:\n          case BYTES_VAR_STRAIGHT:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n          case BYTES_FIXED_STRAIGHT:\n          case FLOAT_32:\n          case FLOAT_64:\n          case INTS:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            break;\n           default:\n             assert false;\n          }\n        }\n\n      }\n    }\n    if (indexed) {\n      other.files(dir, segmentInfo, codecId, files);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d47326e0c6ce589b6962777df409aad0550940fa","date":1304584540,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#files(Directory,SegmentInfo,int,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#files(Directory,SegmentInfo,int,Set[String]).mjava","sourceNew":"  public static void files(Directory dir, SegmentInfo segmentInfo, int codecId,\n      Set<String> files) throws IOException {\n    FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n    boolean indexed = false;\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.getCodecId() == codecId) {\n        indexed |= fieldInfo.isIndexed;\n        if (fieldInfo.hasDocValues()) {\n          String filename = docValuesId(segmentInfo.name, codecId, fieldInfo.number);\n          switch (fieldInfo.getDocValues()) {\n          case BYTES_FIXED_DEREF:\n          case BYTES_VAR_DEREF:\n          case BYTES_VAR_SORTED:\n          case BYTES_FIXED_SORTED:\n          case BYTES_VAR_STRAIGHT:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n          case BYTES_FIXED_STRAIGHT:\n          case FLOAT_32:\n          case FLOAT_64:\n          case INTS:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            break;\n           default:\n             assert false;\n          }\n        }\n\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void files(Directory dir, SegmentInfo segmentInfo, int codecId,\n      Set<String> files) throws IOException {\n    FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n    boolean indexed = false;\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.getCodecId() == codecId) {\n        indexed |= fieldInfo.isIndexed;\n        if (fieldInfo.hasDocValues()) {\n          String filename = docValuesId(segmentInfo.name, codecId, fieldInfo.number);\n          switch (fieldInfo.getDocValues()) {\n          case BYTES_FIXED_DEREF:\n          case BYTES_VAR_DEREF:\n          case BYTES_VAR_SORTED:\n          case BYTES_FIXED_SORTED:\n          case BYTES_VAR_STRAIGHT:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n          case BYTES_FIXED_STRAIGHT:\n          case FLOAT_32:\n          case FLOAT_64:\n          case INTS:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            break;\n           default:\n             assert false;\n          }\n        }\n\n      }\n    }\n    if (indexed) {\n      other.files(dir, segmentInfo, codecId, files);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d47326e0c6ce589b6962777df409aad0550940fa":["d619839baa8ce5503e496b94a9e42ad6f079293f"]},"commit2Childs":{"d619839baa8ce5503e496b94a9e42ad6f079293f":["d47326e0c6ce589b6962777df409aad0550940fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d47326e0c6ce589b6962777df409aad0550940fa":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","d47326e0c6ce589b6962777df409aad0550940fa"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}