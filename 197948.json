{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","commits":[{"id":"d47326e0c6ce589b6962777df409aad0550940fa","date":1304584540,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#DocValuesProducerBase(SegmentInfo,Directory,FieldInfos,int).mjava","sourceNew":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link DocValues} for.\n   * @param dir\n   *          the directory to load the {@link DocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DocValuesProducerBase} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link DocValues} for.\n   * @param dir\n   *          the directory to load the {@link DocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected DocValuesProducerBase(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94","date":1305894342,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","sourceNew":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link DocValues} for.\n   * @param dir\n   *          the directory to load the {@link DocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link DocValues} for.\n   * @param dir\n   *          the directory to load the {@link DocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e5bbad683f7546e96f08ffe8bc50cf447f2586","date":1307113213,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","sourceNew":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link DocValues} for.\n   * @param dir\n   *          the directory to load the {@link DocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","sourceNew":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    //nocommit this needs an IOContext\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","sourceNew":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId, IOContext context) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId, context);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    //nocommit this needs an IOContext\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0b8069918917b33f361011899a1af0cdd2d462","date":1310039336,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int,boolean,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","sourceNew":"  /**\n   * \n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @param useCompoundFile\n   *          if <code>true</code> this producer opens a compound file to read\n   *          IndexDocValues fields, otherwise each field defines its own set of\n   *          files.\n   * @param sortComparator\n   *          defines the sort order for sorted IndexDocValues variants\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir, \n      FieldInfos fieldInfo, int codecId, boolean useCompoundFile, Comparator<BytesRef> sortComparator) throws IOException {\n    this.useCompoundFile = useCompoundFile;\n    this.sortComparator = sortComparator;\n    final Directory directory;\n    if (useCompoundFile) {\n      cfs = directory = dir.openCompoundInput(IndexFileNames.segmentFileName(si.name, codecId, IndexFileNames.COMPOUND_FILE_EXTENSION), 1024);\n    } else {\n      cfs = null;\n      directory = dir;\n    }\n    docValues = load(fieldInfo, si.name, si.docCount, directory, codecId);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int,boolean,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesProducer#DefaultDocValuesProducer(SegmentInfo,Directory,FieldInfos,int).mjava","sourceNew":"  /**\n   * \n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @param useCompoundFile\n   *          if <code>true</code> this producer opens a compound file to read\n   *          IndexDocValues fields, otherwise each field defines its own set of\n   *          files.\n   * @param sortComparator\n   *          defines the sort order for sorted IndexDocValues variants\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir, \n      FieldInfos fieldInfo, int codecId, boolean useCompoundFile, Comparator<BytesRef> sortComparator) throws IOException {\n    this.useCompoundFile = useCompoundFile;\n    this.sortComparator = sortComparator;\n    final Directory directory;\n    if (useCompoundFile) {\n      cfs = directory = dir.openCompoundInput(IndexFileNames.segmentFileName(si.name, codecId, IndexFileNames.COMPOUND_FILE_EXTENSION), 1024);\n    } else {\n      cfs = null;\n      directory = dir;\n    }\n    docValues = load(fieldInfo, si.name, si.docCount, directory, codecId);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DefaultDocValuesProducer} instance and loads all\n   * {@link IndexDocValues} instances for this segment and codec.\n   * \n   * @param si\n   *          the segment info to load the {@link IndexDocValues} for.\n   * @param dir\n   *          the directory to load the {@link IndexDocValues} from.\n   * @param fieldInfo\n   *          the {@link FieldInfos}\n   * @param codecId\n   *          the codec ID\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  public DefaultDocValuesProducer(SegmentInfo si, Directory dir,\n      FieldInfos fieldInfo, int codecId) throws IOException {\n    docValues = load(fieldInfo, si.name, si.docCount, dir, codecId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","bc0b8069918917b33f361011899a1af0cdd2d462"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"bc0b8069918917b33f361011899a1af0cdd2d462":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94":["d47326e0c6ce589b6962777df409aad0550940fa"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["dd04845a7e675e6eda07c4475e3f5ec15d5a2f94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bc0b8069918917b33f361011899a1af0cdd2d462"],"d47326e0c6ce589b6962777df409aad0550940fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","bc0b8069918917b33f361011899a1af0cdd2d462","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","d47326e0c6ce589b6962777df409aad0550940fa"],"b6f9be74ca7baaef11857ad002cad40419979516":[],"bc0b8069918917b33f361011899a1af0cdd2d462":["f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"d47326e0c6ce589b6962777df409aad0550940fa":["dd04845a7e675e6eda07c4475e3f5ec15d5a2f94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f0b9507caf22f292ac0e5e59f62db4275adf4511","b6f9be74ca7baaef11857ad002cad40419979516","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}