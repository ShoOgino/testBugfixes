{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testIntegrate().mjava","commits":[{"id":"8857e97c9165df294ead035e9c708f0c038d29a4","date":1513947461,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testIntegrate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testIntegrate() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=sequence(50, 1, 0), \" +\n                       \"b=spline(a), \" +\n                       \"c=integrate(b, 0, 49), \" +\n                       \"d=integrate(b, 0, 20), \" +\n                       \"e=integrate(b, 20, 49))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Number integral = (Number)tuples.get(0).get(\"c\");\n    assertEquals(integral.doubleValue(), 49, 0.0);\n    integral = (Number)tuples.get(0).get(\"d\");\n    assertEquals(integral.doubleValue(), 20, 0.0);\n    integral = (Number)tuples.get(0).get(\"e\");\n    assertEquals(integral.doubleValue(), 29, 0.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testIntegrate().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testIntegrate().mjava","sourceNew":"  @Test\n  public void testIntegrate() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=sequence(50, 1, 0), \" +\n                       \"b=spline(a), \" +\n                       \"c=integrate(b, 0, 49), \" +\n                       \"d=integrate(b, 0, 20), \" +\n                       \"e=integrate(b, 20, 49))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Number integral = (Number)tuples.get(0).get(\"c\");\n    assertEquals(integral.doubleValue(), 49, 0.0);\n    integral = (Number)tuples.get(0).get(\"d\");\n    assertEquals(integral.doubleValue(), 20, 0.0);\n    integral = (Number)tuples.get(0).get(\"e\");\n    assertEquals(integral.doubleValue(), 29, 0.0);\n  }\n\n","sourceOld":"  @Test\n  public void testIntegrate() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=sequence(50, 1, 0), \" +\n                       \"b=spline(a), \" +\n                       \"c=integrate(b, 0, 49), \" +\n                       \"d=integrate(b, 0, 20), \" +\n                       \"e=integrate(b, 20, 49))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Number integral = (Number)tuples.get(0).get(\"c\");\n    assertEquals(integral.doubleValue(), 49, 0.0);\n    integral = (Number)tuples.get(0).get(\"d\");\n    assertEquals(integral.doubleValue(), 20, 0.0);\n    integral = (Number)tuples.get(0).get(\"e\");\n    assertEquals(integral.doubleValue(), 29, 0.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8857e97c9165df294ead035e9c708f0c038d29a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["8857e97c9165df294ead035e9c708f0c038d29a4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8857e97c9165df294ead035e9c708f0c038d29a4"],"8857e97c9165df294ead035e9c708f0c038d29a4":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}