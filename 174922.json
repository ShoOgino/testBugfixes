{"path":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSpanHighlighting().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSpanHighlighting().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSpanHighlighting().mjava","sourceNew":"  public void testSpanHighlighting() throws Exception {\n    Query query1 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordx\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")) }, 1, false);\n    Query query2 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordc\")) }, 1, false);\n    BooleanQuery bquery = new BooleanQuery();\n    bquery.add(query1, Occur.SHOULD);\n    bquery.add(query2, Occur.SHOULD);\n    doSearching(bquery);\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        mode = QUERY;\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n      }\n    };\n\n    helper.run();\n    assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n        numHighlights == 7);\n  }\n\n","sourceOld":"  public void testSpanHighlighting() throws Exception {\n    Query query1 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordx\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")) }, 1, false);\n    Query query2 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordc\")) }, 1, false);\n    BooleanQuery bquery = new BooleanQuery();\n    bquery.add(query1, Occur.SHOULD);\n    bquery.add(query2, Occur.SHOULD);\n    doSearching(bquery);\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        mode = QUERY;\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n      }\n    };\n\n    helper.run();\n    assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n        numHighlights == 7);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSpanHighlighting().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSpanHighlighting().mjava","sourceNew":"  public void testSpanHighlighting() throws Exception {\n    Query query1 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordx\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")) }, 1, false);\n    Query query2 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordc\")) }, 1, false);\n    BooleanQuery.Builder bquery = new BooleanQuery.Builder();\n    bquery.add(query1, Occur.SHOULD);\n    bquery.add(query2, Occur.SHOULD);\n    doSearching(bquery.build());\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        mode = QUERY;\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n      }\n    };\n\n    helper.run();\n    assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n        numHighlights == 7);\n  }\n\n","sourceOld":"  public void testSpanHighlighting() throws Exception {\n    Query query1 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordx\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")) }, 1, false);\n    Query query2 = new SpanNearQuery(new SpanQuery[] {\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordy\")),\n        new SpanTermQuery(new Term(FIELD_NAME, \"wordc\")) }, 1, false);\n    BooleanQuery bquery = new BooleanQuery();\n    bquery.add(query1, Occur.SHOULD);\n    bquery.add(query2, Occur.SHOULD);\n    doSearching(bquery);\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        mode = QUERY;\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n      }\n    };\n\n    helper.run();\n    assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n        numHighlights == 7);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}