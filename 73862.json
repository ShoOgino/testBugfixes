{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/MultipleAdditiveTreesModel.RegressionTreeNode#explain(float[]).mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/MultipleAdditiveTreesModel.RegressionTreeNode#explain(float[]).mjava","pathOld":"/dev/null","sourceNew":"    public String explain(float[] featureVector) {\n      if (isLeaf()) {\n        return \"val: \" + value;\n      }\n\n      // unsupported feature (tree is looking for a feature that does not exist)\n      if  ((featureIndex < 0) || (featureIndex >= featureVector.length)) {\n        return  \"'\" + feature + \"' does not exist in FV, Return Zero\";\n      }\n\n      // could store extra information about how much training data supported\n      // each branch and report\n      // that here\n\n      if (featureVector[featureIndex] <= threshold) {\n        String rval = \"'\" + feature + \"':\" + featureVector[featureIndex] + \" <= \"\n            + threshold + \", Go Left | \";\n        return rval + left.explain(featureVector);\n      } else {\n        String rval = \"'\" + feature + \"':\" + featureVector[featureIndex] + \" > \"\n            + threshold + \", Go Right | \";\n        return rval + right.explain(featureVector);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/MultipleAdditiveTreesModel.RegressionTreeNode#explain(float[]).mjava","pathOld":"/dev/null","sourceNew":"    public String explain(float[] featureVector) {\n      if (isLeaf()) {\n        return \"val: \" + value;\n      }\n\n      // unsupported feature (tree is looking for a feature that does not exist)\n      if  ((featureIndex < 0) || (featureIndex >= featureVector.length)) {\n        return  \"'\" + feature + \"' does not exist in FV, Return Zero\";\n      }\n\n      // could store extra information about how much training data supported\n      // each branch and report\n      // that here\n\n      if (featureVector[featureIndex] <= threshold) {\n        String rval = \"'\" + feature + \"':\" + featureVector[featureIndex] + \" <= \"\n            + threshold + \", Go Left | \";\n        return rval + left.explain(featureVector);\n      } else {\n        String rval = \"'\" + feature + \"':\" + featureVector[featureIndex] + \" > \"\n            + threshold + \", Go Right | \";\n        return rval + right.explain(featureVector);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"]},"commit2Childs":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}