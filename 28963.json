{"path":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,MetricRegistry,String).mjava","commits":[{"id":"bf28d12ff32dc50412338f84022406e2be7d44f2","date":1483438921,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,MetricRegistry,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, MetricRegistry metricRegistry, String scope)  {\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,MetricRegistry,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, MetricRegistry metricRegistry, String scope)  {\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,SolrInfoBean,MetricRegistry,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,MetricRegistry,String).mjava","sourceNew":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, SolrInfoBean info, MetricRegistry metricRegistry, String scope)  {\n    if (info != null && info.getMetricNames() != null) {\n      info.getMetricNames().add(MetricRegistry.name(scope, \"submitted\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"running\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"completed\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"duration\"));\n    }\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","sourceOld":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, MetricRegistry metricRegistry, String scope)  {\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,MetricRegistry,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, MetricRegistry metricRegistry, String scope)  {\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["bf28d12ff32dc50412338f84022406e2be7d44f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["bf28d12ff32dc50412338f84022406e2be7d44f2"],"bf28d12ff32dc50412338f84022406e2be7d44f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bf28d12ff32dc50412338f84022406e2be7d44f2"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bf28d12ff32dc50412338f84022406e2be7d44f2","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"bf28d12ff32dc50412338f84022406e2be7d44f2":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}