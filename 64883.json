{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[FacetLabel]).mjava","commits":[{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[FacetLabel]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[CategoryPath]).mjava","sourceNew":"  @Override\n  public void getNextFacets(List<FacetLabel> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      FacetLabel cp = new FacetLabel(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","sourceOld":"  @Override\n  public void getNextFacets(List<CategoryPath> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      CategoryPath cp = new CategoryPath(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[FacetField]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[FacetLabel]).mjava","sourceNew":"  @Override\n  public void getNextFacets(List<FacetField> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n\n      String dim = Integer.toString(random.nextInt(maxDims));\n      String[] components = new String[depth-1];\n      for (int k = 0; k < depth-1; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      FacetField ff = new FacetField(dim, components);\n      facets.add(ff);\n      addBytes(ff.toString().length()); // very rough approximation\n    }\n  }\n\n","sourceOld":"  @Override\n  public void getNextFacets(List<FacetLabel> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      FacetLabel cp = new FacetLabel(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}