{"path":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","commits":[{"id":"be9a5d1846ac0beb625ba68da060e16119d9f51e","date":1328820081,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (CharReader.get(new StringReader(s.toString())));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (CharReader.get(new StringReader(s.toString())));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (CharReader.get(new StringReader(s.toString())));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (CharReader.get(new StringReader(s.toString())));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      @Override\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      @Override\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ad8cb078811acf9ef38ece78171f1bfe5786de","date":1474538499,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return valueMutator(getSelector(), next, src -> {\n      if (src instanceof CharSequence) {\n        CharSequence s = (CharSequence) src;\n        StringWriter result = new StringWriter(s.length());\n        Reader in = null;\n        try {\n          in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n          IOUtils.copy(in, result);\n          return result.toString();\n        } catch (IOException e) {\n          // we tried and failed\n          return s;\n        } finally {\n          IOUtils.closeQuietly(in);\n        }\n      }\n      return src;\n    });\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      @Override\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return valueMutator(getSelector(), next, src -> {\n      if (src instanceof CharSequence) {\n        CharSequence s = (CharSequence) src;\n        StringWriter result = new StringWriter(s.length());\n        Reader in = null;\n        try {\n          in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n          IOUtils.copy(in, result);\n          return result.toString();\n        } catch (IOException e) {\n          // we tried and failed\n          return s;\n        } finally {\n          IOUtils.closeQuietly(in);\n        }\n      }\n      return src;\n    });\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      @Override\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/HTMLStripFieldUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return valueMutator(getSelector(), next, src -> {\n      if (src instanceof CharSequence) {\n        CharSequence s = (CharSequence) src;\n        StringWriter result = new StringWriter(s.length());\n        Reader in = null;\n        try {\n          in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n          IOUtils.copy(in, result);\n          return result.toString();\n        } catch (IOException e) {\n          // we tried and failed\n          return s;\n        } finally {\n          IOUtils.closeQuietly(in);\n        }\n      }\n      return src;\n    });\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next) {\n    return new FieldValueMutatingUpdateProcessor(getSelector(), next) {\n      @Override\n      protected Object mutateValue(final Object src) {\n        if (src instanceof CharSequence) {\n          CharSequence s = (CharSequence)src;\n          StringWriter result = new StringWriter(s.length());\n          Reader in = null;\n          try {\n            in = new HTMLStripCharFilter\n              (new StringReader(s.toString()));\n            IOUtils.copy(in, result);\n            return result.toString();\n          } catch (IOException e) {\n            // we tried and failed\n            return s;\n          } finally {\n            IOUtils.closeQuietly(in);\n          }\n\n        }\n        return src;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["fc706b1e03a539d44d99998108feb684bb44cbb2","7530de27b87b961b51f01bd1299b7004d46e8823"],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["be9a5d1846ac0beb625ba68da060e16119d9f51e","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["be9a5d1846ac0beb625ba68da060e16119d9f51e","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7530de27b87b961b51f01bd1299b7004d46e8823","c5ad8cb078811acf9ef38ece78171f1bfe5786de"],"7530de27b87b961b51f01bd1299b7004d46e8823":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"c5ad8cb078811acf9ef38ece78171f1bfe5786de":["7530de27b87b961b51f01bd1299b7004d46e8823"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7530de27b87b961b51f01bd1299b7004d46e8823","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","c5ad8cb078811acf9ef38ece78171f1bfe5786de","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c5ad8cb078811acf9ef38ece78171f1bfe5786de":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}