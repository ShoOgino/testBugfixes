{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","commits":[{"id":"cf9c0f886c5cc7e62234e9496a775d280cb053ab","date":1306438994,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0b8069918917b33f361011899a1af0cdd2d462","date":1310039336,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(10)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      doc.add(newField(\"foo\", \"bar\", Index.NOT_ANALYZED));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader indexReader = IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    Directory toAdd = newDirectory();\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new StandardCodec());\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      CodecProvider provider = new CodecProvider();\n      provider.register(new PulsingCodec(1 + random.nextInt(20)));\n      conf.setCodecProvider(provider);\n      IndexWriter w = new IndexWriter(dir, conf);\n      IndexReader indexReader = IndexReader.open(toAdd);\n      try {\n        w.addIndexes(indexReader);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      indexReader.close();\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9","05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader indexReader = IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1291e4568eb7d9463d751627596ef14baf4c1603":["cf9c0f886c5cc7e62234e9496a775d280cb053ab","bc0b8069918917b33f361011899a1af0cdd2d462"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","bc0b8069918917b33f361011899a1af0cdd2d462"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf9c0f886c5cc7e62234e9496a775d280cb053ab"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc0b8069918917b33f361011899a1af0cdd2d462":["cf9c0f886c5cc7e62234e9496a775d280cb053ab"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7b91922b55d15444d554721b352861d028eb8278"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["bc0b8069918917b33f361011899a1af0cdd2d462"],"cf9c0f886c5cc7e62234e9496a775d280cb053ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf9c0f886c5cc7e62234e9496a775d280cb053ab"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cf9c0f886c5cc7e62234e9496a775d280cb053ab","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"bc0b8069918917b33f361011899a1af0cdd2d462":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7b91922b55d15444d554721b352861d028eb8278"],"cf9c0f886c5cc7e62234e9496a775d280cb053ab":["1291e4568eb7d9463d751627596ef14baf4c1603","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","bc0b8069918917b33f361011899a1af0cdd2d462","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}