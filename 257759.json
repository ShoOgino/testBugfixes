{"path":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","date":1298208351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a","date":1300293010,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a32e313633383bfadd3bbf8b933611c6a07c7c","date":1303945298,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b91922b55d15444d554721b352861d028eb8278":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a"],"79c2cb24929f2649a8875fb629086171f914d5ce":["59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["d619839baa8ce5503e496b94a9e42ad6f079293f","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["7b91922b55d15444d554721b352861d028eb8278","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":[],"59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","79c2cb24929f2649a8875fb629086171f914d5ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f1bdbf92da222965b46c0a942c3857ba56e5c638","59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["70a32e313633383bfadd3bbf8b933611c6a07c7c"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70a32e313633383bfadd3bbf8b933611c6a07c7c","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}