{"path":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d374631bb6f5665bd5907a6186a9bb283a315f7d","date":1336345692,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.shutdown();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.shutdown();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c37ab80ad12b466f3dc92e4baa7b0cbf9aded429","date":1590107358,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    w.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c37ab80ad12b466f3dc92e4baa7b0cbf9aded429"],"c37ab80ad12b466f3dc92e4baa7b0cbf9aded429":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["c37ab80ad12b466f3dc92e4baa7b0cbf9aded429"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c37ab80ad12b466f3dc92e4baa7b0cbf9aded429":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}