{"path":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","commits":[{"id":"ce9115008b2600dda16a6765e06b6b380458c02f","date":1343435746,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","pathOld":"/dev/null","sourceNew":"  private List<String> getRandomOtherJetty(CloudJettyRunner leader, CloudJettyRunner down) {\n    List<String> skipServers = new ArrayList<String>();\n    List<CloudJettyRunner> candidates = new ArrayList<CloudJettyRunner>();\n    candidates.addAll(shardToJetty.get(\"shard1\"));\n\n    if (leader != null) {\n      candidates.remove(leader);\n    }\n    \n    if (down != null) {\n      candidates.remove(down);\n    }\n    \n    CloudJettyRunner cjetty = candidates.get(random().nextInt(candidates.size()));\n    skipServers.add(cjetty.url + \"/\");\n    return skipServers;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","pathOld":"/dev/null","sourceNew":"  private List<String> getRandomOtherJetty(CloudJettyRunner leader, CloudJettyRunner down) {\n    List<String> skipServers = new ArrayList<String>();\n    List<CloudJettyRunner> candidates = new ArrayList<CloudJettyRunner>();\n    candidates.addAll(shardToJetty.get(\"shard1\"));\n\n    if (leader != null) {\n      candidates.remove(leader);\n    }\n    \n    if (down != null) {\n      candidates.remove(down);\n    }\n    \n    CloudJettyRunner cjetty = candidates.get(random().nextInt(candidates.size()));\n    skipServers.add(cjetty.url + \"/\");\n    return skipServers;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","pathOld":"/dev/null","sourceNew":"  private List<String> getRandomOtherJetty(CloudJettyRunner leader, CloudJettyRunner down) {\n    List<String> skipServers = new ArrayList<String>();\n    List<CloudJettyRunner> candidates = new ArrayList<CloudJettyRunner>();\n    candidates.addAll(shardToJetty.get(\"shard1\"));\n\n    if (leader != null) {\n      candidates.remove(leader);\n    }\n    \n    if (down != null) {\n      candidates.remove(down);\n    }\n    \n    CloudJettyRunner cjetty = candidates.get(random().nextInt(candidates.size()));\n    skipServers.add(cjetty.url + \"/\");\n    return skipServers;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ff47835661df91a174abb056b009b53fba16a26","date":1360462074,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","sourceNew":"  private List<CloudJettyRunner> getRandomOtherJetty(CloudJettyRunner leader, CloudJettyRunner down) {\n    List<CloudJettyRunner> skipServers = new ArrayList<CloudJettyRunner>();\n    List<CloudJettyRunner> candidates = new ArrayList<CloudJettyRunner>();\n    candidates.addAll(shardToJetty.get(\"shard1\"));\n\n    if (leader != null) {\n      candidates.remove(leader);\n    }\n    \n    if (down != null) {\n      candidates.remove(down);\n    }\n    \n    CloudJettyRunner cjetty = candidates.get(random().nextInt(candidates.size()));\n    skipServers.add(cjetty);\n    return skipServers;\n  }\n\n","sourceOld":"  private List<String> getRandomOtherJetty(CloudJettyRunner leader, CloudJettyRunner down) {\n    List<String> skipServers = new ArrayList<String>();\n    List<CloudJettyRunner> candidates = new ArrayList<CloudJettyRunner>();\n    candidates.addAll(shardToJetty.get(\"shard1\"));\n\n    if (leader != null) {\n      candidates.remove(leader);\n    }\n    \n    if (down != null) {\n      candidates.remove(down);\n    }\n    \n    CloudJettyRunner cjetty = candidates.get(random().nextInt(candidates.size()));\n    skipServers.add(cjetty.url + \"/\");\n    return skipServers;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#getRandomOtherJetty(CloudJettyRunner,CloudJettyRunner).mjava","sourceNew":"  private List<CloudJettyRunner> getRandomOtherJetty(CloudJettyRunner leader, CloudJettyRunner down) {\n    List<CloudJettyRunner> skipServers = new ArrayList<>();\n    List<CloudJettyRunner> candidates = new ArrayList<>();\n    candidates.addAll(shardToJetty.get(\"shard1\"));\n\n    if (leader != null) {\n      candidates.remove(leader);\n    }\n    \n    if (down != null) {\n      candidates.remove(down);\n    }\n    \n    CloudJettyRunner cjetty = candidates.get(random().nextInt(candidates.size()));\n    skipServers.add(cjetty);\n    return skipServers;\n  }\n\n","sourceOld":"  private List<CloudJettyRunner> getRandomOtherJetty(CloudJettyRunner leader, CloudJettyRunner down) {\n    List<CloudJettyRunner> skipServers = new ArrayList<CloudJettyRunner>();\n    List<CloudJettyRunner> candidates = new ArrayList<CloudJettyRunner>();\n    candidates.addAll(shardToJetty.get(\"shard1\"));\n\n    if (leader != null) {\n      candidates.remove(leader);\n    }\n    \n    if (down != null) {\n      candidates.remove(down);\n    }\n    \n    CloudJettyRunner cjetty = candidates.get(random().nextInt(candidates.size()));\n    skipServers.add(cjetty);\n    return skipServers;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0ff47835661df91a174abb056b009b53fba16a26"],"0ff47835661df91a174abb056b009b53fba16a26":["ce9115008b2600dda16a6765e06b6b380458c02f"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ce9115008b2600dda16a6765e06b6b380458c02f"],"ce9115008b2600dda16a6765e06b6b380458c02f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ce9115008b2600dda16a6765e06b6b380458c02f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ff47835661df91a174abb056b009b53fba16a26":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ce9115008b2600dda16a6765e06b6b380458c02f":["0ff47835661df91a174abb056b009b53fba16a26","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","ce9115008b2600dda16a6765e06b6b380458c02f","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}