{"path":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery.TopTermsScoringBooleanQueryRewrite#addClause(BooleanQuery,Term,int,float,TermContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery.TopTermsScoringBooleanQueryRewrite#addClause(BooleanQuery,Term,int,float,TermContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.TopTermsScoringBooleanQueryRewrite#addClause(BooleanQuery,Term,int,float,TermContext).mjava","sourceNew":"    @Override\n    protected void addClause(BooleanQuery topLevel, Term term, int docCount, float boost, TermContext states) {\n      final TermQuery tq = new TermQuery(term, states);\n      tq.setBoost(boost);\n      topLevel.add(tq, BooleanClause.Occur.SHOULD);\n    }\n\n","sourceOld":"    @Override\n    protected void addClause(BooleanQuery topLevel, Term term, int docCount, float boost, TermContext states) {\n      final TermQuery tq = new TermQuery(term, states);\n      tq.setBoost(boost);\n      topLevel.add(tq, BooleanClause.Occur.SHOULD);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery.TopTermsScoringBooleanQueryRewrite#addClause(BooleanQuery.Builder,Term,int,float,TermContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery.TopTermsScoringBooleanQueryRewrite#addClause(BooleanQuery,Term,int,float,TermContext).mjava","sourceNew":"    @Override\n    protected void addClause(BooleanQuery.Builder topLevel, Term term, int docCount, float boost, TermContext states) {\n      final TermQuery tq = new TermQuery(term, states);\n      tq.setBoost(boost);\n      topLevel.add(tq, BooleanClause.Occur.SHOULD);\n    }\n\n","sourceOld":"    @Override\n    protected void addClause(BooleanQuery topLevel, Term term, int docCount, float boost, TermContext states) {\n      final TermQuery tq = new TermQuery(term, states);\n      tq.setBoost(boost);\n      topLevel.add(tq, BooleanClause.Occur.SHOULD);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}