{"path":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      return new PayloadSpanScorer(spans, this, innerWeight.getSimScorer(context));\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      return new PayloadSpanScorer(spans, this, innerWeight.getSimScorer(context));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"557b118fdfb9d28b6cfe38fac273af58c4d51135","date":1445505363,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      return new PayloadSpans(spans, this, innerWeight.getSimScorer(context));\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      return new PayloadSpanScorer(spans, this, innerWeight.getSimScorer(context));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public PayloadSpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      return new PayloadSpans(spans, this, innerWeight.getSimScorer(context));\n    }\n\n","bugFix":null,"bugIntro":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"edefb5aa2f5e63eb483c128a8ee99c939fdf041d","date":1493251532,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public PayloadSpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ad966686d8994b78aff2375da1a0583bf0cf5ee","date":1493322197,"type":3,"author":"Erik Hatcher","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public PayloadSpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","bugFix":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public PayloadSpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1abe64b887edbb37f6261531cf8a62d88d63fdcb","date":1510236307,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans,\n          decoder == null ? new SimilarityPayloadDecoder(docScorer) : decoder);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, docScorer);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2","date":1510236334,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, decoder);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans,\n          decoder == null ? new SimilarityPayloadDecoder(docScorer) : decoder);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      LeafSimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, decoder);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, decoder);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      LeafSimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, decoder);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null)\n        return null;\n      SimScorer docScorer = innerWeight.getSimScorer(context);\n      PayloadSpans payloadSpans = new PayloadSpans(spans, decoder);\n      return new PayloadSpanScorer(this, payloadSpans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1abe64b887edbb37f6261531cf8a62d88d63fdcb":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b94236357aaa22b76c10629851fe4e376e0cea82":["4d9b8e4987e93a0ea580f91defdc31ce5dd572e2","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["4d9b8e4987e93a0ea580f91defdc31ce5dd572e2"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["7dd748bb245633a8195281556bb0e68a6ea97d18","9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2":["1abe64b887edbb37f6261531cf8a62d88d63fdcb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"edefb5aa2f5e63eb483c128a8ee99c939fdf041d":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"9ad966686d8994b78aff2375da1a0583bf0cf5ee":["7dd748bb245633a8195281556bb0e68a6ea97d18","edefb5aa2f5e63eb483c128a8ee99c939fdf041d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"1abe64b887edbb37f6261531cf8a62d88d63fdcb":["4d9b8e4987e93a0ea580f91defdc31ce5dd572e2"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"edefb5aa2f5e63eb483c128a8ee99c939fdf041d":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"9ad966686d8994b78aff2375da1a0583bf0cf5ee":["1abe64b887edbb37f6261531cf8a62d88d63fdcb","e9017cf144952056066919f1ebc7897ff9bd71b1"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["e9017cf144952056066919f1ebc7897ff9bd71b1","edefb5aa2f5e63eb483c128a8ee99c939fdf041d","9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}