{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","sourceNew":"        private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n            // (, line 74\n            // [, line 75\n            ket = cursor;\n            // substring, line 75\n            among_var = find_among_b(a_4, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 75\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 77\n                    // call R1, line 77\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 77\n                    slice_from(\"ee\");\n                    break;\n                case 2:\n                    // (, line 79\n                    // test, line 80\n                    v_1 = limit - cursor;\n                    // gopast, line 80\n                    golab0: while(true)\n                    {\n                        lab1: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab1;\n                            }\n                            break golab0;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    cursor = limit - v_1;\n                    // delete, line 80\n                    slice_del();\n                    // test, line 81\n                    v_3 = limit - cursor;\n                    // substring, line 81\n                    among_var = find_among_b(a_3, 13);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    cursor = limit - v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 83\n                            // <+, line 83\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                        case 2:\n                            // (, line 86\n                            // [, line 86\n                            ket = cursor;\n                            // next, line 86\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // ], line 86\n                            bra = cursor;\n                            // delete, line 86\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 87\n                            // atmark, line 87\n                            if (cursor != I_p1)\n                            {\n                                return false;\n                            }\n                            // test, line 87\n                            v_4 = limit - cursor;\n                            // call shortv, line 87\n                            if (!r_shortv())\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_4;\n                            // <+, line 87\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                    }\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n            // (, line 74\n            // [, line 75\n            ket = cursor;\n            // substring, line 75\n            among_var = find_among_b(a_4, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 75\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 77\n                    // call R1, line 77\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 77\n                    slice_from(\"ee\");\n                    break;\n                case 2:\n                    // (, line 79\n                    // test, line 80\n                    v_1 = limit - cursor;\n                    // gopast, line 80\n                    golab0: while(true)\n                    {\n                        lab1: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab1;\n                            }\n                            break golab0;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    cursor = limit - v_1;\n                    // delete, line 80\n                    slice_del();\n                    // test, line 81\n                    v_3 = limit - cursor;\n                    // substring, line 81\n                    among_var = find_among_b(a_3, 13);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    cursor = limit - v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 83\n                            // <+, line 83\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                        case 2:\n                            // (, line 86\n                            // [, line 86\n                            ket = cursor;\n                            // next, line 86\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // ], line 86\n                            bra = cursor;\n                            // delete, line 86\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 87\n                            // atmark, line 87\n                            if (cursor != I_p1)\n                            {\n                                return false;\n                            }\n                            // test, line 87\n                            v_4 = limit - cursor;\n                            // call shortv, line 87\n                            if (!r_shortv())\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_4;\n                            // <+, line 87\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                    }\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","sourceNew":"                private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n                    // (, line 74\n                    // [, line 75\n                    ket = cursor;\n                    // substring, line 75\n                    among_var = find_among_b(a_4, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 75\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 77\n                            // call R1, line 77\n                            if (!r_R1())\n                            {\n                                return false;\n                            }\n                            // <-, line 77\n                            slice_from(\"ee\");\n                            break;\n                        case 2:\n                            // (, line 79\n                            // test, line 80\n                            v_1 = limit - cursor;\n                            // gopast, line 80\n                            golab0: while(true)\n                            {\n                                lab1: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab1;\n                                    }\n                                    break golab0;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            cursor = limit - v_1;\n                            // delete, line 80\n                            slice_del();\n                            // test, line 81\n                            v_3 = limit - cursor;\n                            // substring, line 81\n                            among_var = find_among_b(a_3, 13);\n                            if (among_var == 0)\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_3;\n                            switch(among_var) {\n                                case 0:\n                                    return false;\n                                case 1:\n                                    // (, line 83\n                                    // <+, line 83\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 2:\n                                    // (, line 86\n                                    // [, line 86\n                                    ket = cursor;\n                                    // next, line 86\n                                    if (cursor <= limit_backward)\n                                    {\n                                        return false;\n                                    }\n                                    cursor--;\n                                    // ], line 86\n                                    bra = cursor;\n                                    // delete, line 86\n                                    slice_del();\n                                    break;\n                                case 3:\n                                    // (, line 87\n                                    // atmark, line 87\n                                    if (cursor != I_p1)\n                                    {\n                                        return false;\n                                    }\n                                    // test, line 87\n                                    v_4 = limit - cursor;\n                                    // call shortv, line 87\n                                    if (!r_shortv())\n                                    {\n                                        return false;\n                                    }\n                                    cursor = limit - v_4;\n                                    // <+, line 87\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                            }\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n            // (, line 74\n            // [, line 75\n            ket = cursor;\n            // substring, line 75\n            among_var = find_among_b(a_4, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 75\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 77\n                    // call R1, line 77\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 77\n                    slice_from(\"ee\");\n                    break;\n                case 2:\n                    // (, line 79\n                    // test, line 80\n                    v_1 = limit - cursor;\n                    // gopast, line 80\n                    golab0: while(true)\n                    {\n                        lab1: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab1;\n                            }\n                            break golab0;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    cursor = limit - v_1;\n                    // delete, line 80\n                    slice_del();\n                    // test, line 81\n                    v_3 = limit - cursor;\n                    // substring, line 81\n                    among_var = find_among_b(a_3, 13);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    cursor = limit - v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 83\n                            // <+, line 83\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                        case 2:\n                            // (, line 86\n                            // [, line 86\n                            ket = cursor;\n                            // next, line 86\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // ], line 86\n                            bra = cursor;\n                            // delete, line 86\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 87\n                            // atmark, line 87\n                            if (cursor != I_p1)\n                            {\n                                return false;\n                            }\n                            // test, line 87\n                            v_4 = limit - cursor;\n                            // call shortv, line 87\n                            if (!r_shortv())\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_4;\n                            // <+, line 87\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                    }\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","sourceNew":"                private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n                    // (, line 74\n                    // [, line 75\n                    ket = cursor;\n                    // substring, line 75\n                    among_var = find_among_b(a_4, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 75\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 77\n                            // call R1, line 77\n                            if (!r_R1())\n                            {\n                                return false;\n                            }\n                            // <-, line 77\n                            slice_from(\"ee\");\n                            break;\n                        case 2:\n                            // (, line 79\n                            // test, line 80\n                            v_1 = limit - cursor;\n                            // gopast, line 80\n                            golab0: while(true)\n                            {\n                                lab1: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab1;\n                                    }\n                                    break golab0;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            cursor = limit - v_1;\n                            // delete, line 80\n                            slice_del();\n                            // test, line 81\n                            v_3 = limit - cursor;\n                            // substring, line 81\n                            among_var = find_among_b(a_3, 13);\n                            if (among_var == 0)\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_3;\n                            switch(among_var) {\n                                case 0:\n                                    return false;\n                                case 1:\n                                    // (, line 83\n                                    // <+, line 83\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 2:\n                                    // (, line 86\n                                    // [, line 86\n                                    ket = cursor;\n                                    // next, line 86\n                                    if (cursor <= limit_backward)\n                                    {\n                                        return false;\n                                    }\n                                    cursor--;\n                                    // ], line 86\n                                    bra = cursor;\n                                    // delete, line 86\n                                    slice_del();\n                                    break;\n                                case 3:\n                                    // (, line 87\n                                    // atmark, line 87\n                                    if (cursor != I_p1)\n                                    {\n                                        return false;\n                                    }\n                                    // test, line 87\n                                    v_4 = limit - cursor;\n                                    // call shortv, line 87\n                                    if (!r_shortv())\n                                    {\n                                        return false;\n                                    }\n                                    cursor = limit - v_4;\n                                    // <+, line 87\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                            }\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n            // (, line 74\n            // [, line 75\n            ket = cursor;\n            // substring, line 75\n            among_var = find_among_b(a_4, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 75\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 77\n                    // call R1, line 77\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 77\n                    slice_from(\"ee\");\n                    break;\n                case 2:\n                    // (, line 79\n                    // test, line 80\n                    v_1 = limit - cursor;\n                    // gopast, line 80\n                    golab0: while(true)\n                    {\n                        lab1: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab1;\n                            }\n                            break golab0;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    cursor = limit - v_1;\n                    // delete, line 80\n                    slice_del();\n                    // test, line 81\n                    v_3 = limit - cursor;\n                    // substring, line 81\n                    among_var = find_among_b(a_3, 13);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    cursor = limit - v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 83\n                            // <+, line 83\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                        case 2:\n                            // (, line 86\n                            // [, line 86\n                            ket = cursor;\n                            // next, line 86\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // ], line 86\n                            bra = cursor;\n                            // delete, line 86\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 87\n                            // atmark, line 87\n                            if (cursor != I_p1)\n                            {\n                                return false;\n                            }\n                            // test, line 87\n                            v_4 = limit - cursor;\n                            // call shortv, line 87\n                            if (!r_shortv())\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_4;\n                            // <+, line 87\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                    }\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","sourceNew":"                private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n                    // (, line 74\n                    // [, line 75\n                    ket = cursor;\n                    // substring, line 75\n                    among_var = find_among_b(a_4, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 75\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 77\n                            // call R1, line 77\n                            if (!r_R1())\n                            {\n                                return false;\n                            }\n                            // <-, line 77\n                            slice_from(\"ee\");\n                            break;\n                        case 2:\n                            // (, line 79\n                            // test, line 80\n                            v_1 = limit - cursor;\n                            // gopast, line 80\n                            golab0: while(true)\n                            {\n                                lab1: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab1;\n                                    }\n                                    break golab0;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            cursor = limit - v_1;\n                            // delete, line 80\n                            slice_del();\n                            // test, line 81\n                            v_3 = limit - cursor;\n                            // substring, line 81\n                            among_var = find_among_b(a_3, 13);\n                            if (among_var == 0)\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_3;\n                            switch(among_var) {\n                                case 0:\n                                    return false;\n                                case 1:\n                                    // (, line 83\n                                    // <+, line 83\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 2:\n                                    // (, line 86\n                                    // [, line 86\n                                    ket = cursor;\n                                    // next, line 86\n                                    if (cursor <= limit_backward)\n                                    {\n                                        return false;\n                                    }\n                                    cursor--;\n                                    // ], line 86\n                                    bra = cursor;\n                                    // delete, line 86\n                                    slice_del();\n                                    break;\n                                case 3:\n                                    // (, line 87\n                                    // atmark, line 87\n                                    if (cursor != I_p1)\n                                    {\n                                        return false;\n                                    }\n                                    // test, line 87\n                                    v_4 = limit - cursor;\n                                    // call shortv, line 87\n                                    if (!r_shortv())\n                                    {\n                                        return false;\n                                    }\n                                    cursor = limit - v_4;\n                                    // <+, line 87\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                            }\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n            // (, line 74\n            // [, line 75\n            ket = cursor;\n            // substring, line 75\n            among_var = find_among_b(a_4, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 75\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 77\n                    // call R1, line 77\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 77\n                    slice_from(\"ee\");\n                    break;\n                case 2:\n                    // (, line 79\n                    // test, line 80\n                    v_1 = limit - cursor;\n                    // gopast, line 80\n                    golab0: while(true)\n                    {\n                        lab1: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab1;\n                            }\n                            break golab0;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    cursor = limit - v_1;\n                    // delete, line 80\n                    slice_del();\n                    // test, line 81\n                    v_3 = limit - cursor;\n                    // substring, line 81\n                    among_var = find_among_b(a_3, 13);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    cursor = limit - v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 83\n                            // <+, line 83\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                        case 2:\n                            // (, line 86\n                            // [, line 86\n                            ket = cursor;\n                            // next, line 86\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // ], line 86\n                            bra = cursor;\n                            // delete, line 86\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 87\n                            // atmark, line 87\n                            if (cursor != I_p1)\n                            {\n                                return false;\n                            }\n                            // test, line 87\n                            v_4 = limit - cursor;\n                            // call shortv, line 87\n                            if (!r_shortv())\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_4;\n                            // <+, line 87\n                            {\n                                int c = cursor;\n                                insert(cursor, cursor, \"e\");\n                                cursor = c;\n                            }\n                            break;\n                    }\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1b().mjava","sourceNew":"private boolean r_Step_1b() {\n  int among_var;\n  ket = cursor;\n  among_var = find_among_b(a_4);\n  if (among_var == 0)\n  {\n    return false;\n  }\n  bra = cursor;\n  switch (among_var) {\n    case 1:\n      if (!r_R1())\n      {\n        return false;\n      }\n      slice_from(\"ee\");\n      break;\n    case 2:\n      int v_1 = limit - cursor;\n      golab0: while(true)\n      {\n        lab1: {\n          if (!(in_grouping_b(g_v, 97, 121)))\n          {\n            break lab1;\n          }\n          break golab0;\n        }\n        if (cursor <= limit_backward)\n        {\n          return false;\n        }\n        cursor--;\n      }\n      cursor = limit - v_1;\n      slice_del();\n      int v_3 = limit - cursor;\n      among_var = find_among_b(a_3);\n      if (among_var == 0)\n      {\n        return false;\n      }\n      cursor = limit - v_3;\n      switch (among_var) {\n        case 1:\n          {\n            int c = cursor;\n            insert(cursor, cursor, \"e\");\n            cursor = c;\n          }\n          break;\n        case 2:\n          ket = cursor;\n          if (cursor <= limit_backward)\n          {\n            return false;\n          }\n          cursor--;\n          bra = cursor;\n          slice_del();\n          break;\n        case 3:\n          if (cursor != I_p1)\n          {\n            return false;\n          }\n          int v_4 = limit - cursor;\n          if (!r_shortv())\n          {\n            return false;\n          }\n          cursor = limit - v_4;\n          {\n            int c = cursor;\n            insert(cursor, cursor, \"e\");\n            cursor = c;\n          }\n          break;\n      }\n      break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_Step_1b() {\n            int among_var;\n            int v_1;\n            int v_3;\n            int v_4;\n                    // (, line 74\n                    // [, line 75\n                    ket = cursor;\n                    // substring, line 75\n                    among_var = find_among_b(a_4, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 75\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 77\n                            // call R1, line 77\n                            if (!r_R1())\n                            {\n                                return false;\n                            }\n                            // <-, line 77\n                            slice_from(\"ee\");\n                            break;\n                        case 2:\n                            // (, line 79\n                            // test, line 80\n                            v_1 = limit - cursor;\n                            // gopast, line 80\n                            golab0: while(true)\n                            {\n                                lab1: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab1;\n                                    }\n                                    break golab0;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            cursor = limit - v_1;\n                            // delete, line 80\n                            slice_del();\n                            // test, line 81\n                            v_3 = limit - cursor;\n                            // substring, line 81\n                            among_var = find_among_b(a_3, 13);\n                            if (among_var == 0)\n                            {\n                                return false;\n                            }\n                            cursor = limit - v_3;\n                            switch(among_var) {\n                                case 0:\n                                    return false;\n                                case 1:\n                                    // (, line 83\n                                    // <+, line 83\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 2:\n                                    // (, line 86\n                                    // [, line 86\n                                    ket = cursor;\n                                    // next, line 86\n                                    if (cursor <= limit_backward)\n                                    {\n                                        return false;\n                                    }\n                                    cursor--;\n                                    // ], line 86\n                                    bra = cursor;\n                                    // delete, line 86\n                                    slice_del();\n                                    break;\n                                case 3:\n                                    // (, line 87\n                                    // atmark, line 87\n                                    if (cursor != I_p1)\n                                    {\n                                        return false;\n                                    }\n                                    // test, line 87\n                                    v_4 = limit - cursor;\n                                    // call shortv, line 87\n                                    if (!r_shortv())\n                                    {\n                                        return false;\n                                    }\n                                    cursor = limit - v_4;\n                                    // <+, line 87\n                                    {\n                                        int c = cursor;\n                                        insert(cursor, cursor, \"e\");\n                                        cursor = c;\n                                    }\n                                    break;\n                            }\n                            break;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}