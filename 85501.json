{"path":"contrib/ant/src/main/org/apache/lucene/ant/HtmlDocument#getBodyText(Node).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/ant/src/main/org/apache/lucene/ant/HtmlDocument#getBodyText(Node).mjava","pathOld":"sandbox/contributions/ant/src/main/org/apache/lucene/ant/HtmlDocument#getBodyText(Node).mjava","sourceNew":"    /**\n     *  Gets the bodyText attribute of the\n     *  <code>HtmlDocument</code> object.\n     *\n     *@param  node  a DOM Node\n     *@return       The bodyText value\n     */\n    private String getBodyText(Node node) {\n        NodeList nl = node.getChildNodes();\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < nl.getLength(); i++) {\n            Node child = nl.item(i);\n            switch (child.getNodeType()) {\n                case Node.ELEMENT_NODE:\n                    buffer.append(getBodyText(child));\n                    buffer.append(\" \");\n                    break;\n                case Node.TEXT_NODE:\n                    buffer.append(((Text) child).getData());\n                    break;\n            }\n        }\n        return buffer.toString();\n    }\n\n","sourceOld":"    /**\n     *  Gets the bodyText attribute of the\n     *  <code>HtmlDocument</code> object.\n     *\n     *@param  node  a DOM Node\n     *@return       The bodyText value\n     */\n    private String getBodyText(Node node) {\n        NodeList nl = node.getChildNodes();\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < nl.getLength(); i++) {\n            Node child = nl.item(i);\n            switch (child.getNodeType()) {\n                case Node.ELEMENT_NODE:\n                    buffer.append(getBodyText(child));\n                    buffer.append(\" \");\n                    break;\n                case Node.TEXT_NODE:\n                    buffer.append(((Text) child).getData());\n                    break;\n            }\n        }\n        return buffer.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d37a93776a91f5c653f7975d29bdb028d643790c","date":1107701519,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/ant/src/java/org/apache/lucene/ant/HtmlDocument#getBodyText(Node).mjava","pathOld":"contrib/ant/src/main/org/apache/lucene/ant/HtmlDocument#getBodyText(Node).mjava","sourceNew":"    /**\n     *  Gets the bodyText attribute of the\n     *  <code>HtmlDocument</code> object.\n     *\n     *@param  node  a DOM Node\n     *@return       The bodyText value\n     */\n    private String getBodyText(Node node) {\n        NodeList nl = node.getChildNodes();\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < nl.getLength(); i++) {\n            Node child = nl.item(i);\n            switch (child.getNodeType()) {\n                case Node.ELEMENT_NODE:\n                    buffer.append(getBodyText(child));\n                    buffer.append(\" \");\n                    break;\n                case Node.TEXT_NODE:\n                    buffer.append(((Text) child).getData());\n                    break;\n            }\n        }\n        return buffer.toString();\n    }\n\n","sourceOld":"    /**\n     *  Gets the bodyText attribute of the\n     *  <code>HtmlDocument</code> object.\n     *\n     *@param  node  a DOM Node\n     *@return       The bodyText value\n     */\n    private String getBodyText(Node node) {\n        NodeList nl = node.getChildNodes();\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < nl.getLength(); i++) {\n            Node child = nl.item(i);\n            switch (child.getNodeType()) {\n                case Node.ELEMENT_NODE:\n                    buffer.append(getBodyText(child));\n                    buffer.append(\" \");\n                    break;\n                case Node.TEXT_NODE:\n                    buffer.append(((Text) child).getData());\n                    break;\n            }\n        }\n        return buffer.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d37a93776a91f5c653f7975d29bdb028d643790c":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d37a93776a91f5c653f7975d29bdb028d643790c"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["d37a93776a91f5c653f7975d29bdb028d643790c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"d37a93776a91f5c653f7975d29bdb028d643790c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}