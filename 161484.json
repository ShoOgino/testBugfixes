{"path":"src/test/org/apache/lucene/index/TestIndexWriter.MyMergeScheduler#merge(IndexWriter).mjava","commits":[{"id":"5b05dbf5e8a6920898fb3838ec15c9eb64bc01af","date":1191617513,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter.MyMergeScheduler#merge(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"    synchronized public void merge(IndexWriter writer)\n      throws CorruptIndexException, IOException {\n\n      while(true) {\n        MergePolicy.OneMerge merge = writer.getNextMerge();\n        if (merge == null)\n          break;\n        for(int i=0;i<merge.segments.size();i++)\n          assert merge.segments.info(i).docCount < 20;\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter.MyMergeScheduler#merge(IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter.MyMergeScheduler#merge(IndexWriter).mjava","sourceNew":"    @Override\n    synchronized public void merge(IndexWriter writer)\n      throws CorruptIndexException, IOException {\n\n      while(true) {\n        MergePolicy.OneMerge merge = writer.getNextMerge();\n        if (merge == null)\n          break;\n        for(int i=0;i<merge.segments.size();i++)\n          assert merge.segments.info(i).docCount < 20;\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":"    synchronized public void merge(IndexWriter writer)\n      throws CorruptIndexException, IOException {\n\n      while(true) {\n        MergePolicy.OneMerge merge = writer.getNextMerge();\n        if (merge == null)\n          break;\n        for(int i=0;i<merge.segments.size();i++)\n          assert merge.segments.info(i).docCount < 20;\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.MyMergeScheduler#merge(IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter.MyMergeScheduler#merge(IndexWriter).mjava","sourceNew":"    @Override\n    synchronized public void merge(IndexWriter writer)\n      throws CorruptIndexException, IOException {\n\n      while(true) {\n        MergePolicy.OneMerge merge = writer.getNextMerge();\n        if (merge == null)\n          break;\n        for(int i=0;i<merge.segments.size();i++)\n          assert merge.segments.info(i).docCount < 20;\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":"    @Override\n    synchronized public void merge(IndexWriter writer)\n      throws CorruptIndexException, IOException {\n\n      while(true) {\n        MergePolicy.OneMerge merge = writer.getNextMerge();\n        if (merge == null)\n          break;\n        for(int i=0;i<merge.segments.size();i++)\n          assert merge.segments.info(i).docCount < 20;\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["5b05dbf5e8a6920898fb3838ec15c9eb64bc01af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b05dbf5e8a6920898fb3838ec15c9eb64bc01af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b05dbf5e8a6920898fb3838ec15c9eb64bc01af"],"5b05dbf5e8a6920898fb3838ec15c9eb64bc01af":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}