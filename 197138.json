{"path":"solr/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","commits":[{"id":"344d7fb38511184be27e3eba27408ad5f634b91c","date":1270838455,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"/dev/null","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"344d7fb38511184be27e3eba27408ad5f634b91c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["344d7fb38511184be27e3eba27408ad5f634b91c"],"c26f00b574427b55127e869b935845554afde1fa":["344d7fb38511184be27e3eba27408ad5f634b91c","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["344d7fb38511184be27e3eba27408ad5f634b91c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"344d7fb38511184be27e3eba27408ad5f634b91c":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["344d7fb38511184be27e3eba27408ad5f634b91c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}