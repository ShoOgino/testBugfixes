{"path":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","commits":[{"id":"09bf2ac3af855efa1f7631177ce8dad43bace34b","date":1386879352,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<Class,String>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.init(solrHome, context, port, stopAtShutdown);\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<Class,String>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.init(solrHome, context, port, stopAtShutdown);\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","sourceNew":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<Class,String>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","sourceOld":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<Class,String>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.init(solrHome, context, port, stopAtShutdown);\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","sourceNew":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","sourceOld":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<Class,String>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","sourceNew":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.name = \"jetty-\" + JETTY_ID_COUNTER.incrementAndGet();\n    this.coreRootDirectory = System.getProperty(\"coreRootDirectory\", null);\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","sourceOld":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","sourceNew":"  /**\n   * Constructor taking an ordered list of additional (filter holder -&gt; path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.name = \"jetty-\" + JETTY_ID_COUNTER.incrementAndGet();\n    this.coreRootDirectory = System.getProperty(\"coreRootDirectory\", null);\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","sourceOld":"  /**\n   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.name = \"jetty-\" + JETTY_ID_COUNTER.incrementAndGet();\n    this.coreRootDirectory = System.getProperty(\"coreRootDirectory\", null);\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","bugFix":["09bf2ac3af855efa1f7631177ce8dad43bace34b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c66158bb16e902a21272772f1b911f04b1a55abb","date":1424959524,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructor taking an ordered list of additional (filter holder -&gt; path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.name = \"jetty-\" + JETTY_ID_COUNTER.incrementAndGet();\n    this.coreRootDirectory = System.getProperty(\"coreRootDirectory\", null);\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,String,int,String,String,boolean,SortedMap[ServletHolder,String],SSLConfig,SortedMap[Class,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructor taking an ordered list of additional (filter holder -&gt; path spec) mappings.\n   * Filters are placed after the DebugFilter but before the SolrDispatchFilter.\n   */\n  public JettySolrRunner(String solrHome, String context, int port,\n      String solrConfigFilename, String schemaFileName, boolean stopAtShutdown,\n      SortedMap<ServletHolder,String> extraServlets, SSLConfig sslConfig,\n      SortedMap<Class,String> extraRequestFilters) {\n    if (null != extraServlets) { this.extraServlets.putAll(extraServlets); }\n    if (null != extraRequestFilters) {\n      this.extraRequestFilters = new TreeMap<>(extraRequestFilters.comparator());\n      this.extraRequestFilters.putAll(extraRequestFilters);\n    }\n    this.solrConfigFilename = solrConfigFilename;\n    this.schemaFilename = schemaFileName;\n    this.sslConfig = sslConfig;\n\n    this.name = \"jetty-\" + JETTY_ID_COUNTER.incrementAndGet();\n    this.coreRootDirectory = System.getProperty(\"coreRootDirectory\", null);\n\n    this.init(solrHome, context, port, stopAtShutdown);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","c66158bb16e902a21272772f1b911f04b1a55abb"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["09bf2ac3af855efa1f7631177ce8dad43bace34b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","09bf2ac3af855efa1f7631177ce8dad43bace34b"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c66158bb16e902a21272772f1b911f04b1a55abb"],"c66158bb16e902a21272772f1b911f04b1a55abb":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"09bf2ac3af855efa1f7631177ce8dad43bace34b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","09bf2ac3af855efa1f7631177ce8dad43bace34b"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c66158bb16e902a21272772f1b911f04b1a55abb"],"c66158bb16e902a21272772f1b911f04b1a55abb":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09bf2ac3af855efa1f7631177ce8dad43bace34b":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}