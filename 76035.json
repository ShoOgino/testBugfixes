{"path":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","commits":[{"id":"be658e3695ce5dfe92a3ad3d6531cfc987ae8935","date":1329142379,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9e707417ef0ed5eef2369d5af6332d95d2abf5c4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f503a82102feb003545f46c969da131db63ff0a","date":1379201582,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","sourceNew":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipSnapshotsChecksum) log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3a107512eb86932c2d2d250017aff89f7a876de","date":1379216763,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","sourceNew":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipSnapshotsChecksum) log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9d6165e8b8a6195f41e7363a6f11e98045dd58b","date":1382203220,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","sourceNew":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipChecksum) {\n      log(\"Skipping checksum verification for dependencies\", Project.MSG_INFO);\n    } else if (skipSnapshotsChecksum) {\n      log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipSnapshotsChecksum) log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9e707417ef0ed5eef2369d5af6332d95d2abf5c4","date":1405794205,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","sourceNew":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipChecksum) {\n      log(\"Skipping checksum verification for dependencies\", Project.MSG_INFO);\n    } else if (skipSnapshotsChecksum) {\n      log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(FAILURE_MESSAGE);\n    }\n  }\n\n","sourceOld":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipChecksum) {\n      log(\"Skipping checksum verification for dependencies\", Project.MSG_INFO);\n    } else if (skipSnapshotsChecksum) {\n      log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(\"License check failed. Check the logs.\");\n    }\n  }\n\n","bugFix":["be658e3695ce5dfe92a3ad3d6531cfc987ae8935"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e833dc7058b15055673a0a806f483ea82de37dd","date":1449183825,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","sourceNew":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipChecksum) {\n      log(\"Skipping checksum verification for dependencies\", Project.MSG_INFO);\n    } else {\n      if (skipSnapshotsChecksum) {\n        log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n      }\n\n      if (skipRegexChecksum != null) {\n        log(\"Skipping checksum for dependencies matching regex: \" + skipRegexChecksum.pattern(),\n            Project.MSG_INFO);\n      }\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(FAILURE_MESSAGE);\n    }\n  }\n\n","sourceOld":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipChecksum) {\n      log(\"Skipping checksum verification for dependencies\", Project.MSG_INFO);\n    } else if (skipSnapshotsChecksum) {\n      log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(FAILURE_MESSAGE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#execute().mjava","sourceNew":null,"sourceOld":"  /**\n   * Execute the task.\n   */\n  @Override\n  public void execute() throws BuildException {\n    if (licenseMapper == null) {\n      throw new BuildException(\"Expected an embedded <licenseMapper>.\");\n    }\n\n    if (skipChecksum) {\n      log(\"Skipping checksum verification for dependencies\", Project.MSG_INFO);\n    } else {\n      if (skipSnapshotsChecksum) {\n        log(\"Skipping checksum for SNAPSHOT dependencies\", Project.MSG_INFO);\n      }\n\n      if (skipRegexChecksum != null) {\n        log(\"Skipping checksum for dependencies matching regex: \" + skipRegexChecksum.pattern(),\n            Project.MSG_INFO);\n      }\n    }\n\n    jarResources.setProject(getProject());\n    processJars();\n\n    if (failures) {\n      throw new BuildException(FAILURE_MESSAGE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e025cf1c07150c8db28879d785db17eb3a66ca9f":["6e833dc7058b15055673a0a806f483ea82de37dd"],"6e833dc7058b15055673a0a806f483ea82de37dd":["9e707417ef0ed5eef2369d5af6332d95d2abf5c4"],"be658e3695ce5dfe92a3ad3d6531cfc987ae8935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3a107512eb86932c2d2d250017aff89f7a876de":["be658e3695ce5dfe92a3ad3d6531cfc987ae8935","5f503a82102feb003545f46c969da131db63ff0a"],"9e707417ef0ed5eef2369d5af6332d95d2abf5c4":["f9d6165e8b8a6195f41e7363a6f11e98045dd58b"],"f9d6165e8b8a6195f41e7363a6f11e98045dd58b":["5f503a82102feb003545f46c969da131db63ff0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"],"5f503a82102feb003545f46c969da131db63ff0a":["be658e3695ce5dfe92a3ad3d6531cfc987ae8935"]},"commit2Childs":{"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e833dc7058b15055673a0a806f483ea82de37dd":["e025cf1c07150c8db28879d785db17eb3a66ca9f"],"be658e3695ce5dfe92a3ad3d6531cfc987ae8935":["d3a107512eb86932c2d2d250017aff89f7a876de","5f503a82102feb003545f46c969da131db63ff0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be658e3695ce5dfe92a3ad3d6531cfc987ae8935"],"d3a107512eb86932c2d2d250017aff89f7a876de":[],"9e707417ef0ed5eef2369d5af6332d95d2abf5c4":["6e833dc7058b15055673a0a806f483ea82de37dd"],"f9d6165e8b8a6195f41e7363a6f11e98045dd58b":["9e707417ef0ed5eef2369d5af6332d95d2abf5c4"],"5f503a82102feb003545f46c969da131db63ff0a":["d3a107512eb86932c2d2d250017aff89f7a876de","f9d6165e8b8a6195f41e7363a6f11e98045dd58b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3a107512eb86932c2d2d250017aff89f7a876de","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}