{"path":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#incrementToken().mjava","commits":[{"id":"d68e5c46e6a5ebdf4dafec4a123344092b915cc0","date":1256752193,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#incrementToken().mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter#incrementToken().mjava","sourceNew":"  /** Returns the next token in the stream, or null at EOS. */\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","sourceOld":"  /** Returns the next token in the stream, or null at EOS. */\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#incrementToken().mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#incrementToken().mjava","sourceNew":"  /** Returns the next token in the stream, or null at EOS. */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","sourceOld":"  /** Returns the next token in the stream, or null at EOS. */\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#incrementToken().mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#incrementToken().mjava","sourceNew":"  /** Returns the next token in the stream, or null at EOS. */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","sourceOld":"  /** Returns the next token in the stream, or null at EOS. */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}