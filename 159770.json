{"path":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","commits":[{"id":"9f3f873f902c9e3821591809929b6f1283bc0298","date":1338822342,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","pathOld":"/dev/null","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float score = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum() ) );\n      score += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, score ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3f678348ac6e145f874f56992e8c0f78a1ff3c46"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef","date":1339509577,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float totalBoost = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum() ) );\n      totalBoost += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float score = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum() ) );\n      score += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, score ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3f678348ac6e145f874f56992e8c0f78a1ff3c46","date":1385743501,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float totalBoost = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum(), phraseInfo.getBoost() ) );\n      totalBoost += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float totalBoost = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum() ) );\n      totalBoost += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n","bugFix":["9f3f873f902c9e3821591809929b6f1283bc0298"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float totalBoost = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum(), phraseInfo.getBoost() ) );\n      totalBoost += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float totalBoost = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum() ) );\n      totalBoost += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFieldFragList#add(int,int,List[WeightedPhraseInfo]).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float totalBoost = 0;\n    List<SubInfo> subInfos = new ArrayList<>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum(), phraseInfo.getBoost() ) );\n      totalBoost += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FieldFragList#add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList )\n   */\n  @Override\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    float totalBoost = 0;\n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum(), phraseInfo.getBoost() ) );\n      totalBoost += phraseInfo.getBoost();\n    }\n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3f678348ac6e145f874f56992e8c0f78a1ff3c46"],"3f678348ac6e145f874f56992e8c0f78a1ff3c46":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef"],"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef":["9f3f873f902c9e3821591809929b6f1283bc0298"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef","3f678348ac6e145f874f56992e8c0f78a1ff3c46"],"9f3f873f902c9e3821591809929b6f1283bc0298":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f678348ac6e145f874f56992e8c0f78a1ff3c46":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef":["3f678348ac6e145f874f56992e8c0f78a1ff3c46","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f3f873f902c9e3821591809929b6f1283bc0298"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"9f3f873f902c9e3821591809929b6f1283bc0298":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}