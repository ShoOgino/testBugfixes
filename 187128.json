{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","commits":[{"id":"a4d374b2bebd0d52acaa61038fbf23068620fba7","date":1353240004,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String,boolean).mjava","sourceNew":"  // nocommit shrink the sync'd part to a cache miss\n  synchronized NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    return simpleDVProducer.getNumeric(fi);\n  }\n\n","sourceOld":"  // nocommit shrink the sync'd part to a cache miss\n  synchronized NumericDocValues getNumericDocValues(String field, boolean direct) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType())) {\n      throw new IllegalArgumentException(\"field \\\"\" + field + \"\\\" was not indexed as a numeric doc values field\");\n    }\n\n    if (direct) {\n      return simpleDVProducer.getDirectNumeric(fi);\n    } else {\n      if (!docValuesCache.containsKey(fi)) {\n        NumericDocValues dv = simpleDVProducer.getNumeric(fi);\n        if (dv != null) {\n          docValuesCache.put(fi, dv);\n        }\n      }\n      return (NumericDocValues) docValuesCache.get(fi);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6295f14d43685811599f8a8f02a63d75ec6bd8fe","date":1353248103,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","sourceNew":"  // nocommit shrink the sync'd part to a cache miss\n  synchronized NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    return simpleDVProducer.getNumeric(fi);\n  }\n\n","sourceOld":"  // nocommit shrink the sync'd part to a cache miss\n  synchronized NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    return simpleDVProducer.getNumeric(fi);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8dc51c751527ebb1b590ae633bd148739b17f58","date":1353350633,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","sourceNew":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    return simpleDVProducer.getNumeric(fi);\n  }\n\n","sourceOld":"  // nocommit shrink the sync'd part to a cache miss\n  synchronized NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    return simpleDVProducer.getNumeric(fi);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2899ae5069a2533466ac842042478e67263e1f43","date":1354624628,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","sourceNew":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    return simpleDocValuesLocal.get().getNumeric(fi);\n  }\n\n","sourceOld":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    return simpleDVProducer.getNumeric(fi);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed00c8118962f490744732ab611c595c91b80d1c","date":1356020966,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","sourceNew":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    Map<String,Object> dvFields = simpleDocValuesLocal.get();\n\n    NumericDocValues dvs = (NumericDocValues) dvFields.get(field);\n    if (dvs == null) {\n      dvs = simpleDVProducer.getNumeric(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    return simpleDocValuesLocal.get().getNumeric(fi);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","sourceNew":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (fi.getDocValuesType() != DocValuesType.NUMERIC) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    Map<String,Object> dvFields = simpleDocValuesLocal.get();\n\n    NumericDocValues dvs = (NumericDocValues) dvFields.get(field);\n    if (dvs == null) {\n      dvs = simpleDVProducer.getNumeric(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (!DocValues.isNumber(fi.getDocValuesType()) && !DocValues.isFloat(fi.getDocValuesType())) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    Map<String,Object> dvFields = simpleDocValuesLocal.get();\n\n    NumericDocValues dvs = (NumericDocValues) dvFields.get(field);\n    if (dvs == null) {\n      dvs = simpleDVProducer.getNumeric(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f06b860886fc48ea071171354835b8aed8a94de","date":1358789970,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","sourceNew":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (fi.getDocValuesType() != DocValuesType.NUMERIC) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    assert dvProducer != null;\n\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    NumericDocValues dvs = (NumericDocValues) dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getNumeric(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (fi.getDocValuesType() != DocValuesType.NUMERIC) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    // nocommit change to assert != null!!\n    if (simpleDVProducer == null) {\n      return null;\n    }\n\n    Map<String,Object> dvFields = simpleDocValuesLocal.get();\n\n    NumericDocValues dvs = (NumericDocValues) dvFields.get(field);\n    if (dvs == null) {\n      dvs = simpleDVProducer.getNumeric(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (fi.getDocValuesType() != DocValuesType.NUMERIC) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    assert dvProducer != null;\n\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    NumericDocValues dvs = (NumericDocValues) dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getNumeric(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNumericDocValues(String).mjava","sourceNew":null,"sourceOld":"  NumericDocValues getNumericDocValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n    if (fi.getDocValuesType() != DocValuesType.NUMERIC) {\n      // DocValues were not numeric\n      return null;\n    }\n\n    assert dvProducer != null;\n\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    NumericDocValues dvs = (NumericDocValues) dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getNumeric(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"6295f14d43685811599f8a8f02a63d75ec6bd8fe":["a4d374b2bebd0d52acaa61038fbf23068620fba7"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8f06b860886fc48ea071171354835b8aed8a94de"],"8f06b860886fc48ea071171354835b8aed8a94de":["0837ab0472feecb3a54260729d845f839e1cbd72"],"ed00c8118962f490744732ab611c595c91b80d1c":["2899ae5069a2533466ac842042478e67263e1f43"],"2899ae5069a2533466ac842042478e67263e1f43":["d8dc51c751527ebb1b590ae633bd148739b17f58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["ed00c8118962f490744732ab611c595c91b80d1c"],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d8dc51c751527ebb1b590ae633bd148739b17f58":["6295f14d43685811599f8a8f02a63d75ec6bd8fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e072d0b1fc19e0533d8ce432eed245196bca6fde"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6295f14d43685811599f8a8f02a63d75ec6bd8fe":["d8dc51c751527ebb1b590ae633bd148739b17f58"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"8f06b860886fc48ea071171354835b8aed8a94de":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ed00c8118962f490744732ab611c595c91b80d1c":["0837ab0472feecb3a54260729d845f839e1cbd72"],"2899ae5069a2533466ac842042478e67263e1f43":["ed00c8118962f490744732ab611c595c91b80d1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","a4d374b2bebd0d52acaa61038fbf23068620fba7"],"0837ab0472feecb3a54260729d845f839e1cbd72":["8f06b860886fc48ea071171354835b8aed8a94de"],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["6295f14d43685811599f8a8f02a63d75ec6bd8fe"],"d8dc51c751527ebb1b590ae633bd148739b17f58":["2899ae5069a2533466ac842042478e67263e1f43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}