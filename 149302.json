{"path":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Query).mjava","sourceNew":"  /**\n   * Creates a new {@code DrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public DrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@code SimpleDrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6e499df4729e7162d5b39a70b0142e3186a029f","date":1385554050,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","sourceNew":"  /** Creates a new {@code DrillDownQuery} over the given base query. Can be\n   *  {@code null}, in which case the result {@link Query} from\n   *  {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   *  the added categories only. */\n  public DrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@code DrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public DrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a new {@code DrillDownQuery} over the given base query. Can be\n   *  {@code null}, in which case the result {@link Query} from\n   *  {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   *  the added categories only. */\n  public DrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","sourceNew":"  /** Creates a new {@code DrillDownQuery} over the given base query. Can be\n   *  {@code null}, in which case the result {@link Query} from\n   *  {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   *  the added categories only. */\n  public DrillDownQuery(FacetsConfig config, Query baseQuery) {\n    this.baseQuery = baseQuery;\n    this.config = config;\n  }\n\n","sourceOld":"  /** Creates a new {@code DrillDownQuery} over the given base query. Can be\n   *  {@code null}, in which case the result {@link Query} from\n   *  {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   *  the added categories only. */\n  public DrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"b6e499df4729e7162d5b39a70b0142e3186a029f":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6e499df4729e7162d5b39a70b0142e3186a029f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b6e499df4729e7162d5b39a70b0142e3186a029f":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["b6e499df4729e7162d5b39a70b0142e3186a029f"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}