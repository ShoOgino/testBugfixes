{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"760628478e121972168791a2afa6af915192c4a6","date":1459842108,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPoint[] pathPoints = new GeoPoint[] {\n      new GeoPoint(planetModel, 84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE)};\n    final GeoPath path = GeoPathFactory.makeGeoPath(planetModel, 4 * RADIANS_PER_DEGREE, pathPoints);\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPoint[] pathPoints = new GeoPoint[] {\n      new GeoPoint(planetModel, 84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE)};\n    final GeoPath path = GeoPathFactory.makeGeoPath(planetModel, 4 * RADIANS_PER_DEGREE, pathPoints);\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"760628478e121972168791a2afa6af915192c4a6":["af2638813028b254a88b418ebeafb541afb49653"],"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":["af2638813028b254a88b418ebeafb541afb49653","760628478e121972168791a2afa6af915192c4a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["760628478e121972168791a2afa6af915192c4a6"]},"commit2Childs":{"760628478e121972168791a2afa6af915192c4a6":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"af2638813028b254a88b418ebeafb541afb49653":["760628478e121972168791a2afa6af915192c4a6","09af2c9610ce53a4b25fd99344299b40318a4a1a"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}