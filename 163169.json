{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","commits":[{"id":"5824040d7a4884dc1ce62a8c60d0c34571701d35","date":1420895330,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","pathOld":"/dev/null","sourceNew":"  public void testAttributeClone() throws Exception {\n    NumericTermAttributeImpl att = new NumericTermAttributeImpl();\n    NumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    NumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804b857d1066ab5185b3b9101bde41b0b71426ec","date":1435846169,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","sourceNew":"  public void testAttributeClone() throws Exception {\n    NumericTermAttributeImpl att = new NumericTermAttributeImpl();\n    att.init(1234L, 64, 8, 0); // set some value, to make getBytesRef() work\n    NumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    NumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","sourceOld":"  public void testAttributeClone() throws Exception {\n    NumericTermAttributeImpl att = new NumericTermAttributeImpl();\n    NumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    NumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","bugFix":null,"bugIntro":["b0453097db386e8921d9486d1cd054b6713ce6fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","sourceNew":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(1234L, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","sourceOld":"  public void testAttributeClone() throws Exception {\n    NumericTermAttributeImpl att = new NumericTermAttributeImpl();\n    att.init(1234L, 64, 8, 0); // set some value, to make getBytesRef() work\n    NumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    NumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0453097db386e8921d9486d1cd054b6713ce6fb","date":1455382977,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","sourceNew":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","sourceOld":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(1234L, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","bugFix":["804b857d1066ab5185b3b9101bde41b0b71426ec"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af5ba0166322092193d4c29880b0f7670fc7ca0","date":1471440525,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#testAttributeClone().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","sourceNew":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","sourceOld":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#testAttributeClone().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","sourceNew":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","sourceOld":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#testAttributeClone().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","sourceNew":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","sourceOld":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testAttributeClone().mjava","sourceNew":null,"sourceOld":"  public void testAttributeClone() throws Exception {\n    LegacyNumericTermAttributeImpl att = new LegacyNumericTermAttributeImpl();\n    att.init(lvalue, 64, 8, 0); // set some value, to make getBytesRef() work\n    LegacyNumericTermAttributeImpl copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    LegacyNumericTermAttributeImpl copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n    \n    // LUCENE-7027 test\n    att.init(lvalue, 64, 8, 64); // Exhausted TokenStream -> should return empty BytesRef\n    assertEquals(new BytesRef(), att.getBytesRef());\n    copy = TestCharTermAttributeImpl.assertCloneIsEqual(att);\n    assertEquals(new BytesRef(), copy.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy.getBytesRef());\n    copy2 = TestCharTermAttributeImpl.assertCopyIsEqual(att);\n    assertEquals(new BytesRef(), copy2.getBytesRef());\n    assertNotSame(att.getBytesRef(), copy2.getBytesRef());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"804b857d1066ab5185b3b9101bde41b0b71426ec":["5824040d7a4884dc1ce62a8c60d0c34571701d35"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["b0453097db386e8921d9486d1cd054b6713ce6fb","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"5824040d7a4884dc1ce62a8c60d0c34571701d35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["b0453097db386e8921d9486d1cd054b6713ce6fb"],"b0453097db386e8921d9486d1cd054b6713ce6fb":["770342641f7b505eaa8dccdc666158bff2419109"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["b0453097db386e8921d9486d1cd054b6713ce6fb","5af5ba0166322092193d4c29880b0f7670fc7ca0"],"770342641f7b505eaa8dccdc666158bff2419109":["804b857d1066ab5185b3b9101bde41b0b71426ec"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b0453097db386e8921d9486d1cd054b6713ce6fb","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"804b857d1066ab5185b3b9101bde41b0b71426ec":["770342641f7b505eaa8dccdc666158bff2419109"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5824040d7a4884dc1ce62a8c60d0c34571701d35":["804b857d1066ab5185b3b9101bde41b0b71426ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824040d7a4884dc1ce62a8c60d0c34571701d35"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"b0453097db386e8921d9486d1cd054b6713ce6fb":["403d05f7f8d69b65659157eff1bc1d2717f04c66","5af5ba0166322092193d4c29880b0f7670fc7ca0","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"770342641f7b505eaa8dccdc666158bff2419109":["b0453097db386e8921d9486d1cd054b6713ce6fb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}