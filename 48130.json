{"path":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#compare(int,int).mjava","commits":[{"id":"ac3e6437547a34cce2b5405ce0cf9e3af578401e","date":1243373693,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#compare(int,int).mjava","pathOld":"/dev/null","sourceNew":"  public int compare(int slot1, int slot2) {\n      int ord1 = ords[slot1];\n      int ord2 = ords[slot2];\n      int cmp = ord1-ord2;\n      if (ord1==0 || ord2==0) {\n        if (cmp==0) return 0;\n        return ord1==0 ? nullCmp : -nullCmp;\n      }\n\n      if (readerGen[slot1] == readerGen[slot2]) {\n        if (cmp != 0) {\n          return cmp;\n        }\n      }\n\n      final String val1 = values[slot1];\n      final String val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return nullCmp;\n      } else if (val2 == null) {\n        return -nullCmp;\n      }\n      return val1.compareTo(val2);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8be74b6364187be2db818003ff6f492fce9a08b0","a05818166782d252a03edc21cda3f0f186170b70"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8be74b6364187be2db818003ff6f492fce9a08b0","date":1266457611,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#compare(int,int).mjava","pathOld":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#compare(int,int).mjava","sourceNew":"    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        int cmp = ords[slot1] - ords[slot2];\n        if (cmp != 0) {\n          return cmp;\n        }\n      }\n\n      final String val1 = values[slot1];\n      final String val2 = values[slot2];\n\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return 1;\n      } else if (val2 == null) {\n        return -1;\n      }\n      return val1.compareTo(val2);\n    }\n\n","sourceOld":"  public int compare(int slot1, int slot2) {\n      int ord1 = ords[slot1];\n      int ord2 = ords[slot2];\n      int cmp = ord1-ord2;\n      if (ord1==0 || ord2==0) {\n        if (cmp==0) return 0;\n        return ord1==0 ? nullCmp : -nullCmp;\n      }\n\n      if (readerGen[slot1] == readerGen[slot2]) {\n        if (cmp != 0) {\n          return cmp;\n        }\n      }\n\n      final String val1 = values[slot1];\n      final String val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return nullCmp;\n      } else if (val2 == null) {\n        return -nullCmp;\n      }\n      return val1.compareTo(val2);\n    }\n\n","bugFix":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"bugIntro":["a05818166782d252a03edc21cda3f0f186170b70"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#compare(int,int).mjava","pathOld":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#compare(int,int).mjava","sourceNew":"    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        int cmp = ords[slot1] - ords[slot2];\n        if (cmp != 0) {\n          return cmp;\n        }\n      }\n\n      final String val1 = values[slot1];\n      final String val2 = values[slot2];\n\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return 1;\n      } else if (val2 == null) {\n        return -1;\n      }\n      return val1.compareTo(val2);\n    }\n\n","sourceOld":"    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        int cmp = ords[slot1] - ords[slot2];\n        if (cmp != 0) {\n          return cmp;\n        }\n      }\n\n      final String val1 = values[slot1];\n      final String val2 = values[slot2];\n\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return 1;\n      } else if (val2 == null) {\n        return -1;\n      }\n      return val1.compareTo(val2);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8be74b6364187be2db818003ff6f492fce9a08b0":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"ad94625fb8d088209f46650c8097196fec67f00c":["8be74b6364187be2db818003ff6f492fce9a08b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["8be74b6364187be2db818003ff6f492fce9a08b0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8be74b6364187be2db818003ff6f492fce9a08b0":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}