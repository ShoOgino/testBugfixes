{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#collectFiles(File,ArrayList[File]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#collectFiles(File,ArrayList[File]).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#collectFiles(File,ArrayList[File]).mjava","sourceNew":"  /**\n   * A convenience method for collecting all the files of a content source from\n   * a given directory. The collected {@link File} instances are stored in the\n   * given <code>files</code>.\n   */\n  protected final void collectFiles(File dir, ArrayList<File> files) {\n    if (!dir.canRead()) {\n      return;\n    }\n    \n    File[] dirFiles = dir.listFiles();\n    Arrays.sort(dirFiles);\n    for (int i = 0; i < dirFiles.length; i++) {\n      File file = dirFiles[i];\n      if (file.isDirectory()) {\n        collectFiles(file, files);\n      } else if (file.canRead()) {\n        files.add(file);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * A convenience method for collecting all the files of a content source from\n   * a given directory. The collected {@link File} instances are stored in the\n   * given <code>files</code>.\n   */\n  protected final void collectFiles(File dir, ArrayList<File> files) {\n    if (!dir.canRead()) {\n      return;\n    }\n    \n    File[] dirFiles = dir.listFiles();\n    Arrays.sort(dirFiles);\n    for (int i = 0; i < dirFiles.length; i++) {\n      File file = dirFiles[i];\n      if (file.isDirectory()) {\n        collectFiles(file, files);\n      } else if (file.canRead()) {\n        files.add(file);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#collectFiles(File,ArrayList[File]).mjava","sourceNew":null,"sourceOld":"  /**\n   * A convenience method for collecting all the files of a content source from\n   * a given directory. The collected {@link File} instances are stored in the\n   * given <code>files</code>.\n   */\n  protected final void collectFiles(File dir, ArrayList<File> files) {\n    if (!dir.canRead()) {\n      return;\n    }\n    \n    File[] dirFiles = dir.listFiles();\n    Arrays.sort(dirFiles);\n    for (int i = 0; i < dirFiles.length; i++) {\n      File file = dirFiles[i];\n      if (file.isDirectory()) {\n        collectFiles(file, files);\n      } else if (file.canRead()) {\n        files.add(file);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}