{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","commits":[{"id":"f714d3d16beb7d9cc74e7ae85c110a7976c62938","date":1296412234,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (enablePositionIncrements) {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (skippedPositions != 0) {\n            posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n          }\n          return true;\n        }\n        skippedPositions += posIncrAtt.getPositionIncrement();\n      }\n    } else {\n      while (input.incrementToken()) {\n        if (accept()) {\n          return true;\n        }\n      }\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (enablePositionIncrements) {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (skippedPositions != 0) {\n            posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n          }\n          return true;\n        }\n        skippedPositions += posIncrAtt.getPositionIncrement();\n      }\n    } else {\n      while (input.incrementToken()) {\n        if (accept()) {\n          return true;\n        }\n      }\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (enablePositionIncrements) {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (skippedPositions != 0) {\n            posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n          }\n          return true;\n        }\n        skippedPositions += posIncrAtt.getPositionIncrement();\n      }\n    } else {\n      while (input.incrementToken()) {\n        if (accept()) {\n          return true;\n        }\n      }\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54c9be9a3aac8e0bab09abb249165f90a6758f01","date":1331903190,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (enablePositionIncrements) {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (skippedPositions != 0) {\n            posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n          }\n          return true;\n        }\n        skippedPositions += posIncrAtt.getPositionIncrement();\n      }\n    } else {\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (first) {\n            // first token having posinc=0 is illegal.\n            if (posIncrAtt.getPositionIncrement() == 0) {\n              posIncrAtt.setPositionIncrement(1);\n            }\n            first = false;\n          }\n          return true;\n        }\n      }\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (enablePositionIncrements) {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (skippedPositions != 0) {\n            posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n          }\n          return true;\n        }\n        skippedPositions += posIncrAtt.getPositionIncrement();\n      }\n    } else {\n      while (input.incrementToken()) {\n        if (accept()) {\n          return true;\n        }\n      }\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (enablePositionIncrements) {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (skippedPositions != 0) {\n            posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n          }\n          return true;\n        }\n        skippedPositions += posIncrAtt.getPositionIncrement();\n      }\n    } else {\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (first) {\n            // first token having posinc=0 is illegal.\n            if (posIncrAtt.getPositionIncrement() == 0) {\n              posIncrAtt.setPositionIncrement(1);\n            }\n            first = false;\n          }\n          return true;\n        }\n      }\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (enablePositionIncrements) {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (skippedPositions != 0) {\n            posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n          }\n          return true;\n        }\n        skippedPositions += posIncrAtt.getPositionIncrement();\n      }\n    } else {\n      while (input.incrementToken()) {\n        if (accept()) {\n          if (first) {\n            // first token having posinc=0 is illegal.\n            if (posIncrAtt.getPositionIncrement() == 0) {\n              posIncrAtt.setPositionIncrement(1);\n            }\n            first = false;\n          }\n          return true;\n        }\n      }\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["54c9be9a3aac8e0bab09abb249165f90a6758f01"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54c9be9a3aac8e0bab09abb249165f90a6758f01":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["29ef99d61cda9641b6250bf9567329a6e65f901d","54c9be9a3aac8e0bab09abb249165f90a6758f01","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f714d3d16beb7d9cc74e7ae85c110a7976c62938","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"54c9be9a3aac8e0bab09abb249165f90a6758f01":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}