{"path":"src/test/org/apache/solr/handler/component/StatsComponentTest#testFacetStatisticsResult().mjava","commits":[{"id":"14b542d31942ca04fb21d1c3d780e7a0b6eabcee","date":1250092476,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/StatsComponentTest#testFacetStatisticsResult().mjava","pathOld":"/dev/null","sourceNew":"  public void testFacetStatisticsResult() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\", \"stats_i\", \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"stats_i\", \"20\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", \"stats_i\", \"30\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", \"stats_i\", \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"stats_i\");\n    args.put(StatsParams.STATS_FACET, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test value for active_s=true\", req\n            , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='2']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req\n            , \"//lst[@name='false']/double[@name='min'][.='30.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='2']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2500.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='35.0']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='7.0710678118654755']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4002610a071fd76efb20afdc94b0e963256a9b33","date":1254775552,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsResult(String).mjava","pathOld":"src/test/org/apache/solr/handler/component/StatsComponentTest#testFacetStatisticsResult().mjava","sourceNew":"  public void doTestFacetStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"20\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", f, \"30\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    assertQ(\"test value for active_s=true\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='2']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f, \"stats.facet\",\"active_s\")\n            , \"//lst[@name='false']/double[@name='min'][.='30.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='2']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2500.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='35.0']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='7.0710678118654755']\"\n    );\n  }\n\n","sourceOld":"  public void testFacetStatisticsResult() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\", \"stats_i\", \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"stats_i\", \"20\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"3\", \"stats_i\", \"30\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", \"stats_i\", \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"stats_i\");\n    args.put(StatsParams.STATS_FACET, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test value for active_s=true\", req\n            , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n            , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n            , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n            , \"//lst[@name='true']/long[@name='count'][.='2']\"\n            , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n            , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n            , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n    );\n\n    assertQ(\"test value for active_s=false\", req\n            , \"//lst[@name='false']/double[@name='min'][.='30.0']\"\n            , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n            , \"//lst[@name='false']/double[@name='sum'][.='70.0']\"\n            , \"//lst[@name='false']/long[@name='count'][.='2']\"\n            , \"//lst[@name='false']/long[@name='missing'][.='0']\"\n            , \"//lst[@name='false']/double[@name='sumOfSquares'][.='2500.0']\"\n            , \"//lst[@name='false']/double[@name='mean'][.='35.0']\"\n            , \"//lst[@name='false']/double[@name='stddev'][.='7.0710678118654755']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":["fd87688d42377075c163529dd14ecd7827f9f45f","fd87688d42377075c163529dd14ecd7827f9f45f","fd87688d42377075c163529dd14ecd7827f9f45f"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4002610a071fd76efb20afdc94b0e963256a9b33":["14b542d31942ca04fb21d1c3d780e7a0b6eabcee"],"14b542d31942ca04fb21d1c3d780e7a0b6eabcee":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4002610a071fd76efb20afdc94b0e963256a9b33":[],"14b542d31942ca04fb21d1c3d780e7a0b6eabcee":["4002610a071fd76efb20afdc94b0e963256a9b33"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["14b542d31942ca04fb21d1c3d780e7a0b6eabcee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4002610a071fd76efb20afdc94b0e963256a9b33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}