{"path":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","commits":[{"id":"08d2f389293a0aa85d356ba23569b53151395ab0","date":1294838858,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#beforeClass().mjava","sourceNew":"\t@Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","sourceOld":"\t@BeforeClass\n\tpublic static void beforeClass() throws Exception {\n\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"\t@Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","sourceOld":"\t@Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","sourceOld":"\t@Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31aff65a420ac3dfd25611e2c4a99d38b7dd60e9","date":1307387688,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","sourceOld":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","sourceOld":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","sourceOld":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","sourceOld":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","sourceOld":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellPossibilityIteratorTest#setUp().mjava","sourceNew":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","sourceOld":"\t@Override\n  @Before\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tsuggestions.clear();\n\n\t\tLinkedHashMap<String, Integer> AYE = new LinkedHashMap<String, Integer>();\n\t\tAYE.put(\"I\", 0);\n\t\tAYE.put(\"II\", 0);\n\t\tAYE.put(\"III\", 0);\n\t\tAYE.put(\"IV\", 0);\n\t\tAYE.put(\"V\", 0);\n\t\tAYE.put(\"VI\", 0);\n\t\tAYE.put(\"VII\", 0);\n\t\tAYE.put(\"VIII\", 0);\n\t\t\n\t\tLinkedHashMap<String, Integer> BEE = new LinkedHashMap<String, Integer>();\n\t\tBEE.put(\"alpha\", 0);\n\t\tBEE.put(\"beta\", 0);\n\t\tBEE.put(\"gamma\", 0);\n\t\tBEE.put(\"delta\", 0);\n\t\tBEE.put(\"epsilon\", 0);\n\t\tBEE.put(\"zeta\", 0);\n\t\tBEE.put(\"eta\", 0);\n\t\tBEE.put(\"theta\", 0);\n\t\tBEE.put(\"iota\", 0);\n\t\t\n\n\t\tLinkedHashMap<String, Integer> CEE = new LinkedHashMap<String, Integer>();\n\t\tCEE.put(\"one\", 0);\n\t\tCEE.put(\"two\", 0);\n\t\tCEE.put(\"three\", 0);\n\t\tCEE.put(\"four\", 0);\n\t\tCEE.put(\"five\", 0);\n\t\tCEE.put(\"six\", 0);\n\t\tCEE.put(\"seven\", 0);\n\t\tCEE.put(\"eight\", 0);\n\t\tCEE.put(\"nine\", 0);\n\t\tCEE.put(\"ten\", 0);\n\n\t\tsuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tsuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tsuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE\", 0, 2), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE\", 0, 2), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE\", 0, 2), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE1\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE1\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE1\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE2\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE2\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE2\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE3\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE3\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE3\", 0, 3), CEE);\n\t\t\n\t\tlotsaSuggestions.put(new Token(\"AYE4\", 0, 3), AYE);\n\t\tlotsaSuggestions.put(new Token(\"BEE4\", 0, 3), BEE);\n\t\tlotsaSuggestions.put(new Token(\"CEE4\", 0, 3), CEE);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","31aff65a420ac3dfd25611e2c4a99d38b7dd60e9"],"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["08d2f389293a0aa85d356ba23569b53151395ab0"],"08d2f389293a0aa85d356ba23569b53151395ab0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"31aff65a420ac3dfd25611e2c4a99d38b7dd60e9":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"c26f00b574427b55127e869b935845554afde1fa":["31aff65a420ac3dfd25611e2c4a99d38b7dd60e9","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["29ef99d61cda9641b6250bf9567329a6e65f901d","31aff65a420ac3dfd25611e2c4a99d38b7dd60e9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["31aff65a420ac3dfd25611e2c4a99d38b7dd60e9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","08d2f389293a0aa85d356ba23569b53151395ab0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","31aff65a420ac3dfd25611e2c4a99d38b7dd60e9","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"08d2f389293a0aa85d356ba23569b53151395ab0":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","868da859b43505d9d2a023bfeae6dd0c795f5295"],"31aff65a420ac3dfd25611e2c4a99d38b7dd60e9":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","c26f00b574427b55127e869b935845554afde1fa","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08d2f389293a0aa85d356ba23569b53151395ab0","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}