{"path":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    Directory dir = new RAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    Directory dir = new RAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    Directory dir = new RAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    Directory dir = new RAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    Directory dir = new RAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":"  public void test() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n    dir.close();\n    \n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n    dir.close();\n    \n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n    dir.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n    dir.close();\n    \n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    Directory dir = new RAMDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24efe21303a1a2ee92df8b82e9d07ec6ad8b6629","date":1297191928,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":null,"sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n    dir.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":null,"sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n    dir.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization#test().mjava","sourceNew":null,"sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"foo\", \"bar rab abr bra rba\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"moo\", \"bar rab abr bra rba\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    iw.addDocument(doc);\n    iw.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    InstantiatedIndex ii = new InstantiatedIndex(ir);\n    ir.close();\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);\n    ObjectOutputStream oos = new ObjectOutputStream(baos);\n    oos.writeObject(ii);\n    oos.close();\n    baos.close();\n    dir.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["1f653cfcf159baeaafe5d01682a911e95bba4012","24efe21303a1a2ee92df8b82e9d07ec6ad8b6629"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24efe21303a1a2ee92df8b82e9d07ec6ad8b6629":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","1f653cfcf159baeaafe5d01682a911e95bba4012"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","24efe21303a1a2ee92df8b82e9d07ec6ad8b6629"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24efe21303a1a2ee92df8b82e9d07ec6ad8b6629"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["f1bdbf92da222965b46c0a942c3857ba56e5c638","24efe21303a1a2ee92df8b82e9d07ec6ad8b6629","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"24efe21303a1a2ee92df8b82e9d07ec6ad8b6629":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d572389229127c297dd1fa5ce4758e1cec41e799":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}