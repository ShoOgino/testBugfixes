{"path":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","sourceNew":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      Collector tlCollector = createTimedCollector(myHc, oneHour, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals( \"Wrong number of results!\", totalResults, totalTLCResults );\n  }\n\n","sourceOld":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      Collector tlCollector = createTimedCollector(myHc, oneHour, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals( \"Wrong number of results!\", totalResults, totalTLCResults );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","date":1411674127,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","sourceNew":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      long duration = TestUtil.nextLong(random(), oneHour, Long.MAX_VALUE); \n      Collector tlCollector = createTimedCollector(myHc, duration, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals( \"Wrong number of results!\", totalResults, totalTLCResults );\n  }\n\n","sourceOld":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      Collector tlCollector = createTimedCollector(myHc, oneHour, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals( \"Wrong number of results!\", totalResults, totalTLCResults );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","date":1411744836,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","sourceNew":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      long duration = TestUtil.nextLong(random(), oneHour, Long.MAX_VALUE); \n      Collector tlCollector = createTimedCollector(myHc, duration, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals( \"Wrong number of results!\", totalResults, totalTLCResults );\n  }\n\n","sourceOld":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      Collector tlCollector = createTimedCollector(myHc, oneHour, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals( \"Wrong number of results!\", totalResults, totalTLCResults );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1dccd7bcb5aed74b05d5884f4579a968cb3325fe","date":1434356398,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestSearch().mjava","sourceNew":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      long duration = TestUtil.nextLong(random(), oneHour, Long.MAX_VALUE); \n      Collector tlCollector = createTimedCollector(myHc, duration, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals(\"Wrong number of results!\", totalResults, totalTLCResults);\n  }\n\n","sourceOld":"  private void doTestSearch() {\n    int totalResults = 0;\n    int totalTLCResults = 0;\n    try {\n      MyHitCollector myHc = new MyHitCollector();\n      search(myHc);\n      totalResults = myHc.hitCount();\n      \n      myHc = new MyHitCollector();\n      long oneHour = 3600000;\n      long duration = TestUtil.nextLong(random(), oneHour, Long.MAX_VALUE); \n      Collector tlCollector = createTimedCollector(myHc, duration, false);\n      search(tlCollector);\n      totalTLCResults = myHc.hitCount();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(\"Unexpected exception: \"+e, false); //==fail\n    }\n    assertEquals( \"Wrong number of results!\", totalResults, totalTLCResults );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1dccd7bcb5aed74b05d5884f4579a968cb3325fe":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1dccd7bcb5aed74b05d5884f4579a968cb3325fe"]},"commit2Childs":{"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","1dccd7bcb5aed74b05d5884f4579a968cb3325fe"],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","da951a24a6a87d5ba7e1820f8c28a1e2beea76c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1dccd7bcb5aed74b05d5884f4579a968cb3325fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}