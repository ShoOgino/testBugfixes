{"path":"src/java/org/apache/solr/search/SetHitCollector[SolrIndexSearcher]#collect(int,float).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SetHitCollector[SolrIndexSearcher]#collect(int,float).mjava","pathOld":"/dev/null","sourceNew":"  public void collect(int doc, float score) {\n    if (filter!=null && !filter.exists(doc)) return;\n\n    // OPTIMIZATION: should I only set bits *after* I have run out of\n    // room in scratch?  (then at the end I could add all of the docs\n    // in scratch to the bitset.\n    bits.set(doc);\n\n    // optimistically collect the first docs in an array\n    // in case the total number will be small enough to represent\n    // as a HashDocSet() instead...\n    // It is assumed that storing in this array will be quicker to convert\n    // than scanning through a potentially huge bit vector.\n    // FUTURE: when search methods all start returning docs in order, maybe\n    // we could have a SortedListDocSet() and use the collected array directly.\n    if (pos < ARRAY_COLLECT_SZ) {\n      scratch[pos]=doc;\n    }\n\n    pos++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21400778a0bf704d187a4848279049f5d90276c8","date":1149955512,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/search/SetHitCollector[SolrIndexSearcher]#collect(int,float).mjava","sourceNew":null,"sourceOld":"  public void collect(int doc, float score) {\n    if (filter!=null && !filter.exists(doc)) return;\n\n    // OPTIMIZATION: should I only set bits *after* I have run out of\n    // room in scratch?  (then at the end I could add all of the docs\n    // in scratch to the bitset.\n    bits.set(doc);\n\n    // optimistically collect the first docs in an array\n    // in case the total number will be small enough to represent\n    // as a HashDocSet() instead...\n    // It is assumed that storing in this array will be quicker to convert\n    // than scanning through a potentially huge bit vector.\n    // FUTURE: when search methods all start returning docs in order, maybe\n    // we could have a SortedListDocSet() and use the collected array directly.\n    if (pos < ARRAY_COLLECT_SZ) {\n      scratch[pos]=doc;\n    }\n\n    pos++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21400778a0bf704d187a4848279049f5d90276c8":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"21400778a0bf704d187a4848279049f5d90276c8":[],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["21400778a0bf704d187a4848279049f5d90276c8"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21400778a0bf704d187a4848279049f5d90276c8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}