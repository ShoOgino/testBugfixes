{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/WordlistLoader#getSnowballWordSet(Class[#],String).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/WordlistLoader#getSnowballWordSet(Class[#],String).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/WordlistLoader#getSnowballWordSet(Class[#],String).mjava","sourceNew":"  /**\n   * Loads a text file in Snowball format associated with a given class (See\n   * {@link Class#getResourceAsStream(String)}) and adds all words as entries to\n   * a {@link Set}. The words need to be in lower-case if you make use of an\n   * Analyzer which uses LowerCaseFilter (like StandardAnalyzer).\n   * \n   * @param aClass a class that is associated with the given stopwordResource\n   * @param stopwordResource name of the resource file associated with the given\n   *          class\n   * @return a {@link Set} with the file's words\n   * @see #getSnowballWordSet(Reader)\n   */\n  public static Set<String> getSnowballWordSet(Class<?> aClass,\n      String stopwordResource) throws IOException {\n    final Reader reader = new BufferedReader(new InputStreamReader(aClass\n        .getResourceAsStream(stopwordResource), \"UTF-8\"));\n    try {\n      return getSnowballWordSet(reader);\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Loads a text file in Snowball format associated with a given class (See\n   * {@link Class#getResourceAsStream(String)}) and adds all words as entries to\n   * a {@link Set}. The words need to be in lower-case if you make use of an\n   * Analyzer which uses LowerCaseFilter (like StandardAnalyzer).\n   * \n   * @param aClass a class that is associated with the given stopwordResource\n   * @param stopwordResource name of the resource file associated with the given\n   *          class\n   * @return a {@link Set} with the file's words\n   * @see #getSnowballWordSet(Reader)\n   */\n  public static Set<String> getSnowballWordSet(Class<?> aClass,\n      String stopwordResource) throws IOException {\n    final Reader reader = new BufferedReader(new InputStreamReader(aClass\n        .getResourceAsStream(stopwordResource), \"UTF-8\"));\n    try {\n      return getSnowballWordSet(reader);\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a24f16e684000b5854634d7139339a792cc97927","date":1320888085,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/WordlistLoader#getSnowballWordSet(Class[#],String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Loads a text file in Snowball format associated with a given class (See\n   * {@link Class#getResourceAsStream(String)}) and adds all words as entries to\n   * a {@link Set}. The words need to be in lower-case if you make use of an\n   * Analyzer which uses LowerCaseFilter (like StandardAnalyzer).\n   * \n   * @param aClass a class that is associated with the given stopwordResource\n   * @param stopwordResource name of the resource file associated with the given\n   *          class\n   * @return a {@link Set} with the file's words\n   * @see #getSnowballWordSet(Reader)\n   */\n  public static Set<String> getSnowballWordSet(Class<?> aClass,\n      String stopwordResource) throws IOException {\n    final Reader reader = new BufferedReader(new InputStreamReader(aClass\n        .getResourceAsStream(stopwordResource), \"UTF-8\"));\n    try {\n      return getSnowballWordSet(reader);\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a24f16e684000b5854634d7139339a792cc97927":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a24f16e684000b5854634d7139339a792cc97927"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a24f16e684000b5854634d7139339a792cc97927":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a24f16e684000b5854634d7139339a792cc97927"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}