{"path":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    \n    if (CONFIG_BASE_PATH.equals(routerPath)) {\n      this.configRouter = router;\n    } else if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (String resourceId : managed.keySet()) {\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(managed.get(resourceId), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"858c0f62e7b20002e4d94702c510512fb6292988","date":1417427955,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","sourceNew":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (String resourceId : managed.keySet()) {\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(managed.get(resourceId), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","sourceOld":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    \n    if (CONFIG_BASE_PATH.equals(routerPath)) {\n      this.configRouter = router;\n    } else if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (String resourceId : managed.keySet()) {\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(managed.get(resourceId), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","date":1571070979,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","sourceNew":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (Map.Entry<String, ManagedResource> entry : managed.entrySet()) {\n      String resourceId = entry.getKey();\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(entry.getValue(), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","sourceOld":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (String resourceId : managed.keySet()) {\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(managed.get(resourceId), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","sourceNew":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (Map.Entry<String, ManagedResource> entry : managed.entrySet()) {\n      String resourceId = entry.getKey();\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(entry.getValue(), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","sourceOld":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (String resourceId : managed.keySet()) {\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(managed.get(resourceId), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResources(String,Router).mjava","sourceNew":null,"sourceOld":"  /**\n   * Attach managed resource paths to the given Restlet Router. \n   * @param router - Restlet Router\n   */\n  public synchronized void attachManagedResources(String routerPath, Router router) {\n    if (SCHEMA_BASE_PATH.equals(routerPath)) {\n      this.schemaRouter = router;\n    } else {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          routerPath+\" not supported by the RestManager\");\n    }      \n    \n    int numAttached = 0;\n    for (Map.Entry<String, ManagedResource> entry : managed.entrySet()) {\n      String resourceId = entry.getKey();\n      if (resourceId.startsWith(routerPath)) {\n        // the way restlet works is you attach a path w/o the routerPath\n        String path = resourceId.substring(routerPath.length());\n        attachManagedResource(entry.getValue(), path, router);\n        ++numAttached;\n      }\n    }\n    \n    log.info(\"Attached {} ManagedResource endpoints to Restlet router: {}\", \n        numAttached, routerPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"],"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["858c0f62e7b20002e4d94702c510512fb6292988"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"858c0f62e7b20002e4d94702c510512fb6292988":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"b0b597c65628ca9e73913a07e81691f8229bae35":["858c0f62e7b20002e4d94702c510512fb6292988","7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","b0b597c65628ca9e73913a07e81691f8229bae35"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["858c0f62e7b20002e4d94702c510512fb6292988"],"858c0f62e7b20002e4d94702c510512fb6292988":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}