{"path":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44e1477dd67ee1fbc72871f23fb51369bb42cadd","date":1535551329,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable && !(value instanceof SolrDocumentBase)) {\n      ArrayList<Object> lst = new ArrayList<>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void setField(String name, Object value)\n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable && !(value instanceof SolrDocumentBase)) {\n      ArrayList<Object> lst = new ArrayList<>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof NamedList ) {\n      // nothing\n    }\n    else if( value instanceof Iterable && !(value instanceof SolrDocumentBase)) {\n      ArrayList<Object> lst = new ArrayList<>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["44e1477dd67ee1fbc72871f23fb51369bb42cadd"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"44e1477dd67ee1fbc72871f23fb51369bb42cadd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["44e1477dd67ee1fbc72871f23fb51369bb42cadd"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"44e1477dd67ee1fbc72871f23fb51369bb42cadd":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}