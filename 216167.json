{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testTerminatingDaemonStream().mjava","commits":[{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testTerminatingDaemonStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testTerminatingDaemonStream().mjava","sourceNew":"  @Test\n  public void testTerminatingDaemonStream() throws Exception {\n    Assume.assumeTrue(!useAlias);\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(COLLECTIONORALIAS, cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    DaemonStream daemonStream;\n\n    SolrClientCache cache = new SolrClientCache();\n    StreamContext context = new StreamContext();\n    context.setSolrClientCache(cache);\n    expression = StreamExpressionParser.parse(\"daemon(topic(\"+ COLLECTIONORALIAS +\",\"+ COLLECTIONORALIAS +\", q=\\\"a_s:hello\\\", initialCheckpoint=0, id=\\\"topic1\\\", rows=2, fl=\\\"id\\\"\"\n        + \"), id=test, runInterval=1000, terminate=true, queueSize=50)\");\n    daemonStream = (DaemonStream)factory.constructStream(expression);\n    daemonStream.setStreamContext(context);\n\n    List<Tuple> tuples = getTuples(daemonStream);\n    assertTrue(tuples.size() == 10);\n    cache.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTerminatingDaemonStream() throws Exception {\n    Assume.assumeTrue(!useAlias);\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(COLLECTIONORALIAS, cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    DaemonStream daemonStream;\n\n    SolrClientCache cache = new SolrClientCache();\n    StreamContext context = new StreamContext();\n    context.setSolrClientCache(cache);\n    expression = StreamExpressionParser.parse(\"daemon(topic(\"+ COLLECTIONORALIAS +\",\"+ COLLECTIONORALIAS +\", q=\\\"a_s:hello\\\", initialCheckpoint=0, id=\\\"topic1\\\", rows=2, fl=\\\"id\\\"\"\n        + \"), id=test, runInterval=1000, terminate=true, queueSize=50)\");\n    daemonStream = (DaemonStream)factory.constructStream(expression);\n    daemonStream.setStreamContext(context);\n\n    List<Tuple> tuples = getTuples(daemonStream);\n    assertTrue(tuples.size() == 10);\n    cache.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}