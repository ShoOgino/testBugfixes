{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","commits":[{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/PrintTaxonomyStats#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(new File(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(new File(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b656cbf28fe2a4be7de3f0e561623ca39d06884","date":1388622204,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","sourceNew":"  /** Command-line tool. */\n  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(new File(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(new File(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Command-line tool. */\n  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(new File(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","sourceNew":"  /** Command-line tool. */\n  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(Paths.get(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Command-line tool. */\n  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(new File(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e6d6f6217dc04f29ee177d2837147dd47627787","date":1429543326,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/PrintTaxonomyStats#main(String[]).mjava","sourceNew":"  /** Command-line tool. */\n  @SuppressForbidden(reason = \"System.out required: command line tool\")\n  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(Paths.get(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Command-line tool. */\n  public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0;i<args.length;i++) {\n      if (args[i].equals(\"-printTree\")) {\n        printTree = true;\n      } else {\n        path = args[i];\n      }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n      System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n      System.exit(1);\n    }\n    Directory dir = FSDirectory.open(Paths.get(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["f4abec28b874149a7223e32cc7a01704c27790de"],"d33e19a97046248623a7591aeaa6547233fd15e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0b656cbf28fe2a4be7de3f0e561623ca39d06884"],"f4abec28b874149a7223e32cc7a01704c27790de":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"0b656cbf28fe2a4be7de3f0e561623ca39d06884":["d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e6d6f6217dc04f29ee177d2837147dd47627787"]},"commit2Childs":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d33e19a97046248623a7591aeaa6547233fd15e2":["0b656cbf28fe2a4be7de3f0e561623ca39d06884"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["7e6d6f6217dc04f29ee177d2837147dd47627787"],"0b656cbf28fe2a4be7de3f0e561623ca39d06884":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}