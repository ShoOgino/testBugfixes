{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","commits":[{"id":"15f78d4c3703bdf31ef64dc18dd5d5c7996bcd0a","date":1398846443,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleDisallowSysouts#isEnforced().mjava","sourceNew":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  protected boolean isEnforced() {\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        RandomizedTest.getContext().getTargetClass().isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    return !RandomizedTest.systemPropertyAsBoolean(LuceneTestCase.SYSPROP_SYSOUTS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d524d41bd211f811312cf6639e3792dae4df6cbb","date":1398850727,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"/dev/null","sourceNew":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f56ba5d8fecfb0b8bfdca8c0b630372d998131a9","date":1400353720,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","sourceNew":"  protected boolean isEnforced() {\n    return false;\n    // nocommit\n    /*\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n    */\n  }\n\n","sourceOld":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20","date":1400712483,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","sourceNew":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  protected boolean isEnforced() {\n    return false;\n    // nocommit\n    /*\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n    */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","sourceNew":"  protected boolean isEnforced() {\n    // nocommit\n    return false;\n    /*\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n    */\n  }\n\n","sourceOld":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bab620c8ab32bb77a62753eca4afb8e47efa87c","date":1402997861,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","sourceNew":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  protected boolean isEnforced() {\n    // nocommit\n    return false;\n    /*\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n    */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"656cfb06eff2244ff5a25ffb3ed3a79942ece85c","date":1413181096,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","sourceNew":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(Monster.class) ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleLimitSysouts#isEnforced().mjava","sourceNew":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(Monster.class) ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  protected boolean isEnforced() {\n    Class<?> target = RandomizedTest.getContext().getTargetClass();\n\n    if (LuceneTestCase.VERBOSE || \n        LuceneTestCase.INFOSTREAM ||\n        target.isAnnotationPresent(SuppressSysoutChecks.class)) {\n      return false;\n    }\n    \n    if (!target.isAnnotationPresent(Limit.class)) {\n      return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f56ba5d8fecfb0b8bfdca8c0b630372d998131a9":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20":["f56ba5d8fecfb0b8bfdca8c0b630372d998131a9"],"55980207f1977bd1463465de1659b821347e2fa8":["d524d41bd211f811312cf6639e3792dae4df6cbb","656cfb06eff2244ff5a25ffb3ed3a79942ece85c"],"6bab620c8ab32bb77a62753eca4afb8e47efa87c":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"d524d41bd211f811312cf6639e3792dae4df6cbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","15f78d4c3703bdf31ef64dc18dd5d5c7996bcd0a"],"656cfb06eff2244ff5a25ffb3ed3a79942ece85c":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"15f78d4c3703bdf31ef64dc18dd5d5c7996bcd0a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["656cfb06eff2244ff5a25ffb3ed3a79942ece85c"]},"commit2Childs":{"f56ba5d8fecfb0b8bfdca8c0b630372d998131a9":["4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20"],"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20":[],"55980207f1977bd1463465de1659b821347e2fa8":[],"6bab620c8ab32bb77a62753eca4afb8e47efa87c":[],"d524d41bd211f811312cf6639e3792dae4df6cbb":["f56ba5d8fecfb0b8bfdca8c0b630372d998131a9","55980207f1977bd1463465de1659b821347e2fa8","656cfb06eff2244ff5a25ffb3ed3a79942ece85c","ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"656cfb06eff2244ff5a25ffb3ed3a79942ece85c":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d524d41bd211f811312cf6639e3792dae4df6cbb","15f78d4c3703bdf31ef64dc18dd5d5c7996bcd0a"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["6bab620c8ab32bb77a62753eca4afb8e47efa87c"],"15f78d4c3703bdf31ef64dc18dd5d5c7996bcd0a":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20","55980207f1977bd1463465de1659b821347e2fa8","6bab620c8ab32bb77a62753eca4afb8e47efa87c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}