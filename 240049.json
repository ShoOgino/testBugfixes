{"path":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","pathOld":"/dev/null","sourceNew":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        ObjectUtil.mergeObjects(json, path, o, handler);\n      }\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f6e0714179918847970d4daef77cf2d18dbd069f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","pathOld":"/dev/null","sourceNew":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        ObjectUtil.mergeObjects(json, path, o, handler);\n      }\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e0714179918847970d4daef77cf2d18dbd069f","date":1433864896,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","sourceNew":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        // zero-length strings or comments can cause this to be null (and a zero-length string can result from a json content-type w/o a body)\n        if (o != null) {\n          ObjectUtil.mergeObjects(json, path, o, handler);\n        }\n      }\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","sourceOld":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        ObjectUtil.mergeObjects(json, path, o, handler);\n      }\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","bugFix":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fc85b1dff2ce036b914dcd14fb0bf4a113cf0ab","date":1569649338,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","sourceNew":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        // zero-length strings or comments can cause this to be null (and a zero-length string can result from a json content-type w/o a body)\n        if (o != null) {\n          ObjectUtil.mergeObjects(json, path, o, handler);\n        }\n      }\n    } catch (JSONParser.ParseException e ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","sourceOld":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        // zero-length strings or comments can cause this to be null (and a zero-length string can result from a json content-type w/o a body)\n        if (o != null) {\n          ObjectUtil.mergeObjects(json, path, o, handler);\n        }\n      }\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b9f74021389e2b32ee750fa5a24281c87951ec3","date":1569845983,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","sourceNew":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        // zero-length strings or comments can cause this to be null (and a zero-length string can result from a json content-type w/o a body)\n        if (o != null) {\n          ObjectUtil.mergeObjects(json, path, o, handler);\n        }\n      }\n    } catch (JSONParser.ParseException e ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","sourceOld":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        // zero-length strings or comments can cause this to be null (and a zero-length string can result from a json content-type w/o a body)\n        if (o != null) {\n          ObjectUtil.mergeObjects(json, path, o, handler);\n        }\n      }\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99","date":1571689506,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#mergeJSON(Map[String,Object],String,String[],ObjectUtil.ConflictHandler).mjava","sourceNew":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSONStrict(jsonStr);\n        // zero-length strings or comments can cause this to be null (and a zero-length string can result from a json content-type w/o a body)\n        if (o != null) {\n          ObjectUtil.mergeObjects(json, path, o, handler);\n        }\n      }\n    } catch (JSONParser.ParseException e ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","sourceOld":"  // queryParamName is something like json.facet or json.query, or just json...\n  private static void mergeJSON(Map<String,Object> json, String queryParamName, String[] vals, ObjectUtil.ConflictHandler handler) {\n    try {\n      List<String> path = StrUtils.splitSmart(queryParamName, \".\", true);\n      path = path.subList(1, path.size());\n      for (String jsonStr : vals) {\n        Object o = ObjectBuilder.fromJSON(jsonStr);\n        // zero-length strings or comments can cause this to be null (and a zero-length string can result from a json content-type w/o a body)\n        if (o != null) {\n          ObjectUtil.mergeObjects(json, path, o, handler);\n        }\n      }\n    } catch (JSONParser.ParseException e ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    } catch (IOException e) {\n      // impossible\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f6e0714179918847970d4daef77cf2d18dbd069f":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"7fc85b1dff2ce036b914dcd14fb0bf4a113cf0ab":["f6e0714179918847970d4daef77cf2d18dbd069f"],"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99":["7fc85b1dff2ce036b914dcd14fb0bf4a113cf0ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":["f6e0714179918847970d4daef77cf2d18dbd069f","7fc85b1dff2ce036b914dcd14fb0bf4a113cf0ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61f55b4999c3f858f4f4acc9c6dc57af2c1acf99"]},"commit2Childs":{"f6e0714179918847970d4daef77cf2d18dbd069f":["7fc85b1dff2ce036b914dcd14fb0bf4a113cf0ab","4b9f74021389e2b32ee750fa5a24281c87951ec3"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"7fc85b1dff2ce036b914dcd14fb0bf4a113cf0ab":["61f55b4999c3f858f4f4acc9c6dc57af2c1acf99","4b9f74021389e2b32ee750fa5a24281c87951ec3"],"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["f6e0714179918847970d4daef77cf2d18dbd069f","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4b9f74021389e2b32ee750fa5a24281c87951ec3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}