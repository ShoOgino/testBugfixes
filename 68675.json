{"path":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#ulogAdd(UpdateLog,Long,SolrInputDocument).mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#ulogAdd(UpdateLog,Long,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Simulate an add on a given updateLog.\n   * <p>\n   *   This method, when prevVersion is passed in (i.e. for in-place update), represents an \n   *   AddUpdateCommand that has undergone the merge process and inc/set operations have now been\n   *   converted into actual values that just need to be written. \n   * </p>\n   * <p>\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   * </p>\n   *\n   * @param ulog The UpdateLog to apply a delete against\n   * @param prevVersion If non-null, then this AddUpdateCommand represents an in-place update.\n   * @param sdoc The document to use for the add.\n   * @see #buildAddUpdateCommand\n   */\n  private static void ulogAdd(UpdateLog ulog, Long prevVersion, SolrInputDocument sdoc) {\n    try (SolrQueryRequest req = req()) {\n      AddUpdateCommand cmd = buildAddUpdateCommand(req, sdoc);\n      if (prevVersion != null) {\n        cmd.prevVersion = prevVersion;\n      }\n      ulog.add(cmd);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#ulogAdd(UpdateLog,Long,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Simulate an add on a given updateLog.\n   * <p>\n   *   This method, when prevVersion is passed in (i.e. for in-place update), represents an \n   *   AddUpdateCommand that has undergone the merge process and inc/set operations have now been\n   *   converted into actual values that just need to be written. \n   * </p>\n   * <p>\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   * </p>\n   *\n   * @param ulog The UpdateLog to apply a delete against\n   * @param prevVersion If non-null, then this AddUpdateCommand represents an in-place update.\n   * @param sdoc The document to use for the add.\n   * @see #buildAddUpdateCommand\n   */\n  private static void ulogAdd(UpdateLog ulog, Long prevVersion, SolrInputDocument sdoc) {\n    try (SolrQueryRequest req = req()) {\n      AddUpdateCommand cmd = buildAddUpdateCommand(req, sdoc);\n      if (prevVersion != null) {\n        cmd.prevVersion = prevVersion;\n      }\n      ulog.add(cmd);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}