{"path":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0642d39c870c765418f1602c99bbdffc1019ae8b","date":1290101307,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","sourceNew":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  public Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","sourceOld":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","sourceNew":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  public Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","sourceOld":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","sourceNew":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  public Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","sourceOld":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#getSortedTransitions().mjava","sourceNew":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  public Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","sourceOld":"  /**\n   * Returns a sorted array of transitions for each state (and sets state\n   * numbers).\n   */\n  public Transition[][] getSortedTransitions() {\n    final State[] states = getNumberedStates();\n    Transition[][] transitions = new Transition[states.length][];\n    for (State s : states) {\n      s.sortTransitions(Transition.CompareByMinMaxThenDest);\n      s.trimTransitionsArray();\n      transitions[s.number] = s.transitionsArray;\n      assert s.transitionsArray != null;\n    }\n    return transitions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0642d39c870c765418f1602c99bbdffc1019ae8b"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0642d39c870c765418f1602c99bbdffc1019ae8b":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","0642d39c870c765418f1602c99bbdffc1019ae8b"],"3bb13258feba31ab676502787ab2e1779f129b7a":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","0642d39c870c765418f1602c99bbdffc1019ae8b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["0642d39c870c765418f1602c99bbdffc1019ae8b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"0642d39c870c765418f1602c99bbdffc1019ae8b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}