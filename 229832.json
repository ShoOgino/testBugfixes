{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/MergeStream#init(StreamComparator,TupleStream...).mjava","commits":[{"id":"1dab63e86bdbacdfab7b33cc35bd2ebd5785bce3","date":1446934136,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/MergeStream#init(StreamComparator,TupleStream...).mjava","pathOld":"/dev/null","sourceNew":"  private void init(StreamComparator comp, TupleStream ... streams) throws IOException {\n    \n    // All streams must both be sorted so that comp can be derived from\n    for(TupleStream stream : streams){\n      if(!comp.isDerivedFrom(stream.getStreamSort())){\n        throw new IOException(\"Invalid MergeStream - all substream comparators (sort) must be a superset of this stream's comparator.\");\n      }\n    }\n    \n    // Convert to PushBack streams so we can push back tuples\n    this.streams = new PushBackStream[streams.length];\n    for(int idx = 0; idx < streams.length; ++idx){\n      this.streams[idx] = new PushBackStream(streams[idx]);\n    }\n    this.comp = comp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1dab63e86bdbacdfab7b33cc35bd2ebd5785bce3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1dab63e86bdbacdfab7b33cc35bd2ebd5785bce3"]},"commit2Childs":{"1dab63e86bdbacdfab7b33cc35bd2ebd5785bce3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1dab63e86bdbacdfab7b33cc35bd2ebd5785bce3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}