{"path":"lucene/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef,boolean).mjava","commits":[{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This may return null if the term does\n   *  not exist or positions were not indexed. */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term, boolean needsOffsets) throws IOException {\n    assert field != null;\n    assert term != null;\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(term, true)) {\n        return termsEnum.docsAndPositions(liveDocs, null, needsOffsets);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This may return null if the term does\n   *  not exist or positions were not indexed. */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    assert field != null;\n    assert term != null;\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(term, true)) {\n        return termsEnum.docsAndPositions(liveDocs, null);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef,boolean).mjava","sourceNew":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This may return null if the term does\n   *  not exist or positions were not indexed. */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term, boolean needsOffsets) throws IOException {\n    assert field != null;\n    assert term != null;\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(term, true)) {\n        return termsEnum.docsAndPositions(liveDocs, null, needsOffsets);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This may return null if the term does\n   *  not exist or positions were not indexed. */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term, boolean needsOffsets) throws IOException {\n    assert field != null;\n    assert term != null;\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(term, true)) {\n        return termsEnum.docsAndPositions(liveDocs, null, needsOffsets);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}