{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestDisjunctionMaxQuery#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestDisjunctionMaxQuery#setUp().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestDisjunctionMaxQuery#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n\n        index = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(index,\n                                             new WhitespaceAnalyzer(),\n                                             true, IndexWriter.MaxFieldLength.LIMITED);\n        writer.setSimilarity(sim);\n\n        // hed is the most important field, dek is secondary\n\n        // d1 is an \"ok\" match for:  albino elephant\n        {\n            Document d1 = new Document();\n            d1.add(new Field(\"id\", \"d1\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d1\"));\n            d1.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d1.add(new Field(\"dek\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"elephant\"));\n            writer.addDocument(d1);\n        }\n\n        // d2 is a \"good\" match for:  albino elephant\n        {\n            Document d2 = new Document();\n            d2.add(new Field(\"id\", \"d2\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d2\"));\n            d2.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d2.add(new Field(\"dek\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"albino\"));\n            d2.add(new Field(\"dek\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"elephant\"));\n            writer.addDocument(d2);\n        }\n\n        // d3 is a \"better\" match for:  albino elephant\n        {\n            Document d3 = new Document();\n            d3.add(new Field(\"id\", \"d3\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d3\"));\n            d3.add(new Field(\"hed\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"albino\"));\n            d3.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            writer.addDocument(d3);\n        }\n\n        // d4 is the \"best\" match for:  albino elephant\n        {\n            Document d4 = new Document();\n            d4.add(new Field(\"id\", \"d4\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d4\"));\n            d4.add(new Field(\"hed\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"albino\"));\n            d4.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d4.add(new Field(\"dek\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"albino\"));\n            writer.addDocument(d4);\n        }\n\n        writer.close();\n\n        r = IndexReader.open(index, true);\n        s = new IndexSearcher(r);\n        s.setSimilarity(sim);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n\n        index = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(index,\n                                             new WhitespaceAnalyzer(),\n                                             true, IndexWriter.MaxFieldLength.LIMITED);\n        writer.setSimilarity(sim);\n\n        // hed is the most important field, dek is secondary\n\n        // d1 is an \"ok\" match for:  albino elephant\n        {\n            Document d1 = new Document();\n            d1.add(new Field(\"id\", \"d1\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d1\"));\n            d1.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d1.add(new Field(\"dek\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"elephant\"));\n            writer.addDocument(d1);\n        }\n\n        // d2 is a \"good\" match for:  albino elephant\n        {\n            Document d2 = new Document();\n            d2.add(new Field(\"id\", \"d2\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d2\"));\n            d2.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d2.add(new Field(\"dek\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"albino\"));\n            d2.add(new Field(\"dek\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"elephant\"));\n            writer.addDocument(d2);\n        }\n\n        // d3 is a \"better\" match for:  albino elephant\n        {\n            Document d3 = new Document();\n            d3.add(new Field(\"id\", \"d3\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d3\"));\n            d3.add(new Field(\"hed\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"albino\"));\n            d3.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            writer.addDocument(d3);\n        }\n\n        // d4 is the \"best\" match for:  albino elephant\n        {\n            Document d4 = new Document();\n            d4.add(new Field(\"id\", \"d4\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d4\"));\n            d4.add(new Field(\"hed\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"albino\"));\n            d4.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d4.add(new Field(\"dek\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"albino\"));\n            writer.addDocument(d4);\n        }\n\n        writer.close();\n\n        r = IndexReader.open(index, true);\n        s = new IndexSearcher(r);\n        s.setSimilarity(sim);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestDisjunctionMaxQuery#setUp().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n\n        index = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(index,\n                                             new WhitespaceAnalyzer(),\n                                             true, IndexWriter.MaxFieldLength.LIMITED);\n        writer.setSimilarity(sim);\n\n        // hed is the most important field, dek is secondary\n\n        // d1 is an \"ok\" match for:  albino elephant\n        {\n            Document d1 = new Document();\n            d1.add(new Field(\"id\", \"d1\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d1\"));\n            d1.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d1.add(new Field(\"dek\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"elephant\"));\n            writer.addDocument(d1);\n        }\n\n        // d2 is a \"good\" match for:  albino elephant\n        {\n            Document d2 = new Document();\n            d2.add(new Field(\"id\", \"d2\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d2\"));\n            d2.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d2.add(new Field(\"dek\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"albino\"));\n            d2.add(new Field(\"dek\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"elephant\"));\n            writer.addDocument(d2);\n        }\n\n        // d3 is a \"better\" match for:  albino elephant\n        {\n            Document d3 = new Document();\n            d3.add(new Field(\"id\", \"d3\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d3\"));\n            d3.add(new Field(\"hed\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"albino\"));\n            d3.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            writer.addDocument(d3);\n        }\n\n        // d4 is the \"best\" match for:  albino elephant\n        {\n            Document d4 = new Document();\n            d4.add(new Field(\"id\", \"d4\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\", \"d4\"));\n            d4.add(new Field(\"hed\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"albino\"));\n            d4.add(new Field(\"hed\", \"elephant\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"hed\", \"elephant\"));\n            d4.add(new Field(\"dek\", \"albino\", Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"dek\", \"albino\"));\n            writer.addDocument(d4);\n        }\n\n        writer.close();\n\n        r = IndexReader.open(index, true);\n        s = new IndexSearcher(r);\n        s.setSimilarity(sim);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}