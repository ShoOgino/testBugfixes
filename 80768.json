{"path":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        if (closer != null) {\n          closer.closeWriter(indexWriter);\n        } else if (indexWriter != null) {\n          indexWriter.close();\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        if (closer != null) {\n          closer.closeWriter(indexWriter);\n        } else if (indexWriter != null) {\n          indexWriter.close();\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        if (closer != null) {\n          closer.closeWriter(indexWriter);\n        } else if (indexWriter != null) {\n          indexWriter.close();\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf2249dab4fef427e57d73ce52f8382ee4552d44","date":1327808497,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {\n          SolrException.log(log, t);\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        if (closer != null) {\n          closer.closeWriter(indexWriter);\n        } else if (indexWriter != null) {\n          indexWriter.close();\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8f4a0c306589f8607dc4b33f7abaf753db19f76e","date":1327836084,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {\n          SolrException.log(log, t);\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        if (closer != null) {\n          closer.closeWriter(indexWriter);\n        } else if (indexWriter != null) {\n          indexWriter.close();\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {\n          SolrException.log(log, t);\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        if (closer != null) {\n          closer.closeWriter(indexWriter);\n        } else if (indexWriter != null) {\n          indexWriter.close();\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"221ff19d62d5ff429ffecf8e7f3e01ff93754854","date":1329974551,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {\n          SolrException.log(log, t);\n        }\n        directoryFactory.close();\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {\n          SolrException.log(log, t);\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8de248630034b5863f6795325312ed9b0e697794","date":1330887105,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {\n          SolrException.log(log, t);\n        }\n        directoryFactory.close();\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    boolean cancelRecovery = false;\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {\n          SolrException.log(log, t);\n        }\n        directoryFactory.close();\n        closed = true;\n        cancelRecovery = true;\n      }\n    }\n    // don't wait for this in the sync block\n    if (cancelRecovery) cancelRecovery();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63fce89dfe8a5dcba79c726470441c175441f122","date":1342202709,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public  void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        \n        // TODO: we cannot cancel recovery here if its a CoreContainer shutdown\n        // it can cause deadlock - but perhaps we want to if we are stopping early\n        // and CoreContainer is not being shutdown?\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f440858b0cf5f11ff73f34faacb58a14478b140","date":1342286974,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        \n        // TODO: we cannot cancel recovery here if its a CoreContainer shutdown\n        // it can cause deadlock - but perhaps we want to if we are stopping early\n        // and CoreContainer is not being shutdown?\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) throws IOException {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public  void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66c64e8cfded6a585100e6430238faaf416f3fea","date":1344964603,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          log.info(\"SolrCoreState ref count has reached 0 - closing IndexWriter\");\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          log.info(\"SolrCoreState ref count has reached 0 - closing IndexWriter\");\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          log.info(\"SolrCoreState ref count has reached 0 - closing IndexWriter\");\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","date":1346692465,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          log.info(\"SolrCoreState ref count has reached 0 - closing IndexWriter\");\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          log.info(\"Closing SolrCoreState - canceling any ongoing recovery\");\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          log.info(\"SolrCoreState ref count has reached 0 - closing IndexWriter\");\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c8475e39c56b28600d2b496f3e78f7421190f62","date":1349102564,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void decref(IndexWriterCloser closer) {\n    synchronized (this) {\n      refCnt--;\n      if (refCnt == 0) {\n        try {\n          log.info(\"SolrCoreState ref count has reached 0 - closing IndexWriter\");\n          if (closer != null) {\n            closer.closeWriter(indexWriter);\n          } else if (indexWriter != null) {\n            indexWriter.close();\n          }\n        } catch (Throwable t) {          \n          log.error(\"Error during shutdown of writer.\", t);\n        }\n        try {\n          directoryFactory.close();\n        } catch (Throwable t) {\n          log.error(\"Error during shutdown of directory factory.\", t);\n        }\n        try {\n          log.info(\"Closing SolrCoreState - canceling any ongoing recovery\");\n          cancelRecovery();\n        } catch (Throwable t) {\n          log.error(\"Error cancelling recovery\", t);\n        }\n\n        closed = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66c64e8cfded6a585100e6430238faaf416f3fea":["6f440858b0cf5f11ff73f34faacb58a14478b140"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["66c64e8cfded6a585100e6430238faaf416f3fea"],"221ff19d62d5ff429ffecf8e7f3e01ff93754854":["bf2249dab4fef427e57d73ce52f8382ee4552d44"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["bf2249dab4fef427e57d73ce52f8382ee4552d44","8de248630034b5863f6795325312ed9b0e697794"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["fe33227f6805edab2036cbb80645cc4e2d1fa424","66c64e8cfded6a585100e6430238faaf416f3fea"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["0d22ac6a4146774c1bc8400160fc0b6150294e92","bf2249dab4fef427e57d73ce52f8382ee4552d44"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"63fce89dfe8a5dcba79c726470441c175441f122":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["aba371508186796cc6151d8223a5b4e16d02e26e","66c64e8cfded6a585100e6430238faaf416f3fea"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"aba371508186796cc6151d8223a5b4e16d02e26e":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","6f440858b0cf5f11ff73f34faacb58a14478b140"],"6f440858b0cf5f11ff73f34faacb58a14478b140":["63fce89dfe8a5dcba79c726470441c175441f122"],"8de248630034b5863f6795325312ed9b0e697794":["221ff19d62d5ff429ffecf8e7f3e01ff93754854"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["8de248630034b5863f6795325312ed9b0e697794","6f440858b0cf5f11ff73f34faacb58a14478b140"],"3c8475e39c56b28600d2b496f3e78f7421190f62":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f4a0c306589f8607dc4b33f7abaf753db19f76e":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","bf2249dab4fef427e57d73ce52f8382ee4552d44"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["8de248630034b5863f6795325312ed9b0e697794"],"bf2249dab4fef427e57d73ce52f8382ee4552d44":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3c8475e39c56b28600d2b496f3e78f7421190f62"]},"commit2Childs":{"66c64e8cfded6a585100e6430238faaf416f3fea":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["3c8475e39c56b28600d2b496f3e78f7421190f62"],"221ff19d62d5ff429ffecf8e7f3e01ff93754854":["8de248630034b5863f6795325312ed9b0e697794"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["8f4a0c306589f8607dc4b33f7abaf753db19f76e"],"63fce89dfe8a5dcba79c726470441c175441f122":["6f440858b0cf5f11ff73f34faacb58a14478b140"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["fd92b8bcc88e969302510acf77bd6970da3994c4"],"aba371508186796cc6151d8223a5b4e16d02e26e":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"6f440858b0cf5f11ff73f34faacb58a14478b140":["66c64e8cfded6a585100e6430238faaf416f3fea","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"8de248630034b5863f6795325312ed9b0e697794":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"3c8475e39c56b28600d2b496f3e78f7421190f62":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","bf2249dab4fef427e57d73ce52f8382ee4552d44"],"8f4a0c306589f8607dc4b33f7abaf753db19f76e":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["63fce89dfe8a5dcba79c726470441c175441f122","aba371508186796cc6151d8223a5b4e16d02e26e"],"bf2249dab4fef427e57d73ce52f8382ee4552d44":["221ff19d62d5ff429ffecf8e7f3e01ff93754854","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fd92b8bcc88e969302510acf77bd6970da3994c4","8f4a0c306589f8607dc4b33f7abaf753db19f76e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b05c56a41b733e02a189c48895922b5bd8c7f3d1","fd92b8bcc88e969302510acf77bd6970da3994c4","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","8f4a0c306589f8607dc4b33f7abaf753db19f76e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}