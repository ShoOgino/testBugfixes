{"path":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","commits":[{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    for (CoreDescriptor cd : coreDescriptors) {\n      File instanceDir = new File(cd.getInstanceDir());\n      File propertiesFile = new File(instanceDir, PROPERTIES_FILENAME);\n      propertiesFile.renameTo(new File(instanceDir, PROPERTIES_FILENAME + \".unloaded\"));\n      // This is a best-effort: the core.properties file may already have been\n      // deleted by the core unload, so we don't worry about checking if the\n      // rename has succeeded.\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    for (CoreDescriptor cd : coreDescriptors) {\n      File instanceDir = new File(cd.getInstanceDir());\n      File propertiesFile = new File(instanceDir, PROPERTIES_FILENAME);\n      propertiesFile.renameTo(new File(instanceDir, PROPERTIES_FILENAME + \".unloaded\"));\n      // This is a best-effort: the core.properties file may already have been\n      // deleted by the core unload, so we don't worry about checking if the\n      // rename has succeeded.\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb2abaa052d4bc0c4a0b2ab1f674fe64adbad476","date":1385228876,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      File instanceDir = new File(cd.getInstanceDir());\n      File propertiesFile = new File(instanceDir, PROPERTIES_FILENAME);\n      propertiesFile.renameTo(new File(instanceDir, PROPERTIES_FILENAME + \".unloaded\"));\n      // This is a best-effort: the core.properties file may already have been\n      // deleted by the core unload, so we don't worry about checking if the\n      // rename has succeeded.\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    for (CoreDescriptor cd : coreDescriptors) {\n      File instanceDir = new File(cd.getInstanceDir());\n      File propertiesFile = new File(instanceDir, PROPERTIES_FILENAME);\n      propertiesFile.renameTo(new File(instanceDir, PROPERTIES_FILENAME + \".unloaded\"));\n      // This is a best-effort: the core.properties file may already have been\n      // deleted by the core unload, so we don't worry about checking if the\n      // rename has succeeded.\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      File instanceDir = new File(cd.getInstanceDir());\n      File propertiesFile = new File(instanceDir, PROPERTIES_FILENAME);\n      propertiesFile.renameTo(new File(instanceDir, PROPERTIES_FILENAME + \".unloaded\"));\n      // This is a best-effort: the core.properties file may already have been\n      // deleted by the core unload, so we don't worry about checking if the\n      // rename has succeeded.\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    for (CoreDescriptor cd : coreDescriptors) {\n      File instanceDir = new File(cd.getInstanceDir());\n      File propertiesFile = new File(instanceDir, PROPERTIES_FILENAME);\n      propertiesFile.renameTo(new File(instanceDir, PROPERTIES_FILENAME + \".unloaded\"));\n      // This is a best-effort: the core.properties file may already have been\n      // deleted by the core unload, so we don't worry about checking if the\n      // rename has succeeded.\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfff642564a0bd7d0848b5e8146a64f7623f6612","date":1447091419,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        logger.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      File instanceDir = new File(cd.getInstanceDir());\n      File propertiesFile = new File(instanceDir, PROPERTIES_FILENAME);\n      propertiesFile.renameTo(new File(instanceDir, PROPERTIES_FILENAME + \".unloaded\"));\n      // This is a best-effort: the core.properties file may already have been\n      // deleted by the core unload, so we don't worry about checking if the\n      // rename has succeeded.\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c80f6f4fe2e841ba56e6ce200951063ab91196d3","date":1533052731,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        logger.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        if (log.isWarnEnabled()) {\n          log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        if (log.isWarnEnabled()) {\n          log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"078208fb22390fe404cc26e34a439c51e6318ed4","date":1591151812,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = cd.getInstanceDir().resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = this.rootDirectory.resolve(cd.getInstanceDir()).resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CorePropertiesLocator#delete(CoreContainer,CoreDescriptor...).mjava","sourceNew":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = cd.getInstanceDir().resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        log.warn(\"Couldn't delete core properties file {}: \", propfile, e);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void delete(CoreContainer cc, CoreDescriptor... coreDescriptors) {\n    if (coreDescriptors == null) {\n      return;\n    }\n    for (CoreDescriptor cd : coreDescriptors) {\n      if (cd == null) continue;\n      Path propfile = cd.getInstanceDir().resolve(PROPERTIES_FILENAME);\n      try {\n        Files.deleteIfExists(propfile);\n      } catch (IOException e) {\n        log.warn(\"Couldn't delete core properties file {}: {}\", propfile, e.getMessage());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfff642564a0bd7d0848b5e8146a64f7623f6612":["bb2abaa052d4bc0c4a0b2ab1f674fe64adbad476"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"bb2abaa052d4bc0c4a0b2ab1f674fe64adbad476":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"140be51d03394488536f4aacedace29f9b318347":["c80f6f4fe2e841ba56e6ce200951063ab91196d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["078208fb22390fe404cc26e34a439c51e6318ed4"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","bb2abaa052d4bc0c4a0b2ab1f674fe64adbad476"],"575e66bd4b2349209027f6801184da7fc3cba13f":["140be51d03394488536f4aacedace29f9b318347"],"078208fb22390fe404cc26e34a439c51e6318ed4":["575e66bd4b2349209027f6801184da7fc3cba13f"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c80f6f4fe2e841ba56e6ce200951063ab91196d3":["bfff642564a0bd7d0848b5e8146a64f7623f6612"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c238f5fb83803b49b37b3a1a12224a64d47542"]},"commit2Childs":{"bfff642564a0bd7d0848b5e8146a64f7623f6612":["c80f6f4fe2e841ba56e6ce200951063ab91196d3"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"bb2abaa052d4bc0c4a0b2ab1f674fe64adbad476":["bfff642564a0bd7d0848b5e8146a64f7623f6612","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"140be51d03394488536f4aacedace29f9b318347":["575e66bd4b2349209027f6801184da7fc3cba13f"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["078208fb22390fe404cc26e34a439c51e6318ed4"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","bb2abaa052d4bc0c4a0b2ab1f674fe64adbad476","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"078208fb22390fe404cc26e34a439c51e6318ed4":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"c80f6f4fe2e841ba56e6ce200951063ab91196d3":["140be51d03394488536f4aacedace29f9b318347"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}