{"path":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorByArrayUIF).mjava","commits":[{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorByArrayUIF).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorUIF).mjava","sourceNew":"  public void collectDocs(FacetFieldProcessorByArrayUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","sourceOld":"  public void collectDocs(FacetFieldProcessorUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorByArrayUIF).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorUIF).mjava","sourceNew":"  public void collectDocs(FacetFieldProcessorByArrayUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","sourceOld":"  public void collectDocs(FacetFieldProcessorUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorByArrayUIF).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorUIF).mjava","sourceNew":"  public void collectDocs(FacetFieldProcessorByArrayUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","sourceOld":"  public void collectDocs(FacetFieldProcessorUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorByArrayUIF).mjava","pathOld":"/dev/null","sourceNew":"  public void collectDocs(FacetFieldProcessorByArrayUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":3,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorByArrayUIF).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#collectDocs(FacetFieldProcessorByArrayUIF).mjava","sourceNew":"  public void collectDocs(FacetFieldProcessorByArrayUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","sourceOld":"  public void collectDocs(FacetFieldProcessorByArrayUIF processor) throws IOException {\n    if (processor.collectAcc==null && processor.allBucketsAcc == null && processor.startTermIndex == 0 && processor.endTermIndex >= numTermsInField) {\n      getCounts(processor, processor.countAcc);\n      return;\n    }\n\n    collectDocsGeneric(processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79759974460bc59933cd169acc94f5c6b16368d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["2f9e4bd10604489b5817ee29e35ac96a3148cbec","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}