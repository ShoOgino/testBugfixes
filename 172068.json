{"path":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","commits":[{"id":"366fcca5de1fe02aa77c7aca163ce4c0dbf30112","date":1138917988,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","pathOld":"src/lucene_extras/org/apache/lucene/search/function/FunctionQuery.AllScorer#score().mjava","sourceNew":"    public float score() throws IOException {\n      return qWeight * vals.floatVal(doc);\n    }\n\n","sourceOld":"    public float score() throws IOException {\n      return qWeight * vals.floatVal(doc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac3e6437547a34cce2b5405ce0cf9e3af578401e","date":1243373693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","sourceNew":"    public float score() throws IOException {\n      float score = qWeight * vals.floatVal(doc);\n\n      // current Lucene sorting priority queues can't handle NaN and -Infinity\n      if (score != score || score==Float.NEGATIVE_INFINITY) return -Float.MAX_VALUE;\n      return score;\n    }\n\n","sourceOld":"    public float score() throws IOException {\n      return qWeight * vals.floatVal(doc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65e9e1bc56feb80af0d5e38a1b235856688c4151","date":1244469132,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","sourceNew":"    public float score() throws IOException {\n      float score = qWeight * vals.floatVal(doc);\n\n      // current Lucene sorting priority queues can't handle NaN (score!=score is true for NaN) and -Infinity\n      if (score != score || score==Float.NEGATIVE_INFINITY) return -Float.MAX_VALUE;\n      return score;\n    }\n\n","sourceOld":"    public float score() throws IOException {\n      float score = qWeight * vals.floatVal(doc);\n\n      // current Lucene sorting priority queues can't handle NaN and -Infinity\n      if (score != score || score==Float.NEGATIVE_INFINITY) return -Float.MAX_VALUE;\n      return score;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d97b3a9e09d15b3407a1bf453efb40f233c9f94d","date":1244472443,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","sourceNew":"    public float score() throws IOException {\n      float score = qWeight * vals.floatVal(doc);\n\n      // Current Lucene priority queues can't handle NaN and -Infinity, so\n      // map to -Float.MAX_VALUE. This conditional handles both -infinity\n      // and NaN since comparisons with NaN are always false.\n      return score>Float.NEGATIVE_INFINITY ? score : -Float.MAX_VALUE;\n    }\n\n","sourceOld":"    public float score() throws IOException {\n      float score = qWeight * vals.floatVal(doc);\n\n      // current Lucene sorting priority queues can't handle NaN (score!=score is true for NaN) and -Infinity\n      if (score != score || score==Float.NEGATIVE_INFINITY) return -Float.MAX_VALUE;\n      return score;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#score().mjava","sourceNew":"    public float score() throws IOException {\n      float score = qWeight * vals.floatVal(doc);\n\n      // Current Lucene priority queues can't handle NaN and -Infinity, so\n      // map to -Float.MAX_VALUE. This conditional handles both -infinity\n      // and NaN since comparisons with NaN are always false.\n      return score>Float.NEGATIVE_INFINITY ? score : -Float.MAX_VALUE;\n    }\n\n","sourceOld":"    public float score() throws IOException {\n      float score = qWeight * vals.floatVal(doc);\n\n      // Current Lucene priority queues can't handle NaN and -Infinity, so\n      // map to -Float.MAX_VALUE. This conditional handles both -infinity\n      // and NaN since comparisons with NaN are always false.\n      return score>Float.NEGATIVE_INFINITY ? score : -Float.MAX_VALUE;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"d97b3a9e09d15b3407a1bf453efb40f233c9f94d":["65e9e1bc56feb80af0d5e38a1b235856688c4151"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["d97b3a9e09d15b3407a1bf453efb40f233c9f94d"],"65e9e1bc56feb80af0d5e38a1b235856688c4151":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["65e9e1bc56feb80af0d5e38a1b235856688c4151"],"d97b3a9e09d15b3407a1bf453efb40f233c9f94d":["ad94625fb8d088209f46650c8097196fec67f00c"],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"65e9e1bc56feb80af0d5e38a1b235856688c4151":["d97b3a9e09d15b3407a1bf453efb40f233c9f94d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}