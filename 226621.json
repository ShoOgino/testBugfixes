{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(Directory,SegmentInfo,Collection[String]).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(Directory,SegmentInfo,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/Lucene3xFields#files(Directory,SegmentInfo,Collection[String]).mjava","sourceNew":"  static void files(Directory dir, SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","sourceOld":"  static void files(Directory dir, SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(SegmentInfo,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(Directory,SegmentInfo,Collection[String]).mjava","sourceNew":"  static void files(SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (info.dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","sourceOld":"  static void files(Directory dir, SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(SegmentInfo,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(Directory,SegmentInfo,Collection[String]).mjava","sourceNew":"  static void files(SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (info.dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","sourceOld":"  static void files(Directory dir, SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(SegmentInfo,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xFields#files(Directory,SegmentInfo,Collection[String]).mjava","sourceNew":"  static void files(SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (info.dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","sourceOld":"  static void files(Directory dir, SegmentInfo info, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION));\n    files.add(IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION));\n    if (info.getHasProx()) {\n      // LUCENE-1739: for certain versions of 2.9-dev,\n      // hasProx would be incorrectly computed during\n      // indexing as true, and then stored into the segments\n      // file, when it should have been false.  So we do the\n      // extra check, here:\n      final String prx = IndexFileNames.segmentFileName(info.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      if (dir.fileExists(prx)) {\n        files.add(prx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","78977ccc47b451a8e645b77504e2ef0a05e4b1a3"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["410e066f093e407222d9681429d209084e783149","78977ccc47b451a8e645b77504e2ef0a05e4b1a3","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}