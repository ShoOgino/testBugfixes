{"path":"lucene/core/src/test/org/apache/lucene/document/BaseShapeEncodingTestCase#testDegeneratedTriangle().mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseShapeEncodingTestCase#testDegeneratedTriangle().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseShapeEncodingTestCase#testDegeneratedTriangle().mjava","sourceNew":"  public void testDegeneratedTriangle() {\n    double ay = 1e-26d;\n    double ax = 0.0d;\n    double by = -1.0d;\n    double bx = 0.0d;\n    double cy = 1.0d;\n    double cx = 0.0d;\n    int ayEnc = encodeY(ay);\n    int axEnc = encodeX(ax);\n    int byEnc = encodeY(by);\n    int bxEnc = encodeX(bx);\n    int cyEnc = encodeY(cy);\n    int cxEnc = encodeX(cx);\n    byte[] b = new byte[7 * ShapeField.BYTES];\n    ShapeField.encodeTriangle(b, ayEnc, axEnc, true, byEnc, bxEnc, true, cyEnc, cxEnc, true);\n    ShapeField.DecodedTriangle encoded = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encoded);\n    assertTrue(encoded.aY == byEnc);\n    assertTrue(encoded.aX == bxEnc);\n    assertTrue(encoded.bY == cyEnc);\n    assertTrue(encoded.bX == cxEnc);\n    assertTrue(encoded.cY == ayEnc);\n    assertTrue(encoded.cX == axEnc);\n  }\n\n","sourceOld":"  public void testDegeneratedTriangle() {\n    double ay = 1e-26d;\n    double ax = 0.0d;\n    double by = -1.0d;\n    double bx = 0.0d;\n    double cy = 1.0d;\n    double cx = 0.0d;\n    int ayEnc = encodeY(ay);\n    int axEnc = encodeX(ax);\n    int byEnc = encodeY(by);\n    int bxEnc = encodeX(bx);\n    int cyEnc = encodeY(cy);\n    int cxEnc = encodeX(cx);\n    byte[] b = new byte[7 * ShapeField.BYTES];\n    ShapeField.encodeTriangle(b, ayEnc, axEnc, true, byEnc, bxEnc, true, cyEnc, cxEnc, true);\n    ShapeField.DecodedTriangle encoded = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encoded);\n    assertTrue(encoded.aY == byEnc);\n    assertTrue(encoded.aX == bxEnc);\n    assertTrue(encoded.bY == cyEnc);\n    assertTrue(encoded.bX == cxEnc);\n    assertTrue(encoded.cY == ayEnc);\n    assertTrue(encoded.cX == axEnc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}