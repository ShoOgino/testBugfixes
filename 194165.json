{"path":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":"    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n      final ExactSimScorer sub = sim.exactSimScorer(stats, context);\n      final Source values = context.reader().docValues(boostField).getSource();\n\n      return new ExactSimScorer() {\n        @Override\n        public float score(int doc, int freq) {\n          return (float) values.getFloat(doc) * sub.score(doc, freq);\n        }\n\n        @Override\n        public Explanation explain(int doc, Explanation freq) {\n          Explanation boostExplanation = new Explanation((float) values.getFloat(doc), \"indexDocValue(\" + boostField + \")\");\n          Explanation simExplanation = sub.explain(doc, freq);\n          Explanation expl = new Explanation(boostExplanation.getValue() * simExplanation.getValue(), \"product of:\");\n          expl.addDetail(boostExplanation);\n          expl.addDetail(simExplanation);\n          return expl;\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n      final ExactSimScorer sub = sim.exactSimScorer(stats, context);\n      final Source values = context.reader().docValues(boostField).getSource();\n\n      return new ExactSimScorer() {\n        @Override\n        public float score(int doc, int freq) {\n          return (float) values.getFloat(doc) * sub.score(doc, freq);\n        }\n\n        @Override\n        public Explanation explain(int doc, Explanation freq) {\n          Explanation boostExplanation = new Explanation((float) values.getFloat(doc), \"indexDocValue(\" + boostField + \")\");\n          Explanation simExplanation = sub.explain(doc, freq);\n          Explanation expl = new Explanation(boostExplanation.getValue() * simExplanation.getValue(), \"product of:\");\n          expl.addDetail(boostExplanation);\n          expl.addDetail(simExplanation);\n          return expl;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad7de846867bd14c63f9dd19df082f72c5ea9c54","date":1355517454,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":"    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n      final ExactSimScorer sub = sim.exactSimScorer(stats, context);\n      final FieldCache.Floats values = FieldCache.DEFAULT.getFloats(context.reader(), boostField, false);\n\n      return new ExactSimScorer() {\n        @Override\n        public float score(int doc, int freq) {\n          return values.get(doc) * sub.score(doc, freq);\n        }\n\n        @Override\n        public Explanation explain(int doc, Explanation freq) {\n          Explanation boostExplanation = new Explanation(values.get(doc), \"indexDocValue(\" + boostField + \")\");\n          Explanation simExplanation = sub.explain(doc, freq);\n          Explanation expl = new Explanation(boostExplanation.getValue() * simExplanation.getValue(), \"product of:\");\n          expl.addDetail(boostExplanation);\n          expl.addDetail(simExplanation);\n          return expl;\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n      final ExactSimScorer sub = sim.exactSimScorer(stats, context);\n      final Source values = context.reader().docValues(boostField).getSource();\n\n      return new ExactSimScorer() {\n        @Override\n        public float score(int doc, int freq) {\n          return (float) values.getFloat(doc) * sub.score(doc, freq);\n        }\n\n        @Override\n        public Explanation explain(int doc, Explanation freq) {\n          Explanation boostExplanation = new Explanation((float) values.getFloat(doc), \"indexDocValue(\" + boostField + \")\");\n          Explanation simExplanation = sub.explain(doc, freq);\n          Explanation expl = new Explanation(boostExplanation.getValue() * simExplanation.getValue(), \"product of:\");\n          expl.addDetail(boostExplanation);\n          expl.addDetail(simExplanation);\n          return expl;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":"    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n      final ExactSimScorer sub = sim.exactSimScorer(stats, context);\n      final FieldCache.Floats values = FieldCache.DEFAULT.getFloats(context.reader(), boostField, false);\n\n      return new ExactSimScorer() {\n        @Override\n        public float score(int doc, int freq) {\n          return values.get(doc) * sub.score(doc, freq);\n        }\n\n        @Override\n        public Explanation explain(int doc, Explanation freq) {\n          Explanation boostExplanation = new Explanation(values.get(doc), \"indexDocValue(\" + boostField + \")\");\n          Explanation simExplanation = sub.explain(doc, freq);\n          Explanation expl = new Explanation(boostExplanation.getValue() * simExplanation.getValue(), \"product of:\");\n          expl.addDetail(boostExplanation);\n          expl.addDetail(simExplanation);\n          return expl;\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n      final ExactSimScorer sub = sim.exactSimScorer(stats, context);\n      final Source values = context.reader().docValues(boostField).getSource();\n\n      return new ExactSimScorer() {\n        @Override\n        public float score(int doc, int freq) {\n          return (float) values.getFloat(doc) * sub.score(doc, freq);\n        }\n\n        @Override\n        public Explanation explain(int doc, Explanation freq) {\n          Explanation boostExplanation = new Explanation((float) values.getFloat(doc), \"indexDocValue(\" + boostField + \")\");\n          Explanation simExplanation = sub.explain(doc, freq);\n          Explanation expl = new Explanation(boostExplanation.getValue() * simExplanation.getValue(), \"product of:\");\n          expl.addDetail(boostExplanation);\n          expl.addDetail(simExplanation);\n          return expl;\n        }\n      };\n    }\n\n","bugFix":["0f3cee3d20b0c786e6fca20539454262e29edcab","6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b799defcfda6d303cbb180917bf1e749089adf42","date":1370695356,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesScoring.BoostingSimilarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n      final ExactSimScorer sub = sim.exactSimScorer(stats, context);\n      final FieldCache.Floats values = FieldCache.DEFAULT.getFloats(context.reader(), boostField, false);\n\n      return new ExactSimScorer() {\n        @Override\n        public float score(int doc, int freq) {\n          return values.get(doc) * sub.score(doc, freq);\n        }\n\n        @Override\n        public Explanation explain(int doc, Explanation freq) {\n          Explanation boostExplanation = new Explanation(values.get(doc), \"indexDocValue(\" + boostField + \")\");\n          Explanation simExplanation = sub.explain(doc, freq);\n          Explanation expl = new Explanation(boostExplanation.getValue() * simExplanation.getValue(), \"product of:\");\n          expl.addDetail(boostExplanation);\n          expl.addDetail(simExplanation);\n          return expl;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ad7de846867bd14c63f9dd19df082f72c5ea9c54"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad7de846867bd14c63f9dd19df082f72c5ea9c54":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b799defcfda6d303cbb180917bf1e749089adf42":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b799defcfda6d303cbb180917bf1e749089adf42"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["b799defcfda6d303cbb180917bf1e749089adf42"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4d69c535930b5cce125cff868d40f6373dc27d4","ad7de846867bd14c63f9dd19df082f72c5ea9c54"],"ad7de846867bd14c63f9dd19df082f72c5ea9c54":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b799defcfda6d303cbb180917bf1e749089adf42":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}