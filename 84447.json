{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoModelTest#testBasicRectangle().mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoModelTest#testBasicRectangle().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoModelTest#testBasicRectangle().mjava","sourceNew":"  @Test\n  public void testBasicRectangle() {\n    final GeoBBox bbox = GeoBBoxFactory.makeGeoBBox(scaledModel, 1.0, 0.0, 0.0, 1.0);\n    final GeoPoint insidePoint = new GeoPoint(scaledModel, 0.5, 0.5);\n    assertTrue(bbox.isWithin(insidePoint));\n    final GeoPoint topOutsidePoint = new GeoPoint(scaledModel, 1.01, 0.5);\n    assertFalse(bbox.isWithin(topOutsidePoint));\n    final GeoPoint bottomOutsidePoint = new GeoPoint(scaledModel, -0.01, 0.5);\n    assertFalse(bbox.isWithin(bottomOutsidePoint));\n    final GeoPoint leftOutsidePoint = new GeoPoint(scaledModel, 0.5, -0.01);\n    assertFalse(bbox.isWithin(leftOutsidePoint));\n    final GeoPoint rightOutsidePoint = new GeoPoint(scaledModel, 0.5, 1.01);\n    assertFalse(bbox.isWithin(rightOutsidePoint));\n    final LatLonBounds bounds = new LatLonBounds();\n    bbox.getBounds(bounds);\n    assertFalse(bounds.checkNoLongitudeBound());\n    assertFalse(bounds.checkNoTopLatitudeBound());\n    assertFalse(bounds.checkNoBottomLatitudeBound());\n    assertEquals(1.0, bounds.getMaxLatitude(), 0.00001);\n    assertEquals(0.0, bounds.getMinLatitude(), 0.00001);\n    assertEquals(1.0, bounds.getRightLongitude(), 0.00001);\n    assertEquals(0.0, bounds.getLeftLongitude(), 0.00001);\n  }\n\n","sourceOld":"  @Test\n  public void testBasicRectangle() {\n    final GeoBBox bbox = GeoBBoxFactory.makeGeoBBox(scaledModel, 1.0, 0.0, 0.0, 1.0);\n    final GeoPoint insidePoint = new GeoPoint(scaledModel, 0.5, 0.5);\n    assertTrue(bbox.isWithin(insidePoint));\n    final GeoPoint topOutsidePoint = new GeoPoint(scaledModel, 1.01, 0.5);\n    assertFalse(bbox.isWithin(topOutsidePoint));\n    final GeoPoint bottomOutsidePoint = new GeoPoint(scaledModel, -0.01, 0.5);\n    assertFalse(bbox.isWithin(bottomOutsidePoint));\n    final GeoPoint leftOutsidePoint = new GeoPoint(scaledModel, 0.5, -0.01);\n    assertFalse(bbox.isWithin(leftOutsidePoint));\n    final GeoPoint rightOutsidePoint = new GeoPoint(scaledModel, 0.5, 1.01);\n    assertFalse(bbox.isWithin(rightOutsidePoint));\n    final LatLonBounds bounds = new LatLonBounds();\n    bbox.getBounds(bounds);\n    assertFalse(bounds.checkNoLongitudeBound());\n    assertFalse(bounds.checkNoTopLatitudeBound());\n    assertFalse(bounds.checkNoBottomLatitudeBound());\n    assertEquals(1.0, bounds.getMaxLatitude(), 0.00001);\n    assertEquals(0.0, bounds.getMinLatitude(), 0.00001);\n    assertEquals(1.0, bounds.getRightLongitude(), 0.00001);\n    assertEquals(0.0, bounds.getLeftLongitude(), 0.00001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}