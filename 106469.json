{"path":"solr/core/src/java/org/apache/solr/util/RedactionUtils#redactNames(Map[String,String],String).mjava","commits":[{"id":"d3d2a34ea3732f91149b31bcad82026ad85fda69","date":1567850949,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/RedactionUtils#redactNames(Map[String,String],String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Replace actual names found in a string with redacted names.\n   * @param redactions a map of original to redacted names\n   * @param data string to redact\n   * @return redacted string where all actual names have been replaced.\n   */\n  public static String redactNames(Map<String, String> redactions, String data) {\n    // replace the longest first to avoid partial replacements\n    Map<String, String> sorted = new TreeMap<>(Comparator\n        .comparing(String::length)\n        .reversed()\n        .thenComparing(String::compareTo));\n    sorted.putAll(redactions);\n    for (Map.Entry<String, String> entry : sorted.entrySet()) {\n      data = data.replaceAll(\"\\\\Q\" + entry.getKey() + \"\\\\E\", entry.getValue());\n    }\n    return data;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3d2a34ea3732f91149b31bcad82026ad85fda69"]},"commit2Childs":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}