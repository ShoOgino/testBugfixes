{"path":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String,IOContext).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,int,IOContext).mjava","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String segmentSuffix, IOContext context)\n    throws IOException {\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, segmentSuffix, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION), new IOContext(context, true));\n    this.segment = segment;\n    boolean success = false;\n    assert indexDivisor == -1 || indexDivisor > 0;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, int codecId, IOContext context)\n    throws IOException {\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION), new IOContext(context, true));\n    this.segment = segment;\n    boolean success = false;\n    assert indexDivisor == -1 || indexDivisor > 0;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String,IOContext).mjava","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String segmentSuffix, IOContext context)\n    throws IOException {\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, segmentSuffix, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION), new IOContext(context, true));\n    this.segment = segment;\n    boolean success = false;\n    assert indexDivisor == -1 || indexDivisor > 0;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String segmentSuffix, IOContext context)\n    throws IOException {\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, segmentSuffix, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION), new IOContext(context, true));\n    this.segment = segment;\n    boolean success = false;\n    assert indexDivisor == -1 || indexDivisor > 0;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}