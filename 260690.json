{"path":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f996290e59e291197de58145aa83e55bae27417","date":1369193722,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery...).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, FunctionQuery... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1f996290e59e291197de58145aa83e55bae27417":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f996290e59e291197de58145aa83e55bae27417"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1f996290e59e291197de58145aa83e55bae27417"],"1f996290e59e291197de58145aa83e55bae27417":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}