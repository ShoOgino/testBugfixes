{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","commits":[{"id":"eecb423c2b1378e42f1bbb77d4c63b59ef87ac86","date":1356978641,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","pathOld":"/dev/null","sourceNew":"  private int currentYearFromDatabase() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    ResultSet rs = null;\n    try {\n      conn = newConnection();\n      s = conn.createStatement();\n      rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      Assert.fail(\"We should have gotten a row from the db.\");\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try {\n        rs.close();\n      } catch (Exception ex) {}\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","pathOld":"/dev/null","sourceNew":"  private int currentYearFromDatabase() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    ResultSet rs = null;\n    try {\n      conn = newConnection();\n      s = conn.createStatement();\n      rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      Assert.fail(\"We should have gotten a row from the db.\");\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try {\n        rs.close();\n      } catch (Exception ex) {}\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","sourceNew":"  private int currentYearFromDatabase() throws Exception {\n    try (\n        Connection conn = newConnection();\n        Statement s = conn.createStatement();\n        ResultSet rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n    ){\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      fail(\"We should have gotten a row from the db.\");\n    }\n    return 0;\n  }\n\n","sourceOld":"  private int currentYearFromDatabase() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    ResultSet rs = null;\n    try {\n      conn = newConnection();\n      s = conn.createStatement();\n      rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      Assert.fail(\"We should have gotten a row from the db.\");\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try {\n        rs.close();\n      } catch (Exception ex) {}\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","sourceNew":"  private int currentYearFromDatabase() throws Exception {\n    try (\n        Connection conn = newConnection();\n        Statement s = conn.createStatement();\n        ResultSet rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n    ){\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      fail(\"We should have gotten a row from the db.\");\n    }\n    return 0;\n  }\n\n","sourceOld":"  private int currentYearFromDatabase() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    ResultSet rs = null;\n    try {\n      conn = newConnection();\n      s = conn.createStatement();\n      rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      Assert.fail(\"We should have gotten a row from the db.\");\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try {\n        rs.close();\n      } catch (Exception ex) {}\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","sourceNew":"  private int currentYearFromDatabase() throws Exception {\n    try (\n        Connection conn = newConnection();\n        Statement s = conn.createStatement();\n        ResultSet rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n    ){\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      fail(\"We should have gotten a row from the db.\");\n    }\n    return 0;\n  }\n\n","sourceOld":"  private int currentYearFromDatabase() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    ResultSet rs = null;\n    try {\n      conn = newConnection();\n      s = conn.createStatement();\n      rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      Assert.fail(\"We should have gotten a row from the db.\");\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try {\n        rs.close();\n      } catch (Exception ex) {}\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSimplePropertiesWriter#currentYearFromDatabase().mjava","sourceNew":null,"sourceOld":"  private int currentYearFromDatabase() throws Exception {\n    try (\n        Connection conn = newConnection();\n        Statement s = conn.createStatement();\n        ResultSet rs = s.executeQuery(\"select year(current_timestamp) from sysibm.sysdummy1\");\n    ){\n      if (rs.next()) {\n        return rs.getInt(1);\n      }\n      fail(\"We should have gotten a row from the db.\");\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eecb423c2b1378e42f1bbb77d4c63b59ef87ac86"],"eecb423c2b1378e42f1bbb77d4c63b59ef87ac86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["eecb423c2b1378e42f1bbb77d4c63b59ef87ac86"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["eecb423c2b1378e42f1bbb77d4c63b59ef87ac86","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["eecb423c2b1378e42f1bbb77d4c63b59ef87ac86","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"eecb423c2b1378e42f1bbb77d4c63b59ef87ac86":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","eecb423c2b1378e42f1bbb77d4c63b59ef87ac86"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}