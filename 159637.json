{"path":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#findTasks().mjava","commits":[{"id":"975cb787e66d548dba4f63c22c08d692c7235f73","date":1174605228,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#findTasks().mjava","pathOld":"/dev/null","sourceNew":"  // one time initialization\n  static String [] findTasks () throws Exception {\n    ArrayList tsks = new ArrayList();\n    // init with tasks we know about\n    tsks.add(  \" AddDoc                   \"  );\n    tsks.add(  \" AddDoc(1000.0)           \"  );\n    tsks.add(  \" ClearStats               \"  );\n    tsks.add(  \" CloseIndex               \"  );\n    tsks.add(  \" CloseReader              \"  );\n    tsks.add(  \" CreateIndex              \"  );\n    tsks.add(  \" DeleteDoc                \"  );\n    tsks.add(  \" DeleteDoc(500.0)         \"  );\n    tsks.add(  \" NewRound                 \"  );\n    tsks.add(  \" OpenIndex                \"  );\n    tsks.add(  \" OpenReader               \"  );\n    tsks.add(  \" Optimize                 \"  );\n    tsks.add(  \" RepAll                   \"  );\n    tsks.add(  \" RepSelectByPref prefix   \"  );\n    tsks.add(  \" RepSumByNameRound        \"  );\n    tsks.add(  \" RepSumByName             \"  );\n    tsks.add(  \" RepSumByPrefRound prefix \"  );\n    tsks.add(  \" RepSumByPref   prefix    \"  );\n    tsks.add(  \" ResetInputs              \"  );\n    tsks.add(  \" ResetSystemErase         \"  );\n    tsks.add(  \" ResetSystemSoft          \"  );\n    tsks.add(  \" Search                   \"  );\n    tsks.add(  \" SearchTravRet            \"  );\n    tsks.add(  \" SearchTravRet(100.0)     \"  );\n    tsks.add(  \" SearchTrav               \"  );\n    tsks.add(  \" SearchTrav(50.0)         \"  );\n    tsks.add(  \" SetProp                  \"  );\n    tsks.add(  \" SetProp(name,value)      \"  );\n    tsks.add(  \" Warm                     \"  );\n    \n    // if tasks.dir property is defined, look for additional tasks.\n    // this somewhat covers tasks that would be added in the future, in case\n    // the list above is not updated to cover them.\n    // some tasks would be tested more than once this way, but that's ok.\n    String tasksDir = System.getProperty(\"tasks.dir\");\n    if (tasksDir !=null) {\n      String pkgPrefix = PerfTask.class.getPackage().getName()+\".\";\n      String taskNames[] = new File(tasksDir).list();\n      for (int i = 0; i < taskNames.length; i++) {\n        String name = taskNames[i].trim();\n        if (!name.endsWith(\"Task.class\"))\n          continue; // Task class file only\n        name = name.substring(0,name.length()-6);\n        Class cls = Class.forName(pkgPrefix+name);\n        if (Modifier.isAbstract(cls.getModifiers()) || Modifier.isInterface(cls.getModifiers())) \n          continue; // skip sbstract classes\n        if (!PerfTask.class.isAssignableFrom(cls))\n          continue; // not a task\n        name = name.substring(0,name.length()-4);\n        if (name.startsWith(\"Rep\") && name.indexOf(\"Pref\")>=0)\n          name += \" prefix\";\n        tsks.add(\" \"+name+\" \");\n      }\n    }\n    return (String[]) tsks.toArray(new String[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0f4b47efbf80cb689c6a58715ad0b93b088658e","date":1174655626,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#findTasks().mjava","pathOld":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#findTasks().mjava","sourceNew":"  // one time initialization\n  static String [] findTasks () throws Exception {\n    ArrayList tsks = new ArrayList();\n    // init with tasks we know about\n    tsks.add(  \" AddDoc                   \"  );\n    tsks.add(  \" AddDoc(1000.0)           \"  );\n    tsks.add(  \" ClearStats               \"  );\n    tsks.add(  \" CloseIndex               \"  );\n    tsks.add(  \" CloseReader              \"  );\n    tsks.add(  \" CreateIndex              \"  );\n    tsks.add(  \" DeleteDoc                \"  );\n    tsks.add(  \" DeleteDoc(500.0)         \"  );\n    tsks.add(  \" NewRound                 \"  );\n    tsks.add(  \" OpenIndex                \"  );\n    tsks.add(  \" OpenReader               \"  );\n    tsks.add(  \" Optimize                 \"  );\n    tsks.add(  \" RepAll                   \"  );\n    tsks.add(  \" RepSelectByPref prefix   \"  );\n    tsks.add(  \" RepSumByNameRound        \"  );\n    tsks.add(  \" RepSumByName             \"  );\n    tsks.add(  \" RepSumByPrefRound prefix \"  );\n    tsks.add(  \" RepSumByPref   prefix    \"  );\n    tsks.add(  \" ResetInputs              \"  );\n    tsks.add(  \" ResetSystemErase         \"  );\n    tsks.add(  \" ResetSystemSoft          \"  );\n    tsks.add(  \" Search                   \"  );\n    tsks.add(  \" SearchTravRet            \"  );\n    tsks.add(  \" SearchTravRet(100.0)     \"  );\n    tsks.add(  \" SearchTrav               \"  );\n    tsks.add(  \" SearchTrav(50.0)         \"  );\n    tsks.add(  \" SetProp                  \"  );\n    tsks.add(  \" SetProp(name,value)      \"  );\n    tsks.add(  \" Warm                     \"  );\n    tsks.add(  \"SearchTravRetLoadFieldSelector\");\n    tsks.add(\"SearchTravRetLoadFieldSelector(body,title)\");\n    \n    // if tasks.dir property is defined, look for additional tasks.\n    // this somewhat covers tasks that would be added in the future, in case\n    // the list above is not updated to cover them.\n    // some tasks would be tested more than once this way, but that's ok.\n    String tasksDir = System.getProperty(\"tasks.dir\");\n    if (tasksDir !=null) {\n      String pkgPrefix = PerfTask.class.getPackage().getName()+\".\";\n      String taskNames[] = new File(tasksDir).list();\n      for (int i = 0; i < taskNames.length; i++) {\n        String name = taskNames[i].trim();\n        if (!name.endsWith(\"Task.class\"))\n          continue; // Task class file only\n        name = name.substring(0,name.length()-6);\n        Class cls = Class.forName(pkgPrefix+name);\n        if (Modifier.isAbstract(cls.getModifiers()) || Modifier.isInterface(cls.getModifiers())) \n          continue; // skip sbstract classes\n        if (!PerfTask.class.isAssignableFrom(cls))\n          continue; // not a task\n        name = name.substring(0,name.length()-4);\n        if (name.startsWith(\"Rep\") && name.indexOf(\"Pref\")>=0)\n          name += \" prefix\";\n        tsks.add(\" \"+name+\" \");\n      }\n    }\n    return (String[]) tsks.toArray(new String[0]);\n  }\n\n","sourceOld":"  // one time initialization\n  static String [] findTasks () throws Exception {\n    ArrayList tsks = new ArrayList();\n    // init with tasks we know about\n    tsks.add(  \" AddDoc                   \"  );\n    tsks.add(  \" AddDoc(1000.0)           \"  );\n    tsks.add(  \" ClearStats               \"  );\n    tsks.add(  \" CloseIndex               \"  );\n    tsks.add(  \" CloseReader              \"  );\n    tsks.add(  \" CreateIndex              \"  );\n    tsks.add(  \" DeleteDoc                \"  );\n    tsks.add(  \" DeleteDoc(500.0)         \"  );\n    tsks.add(  \" NewRound                 \"  );\n    tsks.add(  \" OpenIndex                \"  );\n    tsks.add(  \" OpenReader               \"  );\n    tsks.add(  \" Optimize                 \"  );\n    tsks.add(  \" RepAll                   \"  );\n    tsks.add(  \" RepSelectByPref prefix   \"  );\n    tsks.add(  \" RepSumByNameRound        \"  );\n    tsks.add(  \" RepSumByName             \"  );\n    tsks.add(  \" RepSumByPrefRound prefix \"  );\n    tsks.add(  \" RepSumByPref   prefix    \"  );\n    tsks.add(  \" ResetInputs              \"  );\n    tsks.add(  \" ResetSystemErase         \"  );\n    tsks.add(  \" ResetSystemSoft          \"  );\n    tsks.add(  \" Search                   \"  );\n    tsks.add(  \" SearchTravRet            \"  );\n    tsks.add(  \" SearchTravRet(100.0)     \"  );\n    tsks.add(  \" SearchTrav               \"  );\n    tsks.add(  \" SearchTrav(50.0)         \"  );\n    tsks.add(  \" SetProp                  \"  );\n    tsks.add(  \" SetProp(name,value)      \"  );\n    tsks.add(  \" Warm                     \"  );\n    \n    // if tasks.dir property is defined, look for additional tasks.\n    // this somewhat covers tasks that would be added in the future, in case\n    // the list above is not updated to cover them.\n    // some tasks would be tested more than once this way, but that's ok.\n    String tasksDir = System.getProperty(\"tasks.dir\");\n    if (tasksDir !=null) {\n      String pkgPrefix = PerfTask.class.getPackage().getName()+\".\";\n      String taskNames[] = new File(tasksDir).list();\n      for (int i = 0; i < taskNames.length; i++) {\n        String name = taskNames[i].trim();\n        if (!name.endsWith(\"Task.class\"))\n          continue; // Task class file only\n        name = name.substring(0,name.length()-6);\n        Class cls = Class.forName(pkgPrefix+name);\n        if (Modifier.isAbstract(cls.getModifiers()) || Modifier.isInterface(cls.getModifiers())) \n          continue; // skip sbstract classes\n        if (!PerfTask.class.isAssignableFrom(cls))\n          continue; // not a task\n        name = name.substring(0,name.length()-4);\n        if (name.startsWith(\"Rep\") && name.indexOf(\"Pref\")>=0)\n          name += \" prefix\";\n        tsks.add(\" \"+name+\" \");\n      }\n    }\n    return (String[]) tsks.toArray(new String[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bea909b475e3f9d726f4fee3c27d3c870b9027","date":1239875190,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#findTasks().mjava","sourceNew":null,"sourceOld":"  // one time initialization\n  static String [] findTasks () throws Exception {\n    ArrayList tsks = new ArrayList();\n    // init with tasks we know about\n    tsks.add(  \" AddDoc                   \"  );\n    tsks.add(  \" AddDoc(1000.0)           \"  );\n    tsks.add(  \" ClearStats               \"  );\n    tsks.add(  \" CloseIndex               \"  );\n    tsks.add(  \" CloseReader              \"  );\n    tsks.add(  \" CreateIndex              \"  );\n    tsks.add(  \" DeleteDoc                \"  );\n    tsks.add(  \" DeleteDoc(500.0)         \"  );\n    tsks.add(  \" NewRound                 \"  );\n    tsks.add(  \" OpenIndex                \"  );\n    tsks.add(  \" OpenReader               \"  );\n    tsks.add(  \" Optimize                 \"  );\n    tsks.add(  \" RepAll                   \"  );\n    tsks.add(  \" RepSelectByPref prefix   \"  );\n    tsks.add(  \" RepSumByNameRound        \"  );\n    tsks.add(  \" RepSumByName             \"  );\n    tsks.add(  \" RepSumByPrefRound prefix \"  );\n    tsks.add(  \" RepSumByPref   prefix    \"  );\n    tsks.add(  \" ResetInputs              \"  );\n    tsks.add(  \" ResetSystemErase         \"  );\n    tsks.add(  \" ResetSystemSoft          \"  );\n    tsks.add(  \" Search                   \"  );\n    tsks.add(  \" SearchTravRet            \"  );\n    tsks.add(  \" SearchTravRet(100.0)     \"  );\n    tsks.add(  \" SearchTrav               \"  );\n    tsks.add(  \" SearchTrav(50.0)         \"  );\n    tsks.add(  \" SetProp                  \"  );\n    tsks.add(  \" SetProp(name,value)      \"  );\n    tsks.add(  \" Warm                     \"  );\n    tsks.add(  \"SearchTravRetLoadFieldSelector\");\n    tsks.add(\"SearchTravRetLoadFieldSelector(body,title)\");\n    \n    // if tasks.dir property is defined, look for additional tasks.\n    // this somewhat covers tasks that would be added in the future, in case\n    // the list above is not updated to cover them.\n    // some tasks would be tested more than once this way, but that's ok.\n    String tasksDir = System.getProperty(\"tasks.dir\");\n    if (tasksDir !=null) {\n      String pkgPrefix = PerfTask.class.getPackage().getName()+\".\";\n      String taskNames[] = new File(tasksDir).list();\n      for (int i = 0; i < taskNames.length; i++) {\n        String name = taskNames[i].trim();\n        if (!name.endsWith(\"Task.class\"))\n          continue; // Task class file only\n        name = name.substring(0,name.length()-6);\n        Class cls = Class.forName(pkgPrefix+name);\n        if (Modifier.isAbstract(cls.getModifiers()) || Modifier.isInterface(cls.getModifiers())) \n          continue; // skip sbstract classes\n        if (!PerfTask.class.isAssignableFrom(cls))\n          continue; // not a task\n        name = name.substring(0,name.length()-4);\n        if (name.startsWith(\"Rep\") && name.indexOf(\"Pref\")>=0)\n          name += \" prefix\";\n        tsks.add(\" \"+name+\" \");\n      }\n    }\n    return (String[]) tsks.toArray(new String[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"975cb787e66d548dba4f63c22c08d692c7235f73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["a0f4b47efbf80cb689c6a58715ad0b93b088658e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0f4b47efbf80cb689c6a58715ad0b93b088658e":["975cb787e66d548dba4f63c22c08d692c7235f73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"]},"commit2Childs":{"975cb787e66d548dba4f63c22c08d692c7235f73":["a0f4b47efbf80cb689c6a58715ad0b93b088658e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["975cb787e66d548dba4f63c22c08d692c7235f73"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0f4b47efbf80cb689c6a58715ad0b93b088658e":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}