{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", TextField.TYPE_STORED, \"please divide this sentence into shingles\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", TextField.TYPE_STORED, \"just another test sentence\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", TextField.TYPE_STORED, \"a sentence which contains no test\"));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", TextField.TYPE_STORED, \"please divide this sentence into shingles\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", TextField.TYPE_STORED, \"just another test sentence\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", TextField.TYPE_STORED, \"a sentence which contains no test\"));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3a0403b45dfe384fae4a1b6e96c3265d000c498","date":1321445981,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}