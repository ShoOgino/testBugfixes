{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","commits":[{"id":"157728c1f42b384dfc049157cc95adc767da3415","date":1224572739,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrWriter.SolrDoc,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc,\n                         Map<String, Object> arow) {\n    DataConfig.Entity parentMost = entity;\n    while (parentMost.parentEntity != null)\n      parentMost = parentMost.parentEntity;\n    for (DataConfig.Field field : entity.fields) {\n      addFieldValue(field, arow, null, doc);\n    }\n    if (parentMost.implicitFields != null) {\n      Map<String, Object> lowerCaseMap = new HashMap<String, Object>();\n      for (Map.Entry<String, Object> entry : arow.entrySet())\n        lowerCaseMap.put(entry.getKey().toLowerCase(), entry.getValue());\n\n      for (DataConfig.Field automaticField : parentMost.implicitFields) {\n        addFieldValue(automaticField, arow, lowerCaseMap, doc);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrWriter.SolrDoc doc,\n                         Map<String, Object> arow) {\n    DataConfig.Entity parentMost = entity;\n    while (parentMost.parentEntity != null)\n      parentMost = parentMost.parentEntity;\n    for (DataConfig.Field field : entity.fields) {\n      addFieldValue(field, arow, null, doc);\n    }\n    if (parentMost.implicitFields != null) {\n      Map<String, Object> lowerCaseMap = new HashMap<String, Object>();\n      for (Map.Entry<String, Object> entry : arow.entrySet())\n        lowerCaseMap.put(entry.getKey().toLowerCase(), entry.getValue());\n\n      for (DataConfig.Field automaticField : parentMost.implicitFields) {\n        addFieldValue(automaticField, arow, lowerCaseMap, doc);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46bf22400b9cd12540418cd46bfa17c100f983a","date":1225303526,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null)  {\n        field = entity.lowercaseColNameVsField.get(key.toLowerCase());\n      }\n      if (field == null && entity.rootEntity != null)  {\n        field = entity.rootEntity.colNameVsField.get(key);\n      }\n      if (field == null && entity.rootEntity != null)  {\n        field = entity.rootEntity.lowercaseColNameVsField.get(key.toLowerCase());\n      }\n      if (field == null)  {\n        // This can be a dynamic field\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), key, 1.0f, sf.multiValued(), doc);\n        }\n      } else  {\n        if (field.toWrite)  {\n          addFieldToDoc(entry.getValue(), key, field.boost, field.multiValued, doc);\n        }\n      }\n      \n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc,\n                         Map<String, Object> arow) {\n    DataConfig.Entity parentMost = entity;\n    while (parentMost.parentEntity != null)\n      parentMost = parentMost.parentEntity;\n    for (DataConfig.Field field : entity.fields) {\n      addFieldValue(field, arow, null, doc);\n    }\n    if (parentMost.implicitFields != null) {\n      Map<String, Object> lowerCaseMap = new HashMap<String, Object>();\n      for (Map.Entry<String, Object> entry : arow.entrySet())\n        lowerCaseMap.put(entry.getKey().toLowerCase(), entry.getValue());\n\n      for (DataConfig.Field automaticField : parentMost.implicitFields) {\n        addFieldValue(automaticField, arow, lowerCaseMap, doc);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d35fc21ac635fb44202cf4b74a7ec94abc0699ae","78ba4a4cc84cf69e69a7a156d7180ff65606ca93","29df09ecb6b96d58f34447be89f88a0c067fb3a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29df09ecb6b96d58f34447be89f88a0c067fb3a9","date":1225344078,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), key, 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field.toWrite) {\n          addFieldToDoc(entry.getValue(), key, field.boost, field.multiValued, doc);\n        }\n      }\n\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null)  {\n        field = entity.lowercaseColNameVsField.get(key.toLowerCase());\n      }\n      if (field == null && entity.rootEntity != null)  {\n        field = entity.rootEntity.colNameVsField.get(key);\n      }\n      if (field == null && entity.rootEntity != null)  {\n        field = entity.rootEntity.lowercaseColNameVsField.get(key.toLowerCase());\n      }\n      if (field == null)  {\n        // This can be a dynamic field\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), key, 1.0f, sf.multiValued(), doc);\n        }\n      } else  {\n        if (field.toWrite)  {\n          addFieldToDoc(entry.getValue(), key, field.boost, field.multiValued, doc);\n        }\n      }\n      \n    }\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","e46bf22400b9cd12540418cd46bfa17c100f983a"],"bugIntro":["d35fc21ac635fb44202cf4b74a7ec94abc0699ae"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e886fb6afe33a296f3d21a4c18694ecb64545fab","date":1226485789,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), key, 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null && field.toWrite) {\n          addFieldToDoc(entry.getValue(), key, field.boost, field.multiValued, doc);\n        }\n      }\n\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), key, 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field.toWrite) {\n          addFieldToDoc(entry.getValue(), key, field.boost, field.multiValued, doc);\n        }\n      }\n\n    }\n  }\n\n","bugFix":null,"bugIntro":["d35fc21ac635fb44202cf4b74a7ec94abc0699ae"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78ba4a4cc84cf69e69a7a156d7180ff65606ca93","date":1227165581,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null && field.toWrite) {\n          addFieldToDoc(entry.getValue(), field.getName(), field.boost, field.multiValued, doc);\n        }\n      }\n\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), key, 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null && field.toWrite) {\n          addFieldToDoc(entry.getValue(), key, field.boost, field.multiValued, doc);\n        }\n      }\n\n    }\n  }\n\n","bugFix":["e46bf22400b9cd12540418cd46bfa17c100f983a"],"bugIntro":["d35fc21ac635fb44202cf4b74a7ec94abc0699ae"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d35fc21ac635fb44202cf4b74a7ec94abc0699ae","date":1230621566,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null ) {\n          for (DataConfig.Field f : field) {\n            if(f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      DataConfig.Field field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null && field.toWrite) {\n          addFieldToDoc(entry.getValue(), field.getName(), field.boost, field.multiValued, doc);\n        }\n      }\n\n    }\n  }\n\n","bugFix":["29df09ecb6b96d58f34447be89f88a0c067fb3a9","78ba4a4cc84cf69e69a7a156d7180ff65606ca93","e886fb6afe33a296f3d21a4c18694ecb64545fab","e46bf22400b9cd12540418cd46bfa17c100f983a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35d71c83578c6e08733e7a584ca744c7c66d60a6","date":1235022186,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            if (f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null ) {\n          for (DataConfig.Field f : field) {\n            if(f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be21b70688b510ce9b71baca540e637755819715","date":1237458453,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    Object s = arow.get(\"$skipRow\");\n    if (s != null && Boolean.parseBoolean(s.toString()))  {\n        return;\n    }\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) {\n        if (\"$deleteDocById\".equals(key)) {\n          if (value instanceof Collection) {\n            Collection collection = (Collection) value;\n            for (Object o : collection) {\n              writer.deleteDoc(o.toString());\n            }\n          } else  {\n            writer.deleteDoc(value);\n          }\n        }\n        if (\"$deleteDocByQuery\".equals(key)) {\n          writer.deleteByQuery(entry.getValue().toString());\n        }\n        if (\"$skipDoc\".equals(key) && Boolean.parseBoolean(value.toString())) {\n          throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                  \"Document skipped :\" + arow);\n        }\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            if (f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      if (key.startsWith(\"$\")) {\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            if (f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8388f9c1189f751eac28894de3b56d55286dd5d8","date":1239613259,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            if (f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    Object s = arow.get(\"$skipRow\");\n    if (s != null && Boolean.parseBoolean(s.toString()))  {\n        return;\n    }\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) {\n        if (\"$deleteDocById\".equals(key)) {\n          if (value instanceof Collection) {\n            Collection collection = (Collection) value;\n            for (Object o : collection) {\n              writer.deleteDoc(o.toString());\n            }\n          } else  {\n            writer.deleteDoc(value);\n          }\n        }\n        if (\"$deleteDocByQuery\".equals(key)) {\n          writer.deleteByQuery(entry.getValue().toString());\n        }\n        if (\"$skipDoc\".equals(key) && Boolean.parseBoolean(value.toString())) {\n          throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                  \"Document skipped :\" + arow);\n        }\n        // All fields starting with $ are special values and don't need to be added\n        continue;\n      }\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            if (f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18b5e8b70d18c7d8fb665bb1abd1154166882745","date":1240851346,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,DocWrapper,Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, DocWrapper doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            if (f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, SolrInputDocument doc, Map<String, Object> arow) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            if (f.toWrite) addFieldToDoc(entry.getValue(), f.getName(), f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d35fc21ac635fb44202cf4b74a7ec94abc0699ae":["78ba4a4cc84cf69e69a7a156d7180ff65606ca93"],"8388f9c1189f751eac28894de3b56d55286dd5d8":["be21b70688b510ce9b71baca540e637755819715"],"be21b70688b510ce9b71baca540e637755819715":["35d71c83578c6e08733e7a584ca744c7c66d60a6"],"18b5e8b70d18c7d8fb665bb1abd1154166882745":["8388f9c1189f751eac28894de3b56d55286dd5d8"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"e886fb6afe33a296f3d21a4c18694ecb64545fab":["29df09ecb6b96d58f34447be89f88a0c067fb3a9"],"78ba4a4cc84cf69e69a7a156d7180ff65606ca93":["e886fb6afe33a296f3d21a4c18694ecb64545fab"],"35d71c83578c6e08733e7a584ca744c7c66d60a6":["d35fc21ac635fb44202cf4b74a7ec94abc0699ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29df09ecb6b96d58f34447be89f88a0c067fb3a9":["e46bf22400b9cd12540418cd46bfa17c100f983a"],"e46bf22400b9cd12540418cd46bfa17c100f983a":["157728c1f42b384dfc049157cc95adc767da3415"],"157728c1f42b384dfc049157cc95adc767da3415":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d35fc21ac635fb44202cf4b74a7ec94abc0699ae":["35d71c83578c6e08733e7a584ca744c7c66d60a6"],"8388f9c1189f751eac28894de3b56d55286dd5d8":["18b5e8b70d18c7d8fb665bb1abd1154166882745"],"be21b70688b510ce9b71baca540e637755819715":["8388f9c1189f751eac28894de3b56d55286dd5d8"],"18b5e8b70d18c7d8fb665bb1abd1154166882745":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["157728c1f42b384dfc049157cc95adc767da3415"],"e886fb6afe33a296f3d21a4c18694ecb64545fab":["78ba4a4cc84cf69e69a7a156d7180ff65606ca93"],"78ba4a4cc84cf69e69a7a156d7180ff65606ca93":["d35fc21ac635fb44202cf4b74a7ec94abc0699ae"],"35d71c83578c6e08733e7a584ca744c7c66d60a6":["be21b70688b510ce9b71baca540e637755819715"],"29df09ecb6b96d58f34447be89f88a0c067fb3a9":["e886fb6afe33a296f3d21a4c18694ecb64545fab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e46bf22400b9cd12540418cd46bfa17c100f983a":["29df09ecb6b96d58f34447be89f88a0c067fb3a9"],"157728c1f42b384dfc049157cc95adc767da3415":["e46bf22400b9cd12540418cd46bfa17c100f983a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["18b5e8b70d18c7d8fb665bb1abd1154166882745","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}