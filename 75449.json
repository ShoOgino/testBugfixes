{"path":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#equals(Object).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/FixedBitSet#equals(Object).mjava","sourceNew":"  /** returns true if both sets have the same bits set */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (!(o instanceof FixedBitSet)) {\n      return false;\n    }\n    FixedBitSet other = (FixedBitSet) o;\n    if (numBits != other.length()) {\n      return false;\n    }\n    return Arrays.equals(bits, other.bits);\n  }\n\n","sourceOld":"  /** returns true if both sets have the same bits set */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (!(o instanceof FixedBitSet)) {\n      return false;\n    }\n    FixedBitSet other = (FixedBitSet) o;\n    if (numBits != other.length()) {\n      return false;\n    }\n    return Arrays.equals(bits, other.bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af918c7c328775f9fadd5870c21f0fafc2a059cc","date":1430253435,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (!(o instanceof FixedBitSet)) {\n      return false;\n    }\n    FixedBitSet other = (FixedBitSet) o;\n    if (numBits != other.numBits) {\n      return false;\n    }\n    // Depends on the ghost bits being clear!\n    return Arrays.equals(bits, other.bits);\n  }\n\n","sourceOld":"  /** returns true if both sets have the same bits set */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (!(o instanceof FixedBitSet)) {\n      return false;\n    }\n    FixedBitSet other = (FixedBitSet) o;\n    if (numBits != other.length()) {\n      return false;\n    }\n    return Arrays.equals(bits, other.bits);\n  }\n\n","bugFix":["c0d520cd04d39f8caa0a53ed23e60beb30e8fb9f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af918c7c328775f9fadd5870c21f0fafc2a059cc"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["af918c7c328775f9fadd5870c21f0fafc2a059cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}