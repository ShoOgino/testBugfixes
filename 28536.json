{"path":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(byte[],int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(byte[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(byte[],int).mjava","sourceNew":"  /** Copy the current contents of this buffer to output\n   *  byte array */\n  public void writeTo(byte[] bytes, int offset) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    int bytesUpto = offset;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      System.arraycopy(file.getBuffer(buffer++), 0, bytes, bytesUpto, length);\n      bytesUpto += length;\n      pos = nextPos;\n    }\n  }\n\n","sourceOld":"  /** Copy the current contents of this buffer to output\n   *  byte array */\n  public void writeTo(byte[] bytes, int offset) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    int bytesUpto = offset;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      System.arraycopy(file.getBuffer(buffer++), 0, bytes, bytesUpto, length);\n      bytesUpto += length;\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(byte[],int).mjava","sourceNew":null,"sourceOld":"  /** Copy the current contents of this buffer to output\n   *  byte array */\n  public void writeTo(byte[] bytes, int offset) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    int bytesUpto = offset;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      System.arraycopy(file.getBuffer(buffer++), 0, bytes, bytesUpto, length);\n      bytesUpto += length;\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d77dafd89756a5161d244985903e3487ca109182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}