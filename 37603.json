{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple1().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple1().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple1().mjava","sourceNew":"  public void testSimple1() throws Exception {\n    SpanQuery q1 = new SpanTermQuery(new Term(\"first\", \"james\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"jones\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"first\")}, -1, false );\n    check(q, new int[] { 0, 2 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q2, \"first\"), q1}, -1, false );\n    check(q, new int[] { 0, 2 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { q2, new FieldMaskingSpanQuery(q1, \"last\")}, -1, false );\n    check(q, new int[] { 0, 2 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"last\"), q2}, -1, false );\n    check(q, new int[] { 0, 2 });\n\n  }\n\n","sourceOld":"  public void testSimple1() throws Exception {\n    SpanQuery q1 = new SpanTermQuery(new Term(\"first\", \"james\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"jones\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"first\")}, -1, false );\n    check(q, new int[] { 0, 2 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q2, \"first\"), q1}, -1, false );\n    check(q, new int[] { 0, 2 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { q2, new FieldMaskingSpanQuery(q1, \"last\")}, -1, false );\n    check(q, new int[] { 0, 2 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"last\"), q2}, -1, false );\n    check(q, new int[] { 0, 2 });\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}