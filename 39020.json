{"path":"lucene/backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,Collector).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,Collector).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,Collector).mjava","sourceNew":"  /** Lower-level search API.\n   *\n   * <p>{@link Collector#collect(int)} is called for every matching\n   * document.\n   * <br>Collector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query, Filter, int)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param query to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public void search(Query query, Filter filter, Collector results)\n  throws IOException {\n    search(createWeight(query), filter, results);\n  }\n\n","sourceOld":"  /** Lower-level search API.\n   *\n   * <p>{@link Collector#collect(int)} is called for every matching\n   * document.\n   * <br>Collector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query, Filter, int)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param query to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public void search(Query query, Filter filter, Collector results)\n  throws IOException {\n    search(createWeight(query), filter, results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,Collector).mjava","sourceNew":null,"sourceOld":"  /** Lower-level search API.\n   *\n   * <p>{@link Collector#collect(int)} is called for every matching\n   * document.\n   * <br>Collector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query, Filter, int)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param query to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public void search(Query query, Filter filter, Collector results)\n  throws IOException {\n    search(createWeight(query), filter, results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}