{"path":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","commits":[{"id":"4bb5e36693e1b5167f92325b87847a0d8bf100f5","date":1418983514,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.toPath().resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(new CoreDescriptor(cc, \"core3\", \"core3\", \"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.toPath().resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.toPath().resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(new CoreDescriptor(cc, \"core3\", \"core3\", \"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd7a2b4785d366164d3cd69f9948de6ff34d23a1","date":1500527874,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.toPath().resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d301cb76d81de80d07b44735622a04d49ed938eb","date":1500536382,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.toPath().resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.toPath().resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCorePropFile(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.toPath().resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"078208fb22390fe404cc26e34a439c51e6318ed4","date":1591151812,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateRelativeCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateRelativeCoreDir() throws Exception {\n\n    String relative = \"relativeCoreDir\";\n\n    setMeUp(relative);\n    // two cores under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core1\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        solrHomeDirectory.resolve(relative).resolve(\"core2\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n    // one core *not* under the relative directory\n    addCoreWithProps(makeCoreProperties(\"core0\", false, true, \"datadir=core0\"),\n        solrHomeDirectory.resolve(\"core0\").resolve(CorePropertiesLocator.PROPERTIES_FILENAME).toFile());\n\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n\n      assertNull(cc.getCore(\"core0\"));\n\n      SolrCore core3 = cc.create(\"core3\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core3.getCoreDescriptor().getInstanceDir().toAbsolutePath().toString(), containsString(\"relative\"));\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d301cb76d81de80d07b44735622a04d49ed938eb":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["4bb5e36693e1b5167f92325b87847a0d8bf100f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","d301cb76d81de80d07b44735622a04d49ed938eb"],"078208fb22390fe404cc26e34a439c51e6318ed4":["d301cb76d81de80d07b44735622a04d49ed938eb"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["078208fb22390fe404cc26e34a439c51e6318ed4"],"4bb5e36693e1b5167f92325b87847a0d8bf100f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d301cb76d81de80d07b44735622a04d49ed938eb":["936cdd5882761db3b844afd6f84ab81cbb011a75","078208fb22390fe404cc26e34a439c51e6318ed4"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["d301cb76d81de80d07b44735622a04d49ed938eb","936cdd5882761db3b844afd6f84ab81cbb011a75","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4bb5e36693e1b5167f92325b87847a0d8bf100f5"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["d301cb76d81de80d07b44735622a04d49ed938eb"],"078208fb22390fe404cc26e34a439c51e6318ed4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4bb5e36693e1b5167f92325b87847a0d8bf100f5":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}