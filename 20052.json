{"path":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n    int size = lastFiles.size();\n    if (size > 0) {\n      for(int i=0;i<size;i++) {\n        decRef(lastFiles.get(i));\n      }\n      lastFiles.clear();\n    }\n\n    deletePendingFiles();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n    int size = lastFiles.size();\n    if (size > 0) {\n      for(int i=0;i<size;i++) {\n        decRef(lastFiles.get(i));\n      }\n      lastFiles.clear();\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a39601082ada9861e66f44b312c6549f4c5c7c0","date":1378755051,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      decRef(lastFiles);\n      lastFiles.clear();\n    }\n\n    deletePendingFiles();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n    int size = lastFiles.size();\n    if (size > 0) {\n      for(int i=0;i<size;i++) {\n        decRef(lastFiles.get(i));\n      }\n      lastFiles.clear();\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":["cefe924a3b76c22b7df9a075329750871699af6b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cefe924a3b76c22b7df9a075329750871699af6b","date":1409757963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      decRef(lastFiles);\n      lastFiles.clear();\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":["d99092e7a9892440b9da55d5b75d3d77206ee80e","1a39601082ada9861e66f44b312c6549f4c5c7c0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7599427f762eb1b4265584fd6e96521e4a1a4f3c","date":1413100083,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    // DecRef old files from the last checkpoint, if any:\n    assert locked();\n\n    if (!lastFiles.isEmpty()) {\n      try {\n        decRef(lastFiles);\n      } finally {\n        lastFiles.clear();\n      }\n    }\n\n    deletePendingFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7599427f762eb1b4265584fd6e96521e4a1a4f3c":["cefe924a3b76c22b7df9a075329750871699af6b"],"55980207f1977bd1463465de1659b821347e2fa8":["cefe924a3b76c22b7df9a075329750871699af6b","7599427f762eb1b4265584fd6e96521e4a1a4f3c"],"cefe924a3b76c22b7df9a075329750871699af6b":["1a39601082ada9861e66f44b312c6549f4c5c7c0"],"1a39601082ada9861e66f44b312c6549f4c5c7c0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["7599427f762eb1b4265584fd6e96521e4a1a4f3c","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["7599427f762eb1b4265584fd6e96521e4a1a4f3c","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["7599427f762eb1b4265584fd6e96521e4a1a4f3c","b470f36a9372c97283360b1304eacbde22df6c0d"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["7599427f762eb1b4265584fd6e96521e4a1a4f3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"]},"commit2Childs":{"7599427f762eb1b4265584fd6e96521e4a1a4f3c":["55980207f1977bd1463465de1659b821347e2fa8","5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"55980207f1977bd1463465de1659b821347e2fa8":[],"cefe924a3b76c22b7df9a075329750871699af6b":["7599427f762eb1b4265584fd6e96521e4a1a4f3c","55980207f1977bd1463465de1659b821347e2fa8"],"1a39601082ada9861e66f44b312c6549f4c5c7c0":["cefe924a3b76c22b7df9a075329750871699af6b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1a39601082ada9861e66f44b312c6549f4c5c7c0"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}