{"path":"backwards/src/java/org/apache/lucene/index/IndexWriter#commit().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexWriter#commit().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>Commits all pending changes (added & deleted\n   * documents, optimizations, segment merges, added\n   * indexes, etc.) to the index, and syncs all referenced\n   * index files, such that a reader will see the changes\n   * and the index updates will survive an OS or machine\n   * crash or power loss.  Note that this does not wait for\n   * any running background merges to finish.  This may be a\n   * costly operation, so you should test the cost in your\n   * application and do it only when really necessary.</p>\n   *\n   * <p> Note that this operation calls Directory.sync on\n   * the index files.  That call should not return until the\n   * file contents & metadata are on stable storage.  For\n   * FSDirectory, this calls the OS's fsync.  But, beware:\n   * some hardware devices may in fact cache writes even\n   * during fsync, and return before the bits are actually\n   * on stable storage, to give the appearance of faster\n   * performance.  If you have such a device, and it does\n   * not have a battery backup (for example) then on power\n   * loss it may still lose data.  Lucene cannot guarantee\n   * consistency on such devices.  </p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit\n   * @see #commit(Map)\n   */\n  public final void commit() throws CorruptIndexException, IOException {\n    commit(null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#commit().mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#commit().mjava","sourceNew":"  /**\n   * <p>Commits all pending changes (added & deleted\n   * documents, optimizations, segment merges, added\n   * indexes, etc.) to the index, and syncs all referenced\n   * index files, such that a reader will see the changes\n   * and the index updates will survive an OS or machine\n   * crash or power loss.  Note that this does not wait for\n   * any running background merges to finish.  This may be a\n   * costly operation, so you should test the cost in your\n   * application and do it only when really necessary.</p>\n   *\n   * <p> Note that this operation calls Directory.sync on\n   * the index files.  That call should not return until the\n   * file contents & metadata are on stable storage.  For\n   * FSDirectory, this calls the OS's fsync.  But, beware:\n   * some hardware devices may in fact cache writes even\n   * during fsync, and return before the bits are actually\n   * on stable storage, to give the appearance of faster\n   * performance.  If you have such a device, and it does\n   * not have a battery backup (for example) then on power\n   * loss it may still lose data.  Lucene cannot guarantee\n   * consistency on such devices.  </p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit\n   * @see #commit(Map)\n   */\n  public final void commit() throws CorruptIndexException, IOException {\n    commit(null);\n  }\n\n","sourceOld":"  /**\n   * <p>Commits all pending changes (added & deleted\n   * documents, optimizations, segment merges, added\n   * indexes, etc.) to the index, and syncs all referenced\n   * index files, such that a reader will see the changes\n   * and the index updates will survive an OS or machine\n   * crash or power loss.  Note that this does not wait for\n   * any running background merges to finish.  This may be a\n   * costly operation, so you should test the cost in your\n   * application and do it only when really necessary.</p>\n   *\n   * <p> Note that this operation calls Directory.sync on\n   * the index files.  That call should not return until the\n   * file contents & metadata are on stable storage.  For\n   * FSDirectory, this calls the OS's fsync.  But, beware:\n   * some hardware devices may in fact cache writes even\n   * during fsync, and return before the bits are actually\n   * on stable storage, to give the appearance of faster\n   * performance.  If you have such a device, and it does\n   * not have a battery backup (for example) then on power\n   * loss it may still lose data.  Lucene cannot guarantee\n   * consistency on such devices.  </p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit\n   * @see #commit(Map)\n   */\n  public final void commit() throws CorruptIndexException, IOException {\n    commit(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}