{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","commits":[{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":1,"author":"broustant","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  /**\n   * Analyzes the provided query string and returns a space concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    //split query terms with analyzer then join\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = queryAnalyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt);\n      }\n      tokens.end();\n    } catch (IOException e) {\n      Throwables.propagate(e);\n    }\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = analyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt.buffer(), 0, termAtt.length());\n      }\n      tokens.end();\n      return norm.toString();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Analyzes the provided query string and returns a space concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    //split query terms with analyzer then join\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = queryAnalyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt);\n      }\n      tokens.end();\n    } catch (IOException e) {\n      Throwables.propagate(e);\n    }\n    return norm.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Analyzes the provided query string and returns a space concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    //split query terms with analyzer then join\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = queryAnalyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt);\n      }\n      tokens.end();\n    } catch (IOException e) {\n      Throwables.propagate(e);\n    }\n    return norm.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6046c615b67e878b7c0ab9257d01dd759493f06","date":1564997027,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","sourceNew":"  /**\n   * Analyzes the provided query string and returns a concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    StringBuilder concatTerms = new StringBuilder();\n    analyzeQuery(query, concatTerms::append);\n    return concatTerms.toString();\n  }\n\n","sourceOld":"  /**\n   * Analyzes the provided query string and returns a space concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    //split query terms with analyzer then join\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = queryAnalyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt);\n      }\n      tokens.end();\n    } catch (IOException e) {\n      Throwables.propagate(e);\n    }\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","sourceNew":"  /**\n   * Analyzes the provided query string and returns a concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    StringBuilder concatTerms = new StringBuilder();\n    analyzeQuery(query, concatTerms::append);\n    return concatTerms.toString();\n  }\n\n","sourceOld":"  /**\n   * Analyzes the provided query string and returns a space concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    //split query terms with analyzer then join\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = queryAnalyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt);\n      }\n      tokens.end();\n    } catch (IOException e) {\n      Throwables.propagate(e);\n    }\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ad458affd82a1d762eb506003907d9363a333cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ad458affd82a1d762eb506003907d9363a333cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6046c615b67e878b7c0ab9257d01dd759493f06":["2ad458affd82a1d762eb506003907d9363a333cb"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["2ad458affd82a1d762eb506003907d9363a333cb","e6046c615b67e878b7c0ab9257d01dd759493f06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e6046c615b67e878b7c0ab9257d01dd759493f06"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","e6046c615b67e878b7c0ab9257d01dd759493f06","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"e6046c615b67e878b7c0ab9257d01dd759493f06":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}