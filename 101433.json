{"path":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#find(int).mjava","commits":[{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#find(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Find the actual index of a given key.\n   * \n   * @return index of the key. zero if the key wasn't found.\n   */\n  protected int find(int key) {\n    // Calculate the hash entry.\n    int baseHashIndex = calcBaseHashIndex(key);\n\n    // Start from the hash entry.\n    int localIndex = baseHash[baseHashIndex];\n\n    // while the index does not point to the 'Ground'\n    while (localIndex != 0) {\n      // returns the index found in case of of a matching key.\n      if (keys[localIndex] == key) {\n        return localIndex;\n      }\n        \n      // next the local index\n      localIndex = next[localIndex];\n    }\n\n    // If we got this far, it could only mean we did not find the key we\n    // were asked for. return 'Ground' index.\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#find(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Find the actual index of a given key.\n   * \n   * @return index of the key. zero if the key wasn't found.\n   */\n  protected int find(int key) {\n    // Calculate the hash entry.\n    int baseHashIndex = calcBaseHashIndex(key);\n\n    // Start from the hash entry.\n    int localIndex = baseHash[baseHashIndex];\n\n    // while the index does not point to the 'Ground'\n    while (localIndex != 0) {\n      // returns the index found in case of of a matching key.\n      if (keys[localIndex] == key) {\n        return localIndex;\n      }\n        \n      // next the local index\n      localIndex = next[localIndex];\n    }\n\n    // If we got this far, it could only mean we did not find the key we\n    // were asked for. return 'Ground' index.\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntToFloatMap#find(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#find(int).mjava","sourceNew":"  /**\n   * Find the actual index of a given key.\n   * \n   * @return index of the key. zero if the key wasn't found.\n   */\n  protected int find(int key) {\n    // Calculate the hash entry.\n    int baseHashIndex = calcBaseHashIndex(key);\n\n    // Start from the hash entry.\n    int localIndex = baseHash[baseHashIndex];\n\n    // while the index does not point to the 'Ground'\n    while (localIndex != 0) {\n      // returns the index found in case of of a matching key.\n      if (keys[localIndex] == key) {\n        return localIndex;\n      }\n        \n      // next the local index\n      localIndex = next[localIndex];\n    }\n\n    // If we got this far, it could only mean we did not find the key we\n    // were asked for. return 'Ground' index.\n    return 0;\n  }\n\n","sourceOld":"  /**\n   * Find the actual index of a given key.\n   * \n   * @return index of the key. zero if the key wasn't found.\n   */\n  protected int find(int key) {\n    // Calculate the hash entry.\n    int baseHashIndex = calcBaseHashIndex(key);\n\n    // Start from the hash entry.\n    int localIndex = baseHash[baseHashIndex];\n\n    // while the index does not point to the 'Ground'\n    while (localIndex != 0) {\n      // returns the index found in case of of a matching key.\n      if (keys[localIndex] == key) {\n        return localIndex;\n      }\n        \n      // next the local index\n      localIndex = next[localIndex];\n    }\n\n    // If we got this far, it could only mean we did not find the key we\n    // were asked for. return 'Ground' index.\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"607428da722dcb3e86bbd11c63de8986e6275c36":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","607428da722dcb3e86bbd11c63de8986e6275c36"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}