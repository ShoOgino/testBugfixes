{"path":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","commits":[{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9017ec91c7e47796f2938c5f5705089cb048c4ae","date":1400795272,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < IDVersionPostingsFormat.MIN_VERSION) {\n      throw new IllegalArgumentException(\"version must be >= MIN_VERSION=\" + IDVersionPostingsFormat.MIN_VERSION + \" (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n    if (lastVersion > IDVersionPostingsFormat.MAX_VERSION) {\n      throw new IllegalArgumentException(\"version must be <= MAX_VERSION=\" + IDVersionPostingsFormat.MAX_VERSION + \" (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < IDVersionPostingsFormat.MIN_VERSION) {\n      throw new IllegalArgumentException(\"version must be >= MIN_VERSION=\" + IDVersionPostingsFormat.MIN_VERSION + \" (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n    if (lastVersion > IDVersionPostingsFormat.MAX_VERSION) {\n      throw new IllegalArgumentException(\"version must be <= MAX_VERSION=\" + IDVersionPostingsFormat.MAX_VERSION + \" (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9017ec91c7e47796f2938c5f5705089cb048c4ae"],"9017ec91c7e47796f2938c5f5705089cb048c4ae":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["9017ec91c7e47796f2938c5f5705089cb048c4ae"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9017ec91c7e47796f2938c5f5705089cb048c4ae":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","4d637064d608752565d4f9f41b2497dfdfdde50e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}