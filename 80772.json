{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","commits":[{"id":"3e5ef402099a6d54398ce3ac65c0b7506bbfece5","date":1384830813,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server.\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl,\n      HttpClient client, int queueSize, int threadCount, ExecutorService es, boolean streamDeletes) {\n    this.server = new HttpSolrServer(solrServerUrl, client);\n    this.server.setFollowRedirects(false);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n    scheduler = es;\n    this.streamDeletes = streamDeletes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server.\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl,\n      HttpClient client, int queueSize, int threadCount, ExecutorService es, boolean streamDeletes) {\n    this.server = new HttpSolrServer(solrServerUrl, client);\n    this.server.setFollowRedirects(false);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n    scheduler = es;\n    this.streamDeletes = streamDeletes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server.\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl,\n      HttpClient client, int queueSize, int threadCount, ExecutorService es, boolean streamDeletes) {\n    this.server = new HttpSolrServer(solrServerUrl, client);\n    this.server.setFollowRedirects(false);\n    queue = new LinkedBlockingQueue<>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<>();\n    scheduler = es;\n    this.streamDeletes = streamDeletes;\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server.\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl,\n      HttpClient client, int queueSize, int threadCount, ExecutorService es, boolean streamDeletes) {\n    this.server = new HttpSolrServer(solrServerUrl, client);\n    this.server.setFollowRedirects(false);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n    scheduler = es;\n    this.streamDeletes = streamDeletes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","sourceNew":"  public ConcurrentUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount, ExecutorService es, boolean streamDeletes) {\n    super(solrServerUrl, client, queueSize, threadCount, es, streamDeletes);\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server.\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl,\n      HttpClient client, int queueSize, int threadCount, ExecutorService es, boolean streamDeletes) {\n    this.server = new HttpSolrServer(solrServerUrl, client);\n    this.server.setFollowRedirects(false);\n    queue = new LinkedBlockingQueue<>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<>();\n    scheduler = es;\n    this.streamDeletes = streamDeletes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0080a8fdc299a09124dea014ed206981c1b8c54","date":1420037360,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int,ExecutorService,boolean).mjava","sourceNew":null,"sourceOld":"  public ConcurrentUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount, ExecutorService es, boolean streamDeletes) {\n    super(solrServerUrl, client, queueSize, threadCount, es, streamDeletes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3e5ef402099a6d54398ce3ac65c0b7506bbfece5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e5ef402099a6d54398ce3ac65c0b7506bbfece5"],"bafca15d8e408346a67f4282ad1143b88023893b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0080a8fdc299a09124dea014ed206981c1b8c54"],"c0080a8fdc299a09124dea014ed206981c1b8c54":["bafca15d8e408346a67f4282ad1143b88023893b"],"3e5ef402099a6d54398ce3ac65c0b7506bbfece5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","3e5ef402099a6d54398ce3ac65c0b7506bbfece5"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"bafca15d8e408346a67f4282ad1143b88023893b":["c0080a8fdc299a09124dea014ed206981c1b8c54"],"3e5ef402099a6d54398ce3ac65c0b7506bbfece5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c0080a8fdc299a09124dea014ed206981c1b8c54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}