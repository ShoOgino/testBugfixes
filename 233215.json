{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","sourceNew":"  public void testConsumeSentenceInstance() {\n    BreakIterator bi = BreakIterator.getSentenceInstance();\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","sourceOld":"  public void testConsumeSentenceInstance() {\n    BreakIterator bi = BreakIterator.getSentenceInstance();\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5dc83d085f83b38c31736c494913c0c75265ce02","date":1341762281,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","sourceNew":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as its randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","sourceOld":"  public void testConsumeSentenceInstance() {\n    BreakIterator bi = BreakIterator.getSentenceInstance();\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","sourceNew":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as its randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","sourceOld":"  public void testConsumeSentenceInstance() {\n    BreakIterator bi = BreakIterator.getSentenceInstance();\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","sourceNew":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as its randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","sourceOld":"  public void testConsumeSentenceInstance() {\n    BreakIterator bi = BreakIterator.getSentenceInstance();\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","sourceNew":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as its randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","sourceOld":"  public void testConsumeSentenceInstance() {\n    BreakIterator bi = BreakIterator.getSentenceInstance();\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","sourceNew":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as its randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","sourceOld":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as its randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = _TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArrayIterator#testConsumeSentenceInstance().mjava","sourceNew":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as it's randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","sourceOld":"  public void testConsumeSentenceInstance() {\n    // we use the default locale, as its randomized by LuceneTestCase\n    BreakIterator bi = BreakIterator.getSentenceInstance(Locale.getDefault());\n    CharArrayIterator ci = CharArrayIterator.newSentenceInstance();\n    for (int i = 0; i < 10000; i++) {\n      char text[] = TestUtil.randomUnicodeString(random()).toCharArray();\n      ci.setText(text, 0, text.length);\n      consume(bi, ci);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5dc83d085f83b38c31736c494913c0c75265ce02":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2acf500f78aa12b92e371fd89c719291986b6b90":["b89678825b68eccaf09e6ab71675fc0b0af1e099","5dc83d085f83b38c31736c494913c0c75265ce02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","5dc83d085f83b38c31736c494913c0c75265ce02","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"6613659748fe4411a7dcf85266e55db1f95f7315":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5dc83d085f83b38c31736c494913c0c75265ce02":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["6613659748fe4411a7dcf85266e55db1f95f7315","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}