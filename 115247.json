{"path":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff1421d1974cfd5072e195bbb63592657da2f66e","date":1285733489,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e492fb0f2bb0b4b47208286f9331ff55963c656","date":1298870150,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"090a0320e4de4a3674376aef96b9701f47564f86","date":1308707325,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash = type.hashCode() ^ 0x346565dd + Boolean.valueOf(reverse).hashCode() ^ 0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash = type.hashCode() ^ 0x346565dd + Boolean.valueOf(reverse).hashCode() ^ 0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash = type.hashCode() ^ 0x346565dd + Boolean.valueOf(reverse).hashCode() ^ 0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash = type.hashCode() ^ 0x346565dd + Boolean.valueOf(reverse).hashCode() ^ 0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash = type.hashCode() ^ 0x346565dd + Boolean.valueOf(reverse).hashCode() ^ 0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (creator != null) hash += creator.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash = type.hashCode() ^ 0x346565dd + Boolean.valueOf(reverse).hashCode() ^ 0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash = type.hashCode() ^ 0x346565dd + Boolean.valueOf(reverse).hashCode() ^ 0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["382fe3a6ca9745891afebda9b9a57cc158305545"],"2553b00f699380c64959ccb27991289aae87be2e":["3e492fb0f2bb0b4b47208286f9331ff55963c656","090a0320e4de4a3674376aef96b9701f47564f86"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","ff1421d1974cfd5072e195bbb63592657da2f66e"],"382fe3a6ca9745891afebda9b9a57cc158305545":["090a0320e4de4a3674376aef96b9701f47564f86"],"ff1421d1974cfd5072e195bbb63592657da2f66e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["3e492fb0f2bb0b4b47208286f9331ff55963c656","090a0320e4de4a3674376aef96b9701f47564f86"],"090a0320e4de4a3674376aef96b9701f47564f86":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ff1421d1974cfd5072e195bbb63592657da2f66e","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["ff1421d1974cfd5072e195bbb63592657da2f66e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"382fe3a6ca9745891afebda9b9a57cc158305545":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ff1421d1974cfd5072e195bbb63592657da2f66e":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d619839baa8ce5503e496b94a9e42ad6f079293f","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"090a0320e4de4a3674376aef96b9701f47564f86":["2553b00f699380c64959ccb27991289aae87be2e","382fe3a6ca9745891afebda9b9a57cc158305545","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","090a0320e4de4a3674376aef96b9701f47564f86","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ff1421d1974cfd5072e195bbb63592657da2f66e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}