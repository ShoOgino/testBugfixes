{"path":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = random.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = random.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1eb108f4291bd5b4672bac446eb48bf97d321f","date":1292343856,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = random.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = random.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = random.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00743482822ec0841b0344a37944b666e6a0228d","date":1313588663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = DocHelper.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = TestIndexWriterReader.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = DocHelper.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = DocHelper.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad1eb108f4291bd5b4672bac446eb48bf97d321f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["00743482822ec0841b0344a37944b666e6a0228d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","ad1eb108f4291bd5b4672bac446eb48bf97d321f"],"00743482822ec0841b0344a37944b666e6a0228d":["ad1eb108f4291bd5b4672bac446eb48bf97d321f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","ad1eb108f4291bd5b4672bac446eb48bf97d321f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ad1eb108f4291bd5b4672bac446eb48bf97d321f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","00743482822ec0841b0344a37944b666e6a0228d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"00743482822ec0841b0344a37944b666e6a0228d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ad1eb108f4291bd5b4672bac446eb48bf97d321f","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}