{"path":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer).mjava","commits":[{"id":"a4b9ebbc68c1b39e292c3efe82bfa15e372351b4","date":1495700700,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object).mjava","sourceNew":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta ) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","sourceOld":"    private Violation(String coll, String shard, String node, Object actualVal) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.actualVal = actualVal;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","date":1495756308,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer).mjava","sourceNew":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","sourceOld":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta ) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":["a4b9ebbc68c1b39e292c3efe82bfa15e372351b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a4b9ebbc68c1b39e292c3efe82bfa15e372351b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","a4b9ebbc68c1b39e292c3efe82bfa15e372351b4"],"a4b9ebbc68c1b39e292c3efe82bfa15e372351b4":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}