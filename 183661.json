{"path":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","commits":[{"id":"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656","date":1383680488,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", \"*:*\"), \"//doc[1]/str[@name='severity']/text()='Low'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f76525d3996b01b8097ebb3bc088f4ddaa9e3c","date":1425864568,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","sourceNew":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", \"*:*\"), \"//doc[1]/str[@name='\" + FIELD_NAME + \"']/text()='Low'\");\n  }\n\n","sourceOld":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", \"*:*\"), \"//doc[1]/str[@name='severity']/text()='Low'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","sourceNew":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", \"*:*\"), \"//doc[1]/str[@name='\" + FIELD_NAME + \"']/text()='Low'\");\n  }\n\n","sourceOld":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", \"*:*\"), \"//doc[1]/str[@name='severity']/text()='Low'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ad8c9e9210e008dc7b8ad5a037ff20879150ea","date":1501889566,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","sourceNew":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    assumeFalse(\"Skipping testing of EnumFieldType without docValues, which is unsupported.\",\n        System.getProperty(\"solr.tests.EnumFieldType\").equals(\"solr.EnumFieldType\")\n            && System.getProperty(\"solr.tests.numeric.dv\").equals(\"false\"));\n\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"11\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"id,\" + FIELD_NAME, \"q\", \"*:*\"),\n            \"//doc[str[@name='id']/text()='0']/str[@name='\" + FIELD_NAME + \"']/text()='Low'\",\n            \"//doc[str[@name='id']/text()='1']/str[@name='\" + FIELD_NAME + \"']/text()='Critical'\");\n  }\n\n","sourceOld":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", \"*:*\"), \"//doc[1]/str[@name='\" + FIELD_NAME + \"']/text()='Low'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testKnownIntegerEnumIndexing().mjava","sourceNew":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    assumeFalse(\"Skipping testing of EnumFieldType without docValues, which is unsupported.\",\n        System.getProperty(\"solr.tests.EnumFieldType\").equals(\"solr.EnumFieldType\")\n            && System.getProperty(\"solr.tests.numeric.dv\").equals(\"false\"));\n\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"11\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"id,\" + FIELD_NAME, \"q\", \"*:*\"),\n            \"//doc[str[@name='id']/text()='0']/str[@name='\" + FIELD_NAME + \"']/text()='Low'\",\n            \"//doc[str[@name='id']/text()='1']/str[@name='\" + FIELD_NAME + \"']/text()='Critical'\");\n  }\n\n","sourceOld":"  @Test\n  public void testKnownIntegerEnumIndexing() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"1\"));\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", \"*:*\"), \"//doc[1]/str[@name='\" + FIELD_NAME + \"']/text()='Low'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656","20f76525d3996b01b8097ebb3bc088f4ddaa9e3c"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["20f76525d3996b01b8097ebb3bc088f4ddaa9e3c","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"20f76525d3996b01b8097ebb3bc088f4ddaa9e3c":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["20f76525d3996b01b8097ebb3bc088f4ddaa9e3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54ad8c9e9210e008dc7b8ad5a037ff20879150ea"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"20f76525d3996b01b8097ebb3bc088f4ddaa9e3c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f76525d3996b01b8097ebb3bc088f4ddaa9e3c"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}