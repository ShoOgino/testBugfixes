{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDirectReaderNoHeader(IndexInput,Header).mjava","commits":[{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDirectReaderNoHeader(IndexInput,Header).mjava","pathOld":"/dev/null","sourceNew":"  //nocommit javadoc\n  public static Reader getDirectReaderNoHeader(IndexInput in, Header header) throws IOException {\n    return getDirectReaderNoHeader(in, header.format, header.version, header.valueCount, header.bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"527426d2324e11fb56b1d594bc79b7559fb8dbf6","date":1359607178,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDirectReaderNoHeader(IndexInput,Header).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDirectReaderNoHeader(IndexInput,Header).mjava","sourceNew":"  /**\n   * Expert: Construct a direct {@link Reader} from an {@link IndexInput} \n   * without reading metadata at the beginning of the stream. This method is \n   * useful to restore data when metadata has been previously read using \n   * {@link #readHeader(DataInput)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param header       metadata result from <code>readHeader()</code>\n   * @return             a Reader\n   * @throws IOException If there is a low-level I/O error\n   * @see #readHeader(DataInput)\n   * @lucene.internal\n   */\n  public static Reader getDirectReaderNoHeader(IndexInput in, Header header) throws IOException {\n    return getDirectReaderNoHeader(in, header.format, header.version, header.valueCount, header.bitsPerValue);\n  }\n\n","sourceOld":"  //nocommit javadoc\n  public static Reader getDirectReaderNoHeader(IndexInput in, Header header) throws IOException {\n    return getDirectReaderNoHeader(in, header.format, header.version, header.valueCount, header.bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDirectReaderNoHeader(IndexInput,Header).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Construct a direct {@link Reader} from an {@link IndexInput} \n   * without reading metadata at the beginning of the stream. This method is \n   * useful to restore data when metadata has been previously read using \n   * {@link #readHeader(DataInput)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param header       metadata result from <code>readHeader()</code>\n   * @return             a Reader\n   * @throws IOException If there is a low-level I/O error\n   * @see #readHeader(DataInput)\n   * @lucene.internal\n   */\n  public static Reader getDirectReaderNoHeader(IndexInput in, Header header) throws IOException {\n    return getDirectReaderNoHeader(in, header.format, header.version, header.valueCount, header.bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4","date":1413466868,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDirectReaderNoHeader(IndexInput,Header).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: Construct a direct {@link Reader} from an {@link IndexInput} \n   * without reading metadata at the beginning of the stream. This method is \n   * useful to restore data when metadata has been previously read using \n   * {@link #readHeader(DataInput)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param header       metadata result from <code>readHeader()</code>\n   * @return             a Reader\n   * @throws IOException If there is a low-level I/O error\n   * @see #readHeader(DataInput)\n   * @lucene.internal\n   */\n  public static Reader getDirectReaderNoHeader(IndexInput in, Header header) throws IOException {\n    return getDirectReaderNoHeader(in, header.format, header.version, header.valueCount, header.bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDirectReaderNoHeader(IndexInput,Header).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: Construct a direct {@link Reader} from an {@link IndexInput} \n   * without reading metadata at the beginning of the stream. This method is \n   * useful to restore data when metadata has been previously read using \n   * {@link #readHeader(DataInput)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param header       metadata result from <code>readHeader()</code>\n   * @return             a Reader\n   * @throws IOException If there is a low-level I/O error\n   * @see #readHeader(DataInput)\n   * @lucene.internal\n   */\n  public static Reader getDirectReaderNoHeader(IndexInput in, Header header) throws IOException {\n    return getDirectReaderNoHeader(in, header.format, header.version, header.valueCount, header.bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"527426d2324e11fb56b1d594bc79b7559fb8dbf6":["ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["d4d69c535930b5cce125cff868d40f6373dc27d4","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","527426d2324e11fb56b1d594bc79b7559fb8dbf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"]},"commit2Childs":{"527426d2324e11fb56b1d594bc79b7559fb8dbf6":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["527426d2324e11fb56b1d594bc79b7559fb8dbf6"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ede45a461a2dcb573505ed9b6a5182dfebd3688f","d4d69c535930b5cce125cff868d40f6373dc27d4"],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}