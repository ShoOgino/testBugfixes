{"path":"client/java/solrj/src/org/apache/solr/client/solrj/response/SpellCheckResponse.Suggestion#Suggestion(String,NamedList[Object]).mjava","commits":[{"id":"7b58c10d3071acfc0277e964ed8714e9746b4206","date":1219166991,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/SpellCheckResponse.Suggestion#Suggestion(String,NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"    public Suggestion(String token, NamedList<Object> suggestion) {\n      this.token = token;\n      for (int i = 0; i < suggestion.size(); i++) {\n        String n = suggestion.getName(i);\n\n        if (\"numFound\".equals(n)) {\n          numFound = (Integer) suggestion.getVal(i);\n        } else if (\"startOffset\".equals(n)) {\n          startOffset = (Integer) suggestion.getVal(i);\n        } else if (\"endOffset\".equals(n)) {\n          endOffset = (Integer) suggestion.getVal(i);\n        } else if (\"origFreq\".equals(n)) {\n          originalFrequency = (Integer) suggestion.getVal(i);\n        } else if (\"suggestion\".equals(n)) {\n          Object o = suggestion.getVal(i);\n          if (o instanceof List) {\n            List<String> list = (List<String>) o;\n            suggestions.addAll(list);\n          } else if (o instanceof SimpleOrderedMap) {\n            SimpleOrderedMap map = (SimpleOrderedMap) o;\n            suggestions.add((String) map.get(\"word\"));\n            suggestionFrequencies.add((Integer) map.get(\"frequency\"));\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b65a5358ab784aed1eada0d344601b7d994ea64a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.Suggestion#Suggestion(String,NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/SpellCheckResponse.Suggestion#Suggestion(String,NamedList[Object]).mjava","sourceNew":"    public Suggestion(String token, NamedList<Object> suggestion) {\n      this.token = token;\n      for (int i = 0; i < suggestion.size(); i++) {\n        String n = suggestion.getName(i);\n\n        if (\"numFound\".equals(n)) {\n          numFound = (Integer) suggestion.getVal(i);\n        } else if (\"startOffset\".equals(n)) {\n          startOffset = (Integer) suggestion.getVal(i);\n        } else if (\"endOffset\".equals(n)) {\n          endOffset = (Integer) suggestion.getVal(i);\n        } else if (\"origFreq\".equals(n)) {\n          originalFrequency = (Integer) suggestion.getVal(i);\n        } else if (\"suggestion\".equals(n)) {\n          Object o = suggestion.getVal(i);\n          if (o instanceof List) {\n            List<String> list = (List<String>) o;\n            suggestions.addAll(list);\n          } else if (o instanceof SimpleOrderedMap) {\n            SimpleOrderedMap map = (SimpleOrderedMap) o;\n            suggestions.add((String) map.get(\"word\"));\n            suggestionFrequencies.add((Integer) map.get(\"frequency\"));\n          }\n        }\n      }\n    }\n\n","sourceOld":"    public Suggestion(String token, NamedList<Object> suggestion) {\n      this.token = token;\n      for (int i = 0; i < suggestion.size(); i++) {\n        String n = suggestion.getName(i);\n\n        if (\"numFound\".equals(n)) {\n          numFound = (Integer) suggestion.getVal(i);\n        } else if (\"startOffset\".equals(n)) {\n          startOffset = (Integer) suggestion.getVal(i);\n        } else if (\"endOffset\".equals(n)) {\n          endOffset = (Integer) suggestion.getVal(i);\n        } else if (\"origFreq\".equals(n)) {\n          originalFrequency = (Integer) suggestion.getVal(i);\n        } else if (\"suggestion\".equals(n)) {\n          Object o = suggestion.getVal(i);\n          if (o instanceof List) {\n            List<String> list = (List<String>) o;\n            suggestions.addAll(list);\n          } else if (o instanceof SimpleOrderedMap) {\n            SimpleOrderedMap map = (SimpleOrderedMap) o;\n            suggestions.add((String) map.get(\"word\"));\n            suggestionFrequencies.add((Integer) map.get(\"frequency\"));\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["7b58c10d3071acfc0277e964ed8714e9746b4206"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7b58c10d3071acfc0277e964ed8714e9746b4206":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7b58c10d3071acfc0277e964ed8714e9746b4206"],"7b58c10d3071acfc0277e964ed8714e9746b4206":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}