{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","commits":[{"id":"7d45e9e2ad7f57776540627c78f5e22e469ccdc1","date":1302784878,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void finishFullFlush(boolean success) {\n    if (success) {\n      // release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n    assert setFlushingDeleteQueue(null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"36c1ce8294b5dc1aa975d8e17abf7be07f98acd5","date":1302810515,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    if (success) {\n      // release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n    assert setFlushingDeleteQueue(null);\n  }\n\n","bugFix":null,"bugIntro":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6f4cae61e16730201371ab7e9912721c19324e7","date":1303199575,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // Release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","bugFix":null,"bugIntro":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void finishFullFlush(boolean success) {\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // Release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void finishFullFlush(boolean success) {\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // Release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void finishFullFlush(boolean success) {\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // Release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c00afe74a80796ed1f30a9509b150ff104746a1f","date":1312881735,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    if (infoStream != null) {\n      message(Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n    }\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // Release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // Release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","bugFix":null,"bugIntro":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a1c3710e755dc60691ac0d7fe23c9fcba0537bdc","date":1320437768,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream != null) {\n        message(Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    if (infoStream != null) {\n      message(Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n    }\n    assert setFlushingDeleteQueue(null);\n    if (success) {\n      // Release the flush lock\n      flushControl.finishFullFlush();\n    } else {\n      flushControl.abortFullFlushes();\n    }\n  }\n\n","bugFix":["f6f4cae61e16730201371ab7e9912721c19324e7","7d45e9e2ad7f57776540627c78f5e22e469ccdc1","c00afe74a80796ed1f30a9509b150ff104746a1f","36c1ce8294b5dc1aa975d8e17abf7be07f98acd5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream != null) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream != null) {\n        message(Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58c6bbc222f074c844e736e6fb23647e3db9cfe3","date":1322743940,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream != null) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["06584e6e98d592b34e1329b384182f368d2025e8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"06584e6e98d592b34e1329b384182f368d2025e8":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f4cae61e16730201371ab7e9912721c19324e7"],"36c1ce8294b5dc1aa975d8e17abf7be07f98acd5":["7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"f6f4cae61e16730201371ab7e9912721c19324e7":["36c1ce8294b5dc1aa975d8e17abf7be07f98acd5"],"c00afe74a80796ed1f30a9509b150ff104746a1f":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"7d45e9e2ad7f57776540627c78f5e22e469ccdc1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a1c3710e755dc60691ac0d7fe23c9fcba0537bdc":["c00afe74a80796ed1f30a9509b150ff104746a1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"06584e6e98d592b34e1329b384182f368d2025e8":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["135621f3a0670a9394eb563224a3b76cc4dddc0f","c00afe74a80796ed1f30a9509b150ff104746a1f","a3776dccca01c11e7046323cfad46a3b4a471233"],"36c1ce8294b5dc1aa975d8e17abf7be07f98acd5":["f6f4cae61e16730201371ab7e9912721c19324e7"],"f6f4cae61e16730201371ab7e9912721c19324e7":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"c00afe74a80796ed1f30a9509b150ff104746a1f":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"7d45e9e2ad7f57776540627c78f5e22e469ccdc1":["36c1ce8294b5dc1aa975d8e17abf7be07f98acd5"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a1c3710e755dc60691ac0d7fe23c9fcba0537bdc":["06584e6e98d592b34e1329b384182f368d2025e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","7d45e9e2ad7f57776540627c78f5e22e469ccdc1","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}