{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","commits":[{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    Explanation fieldNormExpl = Explanation.match(\n        norms != null ? decodeNormValue(norms.get(doc)) : 1.0f,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advance(doc) == doc) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    Explanation fieldNormExpl = Explanation.match(\n        norms != null ? decodeNormValue(norms.get(doc)) : 1.0f,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advance(doc) == doc) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    Explanation fieldNormExpl = Explanation.match(\n        norms != null ? decodeNormValue(norms.get(doc)) : 1.0f,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advance(doc) == doc) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    Explanation fieldNormExpl = Explanation.match(\n        norms != null ? decodeNormValue(norms.get(doc)) : 1.0f,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advanceExact(doc)) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advance(doc) == doc) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advanceExact(doc)) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advance(doc) == doc) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advanceExact(doc)) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advance(doc) == doc) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues,float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms, float[] normTable) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms == null) {\n      norm = 1f;\n    } else if (norms.advanceExact(doc) == false) {\n      norm = 0f;\n    } else {\n      norm = normTable[(int) (norms.longValue() & 0xFF)];\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advanceExact(doc)) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainField(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":null,"sourceOld":"  private Explanation explainField(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation tfExplanation = Explanation.match(tf(freq.getValue()), \"tf(freq=\"+freq.getValue()+\"), with freq of:\", freq);\n    float norm;\n    if (norms != null && norms.advanceExact(doc)) {\n      norm = decodeNormValue(norms.longValue());\n    } else {\n      norm = 1f;\n    }\n    \n    Explanation fieldNormExpl = Explanation.match(\n        norm,\n        \"fieldNorm(doc=\" + doc + \")\");\n\n    return Explanation.match(\n        tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue(),\n        \"fieldWeight in \" + doc + \", product of:\",\n        tfExplanation, stats.idf, fieldNormExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["11134e449dabe11d6d0ff6a564d84b82cbe93722","d2714c85633b642b29871cf5ff8d17d3ba7bfd76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}