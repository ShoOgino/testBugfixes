{"path":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"/dev/null","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiDocValues(subSlices);\n    top = new FieldsEnumWithSlice[subs.length];\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39f3757037aa8f710c0cbf9a76a332de735f58b0","date":1288384416,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiDocValues();\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);\n\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiDocValues(subSlices);\n    top = new FieldsEnumWithSlice[subs.length];\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"605b061fadf71aa6458c0005eaae83a98350c403","date":1307117658,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiIndexDocValues();\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);\n\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiDocValues();\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiIndexDocValues();\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);\n\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiIndexDocValues();\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);\n\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(MultiFields,FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(MultiFields fields, FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    this.fields = fields;\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiIndexDocValues();\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);\n\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    terms = new MultiTermsEnum(subSlices);\n    queue = new FieldMergeQueue(subs.length);\n    docValues = new MultiIndexDocValues();\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","605b061fadf71aa6458c0005eaae83a98350c403"],"605b061fadf71aa6458c0005eaae83a98350c403":["39f3757037aa8f710c0cbf9a76a332de735f58b0"],"39f3757037aa8f710c0cbf9a76a332de735f58b0":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","3cc749c053615f5871f3b95715fe292f34e70a53"],"605b061fadf71aa6458c0005eaae83a98350c403":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"39f3757037aa8f710c0cbf9a76a332de735f58b0":["605b061fadf71aa6458c0005eaae83a98350c403"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["39f3757037aa8f710c0cbf9a76a332de735f58b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}