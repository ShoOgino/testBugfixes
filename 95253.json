{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","pathOld":"/dev/null","sourceNew":"  public static void appendMap(String collection, Map<String,Slice> map1, Map<String,Slice> map2) {\n    Set<Entry<String,Slice>> entrySet = map2.entrySet();\n    for (Entry<String,Slice> entry : entrySet) {\n      map1.put(collection + \"_\" + entry.getKey(), entry.getValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["adba31d59a8a08685520894e0aecfa173cbdb2d1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","pathOld":"/dev/null","sourceNew":"  public static void appendMap(String collection, Map<String,Slice> map1, Map<String,Slice> map2) {\n    Set<Entry<String,Slice>> entrySet = map2.entrySet();\n    for (Entry<String,Slice> entry : entrySet) {\n      map1.put(collection + \"_\" + entry.getKey(), entry.getValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","pathOld":"/dev/null","sourceNew":"  public static void appendMap(String collection, Map<String,Slice> map1, Map<String,Slice> map2) {\n    Set<Entry<String,Slice>> entrySet = map2.entrySet();\n    for (Entry<String,Slice> entry : entrySet) {\n      map1.put(collection + \"_\" + entry.getKey(), entry.getValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adba31d59a8a08685520894e0aecfa173cbdb2d1","date":1335266339,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","sourceNew":"  public static void appendMap(String collection, Map<String,Slice> map1, Map<String,Slice> map2) {\n    if (map1==null)\n      map1 = new HashMap<String,Slice>();\n    if (map2!=null) {\n      Set<Entry<String,Slice>> entrySet = map2.entrySet();\n      for (Entry<String,Slice> entry : entrySet) {\n        map1.put(collection + \"_\" + entry.getKey(), entry.getValue());\n      }\n    }\n  }\n\n","sourceOld":"  public static void appendMap(String collection, Map<String,Slice> map1, Map<String,Slice> map2) {\n    Set<Entry<String,Slice>> entrySet = map2.entrySet();\n    for (Entry<String,Slice> entry : entrySet) {\n      map1.put(collection + \"_\" + entry.getKey(), entry.getValue());\n    }\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7754464847b06ced605515bd48219280ede29e9","date":1354586462,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","sourceNew":null,"sourceOld":"  public static void appendMap(String collection, Map<String,Slice> map1, Map<String,Slice> map2) {\n    if (map1==null)\n      map1 = new HashMap<String,Slice>();\n    if (map2!=null) {\n      Set<Entry<String,Slice>> entrySet = map2.entrySet();\n      for (Entry<String,Slice> entry : entrySet) {\n        map1.put(collection + \"_\" + entry.getKey(), entry.getValue());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils#appendMap(String,Map[String,Slice],Map[String,Slice]).mjava","sourceNew":null,"sourceOld":"  public static void appendMap(String collection, Map<String,Slice> map1, Map<String,Slice> map2) {\n    if (map1==null)\n      map1 = new HashMap<String,Slice>();\n    if (map2!=null) {\n      Set<Entry<String,Slice>> entrySet = map2.entrySet();\n      for (Entry<String,Slice> entry : entrySet) {\n        map1.put(collection + \"_\" + entry.getKey(), entry.getValue());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7754464847b06ced605515bd48219280ede29e9":["adba31d59a8a08685520894e0aecfa173cbdb2d1"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["adba31d59a8a08685520894e0aecfa173cbdb2d1","e7754464847b06ced605515bd48219280ede29e9"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7754464847b06ced605515bd48219280ede29e9"],"adba31d59a8a08685520894e0aecfa173cbdb2d1":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"]},"commit2Childs":{"e7754464847b06ced605515bd48219280ede29e9":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","adba31d59a8a08685520894e0aecfa173cbdb2d1"],"adba31d59a8a08685520894e0aecfa173cbdb2d1":["e7754464847b06ced605515bd48219280ede29e9","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","407687e67faf6e1f02a211ca078d8e3eed631027","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}