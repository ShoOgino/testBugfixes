{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector#createTermGroupFacetCollector(String,String,boolean,BytesRef,int).mjava","commits":[{"id":"369f44b665973d5aa5fc7d0f2a75ffad475d21ee","date":1331157468,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector#createTermGroupFacetCollector(String,String,boolean,BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method for creating the right implementation based on the fact whether the facet field contains\n   * multiple tokens per documents.\n   *\n   * @param groupField The group field\n   * @param facetField The facet field\n   * @param facetFieldMultivalued Whether the facet field has multiple tokens per document\n   * @param facetPrefix The facet prefix a facet entry should start with to be included.\n   * @param initialSize The initial allocation size of the internal int set and group facet list which should roughly\n   *                    match the total number of expected unique groups. Be aware that the heap usage is\n   *                    4 bytes * initialSize.\n   * @return <code>TermGroupFacetCollector</code> implementation\n   */\n  public static TermGroupFacetCollector createTermGroupFacetCollector(String groupField,\n                                                                      String facetField,\n                                                                      boolean facetFieldMultivalued,\n                                                                      BytesRef facetPrefix,\n                                                                      int initialSize) {\n    if (facetFieldMultivalued) {\n      return new MV(groupField, facetField, facetPrefix, initialSize);\n    } else {\n      return new SV(groupField, facetField, facetPrefix, initialSize);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector#createTermGroupFacetCollector(String,String,boolean,BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method for creating the right implementation based on the fact whether the facet field contains\n   * multiple tokens per documents.\n   *\n   * @param groupField The group field\n   * @param facetField The facet field\n   * @param facetFieldMultivalued Whether the facet field has multiple tokens per document\n   * @param facetPrefix The facet prefix a facet entry should start with to be included.\n   * @param initialSize The initial allocation size of the internal int set and group facet list which should roughly\n   *                    match the total number of expected unique groups. Be aware that the heap usage is\n   *                    4 bytes * initialSize.\n   * @return <code>TermGroupFacetCollector</code> implementation\n   */\n  public static TermGroupFacetCollector createTermGroupFacetCollector(String groupField,\n                                                                      String facetField,\n                                                                      boolean facetFieldMultivalued,\n                                                                      BytesRef facetPrefix,\n                                                                      int initialSize) {\n    if (facetFieldMultivalued) {\n      return new MV(groupField, facetField, facetPrefix, initialSize);\n    } else {\n      return new SV(groupField, facetField, facetPrefix, initialSize);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector#createTermGroupFacetCollector(String,String,boolean,BytesRef,int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector#createTermGroupFacetCollector(String,String,boolean,BytesRef,int).mjava","sourceNew":"  /**\n   * Factory method for creating the right implementation based on the fact whether the facet field contains\n   * multiple tokens per documents.\n   *\n   * @param groupField The group field\n   * @param facetField The facet field\n   * @param facetFieldMultivalued Whether the facet field has multiple tokens per document\n   * @param facetPrefix The facet prefix a facet entry should start with to be included.\n   * @param initialSize The initial allocation size of the internal int set and group facet list which should roughly\n   *                    match the total number of expected unique groups. Be aware that the heap usage is\n   *                    4 bytes * initialSize.\n   * @return <code>TermGroupFacetCollector</code> implementation\n   */\n  public static TermGroupFacetCollector createTermGroupFacetCollector(String groupField,\n                                                                      String facetField,\n                                                                      boolean facetFieldMultivalued,\n                                                                      BytesRef facetPrefix,\n                                                                      int initialSize) {\n    if (facetFieldMultivalued) {\n      return new MV(groupField, facetField, facetPrefix, initialSize);\n    } else {\n      return new SV(groupField, facetField, facetPrefix, initialSize);\n    }\n  }\n\n","sourceOld":"  /**\n   * Factory method for creating the right implementation based on the fact whether the facet field contains\n   * multiple tokens per documents.\n   *\n   * @param groupField The group field\n   * @param facetField The facet field\n   * @param facetFieldMultivalued Whether the facet field has multiple tokens per document\n   * @param facetPrefix The facet prefix a facet entry should start with to be included.\n   * @param initialSize The initial allocation size of the internal int set and group facet list which should roughly\n   *                    match the total number of expected unique groups. Be aware that the heap usage is\n   *                    4 bytes * initialSize.\n   * @return <code>TermGroupFacetCollector</code> implementation\n   */\n  public static TermGroupFacetCollector createTermGroupFacetCollector(String groupField,\n                                                                      String facetField,\n                                                                      boolean facetFieldMultivalued,\n                                                                      BytesRef facetPrefix,\n                                                                      int initialSize) {\n    if (facetFieldMultivalued) {\n      return new MV(groupField, facetField, facetPrefix, initialSize);\n    } else {\n      return new SV(groupField, facetField, facetPrefix, initialSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"369f44b665973d5aa5fc7d0f2a75ffad475d21ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"369f44b665973d5aa5fc7d0f2a75ffad475d21ee":["38e3b736c7ca086d61b7dbb841c905ee115490da","b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}