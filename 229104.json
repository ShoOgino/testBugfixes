{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,DocValues.Type,boolean).mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,ValueType,boolean).mjava","sourceNew":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static DVAllGroupsCollector create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link IndexDocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link ValueType} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link IndexDocValues}\n   */\n  public static DVAllGroupsCollector create(String groupField, ValueType type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,ValueType,boolean).mjava","sourceNew":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static DVAllGroupsCollector create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link IndexDocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link ValueType} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link IndexDocValues}\n   */\n  public static DVAllGroupsCollector create(String groupField, ValueType type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10ecbc03c2fc578015d597a26fe35271fe9504d2","date":1331200601,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,DocValues.Type,boolean).mjava","sourceNew":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static DVAllGroupsCollector<?> create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static DVAllGroupsCollector create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fde7d38af1a90c9b08d016021745c83fa7648e28","date":1331215173,"type":5,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#[T]_create(String,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,DocValues.Type,boolean).mjava","sourceNew":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static <T> DVAllGroupsCollector<T> create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static DVAllGroupsCollector<?> create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":5,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#[T]_create(String,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#create(String,DocValues.Type,boolean).mjava","sourceNew":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static <T> DVAllGroupsCollector<T> create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link DVAllGroupsCollector}.\n   * Selects and constructs the most optimal all groups collector implementation for grouping by {@link DocValues}.\n   * If implementations require an initial allocation size then this will be set to 128.\n   *\n   *\n   * @param groupField  The field to group by\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Wether the values to group by should be disk resident\n   * @return the most optimal all groups collector implementation for grouping by {@link DocValues}\n   */\n  public static DVAllGroupsCollector create(String groupField, DocValues.Type type, boolean diskResident) {\n    return create(groupField, type, diskResident, DEFAULT_INITIAL_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["d638301ad1cfcae567b681b893bc8781f0ee48a5","fde7d38af1a90c9b08d016021745c83fa7648e28"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fde7d38af1a90c9b08d016021745c83fa7648e28":["10ecbc03c2fc578015d597a26fe35271fe9504d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fde7d38af1a90c9b08d016021745c83fa7648e28"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["fde7d38af1a90c9b08d016021745c83fa7648e28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"fde7d38af1a90c9b08d016021745c83fa7648e28":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["38e3b736c7ca086d61b7dbb841c905ee115490da","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}