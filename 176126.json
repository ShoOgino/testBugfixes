{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"818d704eaaf0fba0561d0d2752832e1015053482","date":1327419676,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      if(commitWithin>0) {\n        writer.append( \"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\" );\n      } else {\n        writer.append( \"<delete>\" );\n      }\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":["8cd2638c91e278a2831e83135b2c895d04defa90"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      if(commitWithin>0) {\n        writer.append( \"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\" );\n      } else {\n        writer.append( \"<delete>\" );\n      }\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      if(commitWithin>0) {\n        writer.append( \"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\" );\n      } else {\n        writer.append( \"<delete>\" );\n      }\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","date":1378862385,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(\"ver\");\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      if(commitWithin>0) {\n        writer.append( \"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\" );\n      } else {\n        writer.append( \"<delete>\" );\n      }\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":["f517609336abda4a2852a6d56a0d92b97f5f7a9f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f517609336abda4a2852a6d56a0d92b97f5f7a9f","date":1382153013,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(\"ver\");\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","bugFix":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"747dd71fefcbc7142661c25334b74c518fef4d81","date":1423504825,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b940572a59da1b42b6c20ab5278155b12816807a","date":1462388874,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd78ba595fa6cdd7fff930f26d154d13a823fa47","date":1462400514,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73450c0955930295d34703e7ddbfc6973b7a121a","date":1462431925,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d2dadc1f5ca8703d8659f4964961f9967935d75","date":1490231750,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(_ROUTE_);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5fa6615014cd2288fe930f8c8bb726f9504961d","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(_ROUTE_);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(ROUTE);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ffe681f212e5073c69955b4ad22946794c84940","date":1560182863,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\").append(String.valueOf(commitWithin)).append(\"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(_ROUTE_);\n            if (version != null) {\n              writer.append(\" version=\\\"\").append(String.valueOf(version)).append('\"');\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\").append(route).append('\"');\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public UpdateRequest writeXML(Writer writer) throws IOException {\n    List<Map<SolrInputDocument,Map<String,Object>>> getDocLists = getDocLists(documents);\n    \n    for (Map<SolrInputDocument,Map<String,Object>> docs : getDocLists) {\n      \n      if ((docs != null && docs.size() > 0)) {\n        Entry<SolrInputDocument,Map<String,Object>> firstDoc = docs.entrySet()\n            .iterator().next();\n        Map<String,Object> map = firstDoc.getValue();\n        Integer cw = null;\n        Boolean ow = null;\n        if (map != null) {\n          cw = (Integer) firstDoc.getValue().get(COMMIT_WITHIN);\n          ow = (Boolean) firstDoc.getValue().get(OVERWRITE);\n        }\n        if (ow == null) ow = true;\n        int commitWithin = (cw != null && cw != -1) ? cw : this.commitWithin;\n        boolean overwrite = ow;\n        if (commitWithin > -1 || overwrite != true) {\n          writer.write(\"<add commitWithin=\\\"\" + commitWithin + \"\\\" \"\n              + \"overwrite=\\\"\" + overwrite + \"\\\">\");\n        } else {\n          writer.write(\"<add>\");\n        }\n        \n        Set<Entry<SolrInputDocument,Map<String,Object>>> entries = docs\n            .entrySet();\n        for (Entry<SolrInputDocument,Map<String,Object>> entry : entries) {\n          ClientUtils.writeXML(entry.getKey(), writer);\n        }\n        \n        writer.write(\"</add>\");\n      }\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if (deleteI || deleteQ) {\n      if (commitWithin > 0) {\n        writer.append(\"<delete commitWithin=\\\"\" + commitWithin + \"\\\">\");\n      } else {\n        writer.append(\"<delete>\");\n      }\n      if (deleteI) {\n        for (Map.Entry<String,Map<String,Object>> entry : deleteById.entrySet()) {\n          writer.append(\"<id\");\n          Map<String,Object> map = entry.getValue();\n          if (map != null) {\n            Long version = (Long) map.get(VER);\n            String route = (String)map.get(_ROUTE_);\n            if (version != null) {\n              writer.append(\" version=\\\"\" + version + \"\\\"\");\n            }\n            \n            if (route != null) {\n              writer.append(\" _route_=\\\"\" + route + \"\\\"\");\n            }\n          }\n          writer.append(\">\");\n          \n          XML.escapeCharData(entry.getKey(), writer);\n          writer.append(\"</id>\");\n        }\n      }\n      if (deleteQ) {\n        for (String q : deleteQuery) {\n          writer.append(\"<query>\");\n          XML.escapeCharData(q, writer);\n          writer.append(\"</query>\");\n        }\n      }\n      writer.append(\"</delete>\");\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ffe681f212e5073c69955b4ad22946794c84940":["6d2dadc1f5ca8703d8659f4964961f9967935d75"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["818d704eaaf0fba0561d0d2752832e1015053482"],"73450c0955930295d34703e7ddbfc6973b7a121a":["747dd71fefcbc7142661c25334b74c518fef4d81","b940572a59da1b42b6c20ab5278155b12816807a"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["73450c0955930295d34703e7ddbfc6973b7a121a"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","818d704eaaf0fba0561d0d2752832e1015053482"],"747dd71fefcbc7142661c25334b74c518fef4d81":["f517609336abda4a2852a6d56a0d92b97f5f7a9f"],"818d704eaaf0fba0561d0d2752832e1015053482":["c26f00b574427b55127e869b935845554afde1fa"],"b940572a59da1b42b6c20ab5278155b12816807a":["747dd71fefcbc7142661c25334b74c518fef4d81"],"e5fa6615014cd2288fe930f8c8bb726f9504961d":["73450c0955930295d34703e7ddbfc6973b7a121a"],"bd78ba595fa6cdd7fff930f26d154d13a823fa47":["747dd71fefcbc7142661c25334b74c518fef4d81","b940572a59da1b42b6c20ab5278155b12816807a"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","818d704eaaf0fba0561d0d2752832e1015053482"],"f517609336abda4a2852a6d56a0d92b97f5f7a9f":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["747dd71fefcbc7142661c25334b74c518fef4d81","73450c0955930295d34703e7ddbfc6973b7a121a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ffe681f212e5073c69955b4ad22946794c84940"]},"commit2Childs":{"2ffe681f212e5073c69955b4ad22946794c84940":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["f517609336abda4a2852a6d56a0d92b97f5f7a9f"],"73450c0955930295d34703e7ddbfc6973b7a121a":["6d2dadc1f5ca8703d8659f4964961f9967935d75","e5fa6615014cd2288fe930f8c8bb726f9504961d","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904"],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","818d704eaaf0fba0561d0d2752832e1015053482","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["2ffe681f212e5073c69955b4ad22946794c84940"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"818d704eaaf0fba0561d0d2752832e1015053482":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"747dd71fefcbc7142661c25334b74c518fef4d81":["73450c0955930295d34703e7ddbfc6973b7a121a","b940572a59da1b42b6c20ab5278155b12816807a","bd78ba595fa6cdd7fff930f26d154d13a823fa47","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904"],"b940572a59da1b42b6c20ab5278155b12816807a":["73450c0955930295d34703e7ddbfc6973b7a121a","bd78ba595fa6cdd7fff930f26d154d13a823fa47"],"e5fa6615014cd2288fe930f8c8bb726f9504961d":[],"bd78ba595fa6cdd7fff930f26d154d13a823fa47":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"f517609336abda4a2852a6d56a0d92b97f5f7a9f":["747dd71fefcbc7142661c25334b74c518fef4d81"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","e5fa6615014cd2288fe930f8c8bb726f9504961d","bd78ba595fa6cdd7fff930f26d154d13a823fa47","0d22ac6a4146774c1bc8400160fc0b6150294e92","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}