{"path":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String]).mjava","commits":[{"id":"44549822b9113925bd45e53c1e0028ab2e1d1d7f","date":1330898600,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  static void restore(\n      TreeMap<String,String> before,\n      TreeMap<String,String> after) {\n    after.keySet().removeAll(before.keySet());\n    for (String key : after.keySet()) {\n      System.clearProperty(key);\n    }\n    for (Map.Entry<String,String> e : before.entrySet()) {\n      if (e.getValue() == null) {\n        System.clearProperty(e.getKey()); // Can this happen?\n      } else {\n        System.setProperty(e.getKey(), e.getValue());\n      }\n    }\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  static void restore(\n      TreeMap<String,String> before,\n      TreeMap<String,String> after) {\n    after.keySet().removeAll(before.keySet());\n    for (String key : after.keySet()) {\n      System.clearProperty(key);\n    }\n    for (Map.Entry<String,String> e : before.entrySet()) {\n      if (e.getValue() == null) {\n        System.clearProperty(e.getKey()); // Can this happen?\n      } else {\n        System.setProperty(e.getKey(), e.getValue());\n      }\n    }\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8145d062469bbacf8e366bd238d956e8c2ca0ec","date":1332446435,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String],Set[String]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String]).mjava","sourceNew":"  static void restore(\n      TreeMap<String,String> before,\n      TreeMap<String,String> after,\n      Set<String> ignoredKeys) {\n\n    // Clear anything that is present after but wasn't before.\n    after.keySet().removeAll(before.keySet());\n    for (String key : after.keySet()) {\n      if (!ignoredKeys.contains(key))\n        System.clearProperty(key);\n    }\n\n    // Restore original property values unless they are ignored (then leave).\n    for (Map.Entry<String,String> e : before.entrySet()) {\n      String key = e.getValue();\n      if (!ignoredKeys.contains(key)) {\n        if (key == null) {\n          System.clearProperty(e.getKey()); // Can this happen?\n        } else {\n          System.setProperty(e.getKey(), key);\n        }\n      }\n    }\n  }  \n\n","sourceOld":"  static void restore(\n      TreeMap<String,String> before,\n      TreeMap<String,String> after) {\n    after.keySet().removeAll(before.keySet());\n    for (String key : after.keySet()) {\n      System.clearProperty(key);\n    }\n    for (Map.Entry<String,String> e : before.entrySet()) {\n      if (e.getValue() == null) {\n        System.clearProperty(e.getKey()); // Can this happen?\n      } else {\n        System.setProperty(e.getKey(), e.getValue());\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8145d062469bbacf8e366bd238d956e8c2ca0ec":["44549822b9113925bd45e53c1e0028ab2e1d1d7f"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44549822b9113925bd45e53c1e0028ab2e1d1d7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44549822b9113925bd45e53c1e0028ab2e1d1d7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8145d062469bbacf8e366bd238d956e8c2ca0ec"]},"commit2Childs":{"b8145d062469bbacf8e366bd238d956e8c2ca0ec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","44549822b9113925bd45e53c1e0028ab2e1d1d7f"],"44549822b9113925bd45e53c1e0028ab2e1d1d7f":["b8145d062469bbacf8e366bd238d956e8c2ca0ec","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}