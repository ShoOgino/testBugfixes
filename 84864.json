{"path":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","commits":[{"id":"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd","date":1380757525,"type":0,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Removes and returns all values for the specified name.  Returns null if\n   * no matches found.  This method will return all matching objects,\n   * regardless of data type.  If you are parsing Solr config options, the\n   * {@link #removeConfigArgs(String)} method will probably work better.\n   *\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> removeAll(String name) {\n    List<T> result = new ArrayList<T>();\n    result = getAll(name);\n    if (result.size() > 0 ) {\n      killAll(name);\n      return result;\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daeabea0f98580c53abe9b70ec5b71caa9dd32","date":1380827550,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","sourceNew":"  /**\n   * Removes and returns all values for the specified name.  Returns null if\n   * no matches found.  This method will return all matching objects,\n   * regardless of data type.  If you are parsing Solr config options, the\n   * {@link #removeConfigArgs(String)} or {@link #removeBooleanArg(String)}\n   * methods will probably work better.\n   *\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> removeAll(String name) {\n    List<T> result = new ArrayList<T>();\n    result = getAll(name);\n    if (result.size() > 0 ) {\n      killAll(name);\n      return result;\n    }\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Removes and returns all values for the specified name.  Returns null if\n   * no matches found.  This method will return all matching objects,\n   * regardless of data type.  If you are parsing Solr config options, the\n   * {@link #removeConfigArgs(String)} method will probably work better.\n   *\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> removeAll(String name) {\n    List<T> result = new ArrayList<T>();\n    result = getAll(name);\n    if (result.size() > 0 ) {\n      killAll(name);\n      return result;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","sourceNew":"  /**\n   * Removes and returns all values for the specified name.  Returns null if\n   * no matches found.  This method will return all matching objects,\n   * regardless of data type.  If you are parsing Solr config options, the\n   * {@link #removeConfigArgs(String)} or {@link #removeBooleanArg(String)}\n   * methods will probably work better.\n   *\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> removeAll(String name) {\n    List<T> result = new ArrayList<>();\n    result = getAll(name);\n    if (result.size() > 0 ) {\n      killAll(name);\n      return result;\n    }\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Removes and returns all values for the specified name.  Returns null if\n   * no matches found.  This method will return all matching objects,\n   * regardless of data type.  If you are parsing Solr config options, the\n   * {@link #removeConfigArgs(String)} or {@link #removeBooleanArg(String)}\n   * methods will probably work better.\n   *\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> removeAll(String name) {\n    List<T> result = new ArrayList<T>();\n    result = getAll(name);\n    if (result.size() > 0 ) {\n      killAll(name);\n      return result;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3aa429fcc68e0937a220895ff4d7bfcac5b022eb","date":1584973494,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#removeAll(String).mjava","sourceNew":"  /**\n   * Removes and returns all values for the specified name.  Returns null if\n   * no matches found.  This method will return all matching objects,\n   * regardless of data type.  If you are parsing Solr config options, the\n   * {@link #removeConfigArgs(String)} or {@link #removeBooleanArg(String)}\n   * methods will probably work better.\n   *\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> removeAll(String name) {\n    List<T> result = getAll(name);\n    if (result.size() > 0 ) {\n      killAll(name);\n      return result;\n    }\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Removes and returns all values for the specified name.  Returns null if\n   * no matches found.  This method will return all matching objects,\n   * regardless of data type.  If you are parsing Solr config options, the\n   * {@link #removeConfigArgs(String)} or {@link #removeBooleanArg(String)}\n   * methods will probably work better.\n   *\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> removeAll(String name) {\n    List<T> result = new ArrayList<>();\n    result = getAll(name);\n    if (result.size() > 0 ) {\n      killAll(name);\n      return result;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d8daeabea0f98580c53abe9b70ec5b71caa9dd32":["3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"3aa429fcc68e0937a220895ff4d7bfcac5b022eb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d8daeabea0f98580c53abe9b70ec5b71caa9dd32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3aa429fcc68e0937a220895ff4d7bfcac5b022eb"],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d8daeabea0f98580c53abe9b70ec5b71caa9dd32":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3aa429fcc68e0937a220895ff4d7bfcac5b022eb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3aa429fcc68e0937a220895ff4d7bfcac5b022eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["d8daeabea0f98580c53abe9b70ec5b71caa9dd32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}