{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testFuzzy().mjava","commits":[{"id":"b8640890b0bef9732f1444f1b08be6c4fa024ce8","date":1596711904,"type":1,"author":"Julie Tibshirani","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testFuzzy().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testOneFuzzy().mjava","sourceNew":"  public void testFuzzy() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Field body = new Field(\"body\", \"\", fieldType);\n    Document doc = new Document();\n    doc.add(body);\n\n    body.setStringValue(\"This is a test.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"Test a one sentence document.\");\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = randomUnifiedHighlighter(searcher, indexAnalyzer);\n    Query query = new FuzzyQuery(new Term(\"body\", \"tets\"), 1);\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits.value);\n    String snippets[] = highlighter.highlight(\"body\", query, topDocs);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>.\", snippets[0]);\n    assertEquals(\"<b>Test</b> a one sentence document.\", snippets[1]);\n\n    // with prefix\n    query = new FuzzyQuery(new Term(\"body\", \"tets\"), 1, 2);\n    topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits.value);\n    snippets = highlighter.highlight(\"body\", query, topDocs);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>.\", snippets[0]);\n    assertEquals(\"<b>Test</b> a one sentence document.\", snippets[1]);\n\n    // with zero max edits\n    query = new FuzzyQuery(new Term(\"body\", \"test\"), 0, 2);\n    topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits.value);\n    snippets = highlighter.highlight(\"body\", query, topDocs);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>.\", snippets[0]);\n    assertEquals(\"<b>Test</b> a one sentence document.\", snippets[1]);\n\n    // wrong field\n    highlighter.setFieldMatcher(null);//default\n    BooleanQuery bq = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), BooleanClause.Occur.SHOULD)\n        .add(new FuzzyQuery(new Term(\"bogus\", \"tets\"), 1), BooleanClause.Occur.SHOULD)\n        .build();\n    topDocs = searcher.search(bq, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits.value);\n    snippets = highlighter.highlight(\"body\", bq, topDocs);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a test.\", snippets[0]);\n    assertEquals(\"Test a one sentence document.\", snippets[1]);\n\n    ir.close();\n  }\n\n","sourceOld":"  public void testOneFuzzy() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Field body = new Field(\"body\", \"\", fieldType);\n    Document doc = new Document();\n    doc.add(body);\n\n    body.setStringValue(\"This is a test.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"Test a one sentence document.\");\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = randomUnifiedHighlighter(searcher, indexAnalyzer);\n    Query query = new FuzzyQuery(new Term(\"body\", \"tets\"), 1);\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits.value);\n    String snippets[] = highlighter.highlight(\"body\", query, topDocs);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>.\", snippets[0]);\n    assertEquals(\"<b>Test</b> a one sentence document.\", snippets[1]);\n\n    // with prefix\n    query = new FuzzyQuery(new Term(\"body\", \"tets\"), 1, 2);\n    topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits.value);\n    snippets = highlighter.highlight(\"body\", query, topDocs);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>.\", snippets[0]);\n    assertEquals(\"<b>Test</b> a one sentence document.\", snippets[1]);\n\n    // wrong field\n    highlighter.setFieldMatcher(null);//default\n    BooleanQuery bq = new BooleanQuery.Builder()\n        .add(new MatchAllDocsQuery(), BooleanClause.Occur.SHOULD)\n        .add(new FuzzyQuery(new Term(\"bogus\", \"tets\"), 1), BooleanClause.Occur.SHOULD)\n        .build();\n    topDocs = searcher.search(bq, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits.value);\n    snippets = highlighter.highlight(\"body\", bq, topDocs);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a test.\", snippets[0]);\n    assertEquals(\"Test a one sentence document.\", snippets[1]);\n\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b8640890b0bef9732f1444f1b08be6c4fa024ce8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8640890b0bef9732f1444f1b08be6c4fa024ce8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8640890b0bef9732f1444f1b08be6c4fa024ce8"],"b8640890b0bef9732f1444f1b08be6c4fa024ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}