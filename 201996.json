{"path":"lucene/test-framework/src/test/org/apache/lucene/search/TestBaseExplanationTestCase.BrokenExplainWeight#explain(LeafReaderContext,int).mjava","commits":[{"id":"7c82b0d4b7bf499a159eeff92add20bac6599cc1","date":1465223716,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/search/TestBaseExplanationTestCase.BrokenExplainWeight#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BrokenExplainTermQuery q = (BrokenExplainTermQuery) this.getQuery();\n      Explanation result = in.explain(context, doc);\n      if (result.isMatch()) {\n        if (q.breakExplainScores) {\n          result = Explanation.match(-1F * result.getValue(), \"Broken Explanation Score\", result);\n        }\n        if (q.toggleExplainMatch) {\n          result = Explanation.noMatch(\"Broken Explanation Matching\", result);\n        }\n      } else {\n        if (q.toggleExplainMatch) {\n          result = Explanation.match(-42.0F, \"Broken Explanation Matching\", result);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/search/TestBaseExplanationTestCase.BrokenExplainWeight#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BrokenExplainTermQuery q = (BrokenExplainTermQuery) this.getQuery();\n      Explanation result = in.explain(context, doc);\n      if (result.isMatch()) {\n        if (q.breakExplainScores) {\n          result = Explanation.match(-1F * result.getValue(), \"Broken Explanation Score\", result);\n        }\n        if (q.toggleExplainMatch) {\n          result = Explanation.noMatch(\"Broken Explanation Matching\", result);\n        }\n      } else {\n        if (q.toggleExplainMatch) {\n          result = Explanation.match(-42.0F, \"Broken Explanation Matching\", result);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/search/TestBaseExplanationTestCase.BrokenExplainWeight#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BrokenExplainTermQuery q = (BrokenExplainTermQuery) this.getQuery();\n      Explanation result = in.explain(context, doc);\n      if (result.isMatch()) {\n        if (q.breakExplainScores) {\n          result = Explanation.match(-1F * result.getValue(), \"Broken Explanation Score\", result);\n        }\n        if (q.toggleExplainMatch) {\n          result = Explanation.noMatch(\"Broken Explanation Matching\", result);\n        }\n      } else {\n        if (q.toggleExplainMatch) {\n          result = Explanation.match(-42.0F, \"Broken Explanation Matching\", result);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/search/TestBaseExplanationTestCase.BrokenExplainWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/search/TestBaseExplanationTestCase.BrokenExplainWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BrokenExplainTermQuery q = (BrokenExplainTermQuery) this.getQuery();\n      Explanation result = in.explain(context, doc);\n      if (result.isMatch()) {\n        if (q.breakExplainScores) {\n          result = Explanation.match(-1F * result.getValue().doubleValue(), \"Broken Explanation Score\", result);\n        }\n        if (q.toggleExplainMatch) {\n          result = Explanation.noMatch(\"Broken Explanation Matching\", result);\n        }\n      } else {\n        if (q.toggleExplainMatch) {\n          result = Explanation.match(-42.0F, \"Broken Explanation Matching\", result);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BrokenExplainTermQuery q = (BrokenExplainTermQuery) this.getQuery();\n      Explanation result = in.explain(context, doc);\n      if (result.isMatch()) {\n        if (q.breakExplainScores) {\n          result = Explanation.match(-1F * result.getValue(), \"Broken Explanation Score\", result);\n        }\n        if (q.toggleExplainMatch) {\n          result = Explanation.noMatch(\"Broken Explanation Matching\", result);\n        }\n      } else {\n        if (q.toggleExplainMatch) {\n          result = Explanation.match(-42.0F, \"Broken Explanation Matching\", result);\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c82b0d4b7bf499a159eeff92add20bac6599cc1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["191128ac5b85671b1671e2c857437694283b6ebf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"191128ac5b85671b1671e2c857437694283b6ebf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c82b0d4b7bf499a159eeff92add20bac6599cc1"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"]},"commit2Childs":{"7c82b0d4b7bf499a159eeff92add20bac6599cc1":["191128ac5b85671b1671e2c857437694283b6ebf"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c82b0d4b7bf499a159eeff92add20bac6599cc1","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"191128ac5b85671b1671e2c857437694283b6ebf":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}