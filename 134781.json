{"path":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#assumeCurrencySupport(String...).mjava","commits":[{"id":"4ce5a0276b8637186ae6adfa516e332132d197ad","date":1362165863,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#assumeCurrencySupport(String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * \"Assumes\" that the specified list of currency codes are\n   * supported in this JVM\n   */\n  public static void assumeCurrencySupport(String... codes) {\n    try {\n      // each JDK might have a diff list of supported currencies,\n      // these are the ones needed for this test to work.\n      for (String code : codes) {\n        Currency obj = Currency.getInstance(code);\n        assertNotNull(code, obj);\n      }\n    } catch (IllegalArgumentException e) {\n      Assume.assumeNoException(e);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f107636c2cc82350a2607d774c092da5b73152e5","date":1498227268,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTypeTest#assumeCurrencySupport(String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#assumeCurrencySupport(String...).mjava","sourceNew":"  /**\n   * \"Assumes\" that the specified list of currency codes are\n   * supported in this JVM\n   */\n  public static void assumeCurrencySupport(String... codes) {\n    try {\n      // each JDK might have a diff list of supported currencies,\n      // these are the ones needed for this test to work.\n      for (String code : codes) {\n        Currency obj = Currency.getInstance(code);\n        assertNotNull(code, obj);\n      }\n    } catch (IllegalArgumentException e) {\n      Assume.assumeNoException(e);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * \"Assumes\" that the specified list of currency codes are\n   * supported in this JVM\n   */\n  public static void assumeCurrencySupport(String... codes) {\n    try {\n      // each JDK might have a diff list of supported currencies,\n      // these are the ones needed for this test to work.\n      for (String code : codes) {\n        Currency obj = Currency.getInstance(code);\n        assertNotNull(code, obj);\n      }\n    } catch (IllegalArgumentException e) {\n      Assume.assumeNoException(e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTypeTest#assumeCurrencySupport(String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#assumeCurrencySupport(String...).mjava","sourceNew":"  /**\n   * \"Assumes\" that the specified list of currency codes are\n   * supported in this JVM\n   */\n  public static void assumeCurrencySupport(String... codes) {\n    try {\n      // each JDK might have a diff list of supported currencies,\n      // these are the ones needed for this test to work.\n      for (String code : codes) {\n        Currency obj = Currency.getInstance(code);\n        assertNotNull(code, obj);\n      }\n    } catch (IllegalArgumentException e) {\n      Assume.assumeNoException(e);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * \"Assumes\" that the specified list of currency codes are\n   * supported in this JVM\n   */\n  public static void assumeCurrencySupport(String... codes) {\n    try {\n      // each JDK might have a diff list of supported currencies,\n      // these are the ones needed for this test to work.\n      for (String code : codes) {\n        Currency obj = Currency.getInstance(code);\n        assertNotNull(code, obj);\n      }\n    } catch (IllegalArgumentException e) {\n      Assume.assumeNoException(e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTypeTest#assumeCurrencySupport(String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#assumeCurrencySupport(String...).mjava","sourceNew":"  /**\n   * \"Assumes\" that the specified list of currency codes are\n   * supported in this JVM\n   */\n  public static void assumeCurrencySupport(String... codes) {\n    try {\n      // each JDK might have a diff list of supported currencies,\n      // these are the ones needed for this test to work.\n      for (String code : codes) {\n        Currency obj = Currency.getInstance(code);\n        assertNotNull(code, obj);\n      }\n    } catch (IllegalArgumentException e) {\n      Assume.assumeNoException(e);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * \"Assumes\" that the specified list of currency codes are\n   * supported in this JVM\n   */\n  public static void assumeCurrencySupport(String... codes) {\n    try {\n      // each JDK might have a diff list of supported currencies,\n      // these are the ones needed for this test to work.\n      for (String code : codes) {\n        Currency obj = Currency.getInstance(code);\n        assertNotNull(code, obj);\n      }\n    } catch (IllegalArgumentException e) {\n      Assume.assumeNoException(e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ce5a0276b8637186ae6adfa516e332132d197ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["4ce5a0276b8637186ae6adfa516e332132d197ad","f107636c2cc82350a2607d774c092da5b73152e5"],"28288370235ed02234a64753cdbf0c6ec096304a":["4ce5a0276b8637186ae6adfa516e332132d197ad","f107636c2cc82350a2607d774c092da5b73152e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"f107636c2cc82350a2607d774c092da5b73152e5":["4ce5a0276b8637186ae6adfa516e332132d197ad"]},"commit2Childs":{"4ce5a0276b8637186ae6adfa516e332132d197ad":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","f107636c2cc82350a2607d774c092da5b73152e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ce5a0276b8637186ae6adfa516e332132d197ad"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f107636c2cc82350a2607d774c092da5b73152e5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}