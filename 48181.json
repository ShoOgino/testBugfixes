{"path":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":null,"sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"601c6168c1d70f05f7a6a2d8c7ad4ceb218f3541","date":1284416022,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"059b719924df487a1e07827d66e5c832b583f4e8","date":1286979013,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractFacetInfo(NamedList[Object]).mjava","sourceNew":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractFacetInfo( NamedList<Object> info )\n  {\n    // Parse the queries\n    _facetQuery = new LinkedHashMap<String, Integer>();\n    NamedList<Integer> fq = (NamedList<Integer>) info.get( \"facet_queries\" );\n    if (fq != null) {\n      for( Map.Entry<String, Integer> entry : fq ) {\n        _facetQuery.put( entry.getKey(), entry.getValue() );\n      }\n    }\n    \n    // Parse the facet info into fields\n    // TODO?? The list could be <int> or <long>?  If always <long> then we can switch to <Long>\n    NamedList<NamedList<Number>> ff = (NamedList<NamedList<Number>>) info.get( \"facet_fields\" );\n    if( ff != null ) {\n      _facetFields = new ArrayList<FacetField>( ff.size() );\n      _limitingFacets = new ArrayList<FacetField>( ff.size() );\n      \n      long minsize = _results == null ? Long.MAX_VALUE :_results.getNumFound();\n      for( Map.Entry<String,NamedList<Number>> facet : ff ) {\n        FacetField f = new FacetField( facet.getKey() );\n        for( Map.Entry<String, Number> entry : facet.getValue() ) {\n          f.add( entry.getKey(), entry.getValue().longValue() );\n        }\n        \n        _facetFields.add( f );\n        FacetField nl = f.getLimitingFields( minsize );\n        if( nl.getValueCount() > 0 ) {\n          _limitingFacets.add( nl );\n        }\n      }\n    }\n    \n    //Parse date facets\n    NamedList<NamedList<Object>> df = (NamedList<NamedList<Object>>) info.get(\"facet_dates\");\n    if (df != null) {\n      // System.out.println(df);\n      _facetDates = new ArrayList<FacetField>( df.size() );\n      for (Map.Entry<String, NamedList<Object>> facet : df) {\n        // System.out.println(\"Key: \" + facet.getKey() + \" Value: \" + facet.getValue());\n        NamedList<Object> values = facet.getValue();\n        String gap = (String) values.get(\"gap\");\n        Date end = (Date) values.get(\"end\");\n        FacetField f = new FacetField(facet.getKey(), gap, end);\n        \n        for (Map.Entry<String, Object> entry : values)   {\n          try {\n            f.add(entry.getKey(), Long.parseLong(entry.getValue().toString()));\n          } catch (NumberFormatException e) {\n            //Ignore for non-number responses which are already handled above\n          }\n        }\n        \n        _facetDates.add(f);\n      }\n    }\n    \n    //Parse pivot facets\n    NamedList pf = (NamedList) info.get(\"facet_pivot\");\n    if (pf != null) {\n      _facetPivot = new NamedList<List<PivotField>>();\n      for( int i=0; i<pf.size(); i++ ) {\n        _facetPivot.add( pf.getName(i), readPivots( (List<NamedList>)pf.getVal(i) ) );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"059b719924df487a1e07827d66e5c832b583f4e8":["601c6168c1d70f05f7a6a2d8c7ad4ceb218f3541"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"601c6168c1d70f05f7a6a2d8c7ad4ceb218f3541":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["059b719924df487a1e07827d66e5c832b583f4e8","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","059b719924df487a1e07827d66e5c832b583f4e8"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["059b719924df487a1e07827d66e5c832b583f4e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["059b719924df487a1e07827d66e5c832b583f4e8"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["601c6168c1d70f05f7a6a2d8c7ad4ceb218f3541","059b719924df487a1e07827d66e5c832b583f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"059b719924df487a1e07827d66e5c832b583f4e8":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"601c6168c1d70f05f7a6a2d8c7ad4ceb218f3541":["059b719924df487a1e07827d66e5c832b583f4e8","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["601c6168c1d70f05f7a6a2d8c7ad4ceb218f3541","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}