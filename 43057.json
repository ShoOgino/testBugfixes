{"path":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","sourceNew":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","sourceOld":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","sourceNew":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","sourceOld":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","sourceNew":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","sourceOld":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7947ef57ebadfb891b1c694f0772d616987e57c8","date":1412445663,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","sourceNew":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  public static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","sourceOld":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ba0abe4039f82ecf2e5f879913f512e941dde81","date":1412520276,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","sourceNew":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  public static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","sourceOld":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  private static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#normalize(String).mjava","sourceNew":"  /**\n   * Trim the trailing '/' if it's there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  public static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","sourceOld":"  /**\n   * Trim the trailing '/' if its there, and convert null to empty string.\n   * \n   * we want:\n   *  /update/csv   and\n   *  /update/csv/\n   * to map to the same handler \n   * \n   */\n  public static String normalize( String p )\n  {\n    if(p == null) return \"\";\n    if( p.endsWith( \"/\" ) && p.length() > 1 )\n      return p.substring( 0, p.length()-1 );\n    \n    return p;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["7947ef57ebadfb891b1c694f0772d616987e57c8"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5ba0abe4039f82ecf2e5f879913f512e941dde81":["c26f00b574427b55127e869b935845554afde1fa","7947ef57ebadfb891b1c694f0772d616987e57c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"7947ef57ebadfb891b1c694f0772d616987e57c8":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["5ba0abe4039f82ecf2e5f879913f512e941dde81","7947ef57ebadfb891b1c694f0772d616987e57c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5ba0abe4039f82ecf2e5f879913f512e941dde81":[],"7947ef57ebadfb891b1c694f0772d616987e57c8":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","5ba0abe4039f82ecf2e5f879913f512e941dde81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","5ba0abe4039f82ecf2e5f879913f512e941dde81","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}