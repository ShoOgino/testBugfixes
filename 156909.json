{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) return getFromRowCache();\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = resolver.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimplCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"418d77836a1ba93781f1d48f1dc2fb16dd7fae0a","date":1217856027,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) return getFromRowCache();\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = resolver.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimpleCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) return getFromRowCache();\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = resolver.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimplCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"758fdd153bb361b47f22db79ace6af6f6b7b9330","date":1240213015,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = resolver.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimpleCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) return getFromRowCache();\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = resolver.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimpleCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"153cc06382fdc94d0ea3db127eab860ae4310525","date":1260181667,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = context.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimpleCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = resolver.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimpleCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = context.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimpleCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (dataSourceRowCache != null)\n      return getFromRowCacheTransformed();\n    if (!isFirst)\n      return null;\n    String query = context.replaceTokens(context.getEntityAttribute(\"query\"));\n    isFirst = false;\n    if (simpleCache != null) {\n      return getSimpleCacheData(query);\n    } else {\n      return getIdCacheData(query);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"418d77836a1ba93781f1d48f1dc2fb16dd7fae0a":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["418d77836a1ba93781f1d48f1dc2fb16dd7fae0a"],"ad94625fb8d088209f46650c8097196fec67f00c":["153cc06382fdc94d0ea3db127eab860ae4310525"],"153cc06382fdc94d0ea3db127eab860ae4310525":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["418d77836a1ba93781f1d48f1dc2fb16dd7fae0a"],"418d77836a1ba93781f1d48f1dc2fb16dd7fae0a":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["153cc06382fdc94d0ea3db127eab860ae4310525"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"153cc06382fdc94d0ea3db127eab860ae4310525":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}