{"path":"lucene/src/java/org/apache/lucene/index/codecs/PostingsReaderBase#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PostingsReaderBase#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"  /** Reads data for all terms in the next block; this\n   *  method should merely load the byte[] blob but not\n   *  decode, which is done in {@link #nextTerm}. */\n  public abstract void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState termState) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PostingsReaderBase#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"  /** Reads data for all terms in the next block; this\n   *  method should merely load the byte[] blob but not\n   *  decode, which is done in {@link #nextTerm}. */\n  public abstract void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState termState) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PostingsReaderBase#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"  /** Reads data for all terms in the next block; this\n   *  method should merely load the byte[] blob but not\n   *  decode, which is done in {@link #nextTerm}. */\n  public abstract void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState termState) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/PostingsReaderBase#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PostingsReaderBase#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  /** Reads data for all terms in the next block; this\n   *  method should merely load the byte[] blob but not\n   *  decode, which is done in {@link #nextTerm}. */\n  public abstract void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState termState) throws IOException;\n\n","sourceOld":"  /** Reads data for all terms in the next block; this\n   *  method should merely load the byte[] blob but not\n   *  decode, which is done in {@link #nextTerm}. */\n  public abstract void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState termState) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["29ef99d61cda9641b6250bf9567329a6e65f901d","a0ae5e3ed1232483b7b8a014f175a5fe43595982","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}