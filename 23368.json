{"path":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTypeTest#testCurrencySchema().mjava","commits":[{"id":"f107636c2cc82350a2607d774c092da5b73152e5","date":1498227268,"type":1,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTypeTest#testCurrencySchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testCurrencySchema().mjava","sourceNew":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n\n    SchemaField amount = schema.getField(fieldName);\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    CurrencyFieldType type = (CurrencyFieldType)amount.getType();\n    String currencyDynamicField\n        = \"*\" + (type instanceof CurrencyField ? FieldType.POLY_FIELD_SEPARATOR : \"\") + type.fieldSuffixCurrency;\n    String amountDynamicField \n        = \"*\" + (type instanceof CurrencyField ? FieldType.POLY_FIELD_SEPARATOR : \"\") + type.fieldSuffixAmountRaw;\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(amountDynamicField)) {\n        seenAmount = true;\n      }\n\n      if (dynField.getName().equals(currencyDynamicField)) {\n        seenCurrency = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field \" + currencyDynamicField, seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field \" + amountDynamicField, seenAmount);\n  }\n\n","sourceOld":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n\n    SchemaField amount = schema.getField(field());\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_CURRENCY)) {\n        seenCurrency = true;\n      }\n\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_AMOUNT_RAW)) {\n        seenAmount = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field\", seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field\", seenAmount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTypeTest#testCurrencySchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testCurrencySchema().mjava","sourceNew":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n\n    SchemaField amount = schema.getField(fieldName);\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    CurrencyFieldType type = (CurrencyFieldType)amount.getType();\n    String currencyDynamicField\n        = \"*\" + (type instanceof CurrencyField ? FieldType.POLY_FIELD_SEPARATOR : \"\") + type.fieldSuffixCurrency;\n    String amountDynamicField \n        = \"*\" + (type instanceof CurrencyField ? FieldType.POLY_FIELD_SEPARATOR : \"\") + type.fieldSuffixAmountRaw;\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(amountDynamicField)) {\n        seenAmount = true;\n      }\n\n      if (dynField.getName().equals(currencyDynamicField)) {\n        seenCurrency = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field \" + currencyDynamicField, seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field \" + amountDynamicField, seenAmount);\n  }\n\n","sourceOld":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n\n    SchemaField amount = schema.getField(field());\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_CURRENCY)) {\n        seenCurrency = true;\n      }\n\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_AMOUNT_RAW)) {\n        seenAmount = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field\", seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field\", seenAmount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTypeTest#testCurrencySchema().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n\n    SchemaField amount = schema.getField(fieldName);\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    CurrencyFieldType type = (CurrencyFieldType)amount.getType();\n    String currencyDynamicField\n        = \"*\" + (type instanceof CurrencyField ? FieldType.POLY_FIELD_SEPARATOR : \"\") + type.fieldSuffixCurrency;\n    String amountDynamicField \n        = \"*\" + (type instanceof CurrencyField ? FieldType.POLY_FIELD_SEPARATOR : \"\") + type.fieldSuffixAmountRaw;\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(amountDynamicField)) {\n        seenAmount = true;\n      }\n\n      if (dynField.getName().equals(currencyDynamicField)) {\n        seenCurrency = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field \" + currencyDynamicField, seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field \" + amountDynamicField, seenAmount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f107636c2cc82350a2607d774c092da5b73152e5"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f107636c2cc82350a2607d774c092da5b73152e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"f107636c2cc82350a2607d774c092da5b73152e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","f107636c2cc82350a2607d774c092da5b73152e5"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f107636c2cc82350a2607d774c092da5b73152e5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}