{"path":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#TrieRangeQuery(String,String,String,TrieUtils).mjava","commits":[{"id":"29191e6ce86bfcd231cd069834a87833fa4079c1","date":1228333111,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#TrieRangeQuery(String,String,String,TrieUtils).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Universal constructor (expert use only): Uses already trie-converted min/max values.\n\t * You can set <code>min</code> or <code>max</code> (but not both) to <code>null</code> to leave one bound open.\n\t */\n\tpublic TrieRangeQuery(final String field, final String min, final String max, final TrieUtils variant) {\n\t\tfilter=new TrieRangeFilter(field,min,max,variant);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef14ec05032a847f9ce1820055c6c29f72d771a","date":1231669514,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#TrieRangeQuery(String,String,String,TrieUtils).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#TrieRangeQuery(String,String,String,TrieUtils).mjava","sourceNew":"  /**\n   * Universal constructor (expert use only): Uses already trie-converted min/max values.\n   * You can set <code>min</code> or <code>max</code> (but not both) to <code>null</code> to leave one bound open.\n   */\n  public TrieRangeQuery(final String field, final String min, final String max, final TrieUtils variant) {\n    filter=new TrieRangeFilter(field,min,max,variant);\n  }\n\n","sourceOld":"\t/**\n\t * Universal constructor (expert use only): Uses already trie-converted min/max values.\n\t * You can set <code>min</code> or <code>max</code> (but not both) to <code>null</code> to leave one bound open.\n\t */\n\tpublic TrieRangeQuery(final String field, final String min, final String max, final TrieUtils variant) {\n\t\tfilter=new TrieRangeFilter(field,min,max,variant);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3625d65a5c7432d40b215d134ec5fc874be6387","date":1231708524,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#TrieRangeQuery(String,String,String,TrieUtils).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#TrieRangeQuery(String,String,String,TrieUtils).mjava","sourceNew":"  /**\n   * Universal constructor (expert use only): Uses already trie-converted min/max values.\n   * You can set <code>min</code> or <code>max</code> (but not both) to <code>null</code> to leave one bound open.\n   */\n  public TrieRangeQuery(final String field, final String min, final String max, final TrieUtils variant) {\n    super(new TrieRangeFilter(field,min,max,variant));\n  }\n\n","sourceOld":"  /**\n   * Universal constructor (expert use only): Uses already trie-converted min/max values.\n   * You can set <code>min</code> or <code>max</code> (but not both) to <code>null</code> to leave one bound open.\n   */\n  public TrieRangeQuery(final String field, final String min, final String max, final TrieUtils variant) {\n    filter=new TrieRangeFilter(field,min,max,variant);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e91724d755098f0c856c612bf56d1edc31044a82","date":1233069324,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#TrieRangeQuery(String,String,String,TrieUtils).mjava","sourceNew":null,"sourceOld":"  /**\n   * Universal constructor (expert use only): Uses already trie-converted min/max values.\n   * You can set <code>min</code> or <code>max</code> (but not both) to <code>null</code> to leave one bound open.\n   */\n  public TrieRangeQuery(final String field, final String min, final String max, final TrieUtils variant) {\n    super(new TrieRangeFilter(field,min,max,variant));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e91724d755098f0c856c612bf56d1edc31044a82":["b3625d65a5c7432d40b215d134ec5fc874be6387"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3625d65a5c7432d40b215d134ec5fc874be6387":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"29191e6ce86bfcd231cd069834a87833fa4079c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e91724d755098f0c856c612bf56d1edc31044a82"]},"commit2Childs":{"e91724d755098f0c856c612bf56d1edc31044a82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"b3625d65a5c7432d40b215d134ec5fc874be6387":["e91724d755098f0c856c612bf56d1edc31044a82"],"29191e6ce86bfcd231cd069834a87833fa4079c1":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["b3625d65a5c7432d40b215d134ec5fc874be6387"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}