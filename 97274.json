{"path":"src/java/org/apache/lucene/util/CharacterUtils#codePointAt(char[],int).mjava","commits":[{"id":"41ce0ce6485d29a241c4ca4b6179d14df6a66bae","date":1259357651,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/CharacterUtils#codePointAt(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the code point at the given index of the char array.\n   * Depending on the {@link Version} passed to\n   * {@link CharacterUtils#getInstance(Version)} this method mimics the behavior\n   * of {@link Character#codePointAt(char[], int)} as it would have been\n   * available on a Java 1.4 JVM or on a later virtual machine version.\n   * \n   * @param chars\n   *          a character array\n   * @param offset\n   *          the offset to the char values in the chars array to be converted\n   * \n   * @return the Unicode code point at the given index\n   * @throws NullPointerException\n   *           - if the array is null.\n   * @throws IndexOutOfBoundsException\n   *           - if the value offset is negative or not less than the length of\n   *           the char array.\n   */\n  public abstract int codePointAt(char[] chars, int offset);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/CharacterUtils#codePointAt(char[],int).mjava","pathOld":"src/java/org/apache/lucene/util/CharacterUtils#codePointAt(char[],int).mjava","sourceNew":"  /**\n   * Returns the code point at the given index of the char array.\n   * Depending on the {@link Version} passed to\n   * {@link CharacterUtils#getInstance(Version)} this method mimics the behavior\n   * of {@link Character#codePointAt(char[], int)} as it would have been\n   * available on a Java 1.4 JVM or on a later virtual machine version.\n   * \n   * @param chars\n   *          a character array\n   * @param offset\n   *          the offset to the char values in the chars array to be converted\n   * \n   * @return the Unicode code point at the given index\n   * @throws NullPointerException\n   *           - if the array is null.\n   * @throws IndexOutOfBoundsException\n   *           - if the value offset is negative or not less than the length of\n   *           the char array.\n   */\n  public abstract int codePointAt(final char[] chars, final int offset);\n\n","sourceOld":"  /**\n   * Returns the code point at the given index of the char array.\n   * Depending on the {@link Version} passed to\n   * {@link CharacterUtils#getInstance(Version)} this method mimics the behavior\n   * of {@link Character#codePointAt(char[], int)} as it would have been\n   * available on a Java 1.4 JVM or on a later virtual machine version.\n   * \n   * @param chars\n   *          a character array\n   * @param offset\n   *          the offset to the char values in the chars array to be converted\n   * \n   * @return the Unicode code point at the given index\n   * @throws NullPointerException\n   *           - if the array is null.\n   * @throws IndexOutOfBoundsException\n   *           - if the value offset is negative or not less than the length of\n   *           the char array.\n   */\n  public abstract int codePointAt(char[] chars, int offset);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/CharacterUtils#codePointAt(char[],int).mjava","pathOld":"src/java/org/apache/lucene/util/CharacterUtils#codePointAt(char[],int).mjava","sourceNew":"  /**\n   * Returns the code point at the given index of the char array.\n   * Depending on the {@link Version} passed to\n   * {@link CharacterUtils#getInstance(Version)} this method mimics the behavior\n   * of {@link Character#codePointAt(char[], int)} as it would have been\n   * available on a Java 1.4 JVM or on a later virtual machine version.\n   * \n   * @param chars\n   *          a character array\n   * @param offset\n   *          the offset to the char values in the chars array to be converted\n   * \n   * @return the Unicode code point at the given index\n   * @throws NullPointerException\n   *           - if the array is null.\n   * @throws IndexOutOfBoundsException\n   *           - if the value offset is negative or not less than the length of\n   *           the char array.\n   */\n  public abstract int codePointAt(final char[] chars, final int offset);\n\n","sourceOld":"  /**\n   * Returns the code point at the given index of the char array.\n   * Depending on the {@link Version} passed to\n   * {@link CharacterUtils#getInstance(Version)} this method mimics the behavior\n   * of {@link Character#codePointAt(char[], int)} as it would have been\n   * available on a Java 1.4 JVM or on a later virtual machine version.\n   * \n   * @param chars\n   *          a character array\n   * @param offset\n   *          the offset to the char values in the chars array to be converted\n   * \n   * @return the Unicode code point at the given index\n   * @throws NullPointerException\n   *           - if the array is null.\n   * @throws IndexOutOfBoundsException\n   *           - if the value offset is negative or not less than the length of\n   *           the char array.\n   */\n  public abstract int codePointAt(final char[] chars, final int offset);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}