{"path":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","commits":[{"id":"e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b","date":1406573123,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","pathOld":"/dev/null","sourceNew":"  private void blockAndDoRetries() {\n    servers.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2c6fae58725738008effbd9d848abc49122913fe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","sourceNew":"  private void blockAndDoRetries() {\n    clients.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","sourceOld":"  private void blockAndDoRetries() {\n    servers.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2c6fae58725738008effbd9d848abc49122913fe","date":1455911986,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","sourceNew":"  public void blockAndDoRetries() {\n    clients.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","sourceOld":"  private void blockAndDoRetries() {\n    clients.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","bugFix":["e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b"],"bugIntro":["482ca6c86d7073e3c19096bdc74fe0e73da4554a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"482ca6c86d7073e3c19096bdc74fe0e73da4554a","date":1576010743,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","sourceNew":"  public void blockAndDoRetries() throws IOException {\n    clients.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","sourceOld":"  public void blockAndDoRetries() {\n    clients.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","bugFix":["2c6fae58725738008effbd9d848abc49122913fe"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#blockAndDoRetries().mjava","sourceNew":"  public void blockAndDoRetries() throws IOException {\n    clients.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","sourceOld":"  public void blockAndDoRetries() {\n    clients.blockUntilFinished();\n    \n    // wait for any async commits to complete\n    while (pending != null && pending.size() > 0) {\n      Future<Object> future = null;\n      try {\n        future = completionService.take();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        log.error(\"blockAndDoRetries interrupted\", e);\n      }\n      if (future == null) break;\n      pending.remove(future);\n    }\n    doRetriesIfNeeded();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"482ca6c86d7073e3c19096bdc74fe0e73da4554a":["2c6fae58725738008effbd9d848abc49122913fe"],"a229cb50768e988c50a2106bdae3a92154f428bf":["2c6fae58725738008effbd9d848abc49122913fe","482ca6c86d7073e3c19096bdc74fe0e73da4554a"],"e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b"],"2c6fae58725738008effbd9d848abc49122913fe":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["482ca6c86d7073e3c19096bdc74fe0e73da4554a"]},"commit2Childs":{"482ca6c86d7073e3c19096bdc74fe0e73da4554a":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a229cb50768e988c50a2106bdae3a92154f428bf":[],"e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b"],"bafca15d8e408346a67f4282ad1143b88023893b":["2c6fae58725738008effbd9d848abc49122913fe"],"2c6fae58725738008effbd9d848abc49122913fe":["482ca6c86d7073e3c19096bdc74fe0e73da4554a","a229cb50768e988c50a2106bdae3a92154f428bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}