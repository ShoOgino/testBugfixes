{"path":"src/java/org/apache/lucene/index/DocFieldProcessorPerThread#getPerDoc().mjava","commits":[{"id":"99351c613f288821fa2b1fa505fe5cbab9ab0600","date":1247144008,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocFieldProcessorPerThread#getPerDoc().mjava","pathOld":"/dev/null","sourceNew":"  synchronized PerDoc getPerDoc() {\n    if (freeCount == 0) {\n      allocCount++;\n      if (allocCount > docFreeList.length) {\n        // Grow our free list up front to make sure we have\n        // enough space to recycle all outstanding PerDoc\n        // instances\n        assert allocCount == 1+docFreeList.length;\n        docFreeList = new PerDoc[ArrayUtil.getNextSize(allocCount)];\n      }\n      return new PerDoc();\n    } else\n      return docFreeList[--freeCount];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocFieldProcessorPerThread#getPerDoc().mjava","pathOld":"src/java/org/apache/lucene/index/DocFieldProcessorPerThread#getPerDoc().mjava","sourceNew":"  synchronized PerDoc getPerDoc() {\n    if (freeCount == 0) {\n      allocCount++;\n      if (allocCount > docFreeList.length) {\n        // Grow our free list up front to make sure we have\n        // enough space to recycle all outstanding PerDoc\n        // instances\n        assert allocCount == 1+docFreeList.length;\n        docFreeList = new PerDoc[ArrayUtil.oversize(allocCount, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n      }\n      return new PerDoc();\n    } else\n      return docFreeList[--freeCount];\n  }\n\n","sourceOld":"  synchronized PerDoc getPerDoc() {\n    if (freeCount == 0) {\n      allocCount++;\n      if (allocCount > docFreeList.length) {\n        // Grow our free list up front to make sure we have\n        // enough space to recycle all outstanding PerDoc\n        // instances\n        assert allocCount == 1+docFreeList.length;\n        docFreeList = new PerDoc[ArrayUtil.getNextSize(allocCount)];\n      }\n      return new PerDoc();\n    } else\n      return docFreeList[--freeCount];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessorPerThread#getPerDoc().mjava","pathOld":"src/java/org/apache/lucene/index/DocFieldProcessorPerThread#getPerDoc().mjava","sourceNew":"  synchronized PerDoc getPerDoc() {\n    if (freeCount == 0) {\n      allocCount++;\n      if (allocCount > docFreeList.length) {\n        // Grow our free list up front to make sure we have\n        // enough space to recycle all outstanding PerDoc\n        // instances\n        assert allocCount == 1+docFreeList.length;\n        docFreeList = new PerDoc[ArrayUtil.oversize(allocCount, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n      }\n      return new PerDoc();\n    } else\n      return docFreeList[--freeCount];\n  }\n\n","sourceOld":"  synchronized PerDoc getPerDoc() {\n    if (freeCount == 0) {\n      allocCount++;\n      if (allocCount > docFreeList.length) {\n        // Grow our free list up front to make sure we have\n        // enough space to recycle all outstanding PerDoc\n        // instances\n        assert allocCount == 1+docFreeList.length;\n        docFreeList = new PerDoc[ArrayUtil.oversize(allocCount, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n      }\n      return new PerDoc();\n    } else\n      return docFreeList[--freeCount];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99351c613f288821fa2b1fa505fe5cbab9ab0600":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["99351c613f288821fa2b1fa505fe5cbab9ab0600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"]},"commit2Childs":{"99351c613f288821fa2b1fa505fe5cbab9ab0600":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99351c613f288821fa2b1fa505fe5cbab9ab0600"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}