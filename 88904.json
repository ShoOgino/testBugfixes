{"path":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","commits":[{"id":"7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f","date":1427306546,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    return new Acc(getArg(), fcontext, numSlots);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    return new Acc(getArg(), fcontext, numSlots);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fa9270995767ab6c92b235a5a62267aa426f47d","date":1575523102,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","sourceNew":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    ValueSource vs = getArg();\n\n    if (vs instanceof FieldNameValueSource) {\n      String field = ((FieldNameValueSource) vs).getFieldName();\n      SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(field);\n      if (sf.getType().getNumberType() == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            name() + \" aggregation not supported for \" + sf.getType().getTypeName());\n      }\n      if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n        if (sf.hasDocValues()) {\n          if (sf.getType().isPointField()) {\n            return new PercentileSortedNumericAcc(fcontext, sf, numSlots);\n          }\n          return new PercentileSortedSetAcc(fcontext, sf, numSlots);\n        }\n        if (sf.getType().isPointField()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              name() + \" aggregation not supported for PointField w/o docValues\");\n        }\n        return new PercentileUnInvertedFieldAcc(fcontext, sf, numSlots);\n      }\n      vs = sf.getType().getValueSource(sf, null);\n    }\n    return new Acc(vs, fcontext, numSlots);\n  }\n\n","sourceOld":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    return new Acc(getArg(), fcontext, numSlots);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a90f561fc609ec007ba18b10dea9191dbbd71831","date":1575541054,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","sourceNew":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    ValueSource vs = getArg();\n\n    if (vs instanceof FieldNameValueSource) {\n      String field = ((FieldNameValueSource) vs).getFieldName();\n      SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(field);\n      if (sf.getType().getNumberType() == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            name() + \" aggregation not supported for \" + sf.getType().getTypeName());\n      }\n      if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n        if (sf.hasDocValues()) {\n          if (sf.getType().isPointField()) {\n            return new PercentileSortedNumericAcc(fcontext, sf, numSlots);\n          }\n          return new PercentileSortedSetAcc(fcontext, sf, numSlots);\n        }\n        if (sf.getType().isPointField()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              name() + \" aggregation not supported for PointField w/o docValues\");\n        }\n        return new PercentileUnInvertedFieldAcc(fcontext, sf, numSlots);\n      }\n      vs = sf.getType().getValueSource(sf, null);\n    }\n    return new Acc(vs, fcontext, numSlots);\n  }\n\n","sourceOld":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    return new Acc(getArg(), fcontext, numSlots);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c841e27891873cab110ebeb89f124a8ec470176","date":1586527220,"type":5,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,long,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg#createSlotAcc(FacetContext,int,int).mjava","sourceNew":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, long numDocs, int numSlots) throws IOException {\n    ValueSource vs = getArg();\n\n    if (vs instanceof FieldNameValueSource) {\n      String field = ((FieldNameValueSource) vs).getFieldName();\n      SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(field);\n      if (sf.getType().getNumberType() == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            name() + \" aggregation not supported for \" + sf.getType().getTypeName());\n      }\n      if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n        if (sf.hasDocValues()) {\n          if (sf.getType().isPointField()) {\n            return new PercentileSortedNumericAcc(fcontext, sf, numSlots);\n          }\n          return new PercentileSortedSetAcc(fcontext, sf, numSlots);\n        }\n        if (sf.getType().isPointField()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              name() + \" aggregation not supported for PointField w/o docValues\");\n        }\n        return new PercentileUnInvertedFieldAcc(fcontext, sf, numSlots);\n      }\n      vs = sf.getType().getValueSource(sf, null);\n    }\n    return new Acc(vs, fcontext, numSlots);\n  }\n\n","sourceOld":"  @Override\n  public SlotAcc createSlotAcc(FacetContext fcontext, int numDocs, int numSlots) throws IOException {\n    ValueSource vs = getArg();\n\n    if (vs instanceof FieldNameValueSource) {\n      String field = ((FieldNameValueSource) vs).getFieldName();\n      SchemaField sf = fcontext.qcontext.searcher().getSchema().getField(field);\n      if (sf.getType().getNumberType() == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            name() + \" aggregation not supported for \" + sf.getType().getTypeName());\n      }\n      if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n        if (sf.hasDocValues()) {\n          if (sf.getType().isPointField()) {\n            return new PercentileSortedNumericAcc(fcontext, sf, numSlots);\n          }\n          return new PercentileSortedSetAcc(fcontext, sf, numSlots);\n        }\n        if (sf.getType().isPointField()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              name() + \" aggregation not supported for PointField w/o docValues\");\n        }\n        return new PercentileUnInvertedFieldAcc(fcontext, sf, numSlots);\n      }\n      vs = sf.getType().getValueSource(sf, null);\n    }\n    return new Acc(vs, fcontext, numSlots);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1c841e27891873cab110ebeb89f124a8ec470176":["2fa9270995767ab6c92b235a5a62267aa426f47d"],"2fa9270995767ab6c92b235a5a62267aa426f47d":["7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f"],"7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a90f561fc609ec007ba18b10dea9191dbbd71831":["7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f","2fa9270995767ab6c92b235a5a62267aa426f47d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c841e27891873cab110ebeb89f124a8ec470176"]},"commit2Childs":{"1c841e27891873cab110ebeb89f124a8ec470176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fa9270995767ab6c92b235a5a62267aa426f47d":["1c841e27891873cab110ebeb89f124a8ec470176","a90f561fc609ec007ba18b10dea9191dbbd71831"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f":["2fa9270995767ab6c92b235a5a62267aa426f47d","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a90f561fc609ec007ba18b10dea9191dbbd71831"],"a90f561fc609ec007ba18b10dea9191dbbd71831":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a90f561fc609ec007ba18b10dea9191dbbd71831","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}