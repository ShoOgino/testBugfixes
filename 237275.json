{"path":"lucene/core/src/test/org/apache/lucene/util/TestMaxFailuresRule.Nested2#testLeaveZombie().mjava","commits":[{"id":"18bf84f26e85b274460f472a6e42de37fda19f7c","date":1396602216,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestMaxFailuresRule.Nested2#testLeaveZombie().mjava","pathOld":"/dev/null","sourceNew":"    @Repeat(iterations = TOTAL_ITERS)\n    public void testLeaveZombie() {\n      if (++testNum == 2) {\n        zombie = new Thread() {\n          @Override\n          public void run() {\n            while (true) {\n              try {\n                die.await();\n                return;\n              } catch (Exception e) { /* ignore */ }\n            }\n          }\n        };\n        zombie.start();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestMaxFailuresRule.Nested2#testLeaveZombie().mjava","pathOld":"/dev/null","sourceNew":"    @Repeat(iterations = TOTAL_ITERS)\n    public void testLeaveZombie() {\n      if (++testNum == 2) {\n        zombie = new Thread() {\n          @Override\n          public void run() {\n            while (true) {\n              try {\n                die.await();\n                return;\n              } catch (Exception e) { /* ignore */ }\n            }\n          }\n        };\n        zombie.start();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/util/TestMaxFailuresRule.Nested2#testLeaveZombie().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestMaxFailuresRule.Nested2#testLeaveZombie().mjava","sourceNew":"    @Repeat(iterations = TOTAL_ITERS)\n    public void testLeaveZombie() {\n      if (++testNum == 2) {\n        zombie = new Thread() {\n          @Override\n          public void run() {\n            while (true) {\n              try {\n                die.await();\n                return;\n              } catch (Exception e) { /* ignore */ }\n            }\n          }\n        };\n        zombie.start();\n      }\n    }\n\n","sourceOld":"    @Repeat(iterations = TOTAL_ITERS)\n    public void testLeaveZombie() {\n      if (++testNum == 2) {\n        zombie = new Thread() {\n          @Override\n          public void run() {\n            while (true) {\n              try {\n                die.await();\n                return;\n              } catch (Exception e) { /* ignore */ }\n            }\n          }\n        };\n        zombie.start();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18bf84f26e85b274460f472a6e42de37fda19f7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","18bf84f26e85b274460f472a6e42de37fda19f7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["18bf84f26e85b274460f472a6e42de37fda19f7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"18bf84f26e85b274460f472a6e42de37fda19f7c":["5eb2511ababf862ea11e10761c70ee560cd84510","b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["18bf84f26e85b274460f472a6e42de37fda19f7c","5eb2511ababf862ea11e10761c70ee560cd84510"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}