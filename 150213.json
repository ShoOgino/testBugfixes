{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable.SolrQueryable#query(List[Map.Entry[String,Class]],String,List[Pair[String,String]],List[String],List[Pair[String,String]],String,String,String).mjava","commits":[{"id":"d5cb41f0427fb7a75b0bfefe992561738c11fd80","date":1486576891,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable.SolrQueryable#query(List[Map.Entry[String,Class]],String,List[Pair[String,String]],List[String],List[Pair[String,String]],String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable.SolrQueryable#query(List[Map.Entry[String,Class]],String,List[Pair[String,String]],List[String],List[Pair[String,String]],String,String).mjava","sourceNew":"    /** Called via code-generation.\n     *\n     * @see SolrMethod#SOLR_QUERYABLE_QUERY\n     */\n    @SuppressWarnings(\"UnusedDeclaration\")\n    public Enumerable<Object> query(List<Map.Entry<String, Class>> fields, String query, List<Pair<String, String>> order,\n                                    List<String> buckets, List<Pair<String, String>> metricPairs, String limit, String negativeQuery, String havingPredicate) {\n      return getTable().query(getProperties(), fields, query, order, buckets, metricPairs, limit, negativeQuery, havingPredicate);\n    }\n\n","sourceOld":"    /** Called via code-generation.\n     *\n     * @see SolrMethod#SOLR_QUERYABLE_QUERY\n     */\n    @SuppressWarnings(\"UnusedDeclaration\")\n    public Enumerable<Object> query(List<Map.Entry<String, Class>> fields, String query, List<Pair<String, String>> order,\n                                    List<String> buckets, List<Pair<String, String>> metricPairs, String limit, String negativeQuery) {\n      return getTable().query(getProperties(), fields, query, order, buckets, metricPairs, limit, negativeQuery);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":0,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable.SolrQueryable#query(List[Map.Entry[String,Class]],String,List[Pair[String,String]],List[String],List[Pair[String,String]],String,String,String).mjava","pathOld":"/dev/null","sourceNew":"    /** Called via code-generation.\n     *\n     * @see SolrMethod#SOLR_QUERYABLE_QUERY\n     */\n    @SuppressWarnings(\"UnusedDeclaration\")\n    public Enumerable<Object> query(List<Map.Entry<String, Class>> fields, String query, List<Pair<String, String>> order,\n                                    List<String> buckets, List<Pair<String, String>> metricPairs, String limit, String negativeQuery, String havingPredicate) {\n      return getTable().query(getProperties(), fields, query, order, buckets, metricPairs, limit, negativeQuery, havingPredicate);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable.SolrQueryable#query(List[Map.Entry[String,Class]],String,List[Pair[String,String]],List[String],List[Pair[String,String]],String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable.SolrQueryable#query(List[Map.Entry[String,Class]],String,List[Pair[String,String]],List[String],List[Pair[String,String]],String,String,String).mjava","sourceNew":"    /** Called via code-generation.\n     *\n     * @see SolrMethod#SOLR_QUERYABLE_QUERY\n     */\n    @SuppressWarnings({\"rawtypes\",\"UnusedDeclaration\"})\n    public Enumerable<Object> query(List<Map.Entry<String, Class>> fields, String query, List<Pair<String, String>> order,\n                                    List<String> buckets, List<Pair<String, String>> metricPairs, String limit, String negativeQuery, String havingPredicate) {\n      return getTable().query(getProperties(), fields, query, order, buckets, metricPairs, limit, negativeQuery, havingPredicate);\n    }\n\n","sourceOld":"    /** Called via code-generation.\n     *\n     * @see SolrMethod#SOLR_QUERYABLE_QUERY\n     */\n    @SuppressWarnings(\"UnusedDeclaration\")\n    public Enumerable<Object> query(List<Map.Entry<String, Class>> fields, String query, List<Pair<String, String>> order,\n                                    List<String> buckets, List<Pair<String, String>> metricPairs, String limit, String negativeQuery, String havingPredicate) {\n      return getTable().query(getProperties(), fields, query, order, buckets, metricPairs, limit, negativeQuery, havingPredicate);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d5cb41f0427fb7a75b0bfefe992561738c11fd80"],"d5cb41f0427fb7a75b0bfefe992561738c11fd80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"d5cb41f0427fb7a75b0bfefe992561738c11fd80":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","d5cb41f0427fb7a75b0bfefe992561738c11fd80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}