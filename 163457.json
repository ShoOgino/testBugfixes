{"path":"solr/core/src/test/org/apache/solr/security/TestPKIAuthenticationPlugin#run(String,Runnable).mjava","commits":[{"id":"cf05ac8412c363312f1070705c3172ad940ffc23","date":1488450006,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/TestPKIAuthenticationPlugin#run(String,Runnable).mjava","pathOld":"/dev/null","sourceNew":"  private void run(String expected, Runnable r) throws Exception {\n    int failures = 0;\n    for (; ; ) {\n      r.run();\n      if (expected == null) {\n        assertTrue(wrappedRequestByFilter.get() == null || ((HttpServletRequest) wrappedRequestByFilter.get()).getUserPrincipal() == null);\n      } else {\n        assertNotNull(wrappedRequestByFilter.get());\n        if (((HttpServletRequest) wrappedRequestByFilter.get()).getUserPrincipal() == null) {\n          //may be timed out\n          if (++failures < 3) continue;\n          else\n            fail(\"No principal obtained\");\n        }\n        assertEquals(expected, ((HttpServletRequest) wrappedRequestByFilter.get()).getUserPrincipal().getName());\n      }\n      return;\n\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc09d2901360848cecc5b598c25edcb51367d89","date":1488606177,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/security/TestPKIAuthenticationPlugin#run(String,Runnable).mjava","sourceNew":null,"sourceOld":"  private void run(String expected, Runnable r) throws Exception {\n    int failures = 0;\n    for (; ; ) {\n      r.run();\n      if (expected == null) {\n        assertTrue(wrappedRequestByFilter.get() == null || ((HttpServletRequest) wrappedRequestByFilter.get()).getUserPrincipal() == null);\n      } else {\n        assertNotNull(wrappedRequestByFilter.get());\n        if (((HttpServletRequest) wrappedRequestByFilter.get()).getUserPrincipal() == null) {\n          //may be timed out\n          if (++failures < 3) continue;\n          else\n            fail(\"No principal obtained\");\n        }\n        assertEquals(expected, ((HttpServletRequest) wrappedRequestByFilter.get()).getUserPrincipal().getName());\n      }\n      return;\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc09d2901360848cecc5b598c25edcb51367d89":["cf05ac8412c363312f1070705c3172ad940ffc23"],"cf05ac8412c363312f1070705c3172ad940ffc23":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cc09d2901360848cecc5b598c25edcb51367d89"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf05ac8412c363312f1070705c3172ad940ffc23"],"4cc09d2901360848cecc5b598c25edcb51367d89":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf05ac8412c363312f1070705c3172ad940ffc23":["4cc09d2901360848cecc5b598c25edcb51367d89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}