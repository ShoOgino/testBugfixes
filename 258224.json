{"path":"src/java/org/apache/solr/util/TestHarness#validateQuery(SolrQueryRequest,String...).mjava","commits":[{"id":"f66f1826f07774581d2ec661444fc987bdd1a85d","date":1144730206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#validateQuery(SolrQueryRequest,String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validates a \"query\" response against an array of XPath test strings\n   *\n   * @param req the Query to process\n   * @return null if all good, otherwise the first test that fails.\n   * @exception Exception any exception in the response.\n   * @exception IOException if there is a problem writing the XML\n   * @see LocalSolrQueryRequest\n   */\n  public String validateQuery(SolrQueryRequest req, String... tests)\n    throws IOException, Exception {\n                \n    String res = query(req);\n    return validateXPath(res, tests);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#validateQuery(SolrQueryRequest,String...).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#validateQuery(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * Validates a \"query\" response against an array of XPath test strings\n   *\n   * @param req the Query to process\n   * @return null if all good, otherwise the first test that fails.\n   * @exception Exception any exception in the response.\n   * @exception IOException if there is a problem writing the XML\n   * @see LocalSolrQueryRequest\n   */\n  public String validateQuery(SolrQueryRequest req, String... tests)\n    throws IOException, Exception {\n                \n    String res = query(req);\n    return validateXPath(res, tests);\n  }\n\n","sourceOld":"  /**\n   * Validates a \"query\" response against an array of XPath test strings\n   *\n   * @param req the Query to process\n   * @return null if all good, otherwise the first test that fails.\n   * @exception Exception any exception in the response.\n   * @exception IOException if there is a problem writing the XML\n   * @see LocalSolrQueryRequest\n   */\n  public String validateQuery(SolrQueryRequest req, String... tests)\n    throws IOException, Exception {\n                \n    String res = query(req);\n    return validateXPath(res, tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f66f1826f07774581d2ec661444fc987bdd1a85d":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}