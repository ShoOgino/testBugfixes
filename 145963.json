{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, SepCodec.SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"108e81824177a1a9f2507addadb8894e1cdf9afc","date":1280934266,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16c697f6ca5cdc82f918f753317a4ac9c70d259f","date":1289840486,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", SepCodec.SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe","date":1294227869,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    state.flushedFiles.add(docFileName);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      state.flushedFiles.add(frqFileName);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      state.flushedFiles.add(posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      state.flushedFiles.add(payloadFileName);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    state.flushedFiles.add(skipFileName);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aff28d83336d21b964812b94574b7e8cea46a3cc","date":1297437050,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    // TODO: -- abstraction violation\n    skipListWriter = new SepSkipListWriter(state.skipInterval,\n                                           state.maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n\n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n    final String codecIdAsString = state.codecIdAsString();\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbf673cc117fc27d2c820811d2a886119346b0c9","date":1302615417,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    this(state, factory, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    this(state, factory, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    this(state, factory, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n    final String codecIdAsString = state.codecIdAsString();\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, codecIdAsString, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    this(state, factory, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    super();\n\n    final String docFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, DOC_EXTENSION);\n    docOut = factory.createOutput(state.directory, docFileName);\n    docIndex = docOut.index();\n\n    if (state.fieldInfos.hasProx()) {\n      final String frqFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, FREQ_EXTENSION);\n      freqOut = factory.createOutput(state.directory, frqFileName);\n      freqIndex = freqOut.index();\n\n      final String posFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, POS_EXTENSION);\n      posOut = factory.createOutput(state.directory, posFileName);\n      posIndex = posOut.index();\n\n      // TODO: -- only if at least one field stores payloads?\n      final String payloadFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, PAYLOAD_EXTENSION);\n      payloadOut = state.directory.createOutput(payloadFileName);\n\n    } else {\n      freqOut = null;\n      freqIndex = null;\n      posOut = null;\n      posIndex = null;\n      payloadOut = null;\n    }\n\n    final String skipFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, SKIP_EXTENSION);\n    skipOut = state.directory.createOutput(skipFileName);\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new SepSkipListWriter(skipInterval,\n                                           maxSkipLevels,\n                                           state.numDocs,\n                                           freqOut, docOut,\n                                           posOut, payloadOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriter#SepPostingsWriter(SegmentWriteState,IntStreamFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#SepPostingsWriterImpl(SegmentWriteState,IntStreamFactory).mjava","sourceNew":"  public SepPostingsWriter(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    this(state, factory, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public SepPostingsWriterImpl(SegmentWriteState state, IntStreamFactory factory) throws IOException {\n    this(state, factory, DEFAULT_SKIP_INTERVAL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["70ad682703b8585f5d0a637efec044d57ec05efb","aff28d83336d21b964812b94574b7e8cea46a3cc"],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["108e81824177a1a9f2507addadb8894e1cdf9afc"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["108e81824177a1a9f2507addadb8894e1cdf9afc","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"108e81824177a1a9f2507addadb8894e1cdf9afc":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","fbf673cc117fc27d2c820811d2a886119346b0c9"],"fbf673cc117fc27d2c820811d2a886119346b0c9":["aff28d83336d21b964812b94574b7e8cea46a3cc"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","fbf673cc117fc27d2c820811d2a886119346b0c9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["fbf673cc117fc27d2c820811d2a886119346b0c9"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","aff28d83336d21b964812b94574b7e8cea46a3cc"],"a3776dccca01c11e7046323cfad46a3b4a471233":["aff28d83336d21b964812b94574b7e8cea46a3cc","fbf673cc117fc27d2c820811d2a886119346b0c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","aff28d83336d21b964812b94574b7e8cea46a3cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["70ad682703b8585f5d0a637efec044d57ec05efb"],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["f1bdbf92da222965b46c0a942c3857ba56e5c638","fbf673cc117fc27d2c820811d2a886119346b0c9","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"108e81824177a1a9f2507addadb8894e1cdf9afc":["16c697f6ca5cdc82f918f753317a4ac9c70d259f","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"fbf673cc117fc27d2c820811d2a886119346b0c9":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","60ba444201d2570214b6fcf1d15600dc1a01f548","a3776dccca01c11e7046323cfad46a3b4a471233"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["108e81824177a1a9f2507addadb8894e1cdf9afc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["70ad682703b8585f5d0a637efec044d57ec05efb","aff28d83336d21b964812b94574b7e8cea46a3cc","868da859b43505d9d2a023bfeae6dd0c795f5295"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}