{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#setBasicAuth(DefaultHttpClient,String,String).mjava","commits":[{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#setBasicAuth(DefaultHttpClient,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set http basic auth information. If basicAuthUser or basicAuthPass is null\n   * the basic auth configuration is cleared. Currently this is not preemtive\n   * authentication. So it is not currently possible to do a post request while\n   * using this setting.\n   */\n  public static void setBasicAuth(DefaultHttpClient httpClient,\n      String basicAuthUser, String basicAuthPass) {\n    if (basicAuthUser != null && basicAuthPass != null) {\n      httpClient.getCredentialsProvider().setCredentials(AuthScope.ANY,\n          new UsernamePasswordCredentials(basicAuthUser, basicAuthPass));\n    } else {\n      httpClient.getCredentialsProvider().clear();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#setBasicAuth(DefaultHttpClient,String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Set http basic auth information. If basicAuthUser or basicAuthPass is null\n   * the basic auth configuration is cleared. Currently this is not preemtive\n   * authentication. So it is not currently possible to do a post request while\n   * using this setting.\n   */\n  public static void setBasicAuth(DefaultHttpClient httpClient,\n      String basicAuthUser, String basicAuthPass) {\n    if (basicAuthUser != null && basicAuthPass != null) {\n      httpClient.getCredentialsProvider().setCredentials(AuthScope.ANY,\n          new UsernamePasswordCredentials(basicAuthUser, basicAuthPass));\n    } else {\n      httpClient.getCredentialsProvider().clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"859081acf00749f5dd462772c571d611d4a4d2db":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eb99886ff640d94edb43e0d36112a2b7023379ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["859081acf00749f5dd462772c571d611d4a4d2db"]},"commit2Childs":{"859081acf00749f5dd462772c571d611d4a4d2db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["859081acf00749f5dd462772c571d611d4a4d2db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}