{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","commits":[{"id":"33f2d1e8136b83c8ce1ec5a28df9b325b02e3441","date":1274361792,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase(Locale.ENGLISH);\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase(Locale.ENGLISH);\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase(Locale.ENGLISH);\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase(Locale.ENGLISH);\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["33f2d1e8136b83c8ce1ec5a28df9b325b02e3441"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33f2d1e8136b83c8ce1ec5a28df9b325b02e3441":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33f2d1e8136b83c8ce1ec5a28df9b325b02e3441"],"33f2d1e8136b83c8ce1ec5a28df9b325b02e3441":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}