{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score().mjava","sourceNew":"  /** Determine the current document score.  Initially invalid, until {@link #nextDoc()} is called the first time.\n   * @return the score of the current generated document\n   */\n  @Override\n  public float score() throws IOException {\n    int doc = subScorers[0].docID();\n    scoreSum = scoreMax = subScorers[0].score();\n    int size = numScorers;\n    scoreAll(1, size, doc);\n    scoreAll(2, size, doc);\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier;\n  }\n\n","sourceOld":"  /** Determine the current document score.  Initially invalid, until {@link #nextDoc()} is called the first time.\n   * @return the score of the current generated document\n   */\n  @Override\n  public float score() throws IOException {\n    int doc = subScorers[0].docID();\n    scoreSum = scoreMax = subScorers[0].score();\n    int size = numScorers;\n    scoreAll(1, size, doc);\n    scoreAll(2, size, doc);\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e354c63cdcc974a17c9f8531cecc001229c0952","date":1365702197,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score().mjava","sourceNew":"  /** Determine the current document score.  Initially invalid, until {@link #nextDoc()} is called the first time.\n   * @return the score of the current generated document\n   */\n  @Override\n  public float score() throws IOException {\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier;\n  }\n\n","sourceOld":"  /** Determine the current document score.  Initially invalid, until {@link #nextDoc()} is called the first time.\n   * @return the score of the current generated document\n   */\n  @Override\n  public float score() throws IOException {\n    int doc = subScorers[0].docID();\n    scoreSum = scoreMax = subScorers[0].score();\n    int size = numScorers;\n    scoreAll(1, size, doc);\n    scoreAll(2, size, doc);\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a74e723ad6f1491f36039f9fe6af13a530f8135d","date":1400774466,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score().mjava","sourceNew":null,"sourceOld":"  /** Determine the current document score.  Initially invalid, until {@link #nextDoc()} is called the first time.\n   * @return the score of the current generated document\n   */\n  @Override\n  public float score() throws IOException {\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a74e723ad6f1491f36039f9fe6af13a530f8135d":["0e354c63cdcc974a17c9f8531cecc001229c0952"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e354c63cdcc974a17c9f8531cecc001229c0952":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a74e723ad6f1491f36039f9fe6af13a530f8135d"]},"commit2Childs":{"a74e723ad6f1491f36039f9fe6af13a530f8135d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0e354c63cdcc974a17c9f8531cecc001229c0952"],"0e354c63cdcc974a17c9f8531cecc001229c0952":["a74e723ad6f1491f36039f9fe6af13a530f8135d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}