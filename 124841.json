{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterThreadsToSegments.CheckSegmentCount#CheckSegmentCount(IndexWriter,AtomicInteger,AtomicInteger).mjava","commits":[{"id":"06663b933cd6a92982d79726136b07915bc86aef","date":1399473227,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterThreadsToSegments.CheckSegmentCount#CheckSegmentCount(IndexWriter,AtomicInteger,AtomicInteger).mjava","pathOld":"/dev/null","sourceNew":"    public CheckSegmentCount(IndexWriter w, AtomicInteger maxThreadCountPerIter, AtomicInteger indexingCount) throws IOException {\n      this.w = w;\n      this.maxThreadCountPerIter = maxThreadCountPerIter;\n      this.indexingCount = indexingCount;\n      r = DirectoryReader.open(w, true);\n      assertEquals(0, r.leaves().size());\n      setNextIterThreadCount();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterThreadsToSegments.CheckSegmentCount#CheckSegmentCount(IndexWriter,AtomicInteger,AtomicInteger).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterThreadsToSegments.CheckSegmentCount#CheckSegmentCount(IndexWriter,AtomicInteger,AtomicInteger).mjava","sourceNew":"    public CheckSegmentCount(IndexWriter w, AtomicInteger maxThreadCountPerIter, AtomicInteger indexingCount) throws IOException {\n      this.w = w;\n      this.maxThreadCountPerIter = maxThreadCountPerIter;\n      this.indexingCount = indexingCount;\n      r = DirectoryReader.open(w);\n      assertEquals(0, r.leaves().size());\n      setNextIterThreadCount();\n    }\n\n","sourceOld":"    public CheckSegmentCount(IndexWriter w, AtomicInteger maxThreadCountPerIter, AtomicInteger indexingCount) throws IOException {\n      this.w = w;\n      this.maxThreadCountPerIter = maxThreadCountPerIter;\n      this.indexingCount = indexingCount;\n      r = DirectoryReader.open(w, true);\n      assertEquals(0, r.leaves().size());\n      setNextIterThreadCount();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["06663b933cd6a92982d79726136b07915bc86aef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a1862266772deb28cdcb7d996b64d2177022687"],"06663b933cd6a92982d79726136b07915bc86aef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06663b933cd6a92982d79726136b07915bc86aef"],"06663b933cd6a92982d79726136b07915bc86aef":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}