{"path":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testDateMathParsingEquality().mjava","commits":[{"id":"d0fad4c5c26f8a062d31d59ceb5ea2dc3ca38aef","date":1363025664,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testDateMathParsingEquality().mjava","pathOld":"/dev/null","sourceNew":"  public void testDateMathParsingEquality() throws Exception {\n    // regardless of parser, these should all be equivilent queries\n    assertQueryEquals\n      (null\n       ,\"{!lucene}f_tdt:2013-09-11T00\\\\:00\\\\:00Z\"\n       ,\"{!lucene}f_tdt:2013-03-08T00\\\\:46\\\\:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!lucene}f_tdt:\\\"2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\\\"\"\n       ,\"{!field f=f_tdt}2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!field f=f_tdt}2013-09-11T00:00:00Z\"\n       ,\"{!term f=f_tdt}2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!term f=f_tdt}2013-09-11T00:00:00Z\"\n       );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e61540be19d0ddb84d1621b0174ad51dae25f08d","date":1368465783,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testDateMathParsingEquality().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testDateMathParsingEquality().mjava","sourceNew":"  public void testDateMathParsingEquality() throws Exception {\n    // regardless of parser, these should all be equivalent queries\n    assertQueryEquals\n      (null\n       ,\"{!lucene}f_tdt:2013-09-11T00\\\\:00\\\\:00Z\"\n       ,\"{!lucene}f_tdt:2013-03-08T00\\\\:46\\\\:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!lucene}f_tdt:\\\"2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\\\"\"\n       ,\"{!field f=f_tdt}2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!field f=f_tdt}2013-09-11T00:00:00Z\"\n       ,\"{!term f=f_tdt}2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!term f=f_tdt}2013-09-11T00:00:00Z\"\n       );\n\n  }\n\n","sourceOld":"  public void testDateMathParsingEquality() throws Exception {\n    // regardless of parser, these should all be equivilent queries\n    assertQueryEquals\n      (null\n       ,\"{!lucene}f_tdt:2013-09-11T00\\\\:00\\\\:00Z\"\n       ,\"{!lucene}f_tdt:2013-03-08T00\\\\:46\\\\:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!lucene}f_tdt:\\\"2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\\\"\"\n       ,\"{!field f=f_tdt}2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!field f=f_tdt}2013-09-11T00:00:00Z\"\n       ,\"{!term f=f_tdt}2013-03-08T00:46:15Z/DAY+6MONTHS+3DAYS\"\n       ,\"{!term f=f_tdt}2013-09-11T00:00:00Z\"\n       );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e61540be19d0ddb84d1621b0174ad51dae25f08d":["d0fad4c5c26f8a062d31d59ceb5ea2dc3ca38aef"],"d0fad4c5c26f8a062d31d59ceb5ea2dc3ca38aef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e61540be19d0ddb84d1621b0174ad51dae25f08d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0fad4c5c26f8a062d31d59ceb5ea2dc3ca38aef"],"e61540be19d0ddb84d1621b0174ad51dae25f08d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0fad4c5c26f8a062d31d59ceb5ea2dc3ca38aef":["e61540be19d0ddb84d1621b0174ad51dae25f08d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}