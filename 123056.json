{"path":"src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","commits":[{"id":"920a0686ed72437773f441d7d5088d3aff98f6cb","date":1250805909,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"/dev/null","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg==null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class || f.getType().getClass() == LegacyDateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa4607364a2fc156ffb717ddc21d860e466ac7fd","date":1258218641,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class || f.getType().getClass() == LegacyDateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg==null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class || f.getType().getClass() == LegacyDateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class || f.getType().getClass() == LegacyDateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class || f.getType().getClass() == LegacyDateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["aa4607364a2fc156ffb717ddc21d860e466ac7fd"],"aa4607364a2fc156ffb717ddc21d860e466ac7fd":["920a0686ed72437773f441d7d5088d3aff98f6cb"],"920a0686ed72437773f441d7d5088d3aff98f6cb":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["920a0686ed72437773f441d7d5088d3aff98f6cb"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"aa4607364a2fc156ffb717ddc21d860e466ac7fd":["ad94625fb8d088209f46650c8097196fec67f00c"],"920a0686ed72437773f441d7d5088d3aff98f6cb":["aa4607364a2fc156ffb717ddc21d860e466ac7fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}