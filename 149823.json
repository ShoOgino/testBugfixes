{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,Class[#-extends-Number]).mjava","commits":[{"id":"067bb525d2e4993889147c508e2ccb5158f409b1","date":1457385185,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,Class[#-extends-Number]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,LegacyNumericType).mjava","sourceNew":"    Field getNumericField(String name, Class<? extends Number> numericType) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        if (numericType.equals(Integer.class)) {\n          f = new IntPoint(name, 0);\n        } else if (numericType.equals(Long.class)) {\n          f = new LongPoint(name, 0L);\n        } else if (numericType.equals(Float.class)) {\n          f = new FloatPoint(name, 0.0F);\n        } else if (numericType.equals(Double.class)) {\n          f = new DoublePoint(name, 0.0);\n        } else {\n          throw new UnsupportedOperationException(\"Unsupported numeric type: \" + numericType);\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","sourceOld":"    Field getNumericField(String name, LegacyNumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new LegacyIntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LegacyLongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new LegacyFloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new LegacyDoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          throw new AssertionError(\"Cannot get here\");\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"067bb525d2e4993889147c508e2ccb5158f409b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["067bb525d2e4993889147c508e2ccb5158f409b1"]},"commit2Childs":{"067bb525d2e4993889147c508e2ccb5158f409b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["067bb525d2e4993889147c508e2ccb5158f409b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}