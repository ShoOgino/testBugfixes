{"path":"src/java/org/apache/solr/util/TestHarness#validateErrorUpdate(String).mjava","commits":[{"id":"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22","date":1177887783,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#validateErrorUpdate(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validates that an \"update\" (add, commit or optimize) results in success.\n   *\n   * :TODO: currently only deals with one add/doc at a time, this will need changed if/when SOLR-2 is resolved\n   * \n   * @param xml The XML of the update\n   * @return null if succesful, otherwise the XML response to the update\n   */\n  public String validateErrorUpdate(String xml) throws SAXException {\n    return checkUpdateStatus(xml, \"1\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"020b126ae09ad6e3225cb0003edbdb26b6a29dd3","date":1186294248,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#validateErrorUpdate(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#validateErrorUpdate(String).mjava","sourceNew":"  /**\n   * Validates that an \"update\" (add, commit or optimize) results in success.\n   *\n   * :TODO: currently only deals with one add/doc at a time, this will need changed if/when SOLR-2 is resolved\n   * \n   * @param xml The XML of the update\n   * @return null if successful, otherwise the XML response to the update\n   */\n  public String validateErrorUpdate(String xml) throws SAXException {\n    return checkUpdateStatus(xml, \"1\");\n  }\n\n","sourceOld":"  /**\n   * Validates that an \"update\" (add, commit or optimize) results in success.\n   *\n   * :TODO: currently only deals with one add/doc at a time, this will need changed if/when SOLR-2 is resolved\n   * \n   * @param xml The XML of the update\n   * @return null if succesful, otherwise the XML response to the update\n   */\n  public String validateErrorUpdate(String xml) throws SAXException {\n    return checkUpdateStatus(xml, \"1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#validateErrorUpdate(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#validateErrorUpdate(String).mjava","sourceNew":"  /**\n   * Validates that an \"update\" (add, commit or optimize) results in success.\n   *\n   * :TODO: currently only deals with one add/doc at a time, this will need changed if/when SOLR-2 is resolved\n   * \n   * @param xml The XML of the update\n   * @return null if successful, otherwise the XML response to the update\n   */\n  public String validateErrorUpdate(String xml) throws SAXException {\n    return checkUpdateStatus(xml, \"1\");\n  }\n\n","sourceOld":"  /**\n   * Validates that an \"update\" (add, commit or optimize) results in success.\n   *\n   * :TODO: currently only deals with one add/doc at a time, this will need changed if/when SOLR-2 is resolved\n   * \n   * @param xml The XML of the update\n   * @return null if successful, otherwise the XML response to the update\n   */\n  public String validateErrorUpdate(String xml) throws SAXException {\n    return checkUpdateStatus(xml, \"1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"020b126ae09ad6e3225cb0003edbdb26b6a29dd3":["335d5ef4d54c2861b4ebdc7244bd81278f1c1d22"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["020b126ae09ad6e3225cb0003edbdb26b6a29dd3"],"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"020b126ae09ad6e3225cb0003edbdb26b6a29dd3":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["335d5ef4d54c2861b4ebdc7244bd81278f1c1d22"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22":["020b126ae09ad6e3225cb0003edbdb26b6a29dd3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}