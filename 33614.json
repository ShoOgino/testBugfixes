{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","commits":[{"id":"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","date":1358784296,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","pathOld":"/dev/null","sourceNew":"  private void countFacets() {\n    for (Entry<Source,FixedBitSet> entry : matchingDocs.entrySet()) {\n      Source facetsSource = entry.getKey();\n      FixedBitSet bits = entry.getValue();\n      int doc = 0;\n      int length = bits.length();\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        facetsSource .getBytes(doc, buf);\n        if (buf.length > 0) {\n          // this document has facets\n          int upto = buf.offset + buf.length;\n          int ord = 0;\n          int offset = buf.offset;\n          int prev = 0;\n          while (offset < upto) {\n            byte b = buf.bytes[offset++];\n            if (b >= 0) {\n              prev = ord = ((ord << 7) | b) + prev;\n              counts[ord]++;\n              ord = 0;\n            } else {\n              ord = (ord << 7) | (b & 0x7F);\n            }\n          }\n        }\n        ++doc;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","pathOld":"/dev/null","sourceNew":"  private void countFacets() {\n    for (Entry<Source,FixedBitSet> entry : matchingDocs.entrySet()) {\n      Source facetsSource = entry.getKey();\n      FixedBitSet bits = entry.getValue();\n      int doc = 0;\n      int length = bits.length();\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        facetsSource .getBytes(doc, buf);\n        if (buf.length > 0) {\n          // this document has facets\n          int upto = buf.offset + buf.length;\n          int ord = 0;\n          int offset = buf.offset;\n          int prev = 0;\n          while (offset < upto) {\n            byte b = buf.bytes[offset++];\n            if (b >= 0) {\n              prev = ord = ((ord << 7) | b) + prev;\n              counts[ord]++;\n              ord = 0;\n            } else {\n              ord = (ord << 7) | (b & 0x7F);\n            }\n          }\n        }\n        ++doc;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6503b8135290d25521790aa4d084472fdf7d8561","date":1358800765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","sourceNew":"  private void countFacets() {\n    for (Entry<BinaryDocValues,FixedBitSet> entry : matchingDocs.entrySet()) {\n      BinaryDocValues facetsSource = entry.getKey();\n      FixedBitSet bits = entry.getValue();\n      int doc = 0;\n      int length = bits.length();\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        facetsSource.get(doc, buf);\n        if (buf.length > 0) {\n          // this document has facets\n          int upto = buf.offset + buf.length;\n          int ord = 0;\n          int offset = buf.offset;\n          int prev = 0;\n          while (offset < upto) {\n            byte b = buf.bytes[offset++];\n            if (b >= 0) {\n              prev = ord = ((ord << 7) | b) + prev;\n              counts[ord]++;\n              ord = 0;\n            } else {\n              ord = (ord << 7) | (b & 0x7F);\n            }\n          }\n        }\n        ++doc;\n      }\n    }\n  }\n\n","sourceOld":"  private void countFacets() {\n    for (Entry<Source,FixedBitSet> entry : matchingDocs.entrySet()) {\n      Source facetsSource = entry.getKey();\n      FixedBitSet bits = entry.getValue();\n      int doc = 0;\n      int length = bits.length();\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        facetsSource .getBytes(doc, buf);\n        if (buf.length > 0) {\n          // this document has facets\n          int upto = buf.offset + buf.length;\n          int ord = 0;\n          int offset = buf.offset;\n          int prev = 0;\n          while (offset < upto) {\n            byte b = buf.bytes[offset++];\n            if (b >= 0) {\n              prev = ord = ((ord << 7) | b) + prev;\n              counts[ord]++;\n              ord = 0;\n            } else {\n              ord = (ord << 7) | (b & 0x7F);\n            }\n          }\n        }\n        ++doc;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","sourceNew":"  private void countFacets() {\n    for (Entry<BinaryDocValues,FixedBitSet> entry : matchingDocs.entrySet()) {\n      BinaryDocValues facetsSource = entry.getKey();\n      FixedBitSet bits = entry.getValue();\n      int doc = 0;\n      int length = bits.length();\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        facetsSource.get(doc, buf);\n        if (buf.length > 0) {\n          // this document has facets\n          int upto = buf.offset + buf.length;\n          int ord = 0;\n          int offset = buf.offset;\n          int prev = 0;\n          while (offset < upto) {\n            byte b = buf.bytes[offset++];\n            if (b >= 0) {\n              prev = ord = ((ord << 7) | b) + prev;\n              counts[ord]++;\n              ord = 0;\n            } else {\n              ord = (ord << 7) | (b & 0x7F);\n            }\n          }\n        }\n        ++doc;\n      }\n    }\n  }\n\n","sourceOld":"  private void countFacets() {\n    for (Entry<Source,FixedBitSet> entry : matchingDocs.entrySet()) {\n      Source facetsSource = entry.getKey();\n      FixedBitSet bits = entry.getValue();\n      int doc = 0;\n      int length = bits.length();\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        facetsSource .getBytes(doc, buf);\n        if (buf.length > 0) {\n          // this document has facets\n          int upto = buf.offset + buf.length;\n          int ord = 0;\n          int offset = buf.offset;\n          int prev = 0;\n          while (offset < upto) {\n            byte b = buf.bytes[offset++];\n            if (b >= 0) {\n              prev = ord = ((ord << 7) | b) + prev;\n              counts[ord]++;\n              ord = 0;\n            } else {\n              ord = (ord << 7) | (b & 0x7F);\n            }\n          }\n        }\n        ++doc;\n      }\n    }\n  }\n\n","bugFix":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countFacets().mjava","sourceNew":null,"sourceOld":"  private void countFacets() {\n    for (Entry<BinaryDocValues,FixedBitSet> entry : matchingDocs.entrySet()) {\n      BinaryDocValues facetsSource = entry.getKey();\n      FixedBitSet bits = entry.getValue();\n      int doc = 0;\n      int length = bits.length();\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        facetsSource.get(doc, buf);\n        if (buf.length > 0) {\n          // this document has facets\n          int upto = buf.offset + buf.length;\n          int ord = 0;\n          int offset = buf.offset;\n          int prev = 0;\n          while (offset < upto) {\n            byte b = buf.bytes[offset++];\n            if (b >= 0) {\n              prev = ord = ((ord << 7) | b) + prev;\n              counts[ord]++;\n              ord = 0;\n            } else {\n              ord = (ord << 7) | (b & 0x7F);\n            }\n          }\n        }\n        ++doc;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","6503b8135290d25521790aa4d084472fdf7d8561"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"6503b8135290d25521790aa4d084472fdf7d8561":["07155cdd910937cdf6877e48884d5782845c8b8b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["571abba77e55fea386a38c0024f72ffa5b37a9ad"]},"commit2Childs":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["d4d69c535930b5cce125cff868d40f6373dc27d4","07155cdd910937cdf6877e48884d5782845c8b8b"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","07155cdd910937cdf6877e48884d5782845c8b8b"],"07155cdd910937cdf6877e48884d5782845c8b8b":["6503b8135290d25521790aa4d084472fdf7d8561"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6503b8135290d25521790aa4d084472fdf7d8561":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}