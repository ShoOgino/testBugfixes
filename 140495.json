{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bae0bbf5dfabb3daa76f77f636f38310a28de18a","date":1456970732,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e697e346b573b1b58353f45be00090a4f2de91e7","date":1457002125,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71c829ee5e576456cad997d255191ad7f276daa5","date":1459792750,"type":4,"author":"Karl Wright","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"978250a207de8d7e1c71244e781d136c7b145ea5","date":1459839615,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = GeoCircleFactory.makeGeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = GeoCircleFactory.makeGeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ac273b4e4637e6dd8cf5f2d90a474f897884d7","date":1505963386,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoCircle shape = GeoCircleFactory.makeGeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = GeoCircleFactory.makeGeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoCircle shape = GeoCircleFactory.makeGeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = GeoCircleFactory.makeGeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85da33268a9a33d1a1dc71ad826ff61037f42cbf","date":1513200768,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoCircle shape = GeoCircleFactory.makeGeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"bae0bbf5dfabb3daa76f77f636f38310a28de18a":["112d77ac8d3e10a362516ad834c9a11d35c94234"],"978250a207de8d7e1c71244e781d136c7b145ea5":["71c829ee5e576456cad997d255191ad7f276daa5"],"57ac273b4e4637e6dd8cf5f2d90a474f897884d7":["978250a207de8d7e1c71244e781d136c7b145ea5"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71c829ee5e576456cad997d255191ad7f276daa5":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","978250a207de8d7e1c71244e781d136c7b145ea5"],"85da33268a9a33d1a1dc71ad826ff61037f42cbf":["57ac273b4e4637e6dd8cf5f2d90a474f897884d7"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["978250a207de8d7e1c71244e781d136c7b145ea5","57ac273b4e4637e6dd8cf5f2d90a474f897884d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e697e346b573b1b58353f45be00090a4f2de91e7":["112d77ac8d3e10a362516ad834c9a11d35c94234","bae0bbf5dfabb3daa76f77f636f38310a28de18a"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["af2638813028b254a88b418ebeafb541afb49653","e697e346b573b1b58353f45be00090a4f2de91e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85da33268a9a33d1a1dc71ad826ff61037f42cbf"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"bae0bbf5dfabb3daa76f77f636f38310a28de18a":["e697e346b573b1b58353f45be00090a4f2de91e7"],"978250a207de8d7e1c71244e781d136c7b145ea5":["57ac273b4e4637e6dd8cf5f2d90a474f897884d7","09af2c9610ce53a4b25fd99344299b40318a4a1a","6240b74b884c5587f2a4062dd27d6c32bf228889"],"57ac273b4e4637e6dd8cf5f2d90a474f897884d7":["85da33268a9a33d1a1dc71ad826ff61037f42cbf","6240b74b884c5587f2a4062dd27d6c32bf228889"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653","bae0bbf5dfabb3daa76f77f636f38310a28de18a","e697e346b573b1b58353f45be00090a4f2de91e7"],"71c829ee5e576456cad997d255191ad7f276daa5":["978250a207de8d7e1c71244e781d136c7b145ea5"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"85da33268a9a33d1a1dc71ad826ff61037f42cbf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"e697e346b573b1b58353f45be00090a4f2de91e7":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["71c829ee5e576456cad997d255191ad7f276daa5","09af2c9610ce53a4b25fd99344299b40318a4a1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}