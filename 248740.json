{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues.CompressedBinaryTermsEnum#readShortAddresses().mjava","commits":[{"id":"a870f9917149dc600c4ad4417d615c1795de5864","date":1445975387,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues.CompressedBinaryTermsEnum#readShortAddresses().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50DocValuesProducer.CompressedBinaryDocValues.CompressedBinaryTermsEnum#readShortAddresses().mjava","sourceNew":"      // read double byte addresses: each is delta - 2\n      // (shared prefix byte and length > 0 are both implicit)\n      private void readShortAddresses() throws IOException {\n        input.readBytes(buffer, INTERVAL_COUNT-1, INTERVAL_COUNT);\n        int addr = 0;\n        for (int i = 1; i < offsets.length; i++) {\n          int x = i<<1;\n          addr += 2 + ((buffer[x-1] << 8) | (buffer[x] & 0xFF));\n          offsets[i] = addr;\n        }\n      }\n\n","sourceOld":"      // read double byte addresses: each is delta - 2\n      // (shared prefix byte and length > 0 are both implicit)\n      private void readShortAddresses() throws IOException {\n        input.readBytes(buffer, INTERVAL_COUNT-1, INTERVAL_COUNT);\n        int addr = 0;\n        for (int i = 1; i < offsets.length; i++) {\n          int x = i<<1;\n          addr += 2 + ((buffer[x-1] << 8) | (buffer[x] & 0xFF));\n          offsets[i] = addr;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues.CompressedBinaryTermsEnum#readShortAddresses().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues.CompressedBinaryTermsEnum#readShortAddresses().mjava","sourceNew":"      // read double byte addresses: each is delta - 2\n      // (shared prefix byte and length > 0 are both implicit)\n      private void readShortAddresses() throws IOException {\n        input.readBytes(buffer, INTERVAL_COUNT-1, INTERVAL_COUNT);\n        int addr = 0;\n        for (int i = 1; i < offsets.length; i++) {\n          int x = i<<1;\n          addr += 2 + ((buffer[x-1] << 8) | (buffer[x] & 0xFF));\n          offsets[i] = addr;\n        }\n      }\n\n","sourceOld":"      // read double byte addresses: each is delta - 2\n      // (shared prefix byte and length > 0 are both implicit)\n      private void readShortAddresses() throws IOException {\n        input.readBytes(buffer, INTERVAL_COUNT-1, INTERVAL_COUNT);\n        int addr = 0;\n        for (int i = 1; i < offsets.length; i++) {\n          int x = i<<1;\n          addr += 2 + ((buffer[x-1] << 8) | (buffer[x] & 0xFF));\n          offsets[i] = addr;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues.CompressedBinaryTermsEnum#readShortAddresses().mjava","sourceNew":null,"sourceOld":"      // read double byte addresses: each is delta - 2\n      // (shared prefix byte and length > 0 are both implicit)\n      private void readShortAddresses() throws IOException {\n        input.readBytes(buffer, INTERVAL_COUNT-1, INTERVAL_COUNT);\n        int addr = 0;\n        for (int i = 1; i < offsets.length; i++) {\n          int x = i<<1;\n          addr += 2 + ((buffer[x-1] << 8) | (buffer[x] & 0xFF));\n          offsets[i] = addr;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["a870f9917149dc600c4ad4417d615c1795de5864"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a870f9917149dc600c4ad4417d615c1795de5864":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a870f9917149dc600c4ad4417d615c1795de5864","7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a870f9917149dc600c4ad4417d615c1795de5864"],"a870f9917149dc600c4ad4417d615c1795de5864":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}