{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#SidedPlane(Vector,Vector,Vector).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#SidedPlane(Vector,Vector,Vector).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/SidedPlane#SidedPlane(Vector,Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param p point to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(Vector p, Vector A, Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(p));\n  }\n\n","sourceOld":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param p point to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(Vector p, Vector A, Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(p));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#SidedPlane(Vector,Vector,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#SidedPlane(Vector,Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param p point to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(Vector p, Vector A, Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(p));\n    if (sigNum == 0.0)\n      throw new IllegalArgumentException(\"Cannot determine sidedness because check point is on plane.\");\n  }\n\n","sourceOld":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param p point to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(Vector p, Vector A, Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(p));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane#SidedPlane(Vector,Vector,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#SidedPlane(Vector,Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param p point to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(Vector p, Vector A, Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(p));\n    if (sigNum == 0.0)\n      throw new IllegalArgumentException(\"Cannot determine sidedness because check point is on plane.\");\n  }\n\n","sourceOld":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param p point to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(Vector p, Vector A, Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(p));\n    if (sigNum == 0.0)\n      throw new IllegalArgumentException(\"Cannot determine sidedness because check point is on plane.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f64b7098768253180859cd8faeae6b1a185b06ed":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["f64b7098768253180859cd8faeae6b1a185b06ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"f64b7098768253180859cd8faeae6b1a185b06ed":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["f64b7098768253180859cd8faeae6b1a185b06ed"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}