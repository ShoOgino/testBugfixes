{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","commits":[{"id":"8405d98acebb7e287bf7ac40e937ba05b8661285","date":1401433291,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#sizeInBytes().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        IndexSearcher searcher = searcherMgr.acquire();\n        try {\n          for (AtomicReaderContext context : searcher.getIndexReader().leaves()) {\n            AtomicReader reader = FilterAtomicReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          searcherMgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long sizeInBytes() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        IndexSearcher searcher = searcherMgr.acquire();\n        try {\n          for (AtomicReaderContext context : searcher.getIndexReader().leaves()) {\n            AtomicReader reader = FilterAtomicReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          searcherMgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        IndexSearcher searcher = searcherMgr.acquire();\n        try {\n          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {\n            LeafReader reader = FilterLeafReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          searcherMgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        IndexSearcher searcher = searcherMgr.acquire();\n        try {\n          for (AtomicReaderContext context : searcher.getIndexReader().leaves()) {\n            AtomicReader reader = FilterAtomicReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          searcherMgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cbf4928b28a4db03465b529b38a64ef29c91735","date":1483044697,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        SearcherManager mgr;\n        IndexSearcher searcher;\n        synchronized (searcherMgrLock) {\n          mgr = searcherMgr; // acquire & release on same SearcherManager, via local reference\n          searcher = mgr.acquire();\n        }\n        try {\n          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {\n            LeafReader reader = FilterLeafReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          mgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        IndexSearcher searcher = searcherMgr.acquire();\n        try {\n          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {\n            LeafReader reader = FilterLeafReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          searcherMgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de0b5d8cac74be1676bcc2f805bc0d0630176659","date":1483048659,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        SearcherManager mgr;\n        IndexSearcher searcher;\n        synchronized (searcherMgrLock) {\n          mgr = searcherMgr; // acquire & release on same SearcherManager, via local reference\n          searcher = mgr.acquire();\n        }\n        try {\n          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {\n            LeafReader reader = FilterLeafReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          mgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        IndexSearcher searcher = searcherMgr.acquire();\n        try {\n          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {\n            LeafReader reader = FilterLeafReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          searcherMgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        SearcherManager mgr;\n        IndexSearcher searcher;\n        synchronized (searcherMgrLock) {\n          mgr = searcherMgr; // acquire & release on same SearcherManager, via local reference\n          searcher = mgr.acquire();\n        }\n        try {\n          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {\n            LeafReader reader = FilterLeafReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          mgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this);\n    try {\n      if (searcherMgr != null) {\n        IndexSearcher searcher = searcherMgr.acquire();\n        try {\n          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {\n            LeafReader reader = FilterLeafReader.unwrap(context.reader());\n            if (reader instanceof SegmentReader) {\n              mem += ((SegmentReader) context.reader()).ramBytesUsed();\n            }\n          }\n        } finally {\n          searcherMgr.release(searcher);\n        }\n      }\n      return mem;\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["c9fb5f46e264daf5ba3860defe623a89d202dd87","5cbf4928b28a4db03465b529b38a64ef29c91735"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"5cbf4928b28a4db03465b529b38a64ef29c91735":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["c9fb5f46e264daf5ba3860defe623a89d202dd87","de0b5d8cac74be1676bcc2f805bc0d0630176659"]},"commit2Childs":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["de0b5d8cac74be1676bcc2f805bc0d0630176659","5cbf4928b28a4db03465b529b38a64ef29c91735","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"5cbf4928b28a4db03465b529b38a64ef29c91735":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}