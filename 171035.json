{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestIntSet#testFreezeEquality(int).mjava","commits":[{"id":"d6b23a02f76f15e0dd99a6951055a45aa5c43c48","date":1581020205,"type":0,"author":"Mike","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestIntSet#testFreezeEquality(int).mjava","pathOld":"/dev/null","sourceNew":"    private void testFreezeEquality(int size) {\n        SortedIntSet sortedSet = new SortedIntSet(0);\n\n        for (int i = 0; i < size; i++) {\n            // Some duplicates is nice but not critical\n            sortedSet.incr(random().nextInt(i + 1));\n        }\n\n        sortedSet.computeHash();\n        IntSet frozen0 = sortedSet.freeze(0);\n\n        assertEquals(\"Frozen set not equal to origin sorted set.\", sortedSet, frozen0);\n        assertEquals(\"Symmetry: Sorted set not equal to frozen set.\", frozen0, sortedSet);\n\n        IntSet frozen1 = sortedSet.freeze(random().nextInt());\n        assertEquals(\"Sorted set modified while freezing?\", sortedSet, frozen1);\n        assertEquals(\"Frozen sets were not equal\", frozen0, frozen1);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d6b23a02f76f15e0dd99a6951055a45aa5c43c48":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6b23a02f76f15e0dd99a6951055a45aa5c43c48"]},"commit2Childs":{"d6b23a02f76f15e0dd99a6951055a45aa5c43c48":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6b23a02f76f15e0dd99a6951055a45aa5c43c48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}