{"path":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","sourceNew":"  /**\n   * The counterpart for the above\n   *\n   * @param in\n   *\n   * @return the int value\n   *\n   * @throws IOException\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for the above\n   *\n   * @param in\n   *\n   * @return the int value\n   *\n   * @throws IOException\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","sourceNew":"  /**\n   * The counterpart for the above\n   *\n   * @param in\n   *\n   * @return the int value\n   *\n   * @throws IOException\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for the above\n   *\n   * @param in\n   *\n   * @return the int value\n   *\n   * @throws IOException\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","sourceNew":"  /**\n   * The counterpart for the above\n   *\n   * @param in\n   *\n   * @return the int value\n   *\n   * @throws IOException\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for the above\n   *\n   * @param in\n   *\n   * @return the int value\n   *\n   * @throws IOException\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","sourceNew":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for the above\n   *\n   * @param in\n   *\n   * @return the int value\n   *\n   * @throws IOException\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fcfd8b392582391d5804daa94c05f917c7fbdc7","date":1370873427,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","sourceNew":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(DataInputInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}