{"path":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","commits":[{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"/dev/null","sourceNew":"  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"/dev/null","sourceNew":"  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5cc22ce99f9ec86f1d1e55d36aaefac498ada97","date":1458507332,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","sourceNew":"  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n  }\n\n","sourceOld":"  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","date":1465691899,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","sourceNew":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//int[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","sourceOld":"  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","sourceNew":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//int[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","sourceOld":"  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","sourceNew":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//str[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","sourceOld":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//int[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","sourceNew":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//str[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","sourceOld":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//int[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesSorting().mjava","sourceNew":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//str[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//str[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","sourceOld":"  @Test\n  public void testDocValuesSorting() {\n    assertU(adoc(\"id\", \"1\", \"floatdv\", \"2\", \"intdv\", \"3\", \"doubledv\", \"4\", \"longdv\", \"5\", \"datedv\", \"1995-12-31T23:59:59.999Z\", \"stringdv\", \"b\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"2\", \"floatdv\", \"5\", \"intdv\", \"4\", \"doubledv\", \"3\", \"longdv\", \"2\", \"datedv\", \"1997-12-31T23:59:59.999Z\", \"stringdv\", \"a\", \"booldv\", \"false\"));\n    assertU(adoc(\"id\", \"3\", \"floatdv\", \"3\", \"intdv\", \"1\", \"doubledv\", \"2\", \"longdv\", \"1\", \"datedv\", \"1996-12-31T23:59:59.999Z\", \"stringdv\", \"c\", \"booldv\", \"true\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv desc\", \"rows\", \"1\", \"fl\", \"id,datedv\"),\n        \"//int[@name='id'][.='2']\",\n        \"//result/doc[1]/date[@name='datedv'][.='1997-12-31T23:59:59.999Z']\"\n        );\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv desc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"floatdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='4']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"intdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"doubledv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"longdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='3']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"datedv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='1']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"stringdv asc\", \"rows\", \"1\", \"fl\", \"id\"),\n        \"//int[@name='id'][.='2']\");\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"booldv asc\", \"rows\", \"10\", \"fl\", \"booldv,stringdv\"),\n        \"//result/doc[1]/bool[@name='booldv'][.='false']\",\n        \"//result/doc[2]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[3]/bool[@name='booldv'][.='true']\",\n        \"//result/doc[4]/bool[@name='booldv'][.='true']\"\n        );\n        \n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95303ff3749680c743b9425f9cf99e6e4065e8a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73bb5a57dc75b54a39494f99986599cae7dff417"],"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5":["c5cc22ce99f9ec86f1d1e55d36aaefac498ada97"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5"],"c5cc22ce99f9ec86f1d1e55d36aaefac498ada97":["73bb5a57dc75b54a39494f99986599cae7dff417"],"28288370235ed02234a64753cdbf0c6ec096304a":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","a71f63026529f3c1f03cfdd664910873ab2369ae"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c5cc22ce99f9ec86f1d1e55d36aaefac498ada97","7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"73bb5a57dc75b54a39494f99986599cae7dff417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"c5cc22ce99f9ec86f1d1e55d36aaefac498ada97":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"73bb5a57dc75b54a39494f99986599cae7dff417":["95303ff3749680c743b9425f9cf99e6e4065e8a8","c5cc22ce99f9ec86f1d1e55d36aaefac498ada97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}