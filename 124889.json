{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","commits":[{"id":"92f8ab19a30ff70981e43b8cc78069cb0941476e","date":1497374252,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    FieldType rootType = getFieldType(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    FieldType rootType = getFieldType(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    FieldType rootType = getFieldType(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ce7c704ca874aa623a99f2669737b52ec71cfc","date":1528728510,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","sourceNew":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    //TODO make this boolean a field so it needn't be looked up each time?\n    FieldType rootType = getFieldTypeNoEx(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","sourceOld":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    FieldType rootType = getFieldType(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","sourceNew":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    //TODO make this boolean a field so it needn't be looked up each time?\n    FieldType rootType = getFieldTypeNoEx(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","sourceOld":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    FieldType rootType = getFieldType(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","sourceNew":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    //TODO make this boolean a field so it needn't be looked up each time?\n    FieldType rootType = getFieldTypeNoEx(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","sourceOld":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    FieldType rootType = getFieldType(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2ed9b72e5fa27a7bd4857f222ca815341979d4a","date":1594879524,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isUsableForChildDocs().mjava","sourceNew":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact\n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    //TODO make this boolean a field so it needn't be looked up each time?\n    FieldType rootType = getFieldTypeNoEx(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","sourceOld":"  /**\n   * Helper method that returns <code>true</code> if the {@link #ROOT_FIELD_NAME} uses the exact \n   * same 'type' as the {@link #getUniqueKeyField()}\n   *\n   * @lucene.internal\n   */\n  public boolean isUsableForChildDocs() {\n    //TODO make this boolean a field so it needn't be looked up each time?\n    FieldType rootType = getFieldTypeNoEx(ROOT_FIELD_NAME);\n    return (null != uniqueKeyFieldType &&\n            null != rootType &&\n            rootType.getTypeName().equals(uniqueKeyFieldType.getTypeName()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["28288370235ed02234a64753cdbf0c6ec096304a","c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92f8ab19a30ff70981e43b8cc78069cb0941476e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92f8ab19a30ff70981e43b8cc78069cb0941476e"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92f8ab19a30ff70981e43b8cc78069cb0941476e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["28288370235ed02234a64753cdbf0c6ec096304a","c5ce7c704ca874aa623a99f2669737b52ec71cfc"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92f8ab19a30ff70981e43b8cc78069cb0941476e","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"92f8ab19a30ff70981e43b8cc78069cb0941476e":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c5ce7c704ca874aa623a99f2669737b52ec71cfc","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b2ed9b72e5fa27a7bd4857f222ca815341979d4a","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}