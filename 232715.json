{"path":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/complexPhrase/ComplexPhraseQueryParser.ComplexPhraseQuery#equals(Object).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/complexPhrase/ComplexPhraseQueryParser.ComplexPhraseQuery#equals(Object).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/queryParser/complexPhrase/ComplexPhraseQueryParser.ComplexPhraseQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      ComplexPhraseQuery other = (ComplexPhraseQuery) obj;\n      if (field == null) {\n        if (other.field != null)\n          return false;\n      } else if (!field.equals(other.field))\n        return false;\n      if (phrasedQueryStringContents == null) {\n        if (other.phrasedQueryStringContents != null)\n          return false;\n      } else if (!phrasedQueryStringContents\n          .equals(other.phrasedQueryStringContents))\n        return false;\n      if (slopFactor != other.slopFactor)\n        return false;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      ComplexPhraseQuery other = (ComplexPhraseQuery) obj;\n      if (field == null) {\n        if (other.field != null)\n          return false;\n      } else if (!field.equals(other.field))\n        return false;\n      if (phrasedQueryStringContents == null) {\n        if (other.phrasedQueryStringContents != null)\n          return false;\n      } else if (!phrasedQueryStringContents\n          .equals(other.phrasedQueryStringContents))\n        return false;\n      if (slopFactor != other.slopFactor)\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/complexPhrase/ComplexPhraseQueryParser.ComplexPhraseQuery#equals(Object).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/complexPhrase/ComplexPhraseQueryParser.ComplexPhraseQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      ComplexPhraseQuery other = (ComplexPhraseQuery) obj;\n      if (field == null) {\n        if (other.field != null)\n          return false;\n      } else if (!field.equals(other.field))\n        return false;\n      if (phrasedQueryStringContents == null) {\n        if (other.phrasedQueryStringContents != null)\n          return false;\n      } else if (!phrasedQueryStringContents\n          .equals(other.phrasedQueryStringContents))\n        return false;\n      if (slopFactor != other.slopFactor)\n        return false;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      ComplexPhraseQuery other = (ComplexPhraseQuery) obj;\n      if (field == null) {\n        if (other.field != null)\n          return false;\n      } else if (!field.equals(other.field))\n        return false;\n      if (phrasedQueryStringContents == null) {\n        if (other.phrasedQueryStringContents != null)\n          return false;\n      } else if (!phrasedQueryStringContents\n          .equals(other.phrasedQueryStringContents))\n        return false;\n      if (slopFactor != other.slopFactor)\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}