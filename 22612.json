{"path":"lucene/monitor/src/test/org/apache/lucene/monitor/TestMonitorPersistence#testCacheIsRepopulated().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/TestMonitorPersistence#testCacheIsRepopulated().mjava","pathOld":"/dev/null","sourceNew":"  public void testCacheIsRepopulated() throws IOException {\n\n    Document doc = new Document();\n    doc.add(newTextField(FIELD, \"test\", Field.Store.NO));\n    MonitorConfiguration config = new MonitorConfiguration()\n        .setIndexPath(indexDirectory, MonitorQuerySerializer.fromParser(MonitorTestBase::parse));\n\n    try (Monitor monitor = new Monitor(ANALYZER, config)) {\n      monitor.register(\n          mq(\"1\", \"test\"),\n          mq(\"2\", \"test\"),\n          mq(\"3\", \"test\", \"language\", \"en\"),\n          mq(\"4\", \"test\", \"wibble\", \"quack\"));\n\n      assertEquals(4, monitor.match(doc, QueryMatch.SIMPLE_MATCHER).getMatchCount());\n\n      IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n          () -> monitor.register(new MonitorQuery(\"5\", new MatchAllDocsQuery(), null, Collections.emptyMap())));\n      assertEquals(\"Cannot add a MonitorQuery with a null string representation to a non-ephemeral Monitor\", e.getMessage());\n    }\n\n    try (Monitor monitor2 = new Monitor(ANALYZER, config)) {\n      assertEquals(4, monitor2.getQueryCount());\n      assertEquals(4, monitor2.match(doc, QueryMatch.SIMPLE_MATCHER).getMatchCount());\n\n      MonitorQuery mq = monitor2.getQuery(\"4\");\n      assertEquals(\"quack\", mq.getMetadata().get(\"wibble\"));\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}