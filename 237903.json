{"path":"lucene/tools/src/java/org/apache/lucene/dependencies/InterpolatedProperties#resolve(Map[String,String],LinkedHashMap[String,String],Set[String],String,String).mjava","commits":[{"id":"61a7cdcdcc2cb2867472e1cfc130786166636143","date":1525692131,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/InterpolatedProperties#resolve(Map[String,String],LinkedHashMap[String,String],Set[String],String,String).mjava","pathOld":"/dev/null","sourceNew":"  private static String resolve(Map<String,String> props,\n                               LinkedHashMap<String, String> resolved,\n                               Set<String> recursive,\n                               String key,\n                               String value) {\n    if (value == null) {\n      throw new IllegalArgumentException(\"Missing replaced property key: \" + key);\n    }\n\n    if (recursive.contains(key)) {\n      throw new IllegalArgumentException(\"Circular recursive property resolution: \" + recursive);\n    }\n\n    if (!resolved.containsKey(key)) {\n      recursive.add(key);\n      StringBuffer buffer = new StringBuffer();\n      Matcher matcher = PROPERTY_REFERENCE_PATTERN.matcher(value);\n      while (matcher.find()) {\n        String referenced = matcher.group(\"name\");\n        String concrete = resolve(props, resolved, recursive, referenced, props.get(referenced));\n        matcher.appendReplacement(buffer, Matcher.quoteReplacement(concrete));\n      }\n      matcher.appendTail(buffer);\n      resolved.put(key, buffer.toString());\n      recursive.remove(key);\n    }\n    assert resolved.get(key).equals(value);\n    return resolved.get(key);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/InterpolatedProperties#resolve(Map[String,String],LinkedHashMap[String,String],Set[String],String,String).mjava","sourceNew":null,"sourceOld":"  private static String resolve(Map<String,String> props,\n                               LinkedHashMap<String, String> resolved,\n                               Set<String> recursive,\n                               String key,\n                               String value) {\n    if (value == null) {\n      throw new IllegalArgumentException(\"Missing replaced property key: \" + key);\n    }\n\n    if (recursive.contains(key)) {\n      throw new IllegalArgumentException(\"Circular recursive property resolution: \" + recursive);\n    }\n\n    if (!resolved.containsKey(key)) {\n      recursive.add(key);\n      StringBuffer buffer = new StringBuffer();\n      Matcher matcher = PROPERTY_REFERENCE_PATTERN.matcher(value);\n      while (matcher.find()) {\n        String referenced = matcher.group(\"name\");\n        String concrete = resolve(props, resolved, recursive, referenced, props.get(referenced));\n        matcher.appendReplacement(buffer, Matcher.quoteReplacement(concrete));\n      }\n      matcher.appendTail(buffer);\n      resolved.put(key, buffer.toString());\n      recursive.remove(key);\n    }\n    assert resolved.get(key).equals(value);\n    return resolved.get(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e025cf1c07150c8db28879d785db17eb3a66ca9f":["61a7cdcdcc2cb2867472e1cfc130786166636143"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61a7cdcdcc2cb2867472e1cfc130786166636143":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"]},"commit2Childs":{"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["61a7cdcdcc2cb2867472e1cfc130786166636143"],"61a7cdcdcc2cb2867472e1cfc130786166636143":["e025cf1c07150c8db28879d785db17eb3a66ca9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}