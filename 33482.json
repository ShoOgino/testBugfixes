{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/hi/HindiAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"5e5f9e7cd8a21e5b99d91107d6f400de933f8ecf","date":1265287316,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/hi/HindiAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates {@link TokenStreamComponents} used to tokenize all the text in the provided\n   * {@link Reader}.\n   * \n   * @return {@link TokenStreamComponents} built from a {@link IndicTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link IndicNormalizationFilter},\n   *         {@link HindiNormalizationFilter},\n   *         {@link KeywordMarkerTokenFilter} if a stem exclusion set is provided,\n   *         {@link HindiStemFilter}, and Hindi Stop words\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new IndicTokenizer(matchVersion, reader);\n    TokenStream result = new LowerCaseFilter(matchVersion, source);\n    if (!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerTokenFilter(result, stemExclusionSet);\n    result = new IndicNormalizationFilter(result);\n    result = new HindiNormalizationFilter(result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    result = new HindiStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/hi/HindiAnalyzer#createComponents(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/hi/HindiAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link IndicTokenizer} filtered with\n   *         {@link LowerCaseFilter}, {@link IndicNormalizationFilter},\n   *         {@link HindiNormalizationFilter}, {@link KeywordMarkerTokenFilter}\n   *         if a stem exclusion set is provided, {@link HindiStemFilter}, and\n   *         Hindi Stop words\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new IndicTokenizer(matchVersion, reader);\n    TokenStream result = new LowerCaseFilter(matchVersion, source);\n    if (!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerTokenFilter(result, stemExclusionSet);\n    result = new IndicNormalizationFilter(result);\n    result = new HindiNormalizationFilter(result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    result = new HindiStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates {@link TokenStreamComponents} used to tokenize all the text in the provided\n   * {@link Reader}.\n   * \n   * @return {@link TokenStreamComponents} built from a {@link IndicTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link IndicNormalizationFilter},\n   *         {@link HindiNormalizationFilter},\n   *         {@link KeywordMarkerTokenFilter} if a stem exclusion set is provided,\n   *         {@link HindiStemFilter}, and Hindi Stop words\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new IndicTokenizer(matchVersion, reader);\n    TokenStream result = new LowerCaseFilter(matchVersion, source);\n    if (!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerTokenFilter(result, stemExclusionSet);\n    result = new IndicNormalizationFilter(result);\n    result = new HindiNormalizationFilter(result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    result = new HindiStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/hi/HindiAnalyzer#createComponents(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/hi/HindiAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link IndicTokenizer} filtered with\n   *         {@link LowerCaseFilter}, {@link IndicNormalizationFilter},\n   *         {@link HindiNormalizationFilter}, {@link KeywordMarkerTokenFilter}\n   *         if a stem exclusion set is provided, {@link HindiStemFilter}, and\n   *         Hindi Stop words\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new IndicTokenizer(matchVersion, reader);\n    TokenStream result = new LowerCaseFilter(matchVersion, source);\n    if (!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerTokenFilter(result, stemExclusionSet);\n    result = new IndicNormalizationFilter(result);\n    result = new HindiNormalizationFilter(result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    result = new HindiStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link IndicTokenizer} filtered with\n   *         {@link LowerCaseFilter}, {@link IndicNormalizationFilter},\n   *         {@link HindiNormalizationFilter}, {@link KeywordMarkerTokenFilter}\n   *         if a stem exclusion set is provided, {@link HindiStemFilter}, and\n   *         Hindi Stop words\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new IndicTokenizer(matchVersion, reader);\n    TokenStream result = new LowerCaseFilter(matchVersion, source);\n    if (!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerTokenFilter(result, stemExclusionSet);\n    result = new IndicNormalizationFilter(result);\n    result = new HindiNormalizationFilter(result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    result = new HindiStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5e5f9e7cd8a21e5b99d91107d6f400de933f8ecf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["5e5f9e7cd8a21e5b99d91107d6f400de933f8ecf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"5e5f9e7cd8a21e5b99d91107d6f400de933f8ecf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e5f9e7cd8a21e5b99d91107d6f400de933f8ecf"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}