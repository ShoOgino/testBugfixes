{"path":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","commits":[{"id":"35fb92999b9df7df2ce2b35b83a044cbede61f45","date":1429037650,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","pathOld":"/dev/null","sourceNew":"  public void testMaxPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 0:\n    Token t1 = new Token(\"foo\", 0, 3);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    iw.addDocument(doc);\n\n    // Document should be visible:\n    IndexReader r = DirectoryReader.open(iw, true);\n    assertEquals(1, r.numDocs());\n    PostingsEnum postings = MultiFields.getTermPositionsEnum(r, null, \"foo\", new BytesRef(\"foo\"));\n\n    // \"foo\" appears in docID=0\n    assertEquals(0, postings.nextDoc());\n\n    // \"foo\" appears 2 times in the doc\n    assertEquals(2, postings.freq());\n\n    // first at pos=0\n    assertEquals(0, postings.nextPosition());\n\n    // next at pos=MAX\n    assertEquals(IndexWriter.MAX_POSITION, postings.nextPosition());\n\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","sourceNew":"  public void testMaxPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 0:\n    Token t1 = new Token(\"foo\", 0, 3);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    iw.addDocument(doc);\n\n    // Document should be visible:\n    IndexReader r = DirectoryReader.open(iw, true);\n    assertEquals(1, r.numDocs());\n    PostingsEnum postings = MultiFields.getTermPositionsEnum(r, \"foo\", new BytesRef(\"foo\"));\n\n    // \"foo\" appears in docID=0\n    assertEquals(0, postings.nextDoc());\n\n    // \"foo\" appears 2 times in the doc\n    assertEquals(2, postings.freq());\n\n    // first at pos=0\n    assertEquals(0, postings.nextPosition());\n\n    // next at pos=MAX\n    assertEquals(IndexWriter.MAX_POSITION, postings.nextPosition());\n\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 0:\n    Token t1 = new Token(\"foo\", 0, 3);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    iw.addDocument(doc);\n\n    // Document should be visible:\n    IndexReader r = DirectoryReader.open(iw, true);\n    assertEquals(1, r.numDocs());\n    PostingsEnum postings = MultiFields.getTermPositionsEnum(r, null, \"foo\", new BytesRef(\"foo\"));\n\n    // \"foo\" appears in docID=0\n    assertEquals(0, postings.nextDoc());\n\n    // \"foo\" appears 2 times in the doc\n    assertEquals(2, postings.freq());\n\n    // first at pos=0\n    assertEquals(0, postings.nextPosition());\n\n    // next at pos=MAX\n    assertEquals(IndexWriter.MAX_POSITION, postings.nextPosition());\n\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","sourceNew":"  public void testMaxPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 0:\n    Token t1 = new Token(\"foo\", 0, 3);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    iw.addDocument(doc);\n\n    // Document should be visible:\n    IndexReader r = DirectoryReader.open(iw);\n    assertEquals(1, r.numDocs());\n    PostingsEnum postings = MultiFields.getTermPositionsEnum(r, \"foo\", new BytesRef(\"foo\"));\n\n    // \"foo\" appears in docID=0\n    assertEquals(0, postings.nextDoc());\n\n    // \"foo\" appears 2 times in the doc\n    assertEquals(2, postings.freq());\n\n    // first at pos=0\n    assertEquals(0, postings.nextPosition());\n\n    // next at pos=MAX\n    assertEquals(IndexWriter.MAX_POSITION, postings.nextPosition());\n\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 0:\n    Token t1 = new Token(\"foo\", 0, 3);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    iw.addDocument(doc);\n\n    // Document should be visible:\n    IndexReader r = DirectoryReader.open(iw, true);\n    assertEquals(1, r.numDocs());\n    PostingsEnum postings = MultiFields.getTermPositionsEnum(r, \"foo\", new BytesRef(\"foo\"));\n\n    // \"foo\" appears in docID=0\n    assertEquals(0, postings.nextDoc());\n\n    // \"foo\" appears 2 times in the doc\n    assertEquals(2, postings.freq());\n\n    // first at pos=0\n    assertEquals(0, postings.nextPosition());\n\n    // next at pos=MAX\n    assertEquals(IndexWriter.MAX_POSITION, postings.nextPosition());\n\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testMaxPosition().mjava","sourceNew":"  public void testMaxPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 0:\n    Token t1 = new Token(\"foo\", 0, 3);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    iw.addDocument(doc);\n\n    // Document should be visible:\n    IndexReader r = DirectoryReader.open(iw);\n    assertEquals(1, r.numDocs());\n    PostingsEnum postings = MultiTerms.getTermPostingsEnum(r, \"foo\", new BytesRef(\"foo\"));\n\n    // \"foo\" appears in docID=0\n    assertEquals(0, postings.nextDoc());\n\n    // \"foo\" appears 2 times in the doc\n    assertEquals(2, postings.freq());\n\n    // first at pos=0\n    assertEquals(0, postings.nextPosition());\n\n    // next at pos=MAX\n    assertEquals(IndexWriter.MAX_POSITION, postings.nextPosition());\n\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 0:\n    Token t1 = new Token(\"foo\", 0, 3);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    iw.addDocument(doc);\n\n    // Document should be visible:\n    IndexReader r = DirectoryReader.open(iw);\n    assertEquals(1, r.numDocs());\n    PostingsEnum postings = MultiFields.getTermPositionsEnum(r, \"foo\", new BytesRef(\"foo\"));\n\n    // \"foo\" appears in docID=0\n    assertEquals(0, postings.nextDoc());\n\n    // \"foo\" appears 2 times in the doc\n    assertEquals(2, postings.freq());\n\n    // first at pos=0\n    assertEquals(0, postings.nextPosition());\n\n    // next at pos=MAX\n    assertEquals(IndexWriter.MAX_POSITION, postings.nextPosition());\n\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"2a1862266772deb28cdcb7d996b64d2177022687":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["2a1862266772deb28cdcb7d996b64d2177022687"],"2a1862266772deb28cdcb7d996b64d2177022687":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}