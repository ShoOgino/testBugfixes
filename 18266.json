{"path":"buildSrc/src/main/java/org/apache/lucene/gradle/ErrorReportingTestListener.OutputHandler#OutputHandler().mjava","commits":[{"id":"78a42256131aa2e3d45d4879b3e3b17a3321bc74","date":1578432198,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"buildSrc/src/main/java/org/apache/lucene/gradle/ErrorReportingTestListener.OutputHandler#OutputHandler().mjava","pathOld":"/dev/null","sourceNew":"      public OutputHandler() {\n         buffer = new SpillWriter(() -> {\n            try {\n               return Files.createTempFile(spillDir, \"spill-\", \".tmp\");\n            } catch (IOException e) {\n               throw new UncheckedIOException(e);\n            }\n         });\n\n         sint = new PrefixedWriter(\"   > \", buffer, MAX_LINE_WIDTH);\n         sout = new PrefixedWriter(\"  1> \", buffer, MAX_LINE_WIDTH);\n         serr = new PrefixedWriter(\"  2> \", buffer, MAX_LINE_WIDTH);\n         last = sint;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43bf0517439c498dd87bc58987d6a98633b6ae0d","date":1578479914,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"buildSrc/src/main/java/org/apache/lucene/gradle/ErrorReportingTestListener.OutputHandler#OutputHandler().mjava","pathOld":"buildSrc/src/main/java/org/apache/lucene/gradle/ErrorReportingTestListener.OutputHandler#OutputHandler().mjava","sourceNew":"      public OutputHandler() {\n         buffer = new SpillWriter(() -> {\n            try {\n               return Files.createTempFile(spillDir, \"spill-\", \".tmp\");\n            } catch (IOException e) {\n               throw new UncheckedIOException(e);\n            }\n         });\n\n         Writer sink = buffer;\n         if (verboseMode) {\n            sink = new StdOutTeeWriter(buffer);\n         }\n\n         sint = new PrefixedWriter(\"   > \", sink, MAX_LINE_WIDTH);\n         sout = new PrefixedWriter(\"  1> \", sink, MAX_LINE_WIDTH);\n         serr = new PrefixedWriter(\"  2> \", sink, MAX_LINE_WIDTH);\n         last = sint;\n      }\n\n","sourceOld":"      public OutputHandler() {\n         buffer = new SpillWriter(() -> {\n            try {\n               return Files.createTempFile(spillDir, \"spill-\", \".tmp\");\n            } catch (IOException e) {\n               throw new UncheckedIOException(e);\n            }\n         });\n\n         sint = new PrefixedWriter(\"   > \", buffer, MAX_LINE_WIDTH);\n         sout = new PrefixedWriter(\"  1> \", buffer, MAX_LINE_WIDTH);\n         serr = new PrefixedWriter(\"  2> \", buffer, MAX_LINE_WIDTH);\n         last = sint;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22f3f8c2059c3fcde843bbec43396f01a45d9867","date":1579090233,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"buildSrc/src/main/java/org/apache/lucene/gradle/ErrorReportingTestListener.OutputHandler#OutputHandler().mjava","pathOld":"/dev/null","sourceNew":"      public OutputHandler() {\n         buffer = new SpillWriter(() -> {\n            try {\n               return Files.createTempFile(spillDir, \"spill-\", \".tmp\");\n            } catch (IOException e) {\n               throw new UncheckedIOException(e);\n            }\n         });\n\n         Writer sink = buffer;\n         if (verboseMode) {\n            sink = new StdOutTeeWriter(buffer);\n         }\n\n         sint = new PrefixedWriter(\"   > \", sink, MAX_LINE_WIDTH);\n         sout = new PrefixedWriter(\"  1> \", sink, MAX_LINE_WIDTH);\n         serr = new PrefixedWriter(\"  2> \", sink, MAX_LINE_WIDTH);\n         last = sint;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"78a42256131aa2e3d45d4879b3e3b17a3321bc74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"22f3f8c2059c3fcde843bbec43396f01a45d9867":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","43bf0517439c498dd87bc58987d6a98633b6ae0d"],"43bf0517439c498dd87bc58987d6a98633b6ae0d":["78a42256131aa2e3d45d4879b3e3b17a3321bc74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22f3f8c2059c3fcde843bbec43396f01a45d9867"]},"commit2Childs":{"78a42256131aa2e3d45d4879b3e3b17a3321bc74":["43bf0517439c498dd87bc58987d6a98633b6ae0d"],"22f3f8c2059c3fcde843bbec43396f01a45d9867":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43bf0517439c498dd87bc58987d6a98633b6ae0d":["22f3f8c2059c3fcde843bbec43396f01a45d9867"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78a42256131aa2e3d45d4879b3e3b17a3321bc74","22f3f8c2059c3fcde843bbec43396f01a45d9867"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}