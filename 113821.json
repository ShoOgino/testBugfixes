{"path":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testRandomSingleAndMultiValued().mjava","commits":[{"id":"a83d6857d62b422f79747a834cfbfdc1610fd515","date":1458168983,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testRandomSingleAndMultiValued().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRandomSingleAndMultiValued() throws Exception {\n    for (int c = 0 ; c < 10 * RANDOM_MULTIPLIER ; ++c) {\n      clearIndex();\n      int[] arity = new int[9];\n      for (int a = 0 ; a < arity.length ; ++a) {\n        // Single-valued 50% of the time; other 50%: 2-10 values equally likely\n        arity[a] = random().nextBoolean() ? 1 : TestUtil.nextInt(random(), 2, 10);\n      }\n      doTest(\"check string value is correct\", dvStringFieldName(arity[0], true, false), \"str\", nextValues(arity[0], \"str\"));\n      doTest(\"check int value is correct\", \"test_i\" + plural(arity[1]) + \"_dvo\", \"int\", nextValues(arity[1], \"int\"));\n      doTest(\"check double value is correct\", \"test_d\" + plural(arity[2]) + \"_dvo\", \"double\", nextValues(arity[2], \"double\"));\n      doTest(\"check long value is correct\", \"test_l\" + plural(arity[3]) + \"_dvo\", \"long\", nextValues(arity[3], \"long\"));\n      doTest(\"check float value is correct\", \"test_f\" + plural(arity[4]) + \"_dvo\", \"float\", nextValues(arity[4], \"float\"));\n      doTest(\"check date value is correct\", \"test_dt\" + plural(arity[5]) + \"_dvo\", \"date\", nextValues(arity[5], \"date\"));\n      doTest(\"check stored and docValues value is correct\", dvStringFieldName(arity[6], true, true), \"str\", nextValues(arity[6], \"str\"));\n      doTest(\"check non-stored and non-indexed is accessible\", dvStringFieldName(arity[7], false, false), \"str\", nextValues(arity[7], \"str\"));\n      doTest(\"enumField\", \"enum\" + plural(arity[8]) + \"_dvo\", \"str\", nextValues(arity[8], \"enum\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a83d6857d62b422f79747a834cfbfdc1610fd515":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a83d6857d62b422f79747a834cfbfdc1610fd515"]},"commit2Childs":{"a83d6857d62b422f79747a834cfbfdc1610fd515":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a83d6857d62b422f79747a834cfbfdc1610fd515"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}