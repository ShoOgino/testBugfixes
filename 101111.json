{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#shuffle(Input...).mjava","commits":[{"id":"374870f2181bf8cd93a47df5d988855dfab6f7cd","date":1395589518,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#shuffle(Input...).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/TestFreeTextSuggester#[T]_shuffle(T...).mjava","sourceNew":"  static final Iterable<Input> shuffle(Input...values) {\n    final List<Input> asList = new ArrayList<>(values.length);\n    for (Input value : values) {\n      asList.add(value);\n    }\n    Collections.shuffle(asList, random());\n    return asList;\n  }\n\n","sourceOld":"  @SafeVarargs\n  private final <T> Iterable<T> shuffle(T...values) {\n    final List<T> asList = new ArrayList<>(values.length);\n    for (T value : values) {\n      asList.add(value);\n    }\n    Collections.shuffle(asList, random());\n    return asList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"374870f2181bf8cd93a47df5d988855dfab6f7cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["374870f2181bf8cd93a47df5d988855dfab6f7cd"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["374870f2181bf8cd93a47df5d988855dfab6f7cd"],"374870f2181bf8cd93a47df5d988855dfab6f7cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}