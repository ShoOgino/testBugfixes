{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d19974432be9aed28ee7dca73bdf01d139e763a9","date":1342822166,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","bugFix":["f592e183306e8e4efabf3e7e08d3e709c9b97dbb","49c9cd7b6155a692974306c2f859c8b1ddb874e0","5da0b42730b6b99b31389ef94cb97384e83b9ede","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52d4cfb22484037a9b8e9080e03aeaff60954880","date":1420125313,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     impl.copyFrom(d, file, file, newIOContext(r));\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) || IndexFileNames.CODEC_FILE_PATTERN.matcher(file).matches()) {\n        impl.copyFrom(d, file, file, newIOContext(r));\n      }\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     impl.copyFrom(d, file, file, newIOContext(r));\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b7b37c556b53f91c7690ec4fc7f11a41f6b702","date":1578318221,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) || IndexFileNames.CODEC_FILE_PATTERN.matcher(file).matches()) {\n        impl.copyFrom(d, file, file, newIOContext(r));\n      }\n    }\n    return wrapDirectory(r, impl, rarely(r), false);\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) || IndexFileNames.CODEC_FILE_PATTERN.matcher(file).matches()) {\n        impl.copyFrom(d, file, file, newIOContext(r));\n      }\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) || IndexFileNames.CODEC_FILE_PATTERN.matcher(file).matches()) {\n        impl.copyFrom(d, file, file, newIOContext(r));\n      }\n    }\n    return wrapDirectory(r, impl, rarely(r), false);\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) || IndexFileNames.CODEC_FILE_PATTERN.matcher(file).matches()) {\n        impl.copyFrom(d, file, file, newIOContext(r));\n      }\n    }\n    return wrapDirectory(r, impl, rarely(r));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["5da0b42730b6b99b31389ef94cb97384e83b9ede","d19974432be9aed28ee7dca73bdf01d139e763a9"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7b7b37c556b53f91c7690ec4fc7f11a41f6b702":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"52d4cfb22484037a9b8e9080e03aeaff60954880":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["52d4cfb22484037a9b8e9080e03aeaff60954880"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["5da0b42730b6b99b31389ef94cb97384e83b9ede","d19974432be9aed28ee7dca73bdf01d139e763a9"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["22989c36ff05c657df26dd3377b37c9ad35859bc","e7b7b37c556b53f91c7690ec4fc7f11a41f6b702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7b7b37c556b53f91c7690ec4fc7f11a41f6b702"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["aba371508186796cc6151d8223a5b4e16d02e26e","d19974432be9aed28ee7dca73bdf01d139e763a9","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["aba371508186796cc6151d8223a5b4e16d02e26e","52d4cfb22484037a9b8e9080e03aeaff60954880","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e7b7b37c556b53f91c7690ec4fc7f11a41f6b702":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52d4cfb22484037a9b8e9080e03aeaff60954880":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["e7b7b37c556b53f91c7690ec4fc7f11a41f6b702","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}