{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StopwordAnalyzerBase#loadStopwordSet(boolean,Class[#-extends-Analyzer],String,String).mjava","commits":[{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StopwordAnalyzerBase#loadStopwordSet(boolean,Class[#-extends-Analyzer],String,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StopwordAnalyzerBase#loadStopwordSet(boolean,Class[#-extends-ReusableAnalyzerBase],String,String).mjava","sourceNew":"  /**\n   * Creates a CharArraySet from a file resource associated with a class. (See\n   * {@link Class#getResourceAsStream(String)}).\n   * \n   * @param ignoreCase\n   *          <code>true</code> if the set should ignore the case of the\n   *          stopwords, otherwise <code>false</code>\n   * @param aClass\n   *          a class that is associated with the given stopwordResource\n   * @param resource\n   *          name of the resource file associated with the given class\n   * @param comment\n   *          comment string to ignore in the stopword file\n   * @return a CharArraySet containing the distinct stopwords from the given\n   *         file\n   * @throws IOException\n   *           if loading the stopwords throws an {@link IOException}\n   */\n  protected static CharArraySet loadStopwordSet(final boolean ignoreCase,\n      final Class<? extends Analyzer> aClass, final String resource,\n      final String comment) throws IOException {\n    final Set<String> wordSet = WordlistLoader.getWordSet(aClass, resource,\n        comment);\n    final CharArraySet set = new CharArraySet(Version.LUCENE_31, wordSet.size(), ignoreCase);\n    set.addAll(wordSet);\n    return set;\n  }\n\n","sourceOld":"  /**\n   * Creates a CharArraySet from a file resource associated with a class. (See\n   * {@link Class#getResourceAsStream(String)}).\n   * \n   * @param ignoreCase\n   *          <code>true</code> if the set should ignore the case of the\n   *          stopwords, otherwise <code>false</code>\n   * @param aClass\n   *          a class that is associated with the given stopwordResource\n   * @param resource\n   *          name of the resource file associated with the given class\n   * @param comment\n   *          comment string to ignore in the stopword file\n   * @return a CharArraySet containing the distinct stopwords from the given\n   *         file\n   * @throws IOException\n   *           if loading the stopwords throws an {@link IOException}\n   */\n  protected static CharArraySet loadStopwordSet(final boolean ignoreCase,\n      final Class<? extends ReusableAnalyzerBase> aClass, final String resource,\n      final String comment) throws IOException {\n    final Set<String> wordSet = WordlistLoader.getWordSet(aClass, resource,\n        comment);\n    final CharArraySet set = new CharArraySet(Version.LUCENE_31, wordSet.size(), ignoreCase);\n    set.addAll(wordSet);\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a24f16e684000b5854634d7139339a792cc97927","date":1320888085,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StopwordAnalyzerBase#loadStopwordSet(boolean,Class[#-extends-Analyzer],String,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StopwordAnalyzerBase#loadStopwordSet(boolean,Class[#-extends-Analyzer],String,String).mjava","sourceNew":"  /**\n   * Creates a CharArraySet from a file resource associated with a class. (See\n   * {@link Class#getResourceAsStream(String)}).\n   * \n   * @param ignoreCase\n   *          <code>true</code> if the set should ignore the case of the\n   *          stopwords, otherwise <code>false</code>\n   * @param aClass\n   *          a class that is associated with the given stopwordResource\n   * @param resource\n   *          name of the resource file associated with the given class\n   * @param comment\n   *          comment string to ignore in the stopword file\n   * @return a CharArraySet containing the distinct stopwords from the given\n   *         file\n   * @throws IOException\n   *           if loading the stopwords throws an {@link IOException}\n   */\n  protected static CharArraySet loadStopwordSet(final boolean ignoreCase,\n      final Class<? extends Analyzer> aClass, final String resource,\n      final String comment) throws IOException {\n    Reader reader = null;\n    try {\n      reader = IOUtils.getDecodingReader(aClass.getResourceAsStream(resource), IOUtils.CHARSET_UTF_8);\n      return WordlistLoader.getWordSet(reader, comment, new CharArraySet(Version.LUCENE_31, 16, ignoreCase));\n    } finally {\n      IOUtils.close(reader);\n    }\n    \n  }\n\n","sourceOld":"  /**\n   * Creates a CharArraySet from a file resource associated with a class. (See\n   * {@link Class#getResourceAsStream(String)}).\n   * \n   * @param ignoreCase\n   *          <code>true</code> if the set should ignore the case of the\n   *          stopwords, otherwise <code>false</code>\n   * @param aClass\n   *          a class that is associated with the given stopwordResource\n   * @param resource\n   *          name of the resource file associated with the given class\n   * @param comment\n   *          comment string to ignore in the stopword file\n   * @return a CharArraySet containing the distinct stopwords from the given\n   *         file\n   * @throws IOException\n   *           if loading the stopwords throws an {@link IOException}\n   */\n  protected static CharArraySet loadStopwordSet(final boolean ignoreCase,\n      final Class<? extends Analyzer> aClass, final String resource,\n      final String comment) throws IOException {\n    final Set<String> wordSet = WordlistLoader.getWordSet(aClass, resource,\n        comment);\n    final CharArraySet set = new CharArraySet(Version.LUCENE_31, wordSet.size(), ignoreCase);\n    set.addAll(wordSet);\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/StopwordAnalyzerBase#loadStopwordSet(boolean,Class[#-extends-Analyzer],String,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StopwordAnalyzerBase#loadStopwordSet(boolean,Class[#-extends-Analyzer],String,String).mjava","sourceNew":"  /**\n   * Creates a CharArraySet from a file resource associated with a class. (See\n   * {@link Class#getResourceAsStream(String)}).\n   * \n   * @param ignoreCase\n   *          <code>true</code> if the set should ignore the case of the\n   *          stopwords, otherwise <code>false</code>\n   * @param aClass\n   *          a class that is associated with the given stopwordResource\n   * @param resource\n   *          name of the resource file associated with the given class\n   * @param comment\n   *          comment string to ignore in the stopword file\n   * @return a CharArraySet containing the distinct stopwords from the given\n   *         file\n   * @throws IOException\n   *           if loading the stopwords throws an {@link IOException}\n   */\n  protected static CharArraySet loadStopwordSet(final boolean ignoreCase,\n      final Class<? extends Analyzer> aClass, final String resource,\n      final String comment) throws IOException {\n    Reader reader = null;\n    try {\n      reader = IOUtils.getDecodingReader(aClass.getResourceAsStream(resource), IOUtils.CHARSET_UTF_8);\n      return WordlistLoader.getWordSet(reader, comment, new CharArraySet(Version.LUCENE_31, 16, ignoreCase));\n    } finally {\n      IOUtils.close(reader);\n    }\n    \n  }\n\n","sourceOld":"  /**\n   * Creates a CharArraySet from a file resource associated with a class. (See\n   * {@link Class#getResourceAsStream(String)}).\n   * \n   * @param ignoreCase\n   *          <code>true</code> if the set should ignore the case of the\n   *          stopwords, otherwise <code>false</code>\n   * @param aClass\n   *          a class that is associated with the given stopwordResource\n   * @param resource\n   *          name of the resource file associated with the given class\n   * @param comment\n   *          comment string to ignore in the stopword file\n   * @return a CharArraySet containing the distinct stopwords from the given\n   *         file\n   * @throws IOException\n   *           if loading the stopwords throws an {@link IOException}\n   */\n  protected static CharArraySet loadStopwordSet(final boolean ignoreCase,\n      final Class<? extends Analyzer> aClass, final String resource,\n      final String comment) throws IOException {\n    Reader reader = null;\n    try {\n      reader = IOUtils.getDecodingReader(aClass.getResourceAsStream(resource), IOUtils.CHARSET_UTF_8);\n      return WordlistLoader.getWordSet(reader, comment, new CharArraySet(Version.LUCENE_31, 16, ignoreCase));\n    } finally {\n      IOUtils.close(reader);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a24f16e684000b5854634d7139339a792cc97927":["2f49143da0a5d278a72f741432047fcfa6da996e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a24f16e684000b5854634d7139339a792cc97927"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f49143da0a5d278a72f741432047fcfa6da996e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"a24f16e684000b5854634d7139339a792cc97927":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f49143da0a5d278a72f741432047fcfa6da996e"],"2f49143da0a5d278a72f741432047fcfa6da996e":["a24f16e684000b5854634d7139339a792cc97927"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}