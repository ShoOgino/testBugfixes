{"path":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":3,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":["2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = addAttribute(TermAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":["c2877c077c0dc229ee9871dc196b2a62442df599"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"60cdc0e643184821eb066795a8791cd82559f46e","date":1257941914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = addAttribute(TermAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = addAttribute(TermAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = addAttribute(TermAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = addAttribute(TermAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = addAttribute(TermAttribute.class);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n    termAtt = addAttribute(TermAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60cdc0e643184821eb066795a8791cd82559f46e":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"b62da6a75575f59a016a076b4753dc6e20c74b44":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["60cdc0e643184821eb066795a8791cd82559f46e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"60cdc0e643184821eb066795a8791cd82559f46e":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"b62da6a75575f59a016a076b4753dc6e20c74b44":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["60cdc0e643184821eb066795a8791cd82559f46e"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}