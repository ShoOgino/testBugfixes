{"path":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestBeiderMorseFilter#testCustomAttribute().mjava","commits":[{"id":"1bfd84d020e6ab739e8d9da53e96df25bacc9f88","date":1368172819,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestBeiderMorseFilter#testCustomAttribute().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomAttribute() throws IOException {\n    TokenStream stream = new KeywordTokenizer(new StringReader(\"D'Angelo\"));\n    stream = new PatternKeywordMarkerFilter(stream, Pattern.compile(\".*\"));\n    stream = new BeiderMorseFilter(stream, new PhoneticEngine(NameType.GENERIC, RuleType.EXACT, true));\n    KeywordAttribute keyAtt = stream.addAttribute(KeywordAttribute.class);\n    stream.reset();\n    int i = 0;\n    while(stream.incrementToken()) {\n      assertTrue(keyAtt.isKeyword());\n      i++;\n    }\n    assertEquals(12, i);\n    stream.end();\n    stream.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestBeiderMorseFilter#testCustomAttribute().mjava","pathOld":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestBeiderMorseFilter#testCustomAttribute().mjava","sourceNew":"  public void testCustomAttribute() throws IOException {\n    TokenStream stream = new KeywordTokenizer();\n    ((Tokenizer)stream).setReader(new StringReader(\"D'Angelo\"));\n    stream = new PatternKeywordMarkerFilter(stream, Pattern.compile(\".*\"));\n    stream = new BeiderMorseFilter(stream, new PhoneticEngine(NameType.GENERIC, RuleType.EXACT, true));\n    KeywordAttribute keyAtt = stream.addAttribute(KeywordAttribute.class);\n    stream.reset();\n    int i = 0;\n    while(stream.incrementToken()) {\n      assertTrue(keyAtt.isKeyword());\n      i++;\n    }\n    assertEquals(12, i);\n    stream.end();\n    stream.close();\n  }\n\n","sourceOld":"  public void testCustomAttribute() throws IOException {\n    TokenStream stream = new KeywordTokenizer(new StringReader(\"D'Angelo\"));\n    stream = new PatternKeywordMarkerFilter(stream, Pattern.compile(\".*\"));\n    stream = new BeiderMorseFilter(stream, new PhoneticEngine(NameType.GENERIC, RuleType.EXACT, true));\n    KeywordAttribute keyAtt = stream.addAttribute(KeywordAttribute.class);\n    stream.reset();\n    int i = 0;\n    while(stream.incrementToken()) {\n      assertTrue(keyAtt.isKeyword());\n      i++;\n    }\n    assertEquals(12, i);\n    stream.end();\n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestBeiderMorseFilter#testCustomAttribute().mjava","pathOld":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestBeiderMorseFilter#testCustomAttribute().mjava","sourceNew":"  public void testCustomAttribute() throws IOException {\n    TokenStream stream = new MockTokenizer(MockTokenizer.KEYWORD, false);\n    ((Tokenizer)stream).setReader(new StringReader(\"D'Angelo\"));\n    stream = new PatternKeywordMarkerFilter(stream, Pattern.compile(\".*\"));\n    stream = new BeiderMorseFilter(stream, new PhoneticEngine(NameType.GENERIC, RuleType.EXACT, true));\n    KeywordAttribute keyAtt = stream.addAttribute(KeywordAttribute.class);\n    stream.reset();\n    int i = 0;\n    while(stream.incrementToken()) {\n      assertTrue(keyAtt.isKeyword());\n      i++;\n    }\n    assertEquals(12, i);\n    stream.end();\n    stream.close();\n  }\n\n","sourceOld":"  public void testCustomAttribute() throws IOException {\n    TokenStream stream = new KeywordTokenizer();\n    ((Tokenizer)stream).setReader(new StringReader(\"D'Angelo\"));\n    stream = new PatternKeywordMarkerFilter(stream, Pattern.compile(\".*\"));\n    stream = new BeiderMorseFilter(stream, new PhoneticEngine(NameType.GENERIC, RuleType.EXACT, true));\n    KeywordAttribute keyAtt = stream.addAttribute(KeywordAttribute.class);\n    stream.reset();\n    int i = 0;\n    while(stream.incrementToken()) {\n      assertTrue(keyAtt.isKeyword());\n      i++;\n    }\n    assertEquals(12, i);\n    stream.end();\n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["1bfd84d020e6ab739e8d9da53e96df25bacc9f88"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1bfd84d020e6ab739e8d9da53e96df25bacc9f88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bfd84d020e6ab739e8d9da53e96df25bacc9f88"],"1bfd84d020e6ab739e8d9da53e96df25bacc9f88":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}