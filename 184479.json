{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/docvalues/TestBoolValOfNumericDVs#check(boolean).mjava","commits":[{"id":"1863090ece9f7d49f0d21a4711350751c6b7e5ad","date":1515268445,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/docvalues/TestBoolValOfNumericDVs#check(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void check(final boolean expected) throws IOException {\n\n    // create \"constant\" based instances of each superclass that should returned the expected value based on\n    // the constant used\n    final FunctionValues[] values = new FunctionValues[] {\n      new FloatDocValues(null) {\n        @Override\n        public float floatVal(int doc) throws IOException {\n          return expected ? Float.MIN_VALUE : 0.0F;\n        }\n      },\n      new DoubleDocValues(null) {\n        @Override\n        public double doubleVal(int doc) throws IOException {\n          return expected ? Double.MIN_VALUE : 0.0D;\n        }\n      },\n      new IntDocValues(null) {\n        @Override\n        public int intVal(int doc) throws IOException {\n          return expected ? 1 : 0;\n        }\n      },\n      new LongDocValues(null) {\n        @Override\n        public long longVal(int doc) throws IOException {\n          return expected ? 1L : 0L;\n        }\n      },\n    };\n      \n    for (FunctionValues fv : values) {\n      // docId is irrelevant since all of our FunctionValues return a constant value.\n      assertEquals(fv.getClass().getSuperclass().toString(), expected, fv.boolVal(123));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/docvalues/TestBoolValOfNumericDVs#check(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void check(final boolean expected) throws IOException {\n\n    // create \"constant\" based instances of each superclass that should returned the expected value based on\n    // the constant used\n    final FunctionValues[] values = new FunctionValues[] {\n      new FloatDocValues(null) {\n        @Override\n        public float floatVal(int doc) throws IOException {\n          return expected ? Float.MIN_VALUE : 0.0F;\n        }\n      },\n      new DoubleDocValues(null) {\n        @Override\n        public double doubleVal(int doc) throws IOException {\n          return expected ? Double.MIN_VALUE : 0.0D;\n        }\n      },\n      new IntDocValues(null) {\n        @Override\n        public int intVal(int doc) throws IOException {\n          return expected ? 1 : 0;\n        }\n      },\n      new LongDocValues(null) {\n        @Override\n        public long longVal(int doc) throws IOException {\n          return expected ? 1L : 0L;\n        }\n      },\n    };\n      \n    for (FunctionValues fv : values) {\n      // docId is irrelevant since all of our FunctionValues return a constant value.\n      assertEquals(fv.getClass().getSuperclass().toString(), expected, fv.boolVal(123));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1863090ece9f7d49f0d21a4711350751c6b7e5ad"],"1863090ece9f7d49f0d21a4711350751c6b7e5ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1863090ece9f7d49f0d21a4711350751c6b7e5ad":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","1863090ece9f7d49f0d21a4711350751c6b7e5ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}