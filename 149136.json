{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndex.MemoryChunkFieldsIndexWriter#writeIndex(int,long).mjava","commits":[{"id":"ccd8ff5675189c84a504cdee7da185e2c3ca3164","date":1351698863,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndex.MemoryChunkFieldsIndexWriter#writeIndex(int,long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    void writeIndex(int numDocs, long startPointer) throws IOException {\n      if (blockChunks == BLOCK_SIZE) {\n        writeBlock();\n        reset();\n      }\n\n      if (firstStartPointer == -1) {\n        firstStartPointer = maxStartPointer = startPointer;\n      }\n      assert firstStartPointer > 0 && startPointer >= firstStartPointer;\n\n      docBaseDeltas[blockChunks] = numDocs;\n      startPointerDeltas[blockChunks] = startPointer - maxStartPointer;\n\n      ++blockChunks;\n      blockDocs += numDocs;\n      totalDocs += numDocs;\n      maxStartPointer = startPointer;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a96cceee825e15cd8e042b683d404086e2a58d1","date":1351872237,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndex.MemoryChunkFieldsIndexWriter#writeIndex(int,long).mjava","sourceNew":null,"sourceOld":"    @Override\n    void writeIndex(int numDocs, long startPointer) throws IOException {\n      if (blockChunks == BLOCK_SIZE) {\n        writeBlock();\n        reset();\n      }\n\n      if (firstStartPointer == -1) {\n        firstStartPointer = maxStartPointer = startPointer;\n      }\n      assert firstStartPointer > 0 && startPointer >= firstStartPointer;\n\n      docBaseDeltas[blockChunks] = numDocs;\n      startPointerDeltas[blockChunks] = startPointer - maxStartPointer;\n\n      ++blockChunks;\n      blockDocs += numDocs;\n      totalDocs += numDocs;\n      maxStartPointer = startPointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a96cceee825e15cd8e042b683d404086e2a58d1":["ccd8ff5675189c84a504cdee7da185e2c3ca3164"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ccd8ff5675189c84a504cdee7da185e2c3ca3164":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a96cceee825e15cd8e042b683d404086e2a58d1"]},"commit2Childs":{"0a96cceee825e15cd8e042b683d404086e2a58d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccd8ff5675189c84a504cdee7da185e2c3ca3164"],"ccd8ff5675189c84a504cdee7da185e2c3ca3164":["0a96cceee825e15cd8e042b683d404086e2a58d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}