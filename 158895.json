{"path":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","commits":[{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519435fc0d6082a1b8081f9492b714f716877437","date":1348258553,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc7a7bb1aa79cf53564793bb5ffa270250c679da","date":1357817084,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    startDocument();\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    startDocument();\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    startDocument();\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f756f355450b30d33fe4479d81dad3e4d100ded4","date":1419858140,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","sourceNew":null,"sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    startDocument();\n\n    for (StorableField field : doc) {\n      writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n\n    finishDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","52c7e49be259508735752fba88085255014a6ecf"],"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"519435fc0d6082a1b8081f9492b714f716877437":["1d028314cced5858683a1bb4741423d0f934257b"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","3394716f52b34ab259ad5247e7595d9f9db6e935"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["519435fc0d6082a1b8081f9492b714f716877437"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52c7e49be259508735752fba88085255014a6ecf":["fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"f756f355450b30d33fe4479d81dad3e4d100ded4":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["519435fc0d6082a1b8081f9492b714f716877437","fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f756f355450b30d33fe4479d81dad3e4d100ded4"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","f756f355450b30d33fe4479d81dad3e4d100ded4"],"1d028314cced5858683a1bb4741423d0f934257b":["519435fc0d6082a1b8081f9492b714f716877437"],"519435fc0d6082a1b8081f9492b714f716877437":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["1d028314cced5858683a1bb4741423d0f934257b"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d028314cced5858683a1bb4741423d0f934257b","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"f756f355450b30d33fe4479d81dad3e4d100ded4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}