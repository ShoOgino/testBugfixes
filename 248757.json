{"path":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","commits":[{"id":"3f74570911bfdb9f7b01948745dcd67c69676c0e","date":1181060975,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","pathOld":"/dev/null","sourceNew":"    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(reader,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation valSrcExpl = valSrcScorer==null ? null : valSrcScorer.explain(doc);\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpl);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fe79450a321df64750e98df6442d2c4d30da52","date":1197527307,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","sourceNew":"    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(reader,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcScorers.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n        valSrcExpls[i] = valSrcScorers[i].explain(doc);\n      }\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","sourceOld":"    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(reader,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation valSrcExpl = valSrcScorer==null ? null : valSrcScorer.explain(doc);\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpl);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","sourceNew":"    // TODO: remove in 3.0\n    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(null, reader,doc); // nocommit: needs resolution\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcScorers.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n        valSrcExpls[i] = valSrcScorers[i].explain(doc);\n      }\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","sourceOld":"    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(reader,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcScorers.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n        valSrcExpls[i] = valSrcScorers[i].explain(doc);\n      }\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","bugFix":null,"bugIntro":["231941d2cb96b9752e839c311391096d90470db8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"231941d2cb96b9752e839c311391096d90470db8","date":1251116803,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","sourceNew":"    // TODO: remove in 3.0\n    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(reader,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcScorers.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n        valSrcExpls[i] = valSrcScorers[i].explain(doc);\n      }\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","sourceOld":"    // TODO: remove in 3.0\n    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(null, reader,doc); // nocommit: needs resolution\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcScorers.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n        valSrcExpls[i] = valSrcScorers[i].explain(doc);\n      }\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","bugFix":["fe941135bdfc28c81e20b4d21422f8726af34925"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"486cfd5a3f7481938475c113415d896f7a74a4a9","date":1256682581,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomScorer#explain(int).mjava","sourceNew":null,"sourceOld":"    // TODO: remove in 3.0\n    /*(non-Javadoc) @see org.apache.lucene.search.Scorer#explain(int) */\n    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.subQueryWeight.explain(reader,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcScorers.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n        valSrcExpls[i] = valSrcScorers[i].explain(doc);\n      }\n      Explanation customExp = customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = qWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(qWeight, \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["231941d2cb96b9752e839c311391096d90470db8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"231941d2cb96b9752e839c311391096d90470db8":["fe941135bdfc28c81e20b4d21422f8726af34925"],"fe941135bdfc28c81e20b4d21422f8726af34925":["89fe79450a321df64750e98df6442d2c4d30da52"],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"89fe79450a321df64750e98df6442d2c4d30da52":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["486cfd5a3f7481938475c113415d896f7a74a4a9"]},"commit2Childs":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"231941d2cb96b9752e839c311391096d90470db8":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"fe941135bdfc28c81e20b4d21422f8726af34925":["231941d2cb96b9752e839c311391096d90470db8"],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["89fe79450a321df64750e98df6442d2c4d30da52"],"89fe79450a321df64750e98df6442d2c4d30da52":["fe941135bdfc28c81e20b4d21422f8726af34925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}