{"path":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long).mjava","commits":[{"id":"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc","date":1308411958,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","date":1308439813,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94","date":1310159023,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(long sumTotalTermFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63639dd66fd5bd9b90bc24dd596ae01575f27cc4","date":1310237454,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(long sumTotalTermFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94":["7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":[],"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}