{"path":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#RegexpQuery(Term,int,AutomatonProvider,int).mjava","commits":[{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#RegexpQuery(Term,int,AutomatonProvider,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#RegexpQuery(Term,int,AutomatonProvider).mjava","sourceNew":"  /**\n   * Constructs a query for terms matching <code>term</code>.\n   * \n   * @param term regular expression.\n   * @param flags optional RegExp features from {@link RegExp}\n   * @param provider custom AutomatonProvider for named automata\n   * @param maxDeterminizedStates maximum number of states that compiling the\n   *  automaton for the regexp can result in.  Set higher to allow more complex\n   *  queries and lower to prevent memory exhaustion.\n   */\n  public RegexpQuery(Term term, int flags, AutomatonProvider provider,\n      int maxDeterminizedStates) {\n    super(term, new RegExp(term.text(), flags).toAutomaton(\n      provider, maxDeterminizedStates));\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for terms matching <code>term</code>.\n   * \n   * @param term regular expression.\n   * @param flags optional RegExp features from {@link RegExp}\n   * @param provider custom AutomatonProvider for named automata\n   */\n  public RegexpQuery(Term term, int flags, AutomatonProvider provider) {\n    super(term, new RegExp(term.text(), flags).toAutomaton(provider));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afa43c2280907c22d8a132b79a2873becc002870","date":1415139362,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#RegexpQuery(Term,int,AutomatonProvider,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#RegexpQuery(Term,int,AutomatonProvider,int).mjava","sourceNew":"  /**\n   * Constructs a query for terms matching <code>term</code>.\n   * \n   * @param term regular expression.\n   * @param flags optional RegExp features from {@link RegExp}\n   * @param provider custom AutomatonProvider for named automata\n   * @param maxDeterminizedStates maximum number of states that compiling the\n   *  automaton for the regexp can result in.  Set higher to allow more complex\n   *  queries and lower to prevent memory exhaustion.\n   */\n  public RegexpQuery(Term term, int flags, AutomatonProvider provider,\n      int maxDeterminizedStates) {\n    super(term,\n          new RegExp(term.text(), flags).toAutomaton(\n                       provider, maxDeterminizedStates), maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for terms matching <code>term</code>.\n   * \n   * @param term regular expression.\n   * @param flags optional RegExp features from {@link RegExp}\n   * @param provider custom AutomatonProvider for named automata\n   * @param maxDeterminizedStates maximum number of states that compiling the\n   *  automaton for the regexp can result in.  Set higher to allow more complex\n   *  queries and lower to prevent memory exhaustion.\n   */\n  public RegexpQuery(Term term, int flags, AutomatonProvider provider,\n      int maxDeterminizedStates) {\n    super(term, new RegExp(term.text(), flags).toAutomaton(\n      provider, maxDeterminizedStates));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601","date":1594220892,"type":3,"author":"markharwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#RegexpQuery(Term,int,AutomatonProvider,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#RegexpQuery(Term,int,AutomatonProvider,int).mjava","sourceNew":"  /**\n   * Constructs a query for terms matching <code>term</code>.\n   * \n   * @param term regular expression.\n   * @param syntax_flags optional RegExp features from {@link RegExp}\n   * @param provider custom AutomatonProvider for named automata\n   * @param maxDeterminizedStates maximum number of states that compiling the\n   *  automaton for the regexp can result in.  Set higher to allow more complex\n   *  queries and lower to prevent memory exhaustion.\n   */\n  public RegexpQuery(Term term, int syntax_flags, AutomatonProvider provider,\n      int maxDeterminizedStates) {\n    this(term, syntax_flags, 0, provider, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for terms matching <code>term</code>.\n   * \n   * @param term regular expression.\n   * @param flags optional RegExp features from {@link RegExp}\n   * @param provider custom AutomatonProvider for named automata\n   * @param maxDeterminizedStates maximum number of states that compiling the\n   *  automaton for the regexp can result in.  Set higher to allow more complex\n   *  queries and lower to prevent memory exhaustion.\n   */\n  public RegexpQuery(Term term, int flags, AutomatonProvider provider,\n      int maxDeterminizedStates) {\n    super(term,\n          new RegExp(term.text(), flags).toAutomaton(\n                       provider, maxDeterminizedStates), maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601":["afa43c2280907c22d8a132b79a2873becc002870"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"afa43c2280907c22d8a132b79a2873becc002870":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["afa43c2280907c22d8a132b79a2873becc002870"],"afa43c2280907c22d8a132b79a2873becc002870":["0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}