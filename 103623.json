{"path":"lucene/src/java/org/apache/lucene/search/IndexSearcher#searchAfter(ScoreDoc,Query,Filter,int).mjava","commits":[{"id":"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15","date":1316561169,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#searchAfter(ScoreDoc,Query,Filter,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null,\n   * where all results are after a previous result (<code>after</code>).\n   * <p>\n   * By passing the bottom result from a previous page as <code>after</code>,\n   * this method can be used for efficient 'deep-paging' across potentially\n   * large result sets.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs searchAfter(ScoreDoc after, Query query, Filter filter, int n) throws IOException {\n    return search(createNormalizedWeight(query), filter, after, n);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#searchAfter(ScoreDoc,Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#searchAfter(ScoreDoc,Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null,\n   * where all results are after a previous result (<code>after</code>).\n   * <p>\n   * By passing the bottom result from a previous page as <code>after</code>,\n   * this method can be used for efficient 'deep-paging' across potentially\n   * large result sets.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs searchAfter(ScoreDoc after, Query query, Filter filter, int n) throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), after, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null,\n   * where all results are after a previous result (<code>after</code>).\n   * <p>\n   * By passing the bottom result from a previous page as <code>after</code>,\n   * this method can be used for efficient 'deep-paging' across potentially\n   * large result sets.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs searchAfter(ScoreDoc after, Query query, Filter filter, int n) throws IOException {\n    return search(createNormalizedWeight(query), filter, after, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#searchAfter(ScoreDoc,Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#searchAfter(ScoreDoc,Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null,\n   * where all results are after a previous result (<code>after</code>).\n   * <p>\n   * By passing the bottom result from a previous page as <code>after</code>,\n   * this method can be used for efficient 'deep-paging' across potentially\n   * large result sets.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs searchAfter(ScoreDoc after, Query query, Filter filter, int n) throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), after, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null,\n   * where all results are after a previous result (<code>after</code>).\n   * <p>\n   * By passing the bottom result from a previous page as <code>after</code>,\n   * this method can be used for efficient 'deep-paging' across potentially\n   * large result sets.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs searchAfter(ScoreDoc after, Query query, Filter filter, int n) throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), after, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6620df8541b174097b1133a4fc370adb2e570524":["c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6620df8541b174097b1133a4fc370adb2e570524"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15":["6620df8541b174097b1133a4fc370adb2e570524"],"6620df8541b174097b1133a4fc370adb2e570524":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}