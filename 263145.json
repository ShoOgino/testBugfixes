{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"854f97cd3613b9579fba83755c80b697e2f3993f","date":1353527621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue, spareBytesRef);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b","date":1359664357,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue, spareBytesRef);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":["307cff5af2b00f126fdf9d3435b75d5ed4d0f402"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.doSetNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.doSetNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? -1 : index.lookupTerm(group.groupValue);\n      if (group.groupValue == null || ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["d4d69c535930b5cce125cff868d40f6373dc27d4","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"ae73da626f97850c922c42736f808d0378e165f0":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["854f97cd3613b9579fba83755c80b697e2f3993f"],"854f97cd3613b9579fba83755c80b697e2f3993f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d4d69c535930b5cce125cff868d40f6373dc27d4","854f97cd3613b9579fba83755c80b697e2f3993f"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b"],"854f97cd3613b9579fba83755c80b697e2f3993f":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}