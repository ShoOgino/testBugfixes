{"path":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object).mjava","commits":[{"id":"4f3d0182e3d1a4e667fc4d41c06a3c54809c2a9c","date":1429817709,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void merge(Object facetResult) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      List vals = (List)map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n      } else {\n        shardsMissing++;\n        shardsMissingSum += unique;\n        shardsMissingMax = Math.max(shardsMissingMax, unique);\n      }\n\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2350f91b2ef67a3fe85dc56c6fa0630586abf442"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2350f91b2ef67a3fe85dc56c6fa0630586abf442","date":1430446502,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object).mjava","sourceNew":"    @Override\n    public void merge(Object facetResult) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      List vals = (List)map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n      } else {\n        shardsMissing++;\n        shardsMissingSum += unique;\n        shardsMissingMax = Math.max(shardsMissingMax, unique);\n      }\n\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","bugFix":["4f3d0182e3d1a4e667fc4d41c06a3c54809c2a9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbadd4a153af2e36785fa5c682db5321cec90789","date":1432157571,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object).mjava","sourceNew":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bbadd4a153af2e36785fa5c682db5321cec90789":["2350f91b2ef67a3fe85dc56c6fa0630586abf442"],"2350f91b2ef67a3fe85dc56c6fa0630586abf442":["4f3d0182e3d1a4e667fc4d41c06a3c54809c2a9c"],"4f3d0182e3d1a4e667fc4d41c06a3c54809c2a9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bbadd4a153af2e36785fa5c682db5321cec90789"]},"commit2Childs":{"bbadd4a153af2e36785fa5c682db5321cec90789":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2350f91b2ef67a3fe85dc56c6fa0630586abf442":["bbadd4a153af2e36785fa5c682db5321cec90789"],"4f3d0182e3d1a4e667fc4d41c06a3c54809c2a9c":["2350f91b2ef67a3fe85dc56c6fa0630586abf442"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f3d0182e3d1a4e667fc4d41c06a3c54809c2a9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}