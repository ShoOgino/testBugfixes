{"path":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", core.getDeletionPolicy().getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":["760d6304fb87927aadb84287ce91cd84a59d83e7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", core.getDeletionPolicy().getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", core.getDeletionPolicy().getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", core.getDeletionPolicy().getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", core.getDeletionPolicy().getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28c9ebc86deab963b8d42cc71fe6415fee911d6f","date":1361542883,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        List<String> commitList = new ArrayList<String>(c.getFileNames().size());\n        commitList.addAll(c.getFileNames());\n        Collections.sort(commitList);\n        nl.add(CMD_GET_FILE_LIST, commitList);\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        List<String> commitList = new ArrayList<>(c.getFileNames().size());\n        commitList.addAll(c.getFileNames());\n        Collections.sort(commitList);\n        nl.add(CMD_GET_FILE_LIST, commitList);\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<NamedList<Object>>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<Object>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        List<String> commitList = new ArrayList<String>(c.getFileNames().size());\n        commitList.addAll(c.getFileNames());\n        Collections.sort(commitList);\n        nl.add(CMD_GET_FILE_LIST, commitList);\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        List<String> commitList = new ArrayList<>(c.getFileNames().size());\n        commitList.addAll(c.getFileNames());\n        Collections.sort(commitList);\n        nl.add(CMD_GET_FILE_LIST, commitList);\n        l.add(nl);\n      } catch (IOException e) {\n        log.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        List<String> commitList = new ArrayList<>(c.getFileNames().size());\n        commitList.addAll(c.getFileNames());\n        Collections.sort(commitList);\n        nl.add(CMD_GET_FILE_LIST, commitList);\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        List<String> commitList = new ArrayList<>(c.getFileNames().size());\n        commitList.addAll(c.getFileNames());\n        Collections.sort(commitList);\n        nl.add(CMD_GET_FILE_LIST, commitList);\n        l.add(nl);\n      } catch (IOException e) {\n        log.warn(\"Exception while reading files for commit {}\", c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList<Object>> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList<Object>> l = new ArrayList<>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList<Object> nl = new NamedList<>();\n        nl.add(\"indexVersion\", IndexDeletionPolicyWrapper.getCommitTimestamp(c));\n        nl.add(GENERATION, c.getGeneration());\n        List<String> commitList = new ArrayList<>(c.getFileNames().size());\n        commitList.addAll(c.getFileNames());\n        Collections.sort(commitList);\n        nl.add(CMD_GET_FILE_LIST, commitList);\n        l.add(nl);\n      } catch (IOException e) {\n        log.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["28c9ebc86deab963b8d42cc71fe6415fee911d6f"],"28c9ebc86deab963b8d42cc71fe6415fee911d6f":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["c26f00b574427b55127e869b935845554afde1fa"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"28c9ebc86deab963b8d42cc71fe6415fee911d6f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["28c9ebc86deab963b8d42cc71fe6415fee911d6f","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"c26f00b574427b55127e869b935845554afde1fa":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}