{"path":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","commits":[{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["03288de96c3666aa5583cc4dce079f6894fb3b31"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0aab6e810b4b0d3743d6a048be0602801f4b3920","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}