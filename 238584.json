{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    //json - no feature format check (default to sparse)\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=json]\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'match':0.0,'c4':1.0}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='match:0.0;c4:1.0'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bf344c7efad3160a74c52ef1fd53f535978fc5b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    //json - no feature format check (default to sparse)\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=json]\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'match':0.0,'c4':1.0}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='match:0.0;c4:1.0'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fa1f8f009c5147b03311c7e6e6469fa7b677186","date":1482164570,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    //json - no feature format check (default to sparse)\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=json]\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'match':0.0,'c4':1.0}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='match:0.0;c4:1.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    //json - no feature format check (default to sparse)\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=json]\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'c4':1.0}\");\n\n    //json - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=json]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=={'match':1.0,'c4':1.0}\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=={'match':0.0,'c4':1.0}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='c4:1.0'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense fvwt=csv]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='match:1.0;c4:1.0'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='match:0.0;c4:1.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97843b36f201934938da5d3392d87b90624dfe6b","date":1482500716,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(                \"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final String docs0fv_default_csv  = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n    final String docs1fv_default_csv  = chooseDefaultFeatureVector(docs1fv_dense_csv, docs1fv_sparse_csv);\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format specified i.e. use default\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_default_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_default_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(                \"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final String docs0fv_default_csv  = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n    final String docs1fv_default_csv  = chooseDefaultFeatureVector(docs1fv_dense_csv, docs1fv_sparse_csv);\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format specified i.e. use default\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_default_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_default_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format check (default to sparse)\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf344c7efad3160a74c52ef1fd53f535978fc5b7","date":1518199939,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(                \"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final String docs0fv_default_csv  = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n    final String docs1fv_default_csv  = chooseDefaultFeatureVector(docs1fv_dense_csv, docs1fv_sparse_csv);\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format specified i.e. use default\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_default_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_default_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(                \"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final String docs0fv_default_csv  = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n    final String docs1fv_default_csv  = chooseDefaultFeatureVector(docs1fv_dense_csv, docs1fv_sparse_csv);\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format specified i.e. use default\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_default_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_default_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","bugFix":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f906c3206e7eb174774f938416460e39170d819","date":1518202619,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureLogging#testSparseDenseFeatures().mjava","sourceNew":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(                \"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final String docs0fv_default_csv  = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n    final String docs1fv_default_csv  = chooseDefaultFeatureVector(docs1fv_dense_csv, docs1fv_sparse_csv);\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format specified i.e. use default\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_default_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_default_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void testSparseDenseFeatures() throws Exception {\n    loadFeature(\"match\", SolrFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"q\\\":\\\"{!terms f=title}different\\\"}\");\n    loadFeature(\"c4\", ValueFeature.class.getCanonicalName(), \"test4\",\n        \"{\\\"value\\\":1.0}\");\n\n    loadModel(\"sum4\", LinearModel.class.getCanonicalName(), new String[] {\n        \"match\"}, \"test4\",\n        \"{\\\"weights\\\":{\\\"match\\\":1.0}}\");\n\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector(                \"c4\", \"1.0\");\n\n    final String docs0fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"1.0\", \"c4\", \"1.0\");\n    final String docs1fv_dense_csv  = FeatureLoggerTestUtils.toFeatureVector(\"match\", \"0.0\", \"c4\", \"1.0\");\n\n    final String docs0fv_default_csv  = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n    final String docs1fv_default_csv  = chooseDefaultFeatureVector(docs1fv_dense_csv, docs1fv_sparse_csv);\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"title:bloomberg\");\n    query.add(\"rows\", \"10\");\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=sum4}\");\n\n    //csv - no feature format specified i.e. use default\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_default_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_default_csv+\"'\");\n\n    //csv - sparse feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=sparse]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_sparse_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_sparse_csv+\"'\");\n\n    //csv - dense feature format check\n    query.remove(\"fl\");\n    query.add(\"fl\", \"*,score,fv:[fv store=test4 format=dense]\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/fv/=='\"+docs0fv_dense_csv+\"'\");\n    assertJQ(\n        \"/query\" + query.toQueryString(),\n        \"/response/docs/[1]/fv/=='\"+docs1fv_dense_csv+\"'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97843b36f201934938da5d3392d87b90624dfe6b":["8fa1f8f009c5147b03311c7e6e6469fa7b677186"],"bf344c7efad3160a74c52ef1fd53f535978fc5b7":["97843b36f201934938da5d3392d87b90624dfe6b"],"8fa1f8f009c5147b03311c7e6e6469fa7b677186":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["9720b151fde2073f4e401450f4574e5f31c2d0ff","8fa1f8f009c5147b03311c7e6e6469fa7b677186"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f906c3206e7eb174774f938416460e39170d819"],"3f906c3206e7eb174774f938416460e39170d819":["97843b36f201934938da5d3392d87b90624dfe6b","bf344c7efad3160a74c52ef1fd53f535978fc5b7"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","97843b36f201934938da5d3392d87b90624dfe6b"]},"commit2Childs":{"97843b36f201934938da5d3392d87b90624dfe6b":["bf344c7efad3160a74c52ef1fd53f535978fc5b7","3f906c3206e7eb174774f938416460e39170d819","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"bf344c7efad3160a74c52ef1fd53f535978fc5b7":["3f906c3206e7eb174774f938416460e39170d819"],"8fa1f8f009c5147b03311c7e6e6469fa7b677186":["97843b36f201934938da5d3392d87b90624dfe6b","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["8fa1f8f009c5147b03311c7e6e6469fa7b677186","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3f906c3206e7eb174774f938416460e39170d819":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}