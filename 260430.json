{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","commits":[{"id":"c2344a1c769566d8c85cffcacc5e55153fa54b86","date":1550661298,"type":1,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],int,int).mjava","sourceNew":"  public HeapPointReader(byte[] block, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.block = block;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    this.pointValue = new HeapPointValue(block, packedBytesLength);\n  }\n\n","sourceOld":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9748213264006ee8a9c92037134821ffe991a31","date":1551346866,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","sourceNew":"  public HeapPointReader(byte[] block, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.block = block;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    if (start < end) {\n      this.pointValue = new HeapPointValue(block, packedBytesLength);\n    } else {\n      //no values\n      this.pointValue = new HeapPointValue(block, 0);\n    }\n  }\n\n","sourceOld":"  public HeapPointReader(byte[] block, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.block = block;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    this.pointValue = new HeapPointValue(block, packedBytesLength);\n  }\n\n","bugFix":null,"bugIntro":["537608940e64412ad5ecbc22df70b1553cdeb44f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"537608940e64412ad5ecbc22df70b1553cdeb44f","date":1551433447,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","sourceNew":"  public HeapPointReader(byte[] block, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.block = block;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    if (start < end) {\n      this.pointValue = new HeapPointValue(block, packedBytesLength);\n    } else {\n      //no values\n      this.pointValue = null;\n    }\n  }\n\n","sourceOld":"  public HeapPointReader(byte[] block, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.block = block;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    if (start < end) {\n      this.pointValue = new HeapPointValue(block, packedBytesLength);\n    } else {\n      //no values\n      this.pointValue = new HeapPointValue(block, 0);\n    }\n  }\n\n","bugFix":["e9748213264006ee8a9c92037134821ffe991a31"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f06758793500ca773d0df1037290e6e404fb33","date":1562230223,"type":5,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","sourceNew":"  public HeapPointReader(byte[] block, int packedBytesLength, int start, int end) {\n    this.block = block;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    this.packedBytesDocIDLength = packedBytesLength + Integer.BYTES;\n    if (start < end) {\n      this.pointValue = new HeapPointValue(block, packedBytesLength);\n    } else {\n      //no values\n      this.pointValue = null;\n    }\n  }\n\n","sourceOld":"  public HeapPointReader(byte[] block, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.block = block;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    if (start < end) {\n      this.pointValue = new HeapPointValue(block, packedBytesLength);\n    } else {\n      //no values\n      this.pointValue = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7f06758793500ca773d0df1037290e6e404fb33":["537608940e64412ad5ecbc22df70b1553cdeb44f"],"537608940e64412ad5ecbc22df70b1553cdeb44f":["e9748213264006ee8a9c92037134821ffe991a31"],"e9748213264006ee8a9c92037134821ffe991a31":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7f06758793500ca773d0df1037290e6e404fb33"]},"commit2Childs":{"c7f06758793500ca773d0df1037290e6e404fb33":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"537608940e64412ad5ecbc22df70b1553cdeb44f":["c7f06758793500ca773d0df1037290e6e404fb33"],"e9748213264006ee8a9c92037134821ffe991a31":["537608940e64412ad5ecbc22df70b1553cdeb44f"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["e9748213264006ee8a9c92037134821ffe991a31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}