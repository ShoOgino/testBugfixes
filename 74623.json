{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","commits":[{"id":"1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b","date":1384304197,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to seperate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, IOUtils.CHARSET_UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","sourceNew":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to seperate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","sourceOld":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to seperate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, IOUtils.CHARSET_UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","sourceNew":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to seperate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","sourceOld":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to seperate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, IOUtils.CHARSET_UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18e7cf5eab4be20c96aa36554daa39b53f43cf6e","date":1490632275,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","sourceNew":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to separate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","sourceOld":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to seperate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"febf4fa8feff6bbc932c1b388cbd758a3e6697f7","date":1490873944,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary#FileDictionary(InputStream,String).mjava","sourceNew":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to separate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","sourceOld":"  /**\n   * Creates a dictionary based on an inputstream.\n   * Using <code>fieldDelimiter</code> to seperate out the\n   * fields in a line.\n   * <p>\n   * NOTE: content is treated as UTF-8\n   */\n  public FileDictionary(InputStream dictFile, String fieldDelimiter) {\n    in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));\n    this.fieldDelimiter = fieldDelimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"febf4fa8feff6bbc932c1b388cbd758a3e6697f7":["7d89d7e4e5101347833eea558851bf4209218619"],"5eb2511ababf862ea11e10761c70ee560cd84510":["1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b","7d89d7e4e5101347833eea558851bf4209218619"],"18e7cf5eab4be20c96aa36554daa39b53f43cf6e":["7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d89d7e4e5101347833eea558851bf4209218619":["1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["18e7cf5eab4be20c96aa36554daa39b53f43cf6e"]},"commit2Childs":{"febf4fa8feff6bbc932c1b388cbd758a3e6697f7":[],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"18e7cf5eab4be20c96aa36554daa39b53f43cf6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b"],"1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"7d89d7e4e5101347833eea558851bf4209218619":["febf4fa8feff6bbc932c1b388cbd758a3e6697f7","5eb2511ababf862ea11e10761c70ee560cd84510","18e7cf5eab4be20c96aa36554daa39b53f43cf6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["febf4fa8feff6bbc932c1b388cbd758a3e6697f7","5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}