{"path":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotMetaDataManager#persist().mjava","commits":[{"id":"91e2345fb81b6c1c7faefa550ee5eaafadc54486","date":1469730189,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotMetaDataManager#persist().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void persist() throws IOException {\n    String fileName = SNAPSHOTS_PREFIX + nextWriteGen;\n    IndexOutput out = dir.createOutput(fileName, IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n      out.writeVInt(nameToDetailsMapping.size());\n      for(Entry<String,SnapshotMetaData> ent : nameToDetailsMapping.entrySet()) {\n        out.writeString(ent.getKey());\n        out.writeString(ent.getValue().getIndexDirPath());\n        out.writeVLong(ent.getValue().getGenerationNumber());\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n        IOUtils.deleteFilesIgnoringExceptions(dir, fileName);\n      } else {\n        IOUtils.close(out);\n      }\n    }\n\n    dir.sync(Collections.singletonList(fileName));\n\n    if (nextWriteGen > 0) {\n      String lastSaveFile = SNAPSHOTS_PREFIX + (nextWriteGen-1);\n      // exception OK: likely it didn't exist\n      IOUtils.deleteFilesIgnoringExceptions(dir, lastSaveFile);\n    }\n\n    nextWriteGen++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotMetaDataManager#persist().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void persist() throws IOException {\n    String fileName = SNAPSHOTS_PREFIX + nextWriteGen;\n    IndexOutput out = dir.createOutput(fileName, IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n      out.writeVInt(nameToDetailsMapping.size());\n      for(Entry<String,SnapshotMetaData> ent : nameToDetailsMapping.entrySet()) {\n        out.writeString(ent.getKey());\n        out.writeString(ent.getValue().getIndexDirPath());\n        out.writeVLong(ent.getValue().getGenerationNumber());\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n        IOUtils.deleteFilesIgnoringExceptions(dir, fileName);\n      } else {\n        IOUtils.close(out);\n      }\n    }\n\n    dir.sync(Collections.singletonList(fileName));\n\n    if (nextWriteGen > 0) {\n      String lastSaveFile = SNAPSHOTS_PREFIX + (nextWriteGen-1);\n      // exception OK: likely it didn't exist\n      IOUtils.deleteFilesIgnoringExceptions(dir, lastSaveFile);\n    }\n\n    nextWriteGen++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotMetaDataManager#persist().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void persist() throws IOException {\n    String fileName = SNAPSHOTS_PREFIX + nextWriteGen;\n    IndexOutput out = dir.createOutput(fileName, IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n      out.writeVInt(nameToDetailsMapping.size());\n      for(Entry<String,SnapshotMetaData> ent : nameToDetailsMapping.entrySet()) {\n        out.writeString(ent.getKey());\n        out.writeString(ent.getValue().getIndexDirPath());\n        out.writeVLong(ent.getValue().getGenerationNumber());\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n        IOUtils.deleteFilesIgnoringExceptions(dir, fileName);\n      } else {\n        IOUtils.close(out);\n      }\n    }\n\n    dir.sync(Collections.singletonList(fileName));\n\n    if (nextWriteGen > 0) {\n      String lastSaveFile = SNAPSHOTS_PREFIX + (nextWriteGen-1);\n      // exception OK: likely it didn't exist\n      IOUtils.deleteFilesIgnoringExceptions(dir, lastSaveFile);\n    }\n\n    nextWriteGen++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"91e2345fb81b6c1c7faefa550ee5eaafadc54486":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"91e2345fb81b6c1c7faefa550ee5eaafadc54486":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}