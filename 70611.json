{"path":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","pathOld":"/dev/null","sourceNew":"    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33a8b1f99104f4144f210f5d068411c297cd7163","date":1287152748,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.MaxNonCompetitiveBoostAttribute#setMaxNonCompetitiveBoost(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","sourceNew":"    /** This is the maximum boost that would not be competitive. */\n    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost);\n\n","sourceOld":"    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33a8b1f99104f4144f210f5d068411c297cd7163","date":1287152748,"type":6,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.MaxNonCompetitiveBoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","sourceNew":"    public void setMaxNonCompetitiveBoost(final float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","sourceOld":"    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.MaxNonCompetitiveBoostAttribute#setMaxNonCompetitiveBoost(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","sourceNew":"    /** This is the maximum boost that would not be competitive. */\n    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost);\n\n","sourceOld":"    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":6,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.MaxNonCompetitiveBoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","sourceNew":"    public void setMaxNonCompetitiveBoost(final float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","sourceOld":"    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BoostAttributeImpl#setMaxNonCompetitiveBoost(float).mjava","sourceNew":null,"sourceOld":"    public void setMaxNonCompetitiveBoost(float maxNonCompetitiveBoost) {\n      this.maxNonCompetitiveBoost = maxNonCompetitiveBoost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33a8b1f99104f4144f210f5d068411c297cd7163":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","33a8b1f99104f4144f210f5d068411c297cd7163"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","33a8b1f99104f4144f210f5d068411c297cd7163"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["33a8b1f99104f4144f210f5d068411c297cd7163"]},"commit2Childs":{"33a8b1f99104f4144f210f5d068411c297cd7163":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["33a8b1f99104f4144f210f5d068411c297cd7163","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}