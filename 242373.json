{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#matches(Long,boolean,Long,boolean,long).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#matches(Long,boolean,Long,boolean,long).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDimensionalRangeQuery#matches(Long,boolean,Long,boolean,long).mjava","sourceNew":"  private static boolean matches(Long lower, boolean includeLower, Long upper, boolean includeUpper, long value) {\n    if (includeLower == false && lower != null) {\n      if (lower == Long.MAX_VALUE) {\n        return false;\n      }\n      lower++;\n    }\n    if (includeUpper == false && upper != null) {\n      if (upper == Long.MIN_VALUE) {\n        return false;\n      }\n      upper--;\n    }\n\n    return (lower == null || value >= lower) && (upper == null || value <= upper);\n  }\n\n","sourceOld":"  private static boolean matches(Long lower, boolean includeLower, Long upper, boolean includeUpper, long value) {\n    if (includeLower == false && lower != null) {\n      if (lower == Long.MAX_VALUE) {\n        return false;\n      }\n      lower++;\n    }\n    if (includeUpper == false && upper != null) {\n      if (upper == Long.MIN_VALUE) {\n        return false;\n      }\n      upper--;\n    }\n\n    return (lower == null || value >= lower) && (upper == null || value <= upper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1800b996d8677670482a071dcb7a48b08c423ace","date":1456955558,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#matches(Long,boolean,Long,boolean,long).mjava","sourceNew":null,"sourceOld":"  private static boolean matches(Long lower, boolean includeLower, Long upper, boolean includeUpper, long value) {\n    if (includeLower == false && lower != null) {\n      if (lower == Long.MAX_VALUE) {\n        return false;\n      }\n      lower++;\n    }\n    if (includeUpper == false && upper != null) {\n      if (upper == Long.MIN_VALUE) {\n        return false;\n      }\n      upper--;\n    }\n\n    return (lower == null || value >= lower) && (upper == null || value <= upper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c422e924212367b334b4938f1fd3e44438e88c40","date":1456962933,"type":4,"author":"Mike McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#matches(Long,boolean,Long,boolean,long).mjava","sourceNew":null,"sourceOld":"  private static boolean matches(Long lower, boolean includeLower, Long upper, boolean includeUpper, long value) {\n    if (includeLower == false && lower != null) {\n      if (lower == Long.MAX_VALUE) {\n        return false;\n      }\n      lower++;\n    }\n    if (includeUpper == false && upper != null) {\n      if (upper == Long.MIN_VALUE) {\n        return false;\n      }\n      upper--;\n    }\n\n    return (lower == null || value >= lower) && (upper == null || value <= upper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#matches(Long,boolean,Long,boolean,long).mjava","sourceNew":null,"sourceOld":"  private static boolean matches(Long lower, boolean includeLower, Long upper, boolean includeUpper, long value) {\n    if (includeLower == false && lower != null) {\n      if (lower == Long.MAX_VALUE) {\n        return false;\n      }\n      lower++;\n    }\n    if (includeUpper == false && upper != null) {\n      if (upper == Long.MIN_VALUE) {\n        return false;\n      }\n      upper--;\n    }\n\n    return (lower == null || value >= lower) && (upper == null || value <= upper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","c422e924212367b334b4938f1fd3e44438e88c40"],"c422e924212367b334b4938f1fd3e44438e88c40":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","1800b996d8677670482a071dcb7a48b08c423ace"],"1800b996d8677670482a071dcb7a48b08c423ace":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","c422e924212367b334b4938f1fd3e44438e88c40","1800b996d8677670482a071dcb7a48b08c423ace"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c422e924212367b334b4938f1fd3e44438e88c40":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"1800b996d8677670482a071dcb7a48b08c423ace":["c422e924212367b334b4938f1fd3e44438e88c40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}