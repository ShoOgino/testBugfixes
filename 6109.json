{"path":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","commits":[{"id":"2148dc6e2b0f2117ae887c0397378d86567916b0","date":1368393817,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private Query parse(String q, String... params) {\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      ArrayList<String> al = new ArrayList<String>(Arrays.asList(params));\n      while(al.size() >= 2) {\n        p.add(al.remove(0), al.remove(0));\n      }\n      return new MaxScoreQParser(q, p, new ModifiableSolrParams(), req(q)).parse();\n    } catch (SyntaxError syntaxError) {\n      fail(\"Failed with exception \"+syntaxError.getMessage());\n    }\n    fail(\"Parse failed\");\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","sourceNew":"  private Query parse(String q, String... params) {\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      ArrayList<String> al = new ArrayList<>(Arrays.asList(params));\n      while(al.size() >= 2) {\n        p.add(al.remove(0), al.remove(0));\n      }\n      return new MaxScoreQParser(q, p, new ModifiableSolrParams(), req(q)).parse();\n    } catch (SyntaxError syntaxError) {\n      fail(\"Failed with exception \"+syntaxError.getMessage());\n    }\n    fail(\"Parse failed\");\n    return null;\n  }\n\n","sourceOld":"  private Query parse(String q, String... params) {\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      ArrayList<String> al = new ArrayList<String>(Arrays.asList(params));\n      while(al.size() >= 2) {\n        p.add(al.remove(0), al.remove(0));\n      }\n      return new MaxScoreQParser(q, p, new ModifiableSolrParams(), req(q)).parse();\n    } catch (SyntaxError syntaxError) {\n      fail(\"Failed with exception \"+syntaxError.getMessage());\n    }\n    fail(\"Parse failed\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a144790859eb303122988cd315215ff30f449d2","date":1493938430,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","sourceNew":"  private Query parse(String q, String... params) {\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      ArrayList<String> al = new ArrayList<>(Arrays.asList(params));\n      while(al.size() >= 2) {\n        p.add(al.remove(0), al.remove(0));\n      }\n      return new MaxScoreQParser(q, p, new MapSolrParams(Collections.singletonMap(\"df\", \"text\")), req(q)).parse();\n    } catch (SyntaxError syntaxError) {\n      fail(\"Failed with exception \"+syntaxError.getMessage());\n    }\n    fail(\"Parse failed\");\n    return null;\n  }\n\n","sourceOld":"  private Query parse(String q, String... params) {\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      ArrayList<String> al = new ArrayList<>(Arrays.asList(params));\n      while(al.size() >= 2) {\n        p.add(al.remove(0), al.remove(0));\n      }\n      return new MaxScoreQParser(q, p, new ModifiableSolrParams(), req(q)).parse();\n    } catch (SyntaxError syntaxError) {\n      fail(\"Failed with exception \"+syntaxError.getMessage());\n    }\n    fail(\"Parse failed\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestMaxScoreQueryParser#parse(String,String...).mjava","sourceNew":"  private Query parse(String q, String... params) {\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      ArrayList<String> al = new ArrayList<>(Arrays.asList(params));\n      while(al.size() >= 2) {\n        p.add(al.remove(0), al.remove(0));\n      }\n      return new MaxScoreQParser(q, p, new MapSolrParams(Collections.singletonMap(\"df\", \"text\")), req(q)).parse();\n    } catch (SyntaxError syntaxError) {\n      fail(\"Failed with exception \"+syntaxError.getMessage());\n    }\n    fail(\"Parse failed\");\n    return null;\n  }\n\n","sourceOld":"  private Query parse(String q, String... params) {\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      ArrayList<String> al = new ArrayList<>(Arrays.asList(params));\n      while(al.size() >= 2) {\n        p.add(al.remove(0), al.remove(0));\n      }\n      return new MaxScoreQParser(q, p, new ModifiableSolrParams(), req(q)).parse();\n    } catch (SyntaxError syntaxError) {\n      fail(\"Failed with exception \"+syntaxError.getMessage());\n    }\n    fail(\"Parse failed\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2148dc6e2b0f2117ae887c0397378d86567916b0"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","1a144790859eb303122988cd315215ff30f449d2"],"1a144790859eb303122988cd315215ff30f449d2":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2148dc6e2b0f2117ae887c0397378d86567916b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1a144790859eb303122988cd315215ff30f449d2"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e9017cf144952056066919f1ebc7897ff9bd71b1","1a144790859eb303122988cd315215ff30f449d2"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"1a144790859eb303122988cd315215ff30f449d2":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2148dc6e2b0f2117ae887c0397378d86567916b0"],"2148dc6e2b0f2117ae887c0397378d86567916b0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}