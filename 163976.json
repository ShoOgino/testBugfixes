{"path":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.DistribFieldFacet#respectMinCount(long).mjava","commits":[{"id":"8ff4734b6c86245e852fe8b6a286716d5e59d415","date":1410194063,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.DistribFieldFacet#respectMinCount(long).mjava","pathOld":"/dev/null","sourceNew":"    public void respectMinCount(long minCount) {\n      HashMap<String, ShardFacetCount> newOne = new HashMap<>();\n      boolean replace = false;\n      for (Map.Entry<String, ShardFacetCount> ent : counts.entrySet()) {\n        if (ent.getValue().count >= minCount) {\n          newOne.put(ent.getKey(), ent.getValue());\n        } else {\n          log.trace(\"Removing facet/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n          replace = true;\n        }\n      }\n      if (replace) {\n        counts = newOne;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.DistribFieldFacet#respectMinCount(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.DistribFieldFacet#respectMinCount(long).mjava","sourceNew":"    public void respectMinCount(long minCount) {\n      HashMap<String, ShardFacetCount> newOne = new HashMap<>();\n      boolean replace = false;\n      for (Map.Entry<String, ShardFacetCount> ent : counts.entrySet()) {\n        if (ent.getValue().count >= minCount) {\n          newOne.put(ent.getKey(), ent.getValue());\n        } else {\n          if (log.isTraceEnabled()) {\n            log.trace(\"Removing facet/key: {}/{} mincount={}\", ent.getKey(), ent.getValue(), minCount);\n          }\n          replace = true;\n        }\n      }\n      if (replace) {\n        counts = newOne;\n      }\n    }\n\n","sourceOld":"    public void respectMinCount(long minCount) {\n      HashMap<String, ShardFacetCount> newOne = new HashMap<>();\n      boolean replace = false;\n      for (Map.Entry<String, ShardFacetCount> ent : counts.entrySet()) {\n        if (ent.getValue().count >= minCount) {\n          newOne.put(ent.getKey(), ent.getValue());\n        } else {\n          log.trace(\"Removing facet/key: \" + ent.getKey() + \"/\" + ent.getValue().toString() + \" mincount=\" + minCount);\n          replace = true;\n        }\n      }\n      if (replace) {\n        counts = newOne;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["8ff4734b6c86245e852fe8b6a286716d5e59d415"],"8ff4734b6c86245e852fe8b6a286716d5e59d415":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff4734b6c86245e852fe8b6a286716d5e59d415"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8ff4734b6c86245e852fe8b6a286716d5e59d415":["575e66bd4b2349209027f6801184da7fc3cba13f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}