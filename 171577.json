{"path":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","commits":[{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"058801f8673d53a5abac8088204860ec29a40f0d","date":1364178882,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      if (closed) {\n        throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, \"Already closed\");\n      }\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25bbd8e76cd29f2d4b262a24d6a42c754706b143","date":1365910543,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      if (closed) {\n        throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, \"Already closed\");\n      }\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n      log.debug(\"incRef'ed: {}\", cacheValue);\n    }\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      if (closed) {\n        throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, \"Already closed\");\n      }\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#incRef(Directory).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   *\n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      if (closed) {\n        throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, \"Already closed\");\n      }\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n\n      cacheValue.refCnt++;\n      log.debug(\"incRef'ed: {}\", cacheValue);\n    }\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see\n   * org.apache.solr.core.DirectoryFactory#incRef(org.apache.lucene.store.Directory\n   * )\n   */\n  @Override\n  public void incRef(Directory directory) {\n    synchronized (this) {\n      if (closed) {\n        throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, \"Already closed\");\n      }\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory);\n      }\n      \n      cacheValue.refCnt++;\n      log.debug(\"incRef'ed: {}\", cacheValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["e22ffe8cc51a892ae103df018822d7873e901c2a","7530de27b87b961b51f01bd1299b7004d46e8823"],"058801f8673d53a5abac8088204860ec29a40f0d":["7530de27b87b961b51f01bd1299b7004d46e8823"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["058801f8673d53a5abac8088204860ec29a40f0d"],"7530de27b87b961b51f01bd1299b7004d46e8823":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"058801f8673d53a5abac8088204860ec29a40f0d":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","058801f8673d53a5abac8088204860ec29a40f0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}