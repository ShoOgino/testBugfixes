{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#iveEndings().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#iveEndings().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#iveEndings().mjava","sourceNew":"  /*\n   * this routine deals with -ive endings. It normalizes some of the -ative\n   * endings directly, and also maps some -ive endings to -ion.\n   */\n  private void iveEndings() {\n    int old_k = k;\n    \n    if (endsIn('i', 'v', 'e')) {\n      word.setLength(j + 1); /* try removing -ive entirely */\n      k = j;\n      if (lookup()) return;\n      \n      word.unsafeWrite('e'); /* try removing -ive and adding -e */\n      k = j + 1;\n      if (lookup()) return;\n      word.setLength(j + 1);\n      word.append(\"ive\");\n      if ((j > 0) && (word.charAt(j - 1) == 'a') && (word.charAt(j) == 't')) {\n        word.setCharAt(j - 1, 'e'); /* try removing -ative and adding -e */\n        word.setLength(j); /* (e.g., determinative -> determine) */\n        k = j - 1;\n        if (lookup()) return;\n        word.setLength(j - 1); /* try just removing -ative */\n        if (lookup()) return;\n        \n        word.append(\"ative\");\n        k = old_k;\n      }\n      \n      /* try mapping -ive to -ion (e.g., injunctive/injunction) */\n      word.setCharAt(j + 2, 'o');\n      word.setCharAt(j + 3, 'n');\n      if (lookup()) return;\n      \n      word.setCharAt(j + 2, 'v'); /* restore the original values */\n      word.setCharAt(j + 3, 'e');\n      k = old_k;\n      // nolookup()\n    }\n    return;\n  }\n\n","sourceOld":"  /*\n   * this routine deals with -ive endings. It normalizes some of the -ative\n   * endings directly, and also maps some -ive endings to -ion.\n   */\n  private void iveEndings() {\n    int old_k = k;\n    \n    if (endsIn('i', 'v', 'e')) {\n      word.setLength(j + 1); /* try removing -ive entirely */\n      k = j;\n      if (lookup()) return;\n      \n      word.unsafeWrite('e'); /* try removing -ive and adding -e */\n      k = j + 1;\n      if (lookup()) return;\n      word.setLength(j + 1);\n      word.append(\"ive\");\n      if ((j > 0) && (word.charAt(j - 1) == 'a') && (word.charAt(j) == 't')) {\n        word.setCharAt(j - 1, 'e'); /* try removing -ative and adding -e */\n        word.setLength(j); /* (e.g., determinative -> determine) */\n        k = j - 1;\n        if (lookup()) return;\n        word.setLength(j - 1); /* try just removing -ative */\n        if (lookup()) return;\n        \n        word.append(\"ative\");\n        k = old_k;\n      }\n      \n      /* try mapping -ive to -ion (e.g., injunctive/injunction) */\n      word.setCharAt(j + 2, 'o');\n      word.setCharAt(j + 3, 'n');\n      if (lookup()) return;\n      \n      word.setCharAt(j + 2, 'v'); /* restore the original values */\n      word.setCharAt(j + 3, 'e');\n      k = old_k;\n      // nolookup()\n    }\n    return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}