{"path":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#knnSearcher(String).mjava","commits":[{"id":"e7533828cbcc5f498a44cca5d9bce92692663778","date":1408525002,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#knnSearcher(String).mjava","pathOld":"/dev/null","sourceNew":"  private TopDocs knnSearcher(String text) throws IOException{\n    if (mlt == null) {\n      throw new IOException(\"You must first call Classifier#train\");\n    }\n    BooleanQuery mltQuery = new BooleanQuery();\n    for (String textFieldName : textFieldNames) {\n      mltQuery.add(new BooleanClause(mlt.like(textFieldName, new StringReader(text)), BooleanClause.Occur.SHOULD));\n    }\n    Query classFieldQuery = new WildcardQuery(new Term(classFieldName, \"*\"));\n    mltQuery.add(new BooleanClause(classFieldQuery, BooleanClause.Occur.MUST));\n    if (query != null) {\n      mltQuery.add(query, BooleanClause.Occur.MUST);\n    }\n    return indexSearcher.search(mltQuery, k);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3b2d9bc464ed9ae5113f93c943d3954ee6078e0","date":1415781602,"type":5,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#knnSearch(String).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#knnSearcher(String).mjava","sourceNew":"  private TopDocs knnSearch(String text) throws IOException {\n    if (mlt == null) {\n      throw new IOException(\"You must first call Classifier#train\");\n    }\n    BooleanQuery mltQuery = new BooleanQuery();\n    for (String textFieldName : textFieldNames) {\n      mltQuery.add(new BooleanClause(mlt.like(textFieldName, new StringReader(text)), BooleanClause.Occur.SHOULD));\n    }\n    Query classFieldQuery = new WildcardQuery(new Term(classFieldName, \"*\"));\n    mltQuery.add(new BooleanClause(classFieldQuery, BooleanClause.Occur.MUST));\n    if (query != null) {\n      mltQuery.add(query, BooleanClause.Occur.MUST);\n    }\n    return indexSearcher.search(mltQuery, k);\n  }\n\n","sourceOld":"  private TopDocs knnSearcher(String text) throws IOException{\n    if (mlt == null) {\n      throw new IOException(\"You must first call Classifier#train\");\n    }\n    BooleanQuery mltQuery = new BooleanQuery();\n    for (String textFieldName : textFieldNames) {\n      mltQuery.add(new BooleanClause(mlt.like(textFieldName, new StringReader(text)), BooleanClause.Occur.SHOULD));\n    }\n    Query classFieldQuery = new WildcardQuery(new Term(classFieldName, \"*\"));\n    mltQuery.add(new BooleanClause(classFieldQuery, BooleanClause.Occur.MUST));\n    if (query != null) {\n      mltQuery.add(query, BooleanClause.Occur.MUST);\n    }\n    return indexSearcher.search(mltQuery, k);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7533828cbcc5f498a44cca5d9bce92692663778":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3b2d9bc464ed9ae5113f93c943d3954ee6078e0":["e7533828cbcc5f498a44cca5d9bce92692663778"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3b2d9bc464ed9ae5113f93c943d3954ee6078e0"]},"commit2Childs":{"e7533828cbcc5f498a44cca5d9bce92692663778":["c3b2d9bc464ed9ae5113f93c943d3954ee6078e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7533828cbcc5f498a44cca5d9bce92692663778"],"c3b2d9bc464ed9ae5113f93c943d3954ee6078e0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}