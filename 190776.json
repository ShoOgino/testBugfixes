{"path":"lucene/core/src/test/org/apache/lucene/search/similarities/DistributionTestCase#getSimilarity(Random).mjava","commits":[{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/DistributionTestCase#getSimilarity(Random).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected final Similarity getSimilarity(Random random) {\n    final Lambda lambda;\n    if (random.nextBoolean()) {\n      lambda = new LambdaDF();\n    } else {\n      lambda = new LambdaTTF();\n    }\n\n    // normalization hyper-parameter c\n    final float c;\n    switch (random.nextInt(4)) {\n      case 0:\n        // minimum value\n        c = 0;\n        break;\n      case 1:\n        // tiny value\n        c = Float.MIN_VALUE;\n        break;\n      case 2:\n        // maximum value\n        // we just limit the test to \"reasonable\" c values but don't enforce this anywhere.\n        c = Integer.MAX_VALUE;\n        break;\n      default:\n        // random value\n        c = Integer.MAX_VALUE * random.nextFloat();\n        break;\n    }\n    // normalization hyper-parameter z\n    final float z;\n    switch (random.nextInt(3)) {\n      case 0:\n        // minimum value\n        z = Float.MIN_VALUE;\n        break;\n      case 1:\n        // maximum value\n        z = Math.nextDown(0.5f);\n        break;\n      default:\n        // random value\n        float zcand = random.nextFloat() / 2;\n        if (zcand == 0f) {\n          // nextFloat returns 0 inclusive, we have to avoid it.\n          z = Math.nextUp(zcand);\n        } else {\n          z = zcand;\n        }\n    }\n    // dirichlet parameter mu\n    final float mu;\n    switch (random.nextInt(4)) {\n      case 0:\n        // minimum value\n        mu = 0;\n        break;\n      case 1:\n        // tiny value\n        mu = Float.MIN_VALUE;\n        break;\n      case 2:\n        // maximum value\n        // we just limit the test to \"reasonable\" mu values but don't enforce this anywhere.\n        mu = Integer.MAX_VALUE;\n        break;\n      default:\n        // random value\n        mu = Integer.MAX_VALUE * random.nextFloat();\n        break;\n    }\n    final Normalization normalization;\n    switch(random.nextInt(5)) {\n      case 0:\n        normalization = new Normalization.NoNormalization();\n        break;\n      case 1:\n        normalization = new NormalizationH1(c);\n        break;\n      case 2:\n        normalization = new NormalizationH2(c);\n        break;\n      case 3:\n        normalization = new NormalizationH3(mu);\n        break;\n      default:\n        normalization = new NormalizationZ(z);\n        break;\n    }\n    return new IBSimilarity(getDistribution(), lambda, normalization);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"]},"commit2Childs":{"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}