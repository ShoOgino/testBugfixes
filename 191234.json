{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","commits":[{"id":"fa0876236f0bd8be403747120d248bdd42b75a96","date":1451844229,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (coreContainer.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a07fc51730854f63192fa5ba9d94c8c0d80df3","date":1469112974,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2279b83ef9fbe951d1fff8bb0958744858d257ac","date":1484780487,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n            info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n            info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e021e73178a0be1b0ff15a0894796c23f0556144","date":1493262514,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n            info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n            SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n            cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n            cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n            cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n            info.add(\"cloud\", cloudInfo);\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n            info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6130fcaa36d42a71fc464c80399af8098c42de5a","date":1493878512,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = getIndexSize(core);\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n            info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n            SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n            cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n            cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n            cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n            info.add(\"cloud\", cloudInfo);\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":["d973b7e62a7b395e046df7dc9ebd8df7384f1145"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = getIndexSize(core);\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n            info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d973b7e62a7b395e046df7dc9ebd8df7384f1145","date":1530672938,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = getIndexSize(core);\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":["6130fcaa36d42a71fc464c80399af8098c42de5a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = getIndexSize(core);\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = getIndexSize(core);\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13566d7393ca95d9897baf67f5e9c87dca82a253","date":1571390317,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              cloudInfo.add(REPLICA_TYPE, core.getCoreDescriptor().getCloudDescriptor().getReplicaType().name());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              cloudInfo.add(REPLICA_TYPE, core.getCoreDescriptor().getCloudDescriptor().getReplicaType().name());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              cloudInfo.add(REPLICA_TYPE, core.getCoreDescriptor().getCloudDescriptor().getReplicaType().name());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              cloudInfo.add(REPLICA_TYPE, core.getCoreDescriptor().getCloudDescriptor().getReplicaType().name());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  static NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (cores.isCoreLoading(cname)) {\n      info.add(NAME, cname);\n      info.add(\"isLoaded\", \"false\");\n      info.add(\"isLoading\", \"true\");\n    } else {\n      if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n        // It would be a real mistake to load the cores just to get the status\n        CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n        if (desc != null) {\n          info.add(NAME, desc.getName());\n          info.add(\"instanceDir\", desc.getInstanceDir());\n          // None of the following are guaranteed to be present in a not-yet-loaded core.\n          String tmp = desc.getDataDir();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n          tmp = desc.getConfigName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n          tmp = desc.getSchemaName();\n          if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n          info.add(\"isLoaded\", \"false\");\n        }\n      } else {\n        try (SolrCore core = cores.getCore(cname)) {\n          if (core != null) {\n            info.add(NAME, core.getName());\n            info.add(\"instanceDir\", core.getInstancePath().toString());\n            info.add(\"dataDir\", normalizePath(core.getDataDir()));\n            info.add(\"config\", core.getConfigResource());\n            info.add(\"schema\", core.getSchemaResource());\n            info.add(\"startTime\", core.getStartTimeStamp());\n            info.add(\"uptime\", core.getUptimeMs());\n            if (cores.isZooKeeperAware()) {\n              info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n              info.add(\"configVersion\", core.getSolrConfig().getZnodeVersion());\n              SimpleOrderedMap cloudInfo = new SimpleOrderedMap<>();\n              cloudInfo.add(COLLECTION, core.getCoreDescriptor().getCloudDescriptor().getCollectionName());\n              cloudInfo.add(SHARD, core.getCoreDescriptor().getCloudDescriptor().getShardId());\n              cloudInfo.add(REPLICA, core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName());\n              cloudInfo.add(REPLICA_TYPE, core.getCoreDescriptor().getCloudDescriptor().getReplicaType().name());\n              info.add(\"cloud\", cloudInfo);\n            }\n            if (isIndexInfoNeeded) {\n              RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n              try {\n                SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n                long size = core.getIndexSize();\n                indexInfo.add(\"sizeInBytes\", size);\n                indexInfo.add(\"size\", NumberUtils.readableSize(size));\n                info.add(\"index\", indexInfo);\n              } finally {\n                searcher.decref();\n              }\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa0876236f0bd8be403747120d248bdd42b75a96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["fa0876236f0bd8be403747120d248bdd42b75a96","53a07fc51730854f63192fa5ba9d94c8c0d80df3"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","2279b83ef9fbe951d1fff8bb0958744858d257ac"],"d973b7e62a7b395e046df7dc9ebd8df7384f1145":["6130fcaa36d42a71fc464c80399af8098c42de5a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["2279b83ef9fbe951d1fff8bb0958744858d257ac","6130fcaa36d42a71fc464c80399af8098c42de5a"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["13566d7393ca95d9897baf67f5e9c87dca82a253"],"13566d7393ca95d9897baf67f5e9c87dca82a253":["d973b7e62a7b395e046df7dc9ebd8df7384f1145"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6130fcaa36d42a71fc464c80399af8098c42de5a","d973b7e62a7b395e046df7dc9ebd8df7384f1145"],"53a07fc51730854f63192fa5ba9d94c8c0d80df3":["fa0876236f0bd8be403747120d248bdd42b75a96"],"ba055e19afc289adcb5bedaf68513793a7254012":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"2279b83ef9fbe951d1fff8bb0958744858d257ac":["53a07fc51730854f63192fa5ba9d94c8c0d80df3"],"e021e73178a0be1b0ff15a0894796c23f0556144":["2279b83ef9fbe951d1fff8bb0958744858d257ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6130fcaa36d42a71fc464c80399af8098c42de5a":["e021e73178a0be1b0ff15a0894796c23f0556144"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["6130fcaa36d42a71fc464c80399af8098c42de5a","d973b7e62a7b395e046df7dc9ebd8df7384f1145"]},"commit2Childs":{"fa0876236f0bd8be403747120d248bdd42b75a96":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","53a07fc51730854f63192fa5ba9d94c8c0d80df3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"d973b7e62a7b395e046df7dc9ebd8df7384f1145":["13566d7393ca95d9897baf67f5e9c87dca82a253","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ba055e19afc289adcb5bedaf68513793a7254012"],"13566d7393ca95d9897baf67f5e9c87dca82a253":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"53a07fc51730854f63192fa5ba9d94c8c0d80df3":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","2279b83ef9fbe951d1fff8bb0958744858d257ac"],"2279b83ef9fbe951d1fff8bb0958744858d257ac":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","e9017cf144952056066919f1ebc7897ff9bd71b1","e021e73178a0be1b0ff15a0894796c23f0556144"],"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e021e73178a0be1b0ff15a0894796c23f0556144":["6130fcaa36d42a71fc464c80399af8098c42de5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa0876236f0bd8be403747120d248bdd42b75a96"],"6130fcaa36d42a71fc464c80399af8098c42de5a":["d973b7e62a7b395e046df7dc9ebd8df7384f1145","e9017cf144952056066919f1ebc7897ff9bd71b1","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","e9017cf144952056066919f1ebc7897ff9bd71b1","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}