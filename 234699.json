{"path":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDocIdSet#iterator().mjava","commits":[{"id":"21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c","date":1373406544,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDocIdSet#iterator().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Provides a {@link DocIdSetIterator} to access encoded document ids.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    if (efEncoder.lastEncoded >= DocIdSetIterator.NO_MORE_DOCS) {\n      throw new UnsupportedOperationException(\n          \"Highest encoded value too high for DocIdSetIterator.NO_MORE_DOCS: \" + efEncoder.lastEncoded);\n    }\n    return new DocIdSetIterator() {\n      private int curDocId = -1;\n      private final EliasFanoDecoder efDecoder = efEncoder.getDecoder();\n\n      @Override\n      public int docID() {\n        return curDocId;\n      }\n\n      private int setCurDocID(long nextValue) {\n        curDocId = (nextValue == EliasFanoDecoder.NO_MORE_VALUES)\n            ?  NO_MORE_DOCS\n                : (int) nextValue;\n        return curDocId;\n      }\n\n      @Override\n      public int nextDoc() {\n        return setCurDocID(efDecoder.nextValue());\n      }\n\n      @Override\n      public int advance(int target) {\n        return setCurDocID(efDecoder.advanceToValue(target));\n      }\n\n      @Override\n      public long cost() {\n        return efDecoder.numEncoded;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDocIdSet#iterator().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Provides a {@link DocIdSetIterator} to access encoded document ids.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    if (efEncoder.lastEncoded >= DocIdSetIterator.NO_MORE_DOCS) {\n      throw new UnsupportedOperationException(\n          \"Highest encoded value too high for DocIdSetIterator.NO_MORE_DOCS: \" + efEncoder.lastEncoded);\n    }\n    return new DocIdSetIterator() {\n      private int curDocId = -1;\n      private final EliasFanoDecoder efDecoder = efEncoder.getDecoder();\n\n      @Override\n      public int docID() {\n        return curDocId;\n      }\n\n      private int setCurDocID(long nextValue) {\n        curDocId = (nextValue == EliasFanoDecoder.NO_MORE_VALUES)\n            ?  NO_MORE_DOCS\n                : (int) nextValue;\n        return curDocId;\n      }\n\n      @Override\n      public int nextDoc() {\n        return setCurDocID(efDecoder.nextValue());\n      }\n\n      @Override\n      public int advance(int target) {\n        return setCurDocID(efDecoder.advanceToValue(target));\n      }\n\n      @Override\n      public long cost() {\n        return efDecoder.numEncoded;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"423470dff9e19aa0db92590e282e2ca12e34d65a","date":1381851051,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDocIdSet#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDocIdSet#iterator().mjava","sourceNew":"  /**\n   * Provides a {@link DocIdSetIterator} to access encoded document ids.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    if (efEncoder.lastEncoded >= DocIdSetIterator.NO_MORE_DOCS) {\n      throw new UnsupportedOperationException(\n          \"Highest encoded value too high for DocIdSetIterator.NO_MORE_DOCS: \" + efEncoder.lastEncoded);\n    }\n    return new DocIdSetIterator() {\n      private int curDocId = -1;\n      private final EliasFanoDecoder efDecoder = efEncoder.getDecoder();\n\n      @Override\n      public int docID() {\n        return curDocId;\n      }\n\n      private int setCurDocID(long value) {\n        curDocId = (value == EliasFanoDecoder.NO_MORE_VALUES)\n            ?  NO_MORE_DOCS\n                : (int) value;\n        return curDocId;\n      }\n\n      @Override\n      public int nextDoc() {\n        return setCurDocID(efDecoder.nextValue());\n      }\n\n      @Override\n      public int advance(int target) {\n        return setCurDocID(efDecoder.advanceToValue(target));\n      }\n\n      @Override\n      public long cost() {\n        return efDecoder.numEncoded();\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Provides a {@link DocIdSetIterator} to access encoded document ids.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    if (efEncoder.lastEncoded >= DocIdSetIterator.NO_MORE_DOCS) {\n      throw new UnsupportedOperationException(\n          \"Highest encoded value too high for DocIdSetIterator.NO_MORE_DOCS: \" + efEncoder.lastEncoded);\n    }\n    return new DocIdSetIterator() {\n      private int curDocId = -1;\n      private final EliasFanoDecoder efDecoder = efEncoder.getDecoder();\n\n      @Override\n      public int docID() {\n        return curDocId;\n      }\n\n      private int setCurDocID(long nextValue) {\n        curDocId = (nextValue == EliasFanoDecoder.NO_MORE_VALUES)\n            ?  NO_MORE_DOCS\n                : (int) nextValue;\n        return curDocId;\n      }\n\n      @Override\n      public int nextDoc() {\n        return setCurDocID(efDecoder.nextValue());\n      }\n\n      @Override\n      public int advance(int target) {\n        return setCurDocID(efDecoder.advanceToValue(target));\n      }\n\n      @Override\n      public long cost() {\n        return efDecoder.numEncoded;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556259cdb46d4f7fb27f4688c4efcb3eaee4a550","date":1432028057,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDocIdSet#iterator().mjava","sourceNew":null,"sourceOld":"  /**\n   * Provides a {@link DocIdSetIterator} to access encoded document ids.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    if (efEncoder.lastEncoded >= DocIdSetIterator.NO_MORE_DOCS) {\n      throw new UnsupportedOperationException(\n          \"Highest encoded value too high for DocIdSetIterator.NO_MORE_DOCS: \" + efEncoder.lastEncoded);\n    }\n    return new DocIdSetIterator() {\n      private int curDocId = -1;\n      private final EliasFanoDecoder efDecoder = efEncoder.getDecoder();\n\n      @Override\n      public int docID() {\n        return curDocId;\n      }\n\n      private int setCurDocID(long value) {\n        curDocId = (value == EliasFanoDecoder.NO_MORE_VALUES)\n            ?  NO_MORE_DOCS\n                : (int) value;\n        return curDocId;\n      }\n\n      @Override\n      public int nextDoc() {\n        return setCurDocID(efDecoder.nextValue());\n      }\n\n      @Override\n      public int advance(int target) {\n        return setCurDocID(efDecoder.advanceToValue(target));\n      }\n\n      @Override\n      public long cost() {\n        return efDecoder.numEncoded();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["423470dff9e19aa0db92590e282e2ca12e34d65a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c"],"21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"423470dff9e19aa0db92590e282e2ca12e34d65a":["21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550"]},"commit2Childs":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c":["37a0f60745e53927c4c876cfe5b5a58170f0646c","423470dff9e19aa0db92590e282e2ca12e34d65a"],"423470dff9e19aa0db92590e282e2ca12e34d65a":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}