{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        ord = segmentValues.getOrd(contextDoc);\n        if(ord > -1) {\n          ord = (int)segmentOrdinalMap.get(ord);\n        }\n      } else {\n        ord = segmentValues.getOrd(globalDoc);\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","sourceNew":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (contextDoc > segmentValues.docID()) {\n          segmentValues.advance(contextDoc);\n        }\n        if (contextDoc == segmentValues.docID()) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (globalDoc > segmentValues.docID()) {\n          segmentValues.advance(globalDoc);\n        }\n        if (globalDoc == segmentValues.docID()) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","sourceOld":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        ord = segmentValues.getOrd(contextDoc);\n        if(ord > -1) {\n          ord = (int)segmentOrdinalMap.get(ord);\n        }\n      } else {\n        ord = segmentValues.getOrd(globalDoc);\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","sourceNew":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (contextDoc > segmentValues.docID()) {\n          segmentValues.advance(contextDoc);\n        }\n        if (contextDoc == segmentValues.docID()) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (globalDoc > segmentValues.docID()) {\n          segmentValues.advance(globalDoc);\n        }\n        if (globalDoc == segmentValues.docID()) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","sourceOld":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        ord = segmentValues.getOrd(contextDoc);\n        if(ord > -1) {\n          ord = (int)segmentOrdinalMap.get(ord);\n        }\n      } else {\n        ord = segmentValues.getOrd(globalDoc);\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","sourceNew":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (contextDoc > segmentValues.docID()) {\n          segmentValues.advance(contextDoc);\n        }\n        if (contextDoc == segmentValues.docID()) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (globalDoc > segmentValues.docID()) {\n          segmentValues.advance(globalDoc);\n        }\n        if (globalDoc == segmentValues.docID()) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","sourceOld":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        ord = segmentValues.getOrd(contextDoc);\n        if(ord > -1) {\n          ord = (int)segmentOrdinalMap.get(ord);\n        }\n      } else {\n        ord = segmentValues.getOrd(globalDoc);\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b","date":1518443389,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","sourceNew":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (contextDoc > segmentValues.docID()) {\n          segmentValues.advance(contextDoc);\n        }\n        if (contextDoc == segmentValues.docID()) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (segmentValues.advanceExact(globalDoc)) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","sourceOld":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (contextDoc > segmentValues.docID()) {\n          segmentValues.advance(contextDoc);\n        }\n        if (contextDoc == segmentValues.docID()) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (globalDoc > segmentValues.docID()) {\n          segmentValues.advance(globalDoc);\n        }\n        if (globalDoc == segmentValues.docID()) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c62352c33f77624124d1cbf58a1291da78141f7","date":1518514846,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","sourceNew":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (segmentValues.advanceExact(contextDoc)) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (segmentValues.advanceExact(globalDoc)) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","sourceOld":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (contextDoc > segmentValues.docID()) {\n          segmentValues.advance(contextDoc);\n        }\n        if (contextDoc == segmentValues.docID()) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (segmentValues.advanceExact(globalDoc)) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueCollector#collect(int).mjava","sourceNew":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (segmentValues.advanceExact(contextDoc)) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (segmentValues.advanceExact(globalDoc)) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","sourceOld":"    public void collect(int contextDoc) throws IOException {\n      int globalDoc = contextDoc+this.docBase;\n      int ord = -1;\n      if(this.ordinalMap != null) {\n        if (contextDoc > segmentValues.docID()) {\n          segmentValues.advance(contextDoc);\n        }\n        if (contextDoc == segmentValues.docID()) {\n          ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());\n        }\n      } else {\n        if (globalDoc > segmentValues.docID()) {\n          segmentValues.advance(globalDoc);\n        }\n        if (globalDoc == segmentValues.docID()) {\n          ord = segmentValues.ordValue();\n        }\n      }\n      collapseStrategy.collapse(ord, contextDoc, globalDoc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6c62352c33f77624124d1cbf58a1291da78141f7":["81f64a6570bc5d216c5d575c3b29ecb106fa0e6b"],"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6c62352c33f77624124d1cbf58a1291da78141f7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6c62352c33f77624124d1cbf58a1291da78141f7":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b":["6c62352c33f77624124d1cbf58a1291da78141f7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["81f64a6570bc5d216c5d575c3b29ecb106fa0e6b","bfcdec9fcf0409223f35c5ec3bc14094314941b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}