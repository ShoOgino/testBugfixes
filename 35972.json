{"path":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43adc163640856c8b07e4cf1b2046c9af56d3ae7","date":1286989273,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 3456);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 3456);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 3456);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr \n   * This is useful for debugging\n   */\n  public static void main( String[] args )\n  {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner( \"/solr\", 3456 );\n      jetty.start();\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82c64c069de10ccc17f6139f128b103859f46d98","date":1307558595,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 3456);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 3456);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 3456);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/JettySolrRunner#main(String[]).mjava","sourceNew":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * A main class that starts jetty+solr This is useful for debugging\n   */\n  public static void main(String[] args) {\n    try {\n      JettySolrRunner jetty = new JettySolrRunner(\"/solr\", 8983);\n      jetty.start();\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["43adc163640856c8b07e4cf1b2046c9af56d3ae7","82c64c069de10ccc17f6139f128b103859f46d98"],"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"82c64c069de10ccc17f6139f128b103859f46d98":["43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["82c64c069de10ccc17f6139f128b103859f46d98","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","82c64c069de10ccc17f6139f128b103859f46d98"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["82c64c069de10ccc17f6139f128b103859f46d98"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["1da8d55113b689b06716246649de6f62430f15c0","43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","82c64c069de10ccc17f6139f128b103859f46d98","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"82c64c069de10ccc17f6139f128b103859f46d98":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","c26f00b574427b55127e869b935845554afde1fa","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["43adc163640856c8b07e4cf1b2046c9af56d3ae7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}