{"path":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","commits":[{"id":"9dee311b2816356910363a8d15fc076caf6367eb","date":1392012517,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db474afed4ffdc5df350db03f966d41dfdf1a9b","date":1397776827,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd","date":1397789808,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e58bb31b4af6b8eeb1539849575c59df745bc6e6","date":1461874681,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04effb6bae0254b6d8632d67c1ec9121b33aa56e","date":1463009303,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  /** \n   * Create an SSLTestConfig based on a few caller specified options.  As needed, \n   * keystore/truststore information will be pulled from a hardocded resource file provided \n   * by the solr test-framework.\n   *\n   * @param useSSL - wether SSL should be required.\n   * @param clientAuth - whether client authentication should be required.\n   */\n  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, null, TEST_KEYSTORE_PASSWORD, null, TEST_KEYSTORE_PASSWORD);\n    trustStore = keyStore = Resource.newClassPathResource(TEST_KEYSTORE_RESOURCE);\n    if (null == keyStore || ! keyStore.exists() ) {\n      throw new IllegalStateException(\"Unable to locate keystore resource file in classpath: \"\n                                      + TEST_KEYSTORE_RESOURCE);\n    }\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","bugFix":null,"bugIntro":["e67ae138c1173c6193dbcfd9a94142b99ed2a0c5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  /** \n   * Create an SSLTestConfig based on a few caller specified options.  As needed, \n   * keystore/truststore information will be pulled from a hardocded resource file provided \n   * by the solr test-framework.\n   *\n   * @param useSSL - wether SSL should be required.\n   * @param clientAuth - whether client authentication should be required.\n   */\n  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, null, TEST_KEYSTORE_PASSWORD, null, TEST_KEYSTORE_PASSWORD);\n    trustStore = keyStore = Resource.newClassPathResource(TEST_KEYSTORE_RESOURCE);\n    if (null == keyStore || ! keyStore.exists() ) {\n      throw new IllegalStateException(\"Unable to locate keystore resource file in classpath: \"\n                                      + TEST_KEYSTORE_RESOURCE);\n    }\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  /** \n   * Create an SSLTestConfig based on a few caller specified options.  As needed, \n   * keystore/truststore information will be pulled from a hardocded resource file provided \n   * by the solr test-framework.\n   *\n   * @param useSSL - wether SSL should be required.\n   * @param clientAuth - whether client authentication should be required.\n   */\n  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, null, TEST_KEYSTORE_PASSWORD, null, TEST_KEYSTORE_PASSWORD);\n    trustStore = keyStore = Resource.newClassPathResource(TEST_KEYSTORE_RESOURCE);\n    if (null == keyStore || ! keyStore.exists() ) {\n      throw new IllegalStateException(\"Unable to locate keystore resource file in classpath: \"\n                                      + TEST_KEYSTORE_RESOURCE);\n    }\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD, TEST_KEYSTORE_PATH, TEST_KEYSTORE_PASSWORD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5","date":1524429517,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean).mjava","sourceNew":"  /**\n   * Create an SSLTestConfig based on a few caller specified options, \n   * implicitly assuming <code>checkPeerName=false</code>.  \n   * <p>\n   * As needed, keystore/truststore information will be pulled from a hardcoded resource \n   * file provided by the solr test-framework\n   * </p>\n   *\n   * @param useSSL - whether SSL should be required.\n   * @param clientAuth - whether client authentication should be required.\n   */\n  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    this(useSSL, clientAuth, false);\n  }\n\n","sourceOld":"  /** \n   * Create an SSLTestConfig based on a few caller specified options.  As needed, \n   * keystore/truststore information will be pulled from a hardocded resource file provided \n   * by the solr test-framework.\n   *\n   * @param useSSL - wether SSL should be required.\n   * @param clientAuth - whether client authentication should be required.\n   */\n  public SSLTestConfig(boolean useSSL, boolean clientAuth) {\n    super(useSSL, clientAuth, null, TEST_KEYSTORE_PASSWORD, null, TEST_KEYSTORE_PASSWORD);\n    trustStore = keyStore = Resource.newClassPathResource(TEST_KEYSTORE_RESOURCE);\n    if (null == keyStore || ! keyStore.exists() ) {\n      throw new IllegalStateException(\"Unable to locate keystore resource file in classpath: \"\n                                      + TEST_KEYSTORE_RESOURCE);\n    }\n  }\n\n","bugFix":["04effb6bae0254b6d8632d67c1ec9121b33aa56e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd":["0db474afed4ffdc5df350db03f966d41dfdf1a9b"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["e58bb31b4af6b8eeb1539849575c59df745bc6e6"],"0db474afed4ffdc5df350db03f966d41dfdf1a9b":["9dee311b2816356910363a8d15fc076caf6367eb"],"e58bb31b4af6b8eeb1539849575c59df745bc6e6":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dee311b2816356910363a8d15fc076caf6367eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e67ae138c1173c6193dbcfd9a94142b99ed2a0c5"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["e58bb31b4af6b8eeb1539849575c59df745bc6e6","04effb6bae0254b6d8632d67c1ec9121b33aa56e"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd","e58bb31b4af6b8eeb1539849575c59df745bc6e6"]},"commit2Childs":{"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd":["e58bb31b4af6b8eeb1539849575c59df745bc6e6","55b50463286869f584cf849d1587a0fcd54d1dfa"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"0db474afed4ffdc5df350db03f966d41dfdf1a9b":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd"],"e58bb31b4af6b8eeb1539849575c59df745bc6e6":["04effb6bae0254b6d8632d67c1ec9121b33aa56e","d470c8182e92b264680e34081b75e70a9f2b3c89","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dee311b2816356910363a8d15fc076caf6367eb"],"9dee311b2816356910363a8d15fc076caf6367eb":["0db474afed4ffdc5df350db03f966d41dfdf1a9b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["e67ae138c1173c6193dbcfd9a94142b99ed2a0c5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}