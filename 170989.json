{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#pushDeletes(FlushedSegment).mjava","commits":[{"id":"bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf","date":1298618128,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#pushDeletes(FlushedSegment).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#pushDeletes(SegmentInfo,BufferedDeletes).mjava","sourceNew":"  private synchronized void pushDeletes(FlushedSegment flushedSegment) {\n    maybePushPendingDeletes();\n    if (flushedSegment != null) {\n      BufferedDeletes deletes = flushedSegment.segmentDeletes;\n      final long delGen = bufferedDeletesStream.getNextGen();\n      // Lock order: DW -> BD\n      if (deletes != null && deletes.any()) {\n        final FrozenBufferedDeletes packet = new FrozenBufferedDeletes(deletes, delGen);\n          if (infoStream != null) {\n            message(\"flush: push buffered deletes\");\n          }\n          bufferedDeletesStream.push(packet);\n          if (infoStream != null) {\n            message(\"flush: delGen=\" + packet.gen);\n          }\n          }\n      flushedSegment.segmentInfo.setBufferedDeletesGen(delGen);\n          }\n        }\n\n","sourceOld":"  private final void pushDeletes(SegmentInfo segmentInfo, BufferedDeletes segmentDeletes) {\n    synchronized(indexWriter) {\n      // Lock order: DW -> BD\n      final long delGen = bufferedDeletesStream.getNextGen();\n      if (segmentDeletes.any()) {\n        if (indexWriter.segmentInfos.size() > 0 || segmentInfo != null) {\n          final FrozenBufferedDeletes packet = new FrozenBufferedDeletes(segmentDeletes, delGen);\n          if (infoStream != null) {\n            message(\"flush: push buffered deletes\");\n          }\n          bufferedDeletesStream.push(packet);\n          if (infoStream != null) {\n            message(\"flush: delGen=\" + packet.gen);\n          }\n          if (segmentInfo != null) {\n            segmentInfo.setBufferedDeletesGen(packet.gen);\n          }\n        } else {\n          if (infoStream != null) {\n            message(\"flush: drop buffered deletes: no segments\");\n          }\n          // We can safely discard these deletes: since\n          // there are no segments, the deletions cannot\n          // affect anything.\n        }\n      } else if (segmentInfo != null) {\n        segmentInfo.setBufferedDeletesGen(delGen);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#pushDeletes(FlushedSegment).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#pushDeletes(FlushedSegment).mjava","sourceNew":"  private synchronized void pushDeletes(FlushedSegment flushedSegment) {\n    maybePushPendingDeletes();\n    if (flushedSegment != null) {\n      BufferedDeletes deletes = flushedSegment.segmentDeletes;\n      final long delGen = bufferedDeletesStream.getNextGen();\n      // Lock order: DW -> BD\n      if (deletes != null && deletes.any()) {\n        final FrozenBufferedDeletes packet = new FrozenBufferedDeletes(deletes,\n            delGen);\n        if (infoStream != null) {\n          message(\"flush: push buffered deletes\");\n        }\n        bufferedDeletesStream.push(packet);\n        if (infoStream != null) {\n          message(\"flush: delGen=\" + packet.gen);\n        }\n      }\n      flushedSegment.segmentInfo.setBufferedDeletesGen(delGen);\n    }\n  }\n\n","sourceOld":"  private synchronized void pushDeletes(FlushedSegment flushedSegment) {\n    maybePushPendingDeletes();\n    if (flushedSegment != null) {\n      BufferedDeletes deletes = flushedSegment.segmentDeletes;\n      final long delGen = bufferedDeletesStream.getNextGen();\n      // Lock order: DW -> BD\n      if (deletes != null && deletes.any()) {\n        final FrozenBufferedDeletes packet = new FrozenBufferedDeletes(deletes, delGen);\n          if (infoStream != null) {\n            message(\"flush: push buffered deletes\");\n          }\n          bufferedDeletesStream.push(packet);\n          if (infoStream != null) {\n            message(\"flush: delGen=\" + packet.gen);\n          }\n          }\n      flushedSegment.segmentInfo.setBufferedDeletesGen(delGen);\n          }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"327863a2fd61e831028b6c56c8fef6b00a44eb0b","date":1302686439,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#pushDeletes(FlushedSegment).mjava","sourceNew":null,"sourceOld":"  private synchronized void pushDeletes(FlushedSegment flushedSegment) {\n    maybePushPendingDeletes();\n    if (flushedSegment != null) {\n      BufferedDeletes deletes = flushedSegment.segmentDeletes;\n      final long delGen = bufferedDeletesStream.getNextGen();\n      // Lock order: DW -> BD\n      if (deletes != null && deletes.any()) {\n        final FrozenBufferedDeletes packet = new FrozenBufferedDeletes(deletes,\n            delGen);\n        if (infoStream != null) {\n          message(\"flush: push buffered deletes\");\n        }\n        bufferedDeletesStream.push(packet);\n        if (infoStream != null) {\n          message(\"flush: delGen=\" + packet.gen);\n        }\n      }\n      flushedSegment.segmentInfo.setBufferedDeletesGen(delGen);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["327863a2fd61e831028b6c56c8fef6b00a44eb0b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["327863a2fd61e831028b6c56c8fef6b00a44eb0b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}