{"path":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","commits":[{"id":"3a4d59223802237d352245759cf541e315aab20a","date":1285686672,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","pathOld":"/dev/null","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer());\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","ee76d213d935c68932ca13b55fa0a8a32bf6af1a","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","pathOld":"/dev/null","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer());\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer());\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer());\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer());\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer());\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112629f1dfd1451722c6047bcf593e6efc96f5f4","date":1309910887,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testDistanceAsEditsParsing().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testDistanceAsEditsParsing().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testDistanceAsEditsParsing().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testDistanceAsEditsParsing().mjava","sourceNew":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","sourceOld":"  public void testDistanceAsEditsParsing() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockAnalyzer(random));\n    FuzzyQuery q = (FuzzyQuery) qp.parse(\"foobar~2\");\n    assertEquals(2f, q.getMinSimilarity(), 0.0001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2c5f0cb44df114db4228c8f77861714b5cabaea":["3a4d59223802237d352245759cf541e315aab20a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["3a4d59223802237d352245759cf541e315aab20a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3a4d59223802237d352245759cf541e315aab20a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3a4d59223802237d352245759cf541e315aab20a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a4d59223802237d352245759cf541e315aab20a"],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["f2c5f0cb44df114db4228c8f77861714b5cabaea","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["112629f1dfd1451722c6047bcf593e6efc96f5f4"]},"commit2Childs":{"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","112629f1dfd1451722c6047bcf593e6efc96f5f4","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a4d59223802237d352245759cf541e315aab20a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"3a4d59223802237d352245759cf541e315aab20a":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}