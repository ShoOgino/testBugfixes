{"path":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"106069d345c14ee5c76f0ea76397b02a656f883c","date":1411998064,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3","date":1460654262,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this, core);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","bugFix":["08970e5b8411182a29412c177eff67ec1110095b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b25ee75ed6af3df45e6fa30072db01d921df493","date":1481047896,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this, core);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n      try {\n        zkIndexSchemaReader.refreshSchemaFromZk(-1); // update immediately if newer is available\n        core.setLatestSchema(getSchema());\n      } catch (KeeperException e) {\n        String msg = \"Error attempting to access \" + zkLoader.getConfigSetZkPath() + \"/\" + managedSchemaResourceName;\n        log.error(msg, e);\n        throw new SolrException(ErrorCode.SERVER_ERROR, msg, e);\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        log.warn(\"\", e);\n      }\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this, core);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d","date":1481116359,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this, core);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n      try {\n        zkIndexSchemaReader.refreshSchemaFromZk(-1); // update immediately if newer is available\n        core.setLatestSchema(getSchema());\n      } catch (KeeperException e) {\n        String msg = \"Error attempting to access \" + zkLoader.getConfigSetZkPath() + \"/\" + managedSchemaResourceName;\n        log.error(msg, e);\n        throw new SolrException(ErrorCode.SERVER_ERROR, msg, e);\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        log.warn(\"\", e);\n      }\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this, core);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this, core);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n      try {\n        zkIndexSchemaReader.refreshSchemaFromZk(-1); // update immediately if newer is available\n        core.setLatestSchema(getSchema());\n      } catch (KeeperException e) {\n        String msg = \"Error attempting to access \" + zkLoader.getConfigSetZkPath() + \"/\" + managedSchemaResourceName;\n        log.error(msg, e);\n        throw new SolrException(ErrorCode.SERVER_ERROR, msg, e);\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        log.warn(\"\", e);\n      }\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    this.core = core;\n    if (loader instanceof ZkSolrResourceLoader) {\n      this.zkIndexSchemaReader = new ZkIndexSchemaReader(this, core);\n      ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader)loader;\n      zkLoader.setZkIndexSchemaReader(this.zkIndexSchemaReader);\n    } else {\n      this.zkIndexSchemaReader = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3","5b25ee75ed6af3df45e6fa30072db01d921df493"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["08970e5b8411182a29412c177eff67ec1110095b","106069d345c14ee5c76f0ea76397b02a656f883c"],"106069d345c14ee5c76f0ea76397b02a656f883c":["08970e5b8411182a29412c177eff67ec1110095b"],"9856095f7afb5a607bf5e65077615ed91273508c":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3","ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"5b25ee75ed6af3df45e6fa30072db01d921df493":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3"],"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3":["106069d345c14ee5c76f0ea76397b02a656f883c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"106069d345c14ee5c76f0ea76397b02a656f883c":["d9a47902d6207303f5ed3e7aaca62ca33433af66","29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"5b25ee75ed6af3df45e6fa30072db01d921df493":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d","9856095f7afb5a607bf5e65077615ed91273508c","5b25ee75ed6af3df45e6fa30072db01d921df493"],"08970e5b8411182a29412c177eff67ec1110095b":["d9a47902d6207303f5ed3e7aaca62ca33433af66","106069d345c14ee5c76f0ea76397b02a656f883c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}