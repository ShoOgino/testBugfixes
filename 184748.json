{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","sourceNew":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    doc.add(new Field(\"fielda\", sb.toString(), customType2));\n    doc.add(new Field(\"fieldb\", sb.toString(), customType3));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    doc.add(new Field(\"fielda\", sb.toString(), customType2));\n    doc.add(new Field(\"fieldb\", sb.toString(), customType3));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#createDocument(int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","sourceNew":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    doc.add(new Field(\"fielda\", sb.toString(), customType2));\n    doc.add(new Field(\"fieldb\", sb.toString(), customType3));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    doc.add(new Field(\"fielda\", sb.toString(), customType2));\n    doc.add(new Field(\"fieldb\", sb.toString(), customType3));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"]},"commit2Childs":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}