{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/routing/AffinityReplicaListTransformerFactory#getInstance(String,SolrParams,ReplicaListTransformerFactory).mjava","commits":[{"id":"833432c363468a5df50f87446a68015404b1fbcf","date":1572302961,"type":1,"author":"Houston Putman","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/routing/AffinityReplicaListTransformerFactory#getInstance(String,SolrParams,ReplicaListTransformerFactory).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AffinityReplicaListTransformerFactory#getInstance(String,SolrQueryRequest,ReplicaListTransformerFactory).mjava","sourceNew":"  @Override\n  public ReplicaListTransformer getInstance(String configSpec, SolrParams requestParams, ReplicaListTransformerFactory fallback) {\n    ReplicaListTransformer rlt;\n    if (configSpec == null) {\n      rlt = AffinityReplicaListTransformer.getInstance(defaultDividendParam, defaultHashParam, requestParams);\n    } else {\n      String[] parts = configSpec.split(\":\", 2);\n      switch (parts[0]) {\n        case ShardParams.ROUTING_DIVIDEND:\n          rlt = AffinityReplicaListTransformer.getInstance(parts.length == 1 ? defaultDividendParam : parts[1], defaultHashParam, requestParams);\n          break;\n        case ShardParams.ROUTING_HASH:\n          rlt = AffinityReplicaListTransformer.getInstance(null, parts.length == 1 ? defaultHashParam : parts[1], requestParams);\n          break;\n        default:\n          throw new IllegalArgumentException(\"Invalid routing spec: \\\"\" + configSpec + '\"');\n      }\n    }\n    return rlt != null ? rlt : fallback.getInstance(null, requestParams, null);\n  }\n\n","sourceOld":"  @Override\n  public ReplicaListTransformer getInstance(String configSpec, SolrQueryRequest request, ReplicaListTransformerFactory fallback) {\n    ReplicaListTransformer rlt;\n    if (configSpec == null) {\n      rlt = AffinityReplicaListTransformer.getInstance(defaultDividendParam, defaultHashParam, request);\n    } else {\n      String[] parts = configSpec.split(\":\", 2);\n      switch (parts[0]) {\n        case ShardParams.ROUTING_DIVIDEND:\n          rlt = AffinityReplicaListTransformer.getInstance(parts.length == 1 ? defaultDividendParam : parts[1], defaultHashParam, request);\n          break;\n        case ShardParams.ROUTING_HASH:\n          rlt = AffinityReplicaListTransformer.getInstance(null, parts.length == 1 ? defaultHashParam : parts[1], request);\n          break;\n        default:\n          throw new IllegalArgumentException(\"Invalid routing spec: \\\"\" + configSpec + '\"');\n      }\n    }\n    return rlt != null ? rlt : fallback.getInstance(null, request, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"833432c363468a5df50f87446a68015404b1fbcf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["833432c363468a5df50f87446a68015404b1fbcf"]},"commit2Childs":{"833432c363468a5df50f87446a68015404b1fbcf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["833432c363468a5df50f87446a68015404b1fbcf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}