{"path":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","commits":[{"id":"d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d","date":1432150334,"type":0,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","pathOld":"/dev/null","sourceNew":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(\"solrconfig-mergepolicy-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ea771da4621a28e1340bdaeb615d8553e4d7c9d","date":1455040025,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","sourceNew":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(random().nextBoolean() ? \"solrconfig-mergepolicy-nocfs.xml\" : \"solrconfig-mergepolicyfactory-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","sourceOld":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(\"solrconfig-mergepolicy-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70d848516a5d0b23d183a2ceb4f4fb8634205956","date":1496408348,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","sourceNew":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(\"solrconfig-mergepolicyfactory-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","sourceOld":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(random().nextBoolean() ? \"solrconfig-mergepolicy-nocfs.xml\" : \"solrconfig-mergepolicyfactory-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","sourceNew":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(\"solrconfig-mergepolicyfactory-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","sourceOld":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(random().nextBoolean() ? \"solrconfig-mergepolicy-nocfs.xml\" : \"solrconfig-mergepolicyfactory-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testSetNoCFSMergePolicyConfig().mjava","sourceNew":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(\"solrconfig-mergepolicyfactory-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","sourceOld":"  public void testSetNoCFSMergePolicyConfig() throws Exception {\n    final boolean useCompoundFile = random().nextBoolean();\n    System.setProperty(\"testSetNoCFSMergePolicyConfig.useCompoundFile\", String.valueOf(useCompoundFile));\n    try {\n      initCore(random().nextBoolean() ? \"solrconfig-mergepolicy-nocfs.xml\" : \"solrconfig-mergepolicyfactory-nocfs.xml\",\"schema-minimal.xml\");\n      IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n      assertEquals(useCompoundFile, iwc.getUseCompoundFile());\n\n      TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                                 iwc.getMergePolicy());\n      assertEquals(0.5D, tieredMP.getNoCFSRatio(), 0.0D);\n    } finally {\n      System.getProperties().remove(\"testSetNoCFSMergePolicyConfig.useCompoundFile\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ea771da4621a28e1340bdaeb615d8553e4d7c9d":["d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d"],"28288370235ed02234a64753cdbf0c6ec096304a":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"1ea771da4621a28e1340bdaeb615d8553e4d7c9d":["e9017cf144952056066919f1ebc7897ff9bd71b1","70d848516a5d0b23d183a2ceb4f4fb8634205956","28288370235ed02234a64753cdbf0c6ec096304a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d"],"d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}