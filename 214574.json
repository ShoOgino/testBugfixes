{"path":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","commits":[{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb18dddc5f47fbf80dac395dde293655d5ad74db","date":1310299358,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","sourceNew":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) throws IOException {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n    boolean success = false;\n    try {\n      dataOut = directory.createOutput(dataFileName, IOContext.DEFAULT);\n      dataOut.writeVInt(FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, dataOut);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","sourceNew":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) throws IOException {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n    boolean success = false;\n    try {\n      dataOut = directory.createOutput(dataFileName, IOContext.DEFAULT);\n      dataOut.writeVInt(FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(dataOut);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) throws IOException {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n    boolean success = false;\n    try {\n      dataOut = directory.createOutput(dataFileName, IOContext.DEFAULT);\n      dataOut.writeVInt(FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, dataOut);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","sourceNew":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) throws IOException {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n    \n  }\n\n","sourceOld":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) throws IOException {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n    boolean success = false;\n    try {\n      dataOut = directory.createOutput(dataFileName, IOContext.DEFAULT);\n      dataOut.writeVInt(FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(dataOut);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter#CompoundFileWriter(Directory,String).mjava","sourceNew":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) throws IOException {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n    \n  }\n\n","sourceOld":"  /**\n   * Create the compound stream in the specified file. The file name is the\n   * entire name (no extensions are added).\n   * \n   * @throws NullPointerException\n   *           if <code>dir</code> or <code>name</code> is null\n   */\n  CompoundFileWriter(Directory dir, String name) throws IOException {\n    if (dir == null)\n      throw new NullPointerException(\"directory cannot be null\");\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    directory = dir;\n    entryTableName = IndexFileNames.segmentFileName(\n        IndexFileNames.stripExtension(name), \"\",\n        IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n    dataFileName = name;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["bb18dddc5f47fbf80dac395dde293655d5ad74db"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb18dddc5f47fbf80dac395dde293655d5ad74db":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["24230fe54121f9be9d85f2c2067536296785e421"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0aab6e810b4b0d3743d6a048be0602801f4b3920","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["bb18dddc5f47fbf80dac395dde293655d5ad74db","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"bb18dddc5f47fbf80dac395dde293655d5ad74db":["24230fe54121f9be9d85f2c2067536296785e421"],"2553b00f699380c64959ccb27991289aae87be2e":[],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}