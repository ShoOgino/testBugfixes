{"path":"modules/spatial-TEMP/src/test/org/apache/lucene/spatial/strategy/prefix/TestSpatialPrefixField#testRawTokens().mjava","commits":[{"id":"33ee89d976c91275e5be5da438ca0977b1c5b90f","date":1329808149,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial-TEMP/src/test/org/apache/lucene/spatial/strategy/prefix/TestSpatialPrefixField#testRawTokens().mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/strategy/prefix/TestSpatialPrefixField#testRawTokens().mjava","sourceNew":"  @Test\n  public void testRawTokens() {\n    // Ignoring geometry for now, and focus on what tokens need to match\n\n    List<String> docA = Arrays.asList(\n        \"AAAAAA*\",\n        \"AAAAAB+\"\n    );\n\n    List<String> docB = Arrays.asList(\n        \"A*\",\n        \"BB*\"\n    );\n\n    // Assumptions:\n    checkQuery(\"AAAAA\", \"docA\", \"docB\");\n    checkQuery(\"AAAAA*\", \"docA\", \"docB\"); // for now * and + are essentially identical\n    checkQuery(\"AAAAA+\", \"docA\", \"docB\"); // down the road, there may be a difference between 'covers' and an edge\n\n    checkQuery(\"AA*\", \"docB\", \"docA\"); // Bigger input query\n\n    checkQuery(\"AAAAAAAAAAAA*\", \"docA\", \"docB\"); // small\n\n    checkQuery(\"BC\"); // nothing\n    checkQuery(\"XX\"); // nothing\n\n    // match only B\n    checkQuery(\"B\", \"docB\");\n    checkQuery(\"BBBB\", \"docB\");\n    checkQuery(\"B*\", \"docB\");\n    checkQuery(\"BBBB*\", \"docB\");\n  }\n\n","sourceOld":"  @Test\n  public void testRawTokens() {\n    // Ignoring geometry for now, and focus on what tokens need to match\n\n    List<String> docA = Arrays.asList(\n        \"AAAAAA*\",\n        \"AAAAAB+\"\n    );\n\n    List<String> docB = Arrays.asList(\n        \"A*\",\n        \"BB*\"\n    );\n\n    // Assumptions:\n    checkQuery(\"AAAAA\", \"docA\", \"docB\");\n    checkQuery(\"AAAAA*\", \"docA\", \"docB\"); // for now * and + are essentially identical\n    checkQuery(\"AAAAA+\", \"docA\", \"docB\"); // down the road, there may be a difference between 'covers' and an edge\n\n    checkQuery(\"AA*\", \"docB\", \"docA\"); // Bigger input query\n\n    checkQuery(\"AAAAAAAAAAAA*\", \"docA\", \"docB\"); // small\n\n    checkQuery(\"BC\"); // nothing\n    checkQuery(\"XX\"); // nothing\n\n    // match only B\n    checkQuery(\"B\", \"docB\");\n    checkQuery(\"BBBB\", \"docB\");\n    checkQuery(\"B*\", \"docB\");\n    checkQuery(\"BBBB*\", \"docB\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047ba81272a0c4edeb11b1c7810ee23ba73502","date":1329808655,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/strategy/src/test/org/apache/lucene/spatial/strategy/prefix/TestSpatialPrefixField#testRawTokens().mjava","pathOld":"modules/spatial-TEMP/src/test/org/apache/lucene/spatial/strategy/prefix/TestSpatialPrefixField#testRawTokens().mjava","sourceNew":"  @Test\n  public void testRawTokens() {\n    // Ignoring geometry for now, and focus on what tokens need to match\n\n    List<String> docA = Arrays.asList(\n        \"AAAAAA*\",\n        \"AAAAAB+\"\n    );\n\n    List<String> docB = Arrays.asList(\n        \"A*\",\n        \"BB*\"\n    );\n\n    // Assumptions:\n    checkQuery(\"AAAAA\", \"docA\", \"docB\");\n    checkQuery(\"AAAAA*\", \"docA\", \"docB\"); // for now * and + are essentially identical\n    checkQuery(\"AAAAA+\", \"docA\", \"docB\"); // down the road, there may be a difference between 'covers' and an edge\n\n    checkQuery(\"AA*\", \"docB\", \"docA\"); // Bigger input query\n\n    checkQuery(\"AAAAAAAAAAAA*\", \"docA\", \"docB\"); // small\n\n    checkQuery(\"BC\"); // nothing\n    checkQuery(\"XX\"); // nothing\n\n    // match only B\n    checkQuery(\"B\", \"docB\");\n    checkQuery(\"BBBB\", \"docB\");\n    checkQuery(\"B*\", \"docB\");\n    checkQuery(\"BBBB*\", \"docB\");\n  }\n\n","sourceOld":"  @Test\n  public void testRawTokens() {\n    // Ignoring geometry for now, and focus on what tokens need to match\n\n    List<String> docA = Arrays.asList(\n        \"AAAAAA*\",\n        \"AAAAAB+\"\n    );\n\n    List<String> docB = Arrays.asList(\n        \"A*\",\n        \"BB*\"\n    );\n\n    // Assumptions:\n    checkQuery(\"AAAAA\", \"docA\", \"docB\");\n    checkQuery(\"AAAAA*\", \"docA\", \"docB\"); // for now * and + are essentially identical\n    checkQuery(\"AAAAA+\", \"docA\", \"docB\"); // down the road, there may be a difference between 'covers' and an edge\n\n    checkQuery(\"AA*\", \"docB\", \"docA\"); // Bigger input query\n\n    checkQuery(\"AAAAAAAAAAAA*\", \"docA\", \"docB\"); // small\n\n    checkQuery(\"BC\"); // nothing\n    checkQuery(\"XX\"); // nothing\n\n    // match only B\n    checkQuery(\"B\", \"docB\");\n    checkQuery(\"BBBB\", \"docB\");\n    checkQuery(\"B*\", \"docB\");\n    checkQuery(\"BBBB*\", \"docB\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["33ee89d976c91275e5be5da438ca0977b1c5b90f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["c2047ba81272a0c4edeb11b1c7810ee23ba73502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33ee89d976c91275e5be5da438ca0977b1c5b90f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c2047ba81272a0c4edeb11b1c7810ee23ba73502","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}