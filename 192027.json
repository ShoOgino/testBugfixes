{"path":"solr/core/src/test/org/apache/solr/cloud/HttpPartitionTest#createCollectionRetry(String,int,int,int).mjava","commits":[{"id":"37e7502644cd23597431d66e301299b1ead2fb9b","date":1422636984,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/HttpPartitionTest#createCollectionRetry(String,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void createCollectionRetry(String testCollectionName, int numShards, int replicationFactor, int maxShardsPerNode)\n      throws SolrServerException, IOException {\n    CollectionAdminResponse resp = createCollection(testCollectionName, numShards, replicationFactor, maxShardsPerNode);\n    if (resp.getResponse().get(\"failure\") != null) {\n      CollectionAdminRequest.Delete req = new CollectionAdminRequest.Delete();\n      req.setCollectionName(testCollectionName);\n      req.process(cloudClient);\n      \n      resp = createCollection(testCollectionName, numShards, replicationFactor, maxShardsPerNode);\n      \n      if (resp.getResponse().get(\"failure\") != null) {\n        fail(\"Could not create \" + testCollectionName);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3","date":1460654262,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/HttpPartitionTest#createCollectionRetry(String,int,int,int).mjava","sourceNew":null,"sourceOld":"  private void createCollectionRetry(String testCollectionName, int numShards, int replicationFactor, int maxShardsPerNode)\n      throws SolrServerException, IOException {\n    CollectionAdminResponse resp = createCollection(testCollectionName, numShards, replicationFactor, maxShardsPerNode);\n    if (resp.getResponse().get(\"failure\") != null) {\n      CollectionAdminRequest.Delete req = new CollectionAdminRequest.Delete();\n      req.setCollectionName(testCollectionName);\n      req.process(cloudClient);\n      \n      resp = createCollection(testCollectionName, numShards, replicationFactor, maxShardsPerNode);\n      \n      if (resp.getResponse().get(\"failure\") != null) {\n        fail(\"Could not create \" + testCollectionName);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37e7502644cd23597431d66e301299b1ead2fb9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3":["37e7502644cd23597431d66e301299b1ead2fb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37e7502644cd23597431d66e301299b1ead2fb9b"],"37e7502644cd23597431d66e301299b1ead2fb9b":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3"],"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}