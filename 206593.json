{"path":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyAllZNodesAreFiles(Path,String).mjava","commits":[{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":0,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyAllZNodesAreFiles(Path,String).mjava","pathOld":"/dev/null","sourceNew":"  void verifyAllZNodesAreFiles(Path fileRoot, String zkRoot) throws KeeperException, InterruptedException {\n\n    for (String node : zkClient.getChildren(zkRoot, null, true)) {\n      Path thisPath = Paths.get(fileRoot.toAbsolutePath().toString(), node);\n      assertTrue(\"Znode \" + node + \" should have been found on disk at \" + fileRoot.toAbsolutePath().toString(),\n          Files.exists(thisPath));\n      verifyAllZNodesAreFiles(thisPath, zkRoot + \"/\" + node);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyAllZNodesAreFiles(Path,String).mjava","pathOld":"/dev/null","sourceNew":"  void verifyAllZNodesAreFiles(Path fileRoot, String zkRoot) throws KeeperException, InterruptedException {\n\n    for (String node : zkClient.getChildren(zkRoot, null, true)) {\n      Path thisPath = Paths.get(fileRoot.toAbsolutePath().toString(), node);\n      assertTrue(\"Znode \" + node + \" should have been found on disk at \" + fileRoot.toAbsolutePath().toString(),\n          Files.exists(thisPath));\n      verifyAllZNodesAreFiles(thisPath, zkRoot + \"/\" + node);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4dbb79e6da9d3d2ef8d3890b5619da3c1fba62e","date":1490642105,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyAllZNodesAreFiles(Path,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyAllZNodesAreFiles(Path,String).mjava","sourceNew":"  void verifyAllZNodesAreFiles(Path fileRoot, String zkRoot) throws KeeperException, InterruptedException {\n\n    for (String child : zkClient.getChildren(zkRoot, null, true)) {\n      // Skip ephemeral nodes\n      if (zkRoot.endsWith(\"/\") == false) zkRoot += \"/\";\n      if (isEphemeral(zkRoot + child)) continue;\n      \n      Path thisPath = Paths.get(fileRoot.toAbsolutePath().toString(), child);\n      assertTrue(\"Znode \" + child + \" should have been found on disk at \" + fileRoot.toAbsolutePath().toString(),\n          Files.exists(thisPath));\n      verifyAllZNodesAreFiles(thisPath, zkRoot + child);\n    }\n  }\n\n","sourceOld":"  void verifyAllZNodesAreFiles(Path fileRoot, String zkRoot) throws KeeperException, InterruptedException {\n\n    for (String node : zkClient.getChildren(zkRoot, null, true)) {\n      Path thisPath = Paths.get(fileRoot.toAbsolutePath().toString(), node);\n      assertTrue(\"Znode \" + node + \" should have been found on disk at \" + fileRoot.toAbsolutePath().toString(),\n          Files.exists(thisPath));\n      verifyAllZNodesAreFiles(thisPath, zkRoot + \"/\" + node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7b3180545c5d5e137529b5474e018af04e07615","date":1490873944,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyAllZNodesAreFiles(Path,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyAllZNodesAreFiles(Path,String).mjava","sourceNew":"  void verifyAllZNodesAreFiles(Path fileRoot, String zkRoot) throws KeeperException, InterruptedException {\n\n    for (String child : zkClient.getChildren(zkRoot, null, true)) {\n      // Skip ephemeral nodes\n      if (zkRoot.endsWith(\"/\") == false) zkRoot += \"/\";\n      if (isEphemeral(zkRoot + child)) continue;\n      \n      Path thisPath = Paths.get(fileRoot.toAbsolutePath().toString(), child);\n      assertTrue(\"Znode \" + child + \" should have been found on disk at \" + fileRoot.toAbsolutePath().toString(),\n          Files.exists(thisPath));\n      verifyAllZNodesAreFiles(thisPath, zkRoot + child);\n    }\n  }\n\n","sourceOld":"  void verifyAllZNodesAreFiles(Path fileRoot, String zkRoot) throws KeeperException, InterruptedException {\n\n    for (String node : zkClient.getChildren(zkRoot, null, true)) {\n      Path thisPath = Paths.get(fileRoot.toAbsolutePath().toString(), node);\n      assertTrue(\"Znode \" + node + \" should have been found on disk at \" + fileRoot.toAbsolutePath().toString(),\n          Files.exists(thisPath));\n      verifyAllZNodesAreFiles(thisPath, zkRoot + \"/\" + node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7b3180545c5d5e137529b5474e018af04e07615":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"f4dbb79e6da9d3d2ef8d3890b5619da3c1fba62e":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4dbb79e6da9d3d2ef8d3890b5619da3c1fba62e"]},"commit2Childs":{"c7b3180545c5d5e137529b5474e018af04e07615":[],"f4dbb79e6da9d3d2ef8d3890b5619da3c1fba62e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["c7b3180545c5d5e137529b5474e018af04e07615","f4dbb79e6da9d3d2ef8d3890b5619da3c1fba62e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7b3180545c5d5e137529b5474e018af04e07615","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}