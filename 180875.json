{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","commits":[{"id":"9f0e33082a86447f4f2b59a1a5f69a310500276a","date":1519970482,"type":0,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","pathOld":"/dev/null","sourceNew":"  public void testScheduledTriggerFailure() throws Exception {\n    String state = \"{\" +\n        \"  'liveNodes': [\" +\n        \"    '127.0.0.1:49221_solr',\" +\n        \"    '127.0.0.1:49210_solr'\" +\n        \"  ],\" +\n        \"  'suggester': {\" +\n        \"    'action': 'MOVEREPLICA',\" +\n        \"    'hints': {}\" +\n        \"  },\" +\n        \"  'replicaInfo': {\" +\n        \"    '127.0.0.1:49210_solr': {\" +\n        \"      'testScheduledTrigger': {\" +\n        \"        'shard1': [\" +\n        \"          {\" +\n        \"            'core_node3': {\" +\n        \"              'base_url': 'http://127.0.0.1:49210/solr',\" +\n        \"              'node_name': '127.0.0.1:49210_solr',\" +\n        \"              'core': 'testScheduledTrigger_shard1_replica_n1',\" +\n        \"              'state': 'active',\" +\n        \"              'type': 'NRT',\" +\n        \"              'INDEX.sizeInBytes': 6.426125764846802E-8,\" +\n        \"              'shard': 'shard1',\" +\n        \"              'collection': 'testScheduledTrigger'\" +\n        \"            }\" +\n        \"          },\" +\n        \"          {\" +\n        \"            'core_node6': {\" +\n        \"              'base_url': 'http://127.0.0.1:49210/solr',\" +\n        \"              'node_name': '127.0.0.1:49210_solr',\" +\n        \"              'core': 'testScheduledTrigger_shard1_replica_n4',\" +\n        \"              'state': 'active',\" +\n        \"              'type': 'NRT',\" +\n        \"              'INDEX.sizeInBytes': 6.426125764846802E-8,\" +\n        \"              'shard': 'shard1',\" +\n        \"              'collection': 'testScheduledTrigger'\" +\n        \"            }\" +\n        \"          }\" +\n        \"        ]\" +\n        \"      }\" +\n        \"    },\" +\n        \"    '127.0.0.1:49221_solr': {\" +\n        \"      'testScheduledTrigger': {\" +\n        \"        'shard1': [\" +\n        \"          {\" +\n        \"            'core_node5': {\" +\n        \"              'core': 'testScheduledTrigger_shard1_replica_n2',\" +\n        \"              'leader': 'true',\" +\n        \"              'INDEX.sizeInBytes': 6.426125764846802E-8,\" +\n        \"              'base_url': 'http://127.0.0.1:49221/solr',\" +\n        \"              'node_name': '127.0.0.1:49221_solr',\" +\n        \"              'state': 'active',\" +\n        \"              'type': 'NRT',\" +\n        \"              'shard': 'shard1',\" +\n        \"              'collection': 'testScheduledTrigger'\" +\n        \"            }\" +\n        \"          }\" +\n        \"        ]\" +\n        \"      }\" +\n        \"    }\" +\n        \"  },\" +\n        \"  'nodeValues': {\" +\n        \"    '127.0.0.1:49210_solr': {\" +\n        \"      'node': '127.0.0.1:49210_solr',\" +\n        \"      'cores': 2,\" +\n        \"      'freedisk': 197.39717864990234\" +\n        \"    },\" +\n        \"    '127.0.0.1:49221_solr': {\" +\n        \"      'node': '127.0.0.1:49221_solr',\" +\n        \"      'cores': 1,\" +\n        \"      'freedisk': 197.39717864990234\" +\n        \"    }\" +\n        \"  },\" +\n        \"  'autoscalingJson': {\" +\n        \"    'cluster-preferences': [\" +\n        \"      {\" +\n        \"        'minimize': 'cores',\" +\n        \"        'precision': 1\" +\n        \"      },\" +\n        \"      {\" +\n        \"        'maximize': 'freedisk'\" +\n        \"      }\" +\n        \"    ],\" +\n        \"    'cluster-policy': [\" +\n        \"      {\" +\n        \"        'cores': '<3',\" +\n        \"        'node': '#EACH'\" +\n        \"      }\" +\n        \"    ]\" +\n        \"  }\" +\n        \"}\";\n    Map jsonObj = (Map) Utils.fromJSONString(state);\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      log.info(\"OP:{}\", op.getParams());\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9fe59d880401d7b6a9bd963ae45c19b2e6798c1","date":1537498541,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","sourceNew":"  public void testScheduledTriggerFailure() throws Exception {\n    Map jsonObj = (Map) TestPolicy2.loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      log.info(\"OP:{}\", op.getParams());\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","sourceOld":"  public void testScheduledTriggerFailure() throws Exception {\n    String state = \"{\" +\n        \"  'liveNodes': [\" +\n        \"    '127.0.0.1:49221_solr',\" +\n        \"    '127.0.0.1:49210_solr'\" +\n        \"  ],\" +\n        \"  'suggester': {\" +\n        \"    'action': 'MOVEREPLICA',\" +\n        \"    'hints': {}\" +\n        \"  },\" +\n        \"  'replicaInfo': {\" +\n        \"    '127.0.0.1:49210_solr': {\" +\n        \"      'testScheduledTrigger': {\" +\n        \"        'shard1': [\" +\n        \"          {\" +\n        \"            'core_node3': {\" +\n        \"              'base_url': 'http://127.0.0.1:49210/solr',\" +\n        \"              'node_name': '127.0.0.1:49210_solr',\" +\n        \"              'core': 'testScheduledTrigger_shard1_replica_n1',\" +\n        \"              'state': 'active',\" +\n        \"              'type': 'NRT',\" +\n        \"              'INDEX.sizeInBytes': 6.426125764846802E-8,\" +\n        \"              'shard': 'shard1',\" +\n        \"              'collection': 'testScheduledTrigger'\" +\n        \"            }\" +\n        \"          },\" +\n        \"          {\" +\n        \"            'core_node6': {\" +\n        \"              'base_url': 'http://127.0.0.1:49210/solr',\" +\n        \"              'node_name': '127.0.0.1:49210_solr',\" +\n        \"              'core': 'testScheduledTrigger_shard1_replica_n4',\" +\n        \"              'state': 'active',\" +\n        \"              'type': 'NRT',\" +\n        \"              'INDEX.sizeInBytes': 6.426125764846802E-8,\" +\n        \"              'shard': 'shard1',\" +\n        \"              'collection': 'testScheduledTrigger'\" +\n        \"            }\" +\n        \"          }\" +\n        \"        ]\" +\n        \"      }\" +\n        \"    },\" +\n        \"    '127.0.0.1:49221_solr': {\" +\n        \"      'testScheduledTrigger': {\" +\n        \"        'shard1': [\" +\n        \"          {\" +\n        \"            'core_node5': {\" +\n        \"              'core': 'testScheduledTrigger_shard1_replica_n2',\" +\n        \"              'leader': 'true',\" +\n        \"              'INDEX.sizeInBytes': 6.426125764846802E-8,\" +\n        \"              'base_url': 'http://127.0.0.1:49221/solr',\" +\n        \"              'node_name': '127.0.0.1:49221_solr',\" +\n        \"              'state': 'active',\" +\n        \"              'type': 'NRT',\" +\n        \"              'shard': 'shard1',\" +\n        \"              'collection': 'testScheduledTrigger'\" +\n        \"            }\" +\n        \"          }\" +\n        \"        ]\" +\n        \"      }\" +\n        \"    }\" +\n        \"  },\" +\n        \"  'nodeValues': {\" +\n        \"    '127.0.0.1:49210_solr': {\" +\n        \"      'node': '127.0.0.1:49210_solr',\" +\n        \"      'cores': 2,\" +\n        \"      'freedisk': 197.39717864990234\" +\n        \"    },\" +\n        \"    '127.0.0.1:49221_solr': {\" +\n        \"      'node': '127.0.0.1:49221_solr',\" +\n        \"      'cores': 1,\" +\n        \"      'freedisk': 197.39717864990234\" +\n        \"    }\" +\n        \"  },\" +\n        \"  'autoscalingJson': {\" +\n        \"    'cluster-preferences': [\" +\n        \"      {\" +\n        \"        'minimize': 'cores',\" +\n        \"        'precision': 1\" +\n        \"      },\" +\n        \"      {\" +\n        \"        'maximize': 'freedisk'\" +\n        \"      }\" +\n        \"    ],\" +\n        \"    'cluster-policy': [\" +\n        \"      {\" +\n        \"        'cores': '<3',\" +\n        \"        'node': '#EACH'\" +\n        \"      }\" +\n        \"    ]\" +\n        \"  }\" +\n        \"}\";\n    Map jsonObj = (Map) Utils.fromJSONString(state);\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      log.info(\"OP:{}\", op.getParams());\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5a27e78e3d29dee02bab19ded25336471e96882","date":1539677468,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","sourceNew":"  public void testScheduledTriggerFailure() throws Exception {\n    Map jsonObj = (Map) loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      log.info(\"OP:{}\", op.getParams());\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","sourceOld":"  public void testScheduledTriggerFailure() throws Exception {\n    Map jsonObj = (Map) TestPolicy2.loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      log.info(\"OP:{}\", op.getParams());\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc613ed6f75d1988140301ee8de8fdb056fa337","date":1588034757,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","sourceNew":"  public void testScheduledTriggerFailure() throws Exception {\n    Map jsonObj = (Map) loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      if (log.isInfoEnabled()) {\n        log.info(\"OP:{}\", op.getParams());\n      }\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","sourceOld":"  public void testScheduledTriggerFailure() throws Exception {\n    Map jsonObj = (Map) loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      log.info(\"OP:{}\", op.getParams());\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","sourceNew":"  public void testScheduledTriggerFailure() throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    Map jsonObj = (Map) loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      if (log.isInfoEnabled()) {\n        log.info(\"OP:{}\", op.getParams());\n      }\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","sourceOld":"  public void testScheduledTriggerFailure() throws Exception {\n    Map jsonObj = (Map) loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      if (log.isInfoEnabled()) {\n        log.info(\"OP:{}\", op.getParams());\n      }\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testScheduledTriggerFailure().mjava","sourceNew":null,"sourceOld":"  public void testScheduledTriggerFailure() throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    Map jsonObj = (Map) loadFromResource(\"testScheduledTriggerFailure.json\");\n    SolrCloudManager cloudManager = createCloudManager(jsonObj);\n    Suggester suggester = createSuggester(cloudManager, jsonObj, null);\n    int count = 0;\n    while (count < 10) {\n      CollectionAdminRequest.MoveReplica op = (CollectionAdminRequest.MoveReplica) suggester.getSuggestion();\n      if (op == null) break;\n      count++;\n      if (log.isInfoEnabled()) {\n        log.info(\"OP:{}\", op.getParams());\n      }\n      suggester = createSuggester(cloudManager, jsonObj, suggester);\n    }\n\n    assertEquals(0, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["6dc613ed6f75d1988140301ee8de8fdb056fa337"],"e9fe59d880401d7b6a9bd963ae45c19b2e6798c1":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"6dc613ed6f75d1988140301ee8de8fdb056fa337":["f5a27e78e3d29dee02bab19ded25336471e96882"],"3f504512a03d978990cbff30db0522b354e846db":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f5a27e78e3d29dee02bab19ded25336471e96882":["e9fe59d880401d7b6a9bd963ae45c19b2e6798c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["3f504512a03d978990cbff30db0522b354e846db"],"e9fe59d880401d7b6a9bd963ae45c19b2e6798c1":["f5a27e78e3d29dee02bab19ded25336471e96882"],"6dc613ed6f75d1988140301ee8de8fdb056fa337":["9ba1b632c041956c93c41aa1143d16a567014891"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["e9fe59d880401d7b6a9bd963ae45c19b2e6798c1"],"f5a27e78e3d29dee02bab19ded25336471e96882":["6dc613ed6f75d1988140301ee8de8fdb056fa337"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}