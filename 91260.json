{"path":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","commits":[{"id":"93124590c6e2a8b45898cbae46f96c3a05d9bce0","date":1399415098,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e72e3ade782716457071fee4033f18689acc4c4f","date":1496770651,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n      to.termFrequency = termFrequency;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n      ((TermFrequencyAttribute) target).setTermFrequency(termFrequency);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f344bb33ca91f48e99c061980115b46fa84fc8f5","date":1496903283,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n      to.termFrequency = termFrequency;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n      ((TermFrequencyAttribute) target).setTermFrequency(termFrequency);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n      to.termFrequency = termFrequency;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n      ((TermFrequencyAttribute) target).setTermFrequency(termFrequency);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#copyTo(AttributeImpl).mjava","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n      to.termFrequency = termFrequency;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n      ((TermFrequencyAttribute) target).setTermFrequency(termFrequency);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof PackedTokenAttributeImpl) {\n      final PackedTokenAttributeImpl to = (PackedTokenAttributeImpl) target;\n      to.copyBuffer(buffer(), 0, length());\n      to.positionIncrement = positionIncrement;\n      to.positionLength = positionLength;\n      to.startOffset = startOffset;\n      to.endOffset = endOffset;\n      to.type = type;\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PositionLengthAttribute) target).setPositionLength(positionLength);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e72e3ade782716457071fee4033f18689acc4c4f":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["93124590c6e2a8b45898cbae46f96c3a05d9bce0","e72e3ade782716457071fee4033f18689acc4c4f"],"28288370235ed02234a64753cdbf0c6ec096304a":["93124590c6e2a8b45898cbae46f96c3a05d9bce0","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["93124590c6e2a8b45898cbae46f96c3a05d9bce0","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["e72e3ade782716457071fee4033f18689acc4c4f","f344bb33ca91f48e99c061980115b46fa84fc8f5","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"e72e3ade782716457071fee4033f18689acc4c4f":["f344bb33ca91f48e99c061980115b46fa84fc8f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}