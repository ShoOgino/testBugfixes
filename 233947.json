{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestFoldingFilter[TestAnalyzingQueryParser]#incrementToken().mjava","commits":[{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestFoldingFilter[TestAnalyzingQueryParser]#incrementToken().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestFoldingFilter[TestAnalyzingQueryParser]#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      char term[] = termAtt.buffer();\n      for (int i = 0; i < term.length; i++)\n        switch(term[i]) {\n          case 'ü':\n            term[i] = 'u'; \n            break;\n          case 'ö': \n            term[i] = 'o'; \n            break;\n          case 'é': \n            term[i] = 'e'; \n            break;\n          case 'ï': \n            term[i] = 'i'; \n            break;\n        }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      char term[] = termAtt.buffer();\n      for (int i = 0; i < term.length; i++)\n        switch(term[i]) {\n          case 'ü':\n            term[i] = 'u'; \n            break;\n          case 'ö': \n            term[i] = 'o'; \n            break;\n          case 'é': \n            term[i] = 'e'; \n            break;\n          case 'ï': \n            term[i] = 'i'; \n            break;\n        }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestFoldingFilter[TestAnalyzingQueryParser]#incrementToken().mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      char term[] = termAtt.buffer();\n      for (int i = 0; i < term.length; i++)\n        switch(term[i]) {\n          case 'ü':\n            term[i] = 'u'; \n            break;\n          case 'ö': \n            term[i] = 'o'; \n            break;\n          case 'é': \n            term[i] = 'e'; \n            break;\n          case 'ï': \n            term[i] = 'i'; \n            break;\n        }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a53a291ad9b1cc050d846b68758c061a55d52734":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a53a291ad9b1cc050d846b68758c061a55d52734"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a53a291ad9b1cc050d846b68758c061a55d52734":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}