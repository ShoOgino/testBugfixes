{"path":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#getDocsFromRTGResponse(boolean,QueryResponse).mjava","commits":[{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#getDocsFromRTGResponse(boolean,QueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * trivial helper method to deal with diff response structure between using a single 'id' param vs\n   * 2 or more 'id' params (or 1 or more 'ids' params).\n   *\n   * NOTE: <code>expectList</code> is currently ignored due to SOLR-9309 -- instead best efforst are made to\n   * return a synthetic list based on whatever can be found in the response.\n   *\n   * @return List from response, or a synthetic one created from single response doc if \n   * <code>expectList</code> was false; May be empty; May be null if response included null list.\n   */\n  private static SolrDocumentList getDocsFromRTGResponse(final boolean expectList, final QueryResponse rsp) {\n    // TODO: blocked by SOLR-9309 (once this can be fixed, update jdocs)\n    if (null != rsp.getResults()) { // TODO: replace this..\n    // if (expectList) {            // TODO: ...with this tighter check.\n      return rsp.getResults();\n    }\n    \n    // else: expect single doc, make our own list...\n    \n    final SolrDocumentList result = new SolrDocumentList();\n    NamedList<Object> raw = rsp.getResponse();\n    Object doc = raw.get(\"doc\");\n    if (null != doc) {\n      result.add((SolrDocument) doc);\n      result.setNumFound(1);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4c58bab35e821e15dc6b8669d2f15c2e3cc6d9ce"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c58bab35e821e15dc6b8669d2f15c2e3cc6d9ce","date":1468951909,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#getDocsFromRTGResponse(boolean,QueryResponse).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#getDocsFromRTGResponse(boolean,QueryResponse).mjava","sourceNew":"  /** \n   * trivial helper method to deal with diff response structure between using a single 'id' param vs\n   * 2 or more 'id' params (or 1 or more 'ids' params).\n   *\n   * @return List from response, or a synthetic one created from single response doc if \n   * <code>expectList</code> was false; May be empty; May be null if response included null list.\n   */\n  private static SolrDocumentList getDocsFromRTGResponse(final boolean expectList, final QueryResponse rsp) {\n    if (expectList) {\n      return rsp.getResults();\n    }\n    \n    // else: expect single doc, make our own list...\n    \n    final SolrDocumentList result = new SolrDocumentList();\n    NamedList<Object> raw = rsp.getResponse();\n    Object doc = raw.get(\"doc\");\n    if (null != doc) {\n      result.add((SolrDocument) doc);\n      result.setNumFound(1);\n    }\n    return result;\n  }\n\n","sourceOld":"  /** \n   * trivial helper method to deal with diff response structure between using a single 'id' param vs\n   * 2 or more 'id' params (or 1 or more 'ids' params).\n   *\n   * NOTE: <code>expectList</code> is currently ignored due to SOLR-9309 -- instead best efforst are made to\n   * return a synthetic list based on whatever can be found in the response.\n   *\n   * @return List from response, or a synthetic one created from single response doc if \n   * <code>expectList</code> was false; May be empty; May be null if response included null list.\n   */\n  private static SolrDocumentList getDocsFromRTGResponse(final boolean expectList, final QueryResponse rsp) {\n    // TODO: blocked by SOLR-9309 (once this can be fixed, update jdocs)\n    if (null != rsp.getResults()) { // TODO: replace this..\n    // if (expectList) {            // TODO: ...with this tighter check.\n      return rsp.getResults();\n    }\n    \n    // else: expect single doc, make our own list...\n    \n    final SolrDocumentList result = new SolrDocumentList();\n    NamedList<Object> raw = rsp.getResponse();\n    Object doc = raw.get(\"doc\");\n    if (null != doc) {\n      result.add((SolrDocument) doc);\n      result.setNumFound(1);\n    }\n    return result;\n  }\n\n","bugFix":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#getDocsFromRTGResponse(boolean,QueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * trivial helper method to deal with diff response structure between using a single 'id' param vs\n   * 2 or more 'id' params (or 1 or more 'ids' params).\n   *\n   * @return List from response, or a synthetic one created from single response doc if \n   * <code>expectList</code> was false; May be empty; May be null if response included null list.\n   */\n  private static SolrDocumentList getDocsFromRTGResponse(final boolean expectList, final QueryResponse rsp) {\n    if (expectList) {\n      return rsp.getResults();\n    }\n    \n    // else: expect single doc, make our own list...\n    \n    final SolrDocumentList result = new SolrDocumentList();\n    NamedList<Object> raw = rsp.getResponse();\n    Object doc = raw.get(\"doc\");\n    if (null != doc) {\n      result.add((SolrDocument) doc);\n      result.setNumFound(1);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"136796946c32863f11b97ebec6b4091cdfe3a20b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4c58bab35e821e15dc6b8669d2f15c2e3cc6d9ce":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4c58bab35e821e15dc6b8669d2f15c2e3cc6d9ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c58bab35e821e15dc6b8669d2f15c2e3cc6d9ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["136796946c32863f11b97ebec6b4091cdfe3a20b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["4c58bab35e821e15dc6b8669d2f15c2e3cc6d9ce"],"4c58bab35e821e15dc6b8669d2f15c2e3cc6d9ce":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}