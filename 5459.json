{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/PKIndexSplitter#setDeletes(IndexReader,BytesRef,BytesRef).mjava","commits":[{"id":"d598d69959907d30ecae2c9143a637fd3d7f2279","date":1308351175,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/PKIndexSplitter#setDeletes(IndexReader,BytesRef,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  private OpenBitSet setDeletes(IndexReader reader, BytesRef startTerm, \n      BytesRef endTermExcl) throws IOException {\n    OpenBitSet incl = new OpenBitSet(reader.maxDoc());\n    Terms terms = MultiFields.getTerms(reader, midTerm.field());\n    TermsEnum te = terms.iterator();\n    if (startTerm != null) {\n      te.seek(startTerm);\n    }\n    while (true) {\n      final BytesRef term = te.next();\n      if (term == null) {\n        break;\n      }\n      if (endTermExcl != null && term.compareTo(endTermExcl) >= 0) {\n        break;\n      }\n      DocsEnum docs = MultiFields.getTermDocsEnum(reader, \n          MultiFields.getDeletedDocs(reader), midTerm.field(), term);\n      while (true) {\n        final int doc = docs.nextDoc();\n        if (doc != DocsEnum.NO_MORE_DOCS) {\n          incl.set(doc);\n        } else break;\n      }\n    }\n    OpenBitSet dels = new OpenBitSet(reader.maxDoc());\n    for (int x=0; x < reader.maxDoc(); x++) {\n      if (!incl.get(x)) {\n        dels.set(x);\n      }\n    }\n    return dels;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/PKIndexSplitter#setDeletes(IndexReader,BytesRef,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  private OpenBitSet setDeletes(IndexReader reader, BytesRef startTerm, \n      BytesRef endTermExcl) throws IOException {\n    OpenBitSet incl = new OpenBitSet(reader.maxDoc());\n    Terms terms = MultiFields.getTerms(reader, midTerm.field());\n    TermsEnum te = terms.iterator();\n    if (startTerm != null) {\n      te.seek(startTerm);\n    }\n    while (true) {\n      final BytesRef term = te.next();\n      if (term == null) {\n        break;\n      }\n      if (endTermExcl != null && term.compareTo(endTermExcl) >= 0) {\n        break;\n      }\n      DocsEnum docs = MultiFields.getTermDocsEnum(reader, \n          MultiFields.getDeletedDocs(reader), midTerm.field(), term);\n      while (true) {\n        final int doc = docs.nextDoc();\n        if (doc != DocsEnum.NO_MORE_DOCS) {\n          incl.set(doc);\n        } else break;\n      }\n    }\n    OpenBitSet dels = new OpenBitSet(reader.maxDoc());\n    for (int x=0; x < reader.maxDoc(); x++) {\n      if (!incl.get(x)) {\n        dels.set(x);\n      }\n    }\n    return dels;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd5b0696fbde24daf807b2f98cffa838a7c0e159","date":1308394033,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/PKIndexSplitter#setDeletes(IndexReader,BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"  private OpenBitSet setDeletes(IndexReader reader, BytesRef startTerm, \n      BytesRef endTermExcl) throws IOException {\n    OpenBitSet incl = new OpenBitSet(reader.maxDoc());\n    Terms terms = MultiFields.getTerms(reader, midTerm.field());\n    TermsEnum te = terms.iterator();\n    if (startTerm != null) {\n      te.seek(startTerm);\n    }\n    while (true) {\n      final BytesRef term = te.next();\n      if (term == null) {\n        break;\n      }\n      if (endTermExcl != null && term.compareTo(endTermExcl) >= 0) {\n        break;\n      }\n      DocsEnum docs = MultiFields.getTermDocsEnum(reader, \n          MultiFields.getDeletedDocs(reader), midTerm.field(), term);\n      while (true) {\n        final int doc = docs.nextDoc();\n        if (doc != DocsEnum.NO_MORE_DOCS) {\n          incl.set(doc);\n        } else break;\n      }\n    }\n    OpenBitSet dels = new OpenBitSet(reader.maxDoc());\n    for (int x=0; x < reader.maxDoc(); x++) {\n      if (!incl.get(x)) {\n        dels.set(x);\n      }\n    }\n    return dels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","date":1308439813,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/PKIndexSplitter#setDeletes(IndexReader,BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"  private OpenBitSet setDeletes(IndexReader reader, BytesRef startTerm, \n      BytesRef endTermExcl) throws IOException {\n    OpenBitSet incl = new OpenBitSet(reader.maxDoc());\n    Terms terms = MultiFields.getTerms(reader, midTerm.field());\n    TermsEnum te = terms.iterator();\n    if (startTerm != null) {\n      te.seek(startTerm);\n    }\n    while (true) {\n      final BytesRef term = te.next();\n      if (term == null) {\n        break;\n      }\n      if (endTermExcl != null && term.compareTo(endTermExcl) >= 0) {\n        break;\n      }\n      DocsEnum docs = MultiFields.getTermDocsEnum(reader, \n          MultiFields.getDeletedDocs(reader), midTerm.field(), term);\n      while (true) {\n        final int doc = docs.nextDoc();\n        if (doc != DocsEnum.NO_MORE_DOCS) {\n          incl.set(doc);\n        } else break;\n      }\n    }\n    OpenBitSet dels = new OpenBitSet(reader.maxDoc());\n    for (int x=0; x < reader.maxDoc(); x++) {\n      if (!incl.get(x)) {\n        dels.set(x);\n      }\n    }\n    return dels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7edfc3f7caa7b49a18fe367692768b33b018e9db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d598d69959907d30ecae2c9143a637fd3d7f2279"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["7edfc3f7caa7b49a18fe367692768b33b018e9db","bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd5b0696fbde24daf807b2f98cffa838a7c0e159":["d598d69959907d30ecae2c9143a637fd3d7f2279"],"d598d69959907d30ecae2c9143a637fd3d7f2279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd5b0696fbde24daf807b2f98cffa838a7c0e159"]},"commit2Childs":{"7edfc3f7caa7b49a18fe367692768b33b018e9db":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7edfc3f7caa7b49a18fe367692768b33b018e9db","d598d69959907d30ecae2c9143a637fd3d7f2279"],"bd5b0696fbde24daf807b2f98cffa838a7c0e159":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d598d69959907d30ecae2c9143a637fd3d7f2279":["7edfc3f7caa7b49a18fe367692768b33b018e9db","bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}