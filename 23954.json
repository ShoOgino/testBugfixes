{"path":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","commits":[{"id":"d4769bdea5a853f1841c485bc1fd9d79cb7022fc","date":1292168168,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"/dev/null","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      // simple pruning\n      doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n\n      // leafy pruning\n      doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"/dev/null","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      // simple pruning\n      doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n\n      // leafy pruning\n      doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"/dev/null","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      // simple pruning\n      doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n\n      // leafy pruning\n      doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea8136d8c9f128223389b731b2affdeccdbf1af3","date":1305220410,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","sourceOld":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      // simple pruning\n      doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n\n      // leafy pruning\n      doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","sourceOld":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      // simple pruning\n      doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n\n      // leafy pruning\n      doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","sourceOld":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      // simple pruning\n      doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n\n      // leafy pruning\n      doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","sourceOld":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","sourceOld":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs.FSTTester#doTest().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.FSTTester#doTest().mjava","sourceNew":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","sourceOld":"    public void doTest() throws IOException {\n      // no pruning\n      doTest(0, 0);\n\n      if (!(outputs instanceof UpToTwoPositiveIntOutputs)) {\n        // simple pruning\n        doTest(_TestUtil.nextInt(random, 1, 1+pairs.size()), 0);\n        \n        // leafy pruning\n        doTest(0, _TestUtil.nextInt(random, 1, 1+pairs.size()));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["ea8136d8c9f128223389b731b2affdeccdbf1af3"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"a3776dccca01c11e7046323cfad46a3b4a471233":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc","ea8136d8c9f128223389b731b2affdeccdbf1af3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea8136d8c9f128223389b731b2affdeccdbf1af3":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","ea8136d8c9f128223389b731b2affdeccdbf1af3"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"ea8136d8c9f128223389b731b2affdeccdbf1af3":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["a3776dccca01c11e7046323cfad46a3b4a471233","ea8136d8c9f128223389b731b2affdeccdbf1af3","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}