{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest.TokenEater#incrementToken().mjava","commits":[{"id":"cc41b743423981e7ec17a024ce7e107096e472fe","date":1349975327,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest.TokenEater#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (termAtt.length() != 1 || !isStopChar(termAtt.charAt(0), numStopChars)) {\n          int posInc = posIncrAtt.getPositionIncrement() + skippedPositions;\n          if (first) {\n            if (posInc == 0) {\n              // first token having posinc=0 is illegal.\n              posInc = 1;\n            }\n            first = false;\n          }\n          posIncrAtt.setPositionIncrement(posInc);\n          //System.out.println(\"RETURN term=\" + termAtt + \" numStopChars=\" + numStopChars);\n          return true;\n        }\n        if (preserveHoles) {\n          skippedPositions += posIncrAtt.getPositionIncrement();\n        }\n      }\n\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b","date":1351615637,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest.TokenEater#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (termAtt.length() != 1 || !isStopChar(termAtt.charAt(0), numStopChars)) {\n          int posInc = posIncrAtt.getPositionIncrement() + skippedPositions;\n          if (first) {\n            if (posInc == 0) {\n              // first token having posinc=0 is illegal.\n              posInc = 1;\n            }\n            first = false;\n          }\n          posIncrAtt.setPositionIncrement(posInc);\n          //System.out.println(\"RETURN term=\" + termAtt + \" numStopChars=\" + numStopChars);\n          return true;\n        }\n        if (preserveHoles) {\n          skippedPositions += posIncrAtt.getPositionIncrement();\n        }\n      }\n\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc41b743423981e7ec17a024ce7e107096e472fe"],"cc41b743423981e7ec17a024ce7e107096e472fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b"]},"commit2Childs":{"4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cc41b743423981e7ec17a024ce7e107096e472fe":["4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b","cc41b743423981e7ec17a024ce7e107096e472fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}