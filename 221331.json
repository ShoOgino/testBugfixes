{"path":"src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","commits":[{"id":"9079aceb3d611cfeb6922ebdf91003c30a08b745","date":1260364972,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1805a9b39f81f70b33c67bd84a1d672c896ceca0","072f211dfa8387028bb978d128c35bf9a450bbbf","072f211dfa8387028bb978d128c35bf9a450bbbf","072f211dfa8387028bb978d128c35bf9a450bbbf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e42d9d1ae7ff2066263c1866668b619b3b5dae44","date":1261552581,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"e42d9d1ae7ff2066263c1866668b619b3b5dae44":["9079aceb3d611cfeb6922ebdf91003c30a08b745"],"9079aceb3d611cfeb6922ebdf91003c30a08b745":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["e42d9d1ae7ff2066263c1866668b619b3b5dae44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9079aceb3d611cfeb6922ebdf91003c30a08b745"],"e42d9d1ae7ff2066263c1866668b619b3b5dae44":["ad94625fb8d088209f46650c8097196fec67f00c"],"9079aceb3d611cfeb6922ebdf91003c30a08b745":["e42d9d1ae7ff2066263c1866668b619b3b5dae44"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}