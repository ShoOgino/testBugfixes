{"path":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#recompileAndWalk(String).mjava","commits":[{"id":"06086b5bd0f0d57858f0675becc58edf1f6b7c11","date":1586421397,"type":0,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#recompileAndWalk(String).mjava","pathOld":"/dev/null","sourceNew":"  private static void recompileAndWalk(String fstFilePath) throws IOException {\n    try (InputStreamDataInput in = new InputStreamDataInput(newInputStream(Paths.get(fstFilePath)))) {\n\n      System.out.println(\"Reading FST\");\n      long startTimeMs = System.currentTimeMillis();\n      FST<CharsRef> originalFst = new FST<>(in, CharSequenceOutputs.getSingleton());\n      long endTimeMs = System.currentTimeMillis();\n      System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n\n      for (float oversizingFactor : List.of(0f, 0f, 0f, 1f, 1f, 1f)) {\n        System.out.println(\"\\nFST construction (oversizingFactor=\" + oversizingFactor + \")\");\n        startTimeMs = System.currentTimeMillis();\n        FST<CharsRef> fst = recompile(originalFst, oversizingFactor);\n        endTimeMs = System.currentTimeMillis();\n        System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n        System.out.println(\"FST RAM = \" + fst.ramBytesUsed() + \" B\");\n\n        System.out.println(\"FST enum\");\n        startTimeMs = System.currentTimeMillis();\n        walk(fst);\n        endTimeMs = System.currentTimeMillis();\n        System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99f06f5dd087b1829e7b4139e4d014c786b92572","date":1592312728,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#recompileAndWalk(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#recompileAndWalk(String).mjava","sourceNew":"  private static void recompileAndWalk(String fstFilePath) throws IOException {\n    try (InputStreamDataInput in = new InputStreamDataInput(newInputStream(Paths.get(fstFilePath)))) {\n\n      System.out.println(\"Reading FST\");\n      long startTimeMs = System.currentTimeMillis();\n      FST<CharsRef> originalFst = new FST<>(in, in, CharSequenceOutputs.getSingleton());\n      long endTimeMs = System.currentTimeMillis();\n      System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n\n      for (float oversizingFactor : List.of(0f, 0f, 0f, 1f, 1f, 1f)) {\n        System.out.println(\"\\nFST construction (oversizingFactor=\" + oversizingFactor + \")\");\n        startTimeMs = System.currentTimeMillis();\n        FST<CharsRef> fst = recompile(originalFst, oversizingFactor);\n        endTimeMs = System.currentTimeMillis();\n        System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n        System.out.println(\"FST RAM = \" + fst.ramBytesUsed() + \" B\");\n\n        System.out.println(\"FST enum\");\n        startTimeMs = System.currentTimeMillis();\n        walk(fst);\n        endTimeMs = System.currentTimeMillis();\n        System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n      }\n    }\n  }\n\n","sourceOld":"  private static void recompileAndWalk(String fstFilePath) throws IOException {\n    try (InputStreamDataInput in = new InputStreamDataInput(newInputStream(Paths.get(fstFilePath)))) {\n\n      System.out.println(\"Reading FST\");\n      long startTimeMs = System.currentTimeMillis();\n      FST<CharsRef> originalFst = new FST<>(in, CharSequenceOutputs.getSingleton());\n      long endTimeMs = System.currentTimeMillis();\n      System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n\n      for (float oversizingFactor : List.of(0f, 0f, 0f, 1f, 1f, 1f)) {\n        System.out.println(\"\\nFST construction (oversizingFactor=\" + oversizingFactor + \")\");\n        startTimeMs = System.currentTimeMillis();\n        FST<CharsRef> fst = recompile(originalFst, oversizingFactor);\n        endTimeMs = System.currentTimeMillis();\n        System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n        System.out.println(\"FST RAM = \" + fst.ramBytesUsed() + \" B\");\n\n        System.out.println(\"FST enum\");\n        startTimeMs = System.currentTimeMillis();\n        walk(fst);\n        endTimeMs = System.currentTimeMillis();\n        System.out.println(\"time = \" + (endTimeMs - startTimeMs) + \" ms\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99f06f5dd087b1829e7b4139e4d014c786b92572":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"],"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99f06f5dd087b1829e7b4139e4d014c786b92572"]},"commit2Childs":{"99f06f5dd087b1829e7b4139e4d014c786b92572":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["99f06f5dd087b1829e7b4139e4d014c786b92572"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}