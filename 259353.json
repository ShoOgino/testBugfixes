{"path":"solr/core/src/java/org/apache/solr/util/HdfsUtil#addHdfsResources(Configuration,String).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/HdfsUtil#addHdfsResources(Configuration,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void addHdfsResources(Configuration conf, String confDir) {\n  if (confDir != null && confDir.length() > 0) {\n    File confDirFile = new File(confDir);\n    if (!confDirFile.exists()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory does not exist: \" + confDirFile.getAbsolutePath());\n    }\n    if (!confDirFile.isDirectory()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Specified resource directory is not a directory\" + confDirFile.getAbsolutePath());\n    }\n    if (!confDirFile.canRead()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory must be readable by the Solr process: \" + confDirFile.getAbsolutePath());\n    }\n    for (String file : HADOOP_CONF_FILES) {\n      if (new File(confDirFile, file).exists()) {\n        conf.addResource(new Path(confDir, file));\n      }\n    }\n  }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/HdfsUtil#addHdfsResources(Configuration,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void addHdfsResources(Configuration conf, String confDir) {\n  if (confDir != null && confDir.length() > 0) {\n    File confDirFile = new File(confDir);\n    if (!confDirFile.exists()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory does not exist: \" + confDirFile.getAbsolutePath());\n    }\n    if (!confDirFile.isDirectory()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Specified resource directory is not a directory\" + confDirFile.getAbsolutePath());\n    }\n    if (!confDirFile.canRead()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory must be readable by the Solr process: \" + confDirFile.getAbsolutePath());\n    }\n    for (String file : HADOOP_CONF_FILES) {\n      if (new File(confDirFile, file).exists()) {\n        conf.addResource(new Path(confDir, file));\n      }\n    }\n  }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a","date":1429888091,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/HdfsUtil#addHdfsResources(Configuration,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/HdfsUtil#addHdfsResources(Configuration,String).mjava","sourceNew":"  public static void addHdfsResources(Configuration conf, String confDir) {\n\n    if (confDir != null && confDir.length() > 0) {\n      File confDirFile = new File(confDir);\n      if (!confDirFile.exists()) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory does not exist: \" + confDirFile.getAbsolutePath());\n      }\n      if (!confDirFile.isDirectory()) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Specified resource directory is not a directory\" + confDirFile.getAbsolutePath());\n      }\n      if (!confDirFile.canRead()) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory must be readable by the Solr process: \" + confDirFile.getAbsolutePath());\n      }\n      for (String file : HADOOP_CONF_FILES) {\n        if (new File(confDirFile, file).exists()) {\n          conf.addResource(new Path(confDir, file));\n        }\n      }\n    }\n    \n    if (TEST_CONF != null) {\n      conf.addResource(TEST_CONF);\n    }\n  }\n\n","sourceOld":"  public static void addHdfsResources(Configuration conf, String confDir) {\n  if (confDir != null && confDir.length() > 0) {\n    File confDirFile = new File(confDir);\n    if (!confDirFile.exists()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory does not exist: \" + confDirFile.getAbsolutePath());\n    }\n    if (!confDirFile.isDirectory()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Specified resource directory is not a directory\" + confDirFile.getAbsolutePath());\n    }\n    if (!confDirFile.canRead()) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Resource directory must be readable by the Solr process: \" + confDirFile.getAbsolutePath());\n    }\n    for (String file : HADOOP_CONF_FILES) {\n      if (new File(confDirFile, file).exists()) {\n        conf.addResource(new Path(confDir, file));\n      }\n    }\n  }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["849494cf2f3a96af5c8c84995108ddd8456fcd04"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}