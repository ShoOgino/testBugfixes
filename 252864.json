{"path":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","commits":[{"id":"44a4299331195a496d15bce2d588139be10ac77b","date":1270977661,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter.LowerCaseFilterMock#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase();\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase();\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b375ac28473e1310fa9ea99d95e9c6001e3719d5","date":1274116690,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase(Locale.ENGLISH);\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase();\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33f2d1e8136b83c8ce1ec5a28df9b325b02e3441","date":1274361792,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerFilter.LowerCaseFilterMock#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase(Locale.ENGLISH);\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        if (!keywordAttr.isKeyword()) {\n          final String term = termAtt.toString().toLowerCase(Locale.ENGLISH);\n          termAtt.setEmpty().append(term);\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["44a4299331195a496d15bce2d588139be10ac77b"],"33f2d1e8136b83c8ce1ec5a28df9b325b02e3441":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["33f2d1e8136b83c8ce1ec5a28df9b325b02e3441"],"44a4299331195a496d15bce2d588139be10ac77b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44a4299331195a496d15bce2d588139be10ac77b"],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["33f2d1e8136b83c8ce1ec5a28df9b325b02e3441"],"33f2d1e8136b83c8ce1ec5a28df9b325b02e3441":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"44a4299331195a496d15bce2d588139be10ac77b":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}