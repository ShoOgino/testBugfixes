{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingLeafCollector#AssertingLeafCollector(Random,LeafCollector,int,int,ScoreMode).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingLeafCollector#AssertingLeafCollector(Random,LeafCollector,int,int,ScoreMode).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingLeafCollector#AssertingLeafCollector(Random,LeafCollector,int,int).mjava","sourceNew":"  AssertingLeafCollector(Random random, LeafCollector collector, int min, int max, ScoreMode scoreMode) {\n    super(collector);\n    this.random = random;\n    this.min = min;\n    this.max = max;\n    this.scoreMode = scoreMode;\n  }\n\n","sourceOld":"  AssertingLeafCollector(Random random, LeafCollector collector, int min, int max) {\n    super(collector);\n    this.random = random;\n    this.min = min;\n    this.max = max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingLeafCollector#AssertingLeafCollector(Random,LeafCollector,int,int,ScoreMode).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingLeafCollector#AssertingLeafCollector(Random,LeafCollector,int,int).mjava","sourceNew":"  AssertingLeafCollector(Random random, LeafCollector collector, int min, int max, ScoreMode scoreMode) {\n    super(collector);\n    this.random = random;\n    this.min = min;\n    this.max = max;\n    this.scoreMode = scoreMode;\n  }\n\n","sourceOld":"  AssertingLeafCollector(Random random, LeafCollector collector, int min, int max) {\n    super(collector);\n    this.random = random;\n    this.min = min;\n    this.max = max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingLeafCollector#AssertingLeafCollector(Random,LeafCollector,int,int,ScoreMode).mjava","sourceNew":null,"sourceOld":"  AssertingLeafCollector(Random random, LeafCollector collector, int min, int max, ScoreMode scoreMode) {\n    super(collector);\n    this.random = random;\n    this.min = min;\n    this.max = max;\n    this.scoreMode = scoreMode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}