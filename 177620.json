{"path":"solr/core/src/test/org/apache/solr/servlet/CacheHeaderTestBase#checkResponseBody(String,HttpResponse).mjava","commits":[{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":1,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/CacheHeaderTestBase#checkResponseBody(String,HttpResponse).mjava","pathOld":"solr/core/src/test/org/apache/solr/servlet/CacheHeaderTestBase#checkResponseBody(String,HttpMethodBase).mjava","sourceNew":"  protected void checkResponseBody(String method, HttpResponse resp)\n      throws Exception {\n    String responseBody =\"\";\n    \n    if (resp.getEntity() != null) {\n      responseBody = EntityUtils.toString(resp.getEntity());\n    }\n\n    if (\"GET\".equals(method)) {\n      switch (resp.getStatusLine().getStatusCode()) {\n        case 200:\n          assertTrue(\"Response body was empty for method \" + method,\n              responseBody != null && responseBody.length() > 0);\n          break;\n        case 304:\n          assertTrue(\"Response body was not empty for method \" + method,\n              responseBody == null || responseBody.length() == 0);\n          break;\n        case 412:\n          assertTrue(\"Response body was not empty for method \" + method,\n              responseBody == null || responseBody.length() == 0);\n          break;\n        default:\n          System.err.println(responseBody);\n          assertEquals(\"Unknown request response\", 0, resp.getStatusLine().getStatusCode());\n      }\n    }\n    if (\"HEAD\".equals(method)) {\n      assertTrue(\"Response body was not empty for method \" + method,\n          responseBody == null || responseBody.length() == 0);\n    }\n  }\n\n","sourceOld":"  protected void checkResponseBody(String method, HttpMethodBase resp)\n      throws Exception {\n    String responseBody = resp.getResponseBodyAsString();\n    if (\"GET\".equals(method)) {\n      switch (resp.getStatusCode()) {\n        case 200:\n          assertTrue(\"Response body was empty for method \" + method,\n              responseBody != null && responseBody.length() > 0);\n          break;\n        case 304:\n          assertTrue(\"Response body was not empty for method \" + method,\n              responseBody == null || responseBody.length() == 0);\n          break;\n        case 412:\n          assertTrue(\"Response body was not empty for method \" + method,\n              responseBody == null || responseBody.length() == 0);\n          break;\n        default:\n          System.err.println(responseBody);\n          assertEquals(\"Unknown request response\", 0, resp.getStatusCode());\n      }\n    }\n    if (\"HEAD\".equals(method)) {\n      assertTrue(\"Response body was not empty for method \" + method,\n          responseBody == null || responseBody.length() == 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}