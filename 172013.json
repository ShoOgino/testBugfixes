{"path":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountable(String,Iterable[Accountable],long).mjava","commits":[{"id":"6796c0501cb5b79d1c2f5f2c675266753a574f58","date":1418741878,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountable(String,Iterable[Accountable],long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountable(String,Iterable[#-extends-Accountable],long).mjava","sourceNew":"  /** \n   * Returns an accountable with the provided description, bytes, and children.\n   * <p>\n   * The resource descriptions are constructed in this format:\n   * {@code description [toString()]}\n   * <p>\n   * This is a point-in-time type safe view: consumers \n   * will not be able to cast or manipulate the resources in any way..\n   */\n  private static Accountable namedAccountable(final String description, final Iterable<Accountable> children, final long bytes) {\n    return new Accountable() {\n      @Override\n      public long ramBytesUsed() {\n        return bytes;\n      }\n\n      @Override\n      public Iterable<Accountable> getChildResources() {\n        return children;\n      }\n\n      @Override\n      public String toString() {\n        return description;\n      }\n    };\n  }\n\n","sourceOld":"  /** \n   * Returns an accountable with the provided description, bytes, and children.\n   * <p>\n   * The resource descriptions are constructed in this format:\n   * {@code description [toString()]}\n   * <p>\n   * This is a point-in-time type safe view: consumers \n   * will not be able to cast or manipulate the resources in any way..\n   */\n  private static Accountable namedAccountable(final String description, final Iterable<? extends Accountable> children, final long bytes) {\n    return new Accountable() {\n      @Override\n      public long ramBytesUsed() {\n        return bytes;\n      }\n\n      @Override\n      public Iterable<Accountable> getChildResources() {\n        return (Iterable<Accountable>) children;\n      }\n\n      @Override\n      public String toString() {\n        return description;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21c1e7a342ba4aa22440c99f36280606086e3bf3","date":1420005315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountable(String,Iterable[Accountable],long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountable(String,Iterable[Accountable],long).mjava","sourceNew":"  /** \n   * Returns an accountable with the provided description, children and bytes.\n   * <p>\n   * The resource descriptions are constructed in this format:\n   * {@code description [toString()]}\n   * <p>\n   * This is a point-in-time type safe view: consumers \n   * will not be able to cast or manipulate the resources in any way, provided\n   * that the passed in children Accountables (and all their descendants) were created\n   * with one of the namedAccountable functions.\n   */\n  public static Accountable namedAccountable(final String description, final Iterable<Accountable> children, final long bytes) {\n    return new Accountable() {\n      @Override\n      public long ramBytesUsed() {\n        return bytes;\n      }\n\n      @Override\n      public Iterable<Accountable> getChildResources() {\n        return children;\n      }\n\n      @Override\n      public String toString() {\n        return description;\n      }\n    };\n  }\n\n","sourceOld":"  /** \n   * Returns an accountable with the provided description, bytes, and children.\n   * <p>\n   * The resource descriptions are constructed in this format:\n   * {@code description [toString()]}\n   * <p>\n   * This is a point-in-time type safe view: consumers \n   * will not be able to cast or manipulate the resources in any way..\n   */\n  private static Accountable namedAccountable(final String description, final Iterable<Accountable> children, final long bytes) {\n    return new Accountable() {\n      @Override\n      public long ramBytesUsed() {\n        return bytes;\n      }\n\n      @Override\n      public Iterable<Accountable> getChildResources() {\n        return children;\n      }\n\n      @Override\n      public String toString() {\n        return description;\n      }\n    };\n  }\n\n","bugFix":["0936055c0eed56be3e4ae5c9db5b0e355390736a","6796c0501cb5b79d1c2f5f2c675266753a574f58"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ba6ae8e3c153347cbb605024ca7550f5c91b178","date":1420215916,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountable(String,Collection[Accountable],long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountable(String,Iterable[Accountable],long).mjava","sourceNew":"  /** \n   * Returns an accountable with the provided description, children and bytes.\n   * <p>\n   * The resource descriptions are constructed in this format:\n   * {@code description [toString()]}\n   * <p>\n   * This is a point-in-time type safe view: consumers \n   * will not be able to cast or manipulate the resources in any way, provided\n   * that the passed in children Accountables (and all their descendants) were created\n   * with one of the namedAccountable functions.\n   */\n  public static Accountable namedAccountable(final String description, final Collection<Accountable> children, final long bytes) {\n    return new Accountable() {\n      @Override\n      public long ramBytesUsed() {\n        return bytes;\n      }\n\n      @Override\n      public Collection<Accountable> getChildResources() {\n        return children;\n      }\n\n      @Override\n      public String toString() {\n        return description;\n      }\n    };\n  }\n\n","sourceOld":"  /** \n   * Returns an accountable with the provided description, children and bytes.\n   * <p>\n   * The resource descriptions are constructed in this format:\n   * {@code description [toString()]}\n   * <p>\n   * This is a point-in-time type safe view: consumers \n   * will not be able to cast or manipulate the resources in any way, provided\n   * that the passed in children Accountables (and all their descendants) were created\n   * with one of the namedAccountable functions.\n   */\n  public static Accountable namedAccountable(final String description, final Iterable<Accountable> children, final long bytes) {\n    return new Accountable() {\n      @Override\n      public long ramBytesUsed() {\n        return bytes;\n      }\n\n      @Override\n      public Iterable<Accountable> getChildResources() {\n        return children;\n      }\n\n      @Override\n      public String toString() {\n        return description;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ba6ae8e3c153347cbb605024ca7550f5c91b178":["21c1e7a342ba4aa22440c99f36280606086e3bf3"],"21c1e7a342ba4aa22440c99f36280606086e3bf3":["6796c0501cb5b79d1c2f5f2c675266753a574f58"],"6796c0501cb5b79d1c2f5f2c675266753a574f58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ba6ae8e3c153347cbb605024ca7550f5c91b178"]},"commit2Childs":{"8ba6ae8e3c153347cbb605024ca7550f5c91b178":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21c1e7a342ba4aa22440c99f36280606086e3bf3":["8ba6ae8e3c153347cbb605024ca7550f5c91b178"],"6796c0501cb5b79d1c2f5f2c675266753a574f58":["21c1e7a342ba4aa22440c99f36280606086e3bf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6796c0501cb5b79d1c2f5f2c675266753a574f58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}