{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/NormalizeCharMap.Builder#add(String,String).mjava","commits":[{"id":"b4e5bbc7f726dbcc466cb9b3c029d539a06f6545","date":1336310014,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/NormalizeCharMap.Builder#add(String,String).mjava","pathOld":"/dev/null","sourceNew":"    /** Records a replacement to be applied to the input\n     *  stream.  Whenever <code>singleMatch</code> occurs in\n     *  the input, it will be replaced with\n     *  <code>replacement</code>.\n     *\n     * @param match input String to be replaced\n     * @param replacement output String\n     * @throws IllegalArgumentException if\n     * <code>match</code> is the empty string, or was\n     * already previously added\n     */\n    public void add(String match, String replacement) {\n      if (match.length() == 0 ){\n        throw new IllegalArgumentException(\"cannot match the empty string\");\n      }\n      if (pendingPairs.containsKey(match)) {\n        throw new IllegalArgumentException(\"match \\\"\" + match + \"\\\" was already added\");\n      }\n      pendingPairs.put(match, replacement);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4e5bbc7f726dbcc466cb9b3c029d539a06f6545":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e5bbc7f726dbcc466cb9b3c029d539a06f6545"]},"commit2Childs":{"b4e5bbc7f726dbcc466cb9b3c029d539a06f6545":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e5bbc7f726dbcc466cb9b3c029d539a06f6545"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}