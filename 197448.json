{"path":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#part2(IndexWriter,RangeMergePolicy).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#part2(IndexWriter,RangeMergePolicy).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#part2(IndexWriter,RangeMergePolicy).mjava","sourceNew":"  /**\n  static boolean hasPendingDeletes(SegmentInfos infos) {\n    for (SegmentInfo info : infos) {\n      if (info.deletes.any()) {\n        return true;\n      }\n    }\n    return false;\n  }\n  **/\n  void part2(IndexWriter writer, RangeMergePolicy fsmp) throws Exception {\n    for (int x = 20; x < 25; x++) {\n      writer.addDocument(DocHelper.createDocument(x, \"5\", 2));\n      //System.out.println(\"numRamDocs(\" + x + \")\" + writer.numRamDocs());\n    }\n    writer.flush(false, false);\n    for (int x = 25; x < 30; x++) {\n      writer.addDocument(DocHelper.createDocument(x, \"5\", 2));\n      //System.out.println(\"numRamDocs(\" + x + \")\" + writer.numRamDocs());\n    }\n    writer.flush(false, false);\n\n    //System.out.println(\"infos3:\"+writer.segmentInfos);\n\n    Term delterm = new Term(\"id\", \"8\");\n    writer.deleteDocuments(delterm);\n    //System.out.println(\"segdels3:\" + writer.docWriter.deletesToString());\n\n    fsmp.doMerge = true;\n    fsmp.start = 1;\n    fsmp.length = 2;\n    writer.maybeMerge();\n\n    // deletes for info1, the newly created segment from the\n    // merge should have no deletes because they were applied in\n    // the merge\n    //SegmentInfo info1 = writer.segmentInfos.info(1);\n    //assertFalse(exists(info1, writer.docWriter.segmentDeletes));\n\n    //System.out.println(\"infos4:\"+writer.segmentInfos);\n    //System.out.println(\"segdels4:\" + writer.docWriter.deletesToString());\n  }\n\n","sourceOld":"  /**\n  static boolean hasPendingDeletes(SegmentInfos infos) {\n    for (SegmentInfo info : infos) {\n      if (info.deletes.any()) {\n        return true;\n      }\n    }\n    return false;\n  }\n  **/\n  void part2(IndexWriter writer, RangeMergePolicy fsmp) throws Exception {\n    for (int x = 20; x < 25; x++) {\n      writer.addDocument(DocHelper.createDocument(x, \"5\", 2));\n      //System.out.println(\"numRamDocs(\" + x + \")\" + writer.numRamDocs());\n    }\n    writer.flush(false, false);\n    for (int x = 25; x < 30; x++) {\n      writer.addDocument(DocHelper.createDocument(x, \"5\", 2));\n      //System.out.println(\"numRamDocs(\" + x + \")\" + writer.numRamDocs());\n    }\n    writer.flush(false, false);\n\n    //System.out.println(\"infos3:\"+writer.segmentInfos);\n\n    Term delterm = new Term(\"id\", \"8\");\n    writer.deleteDocuments(delterm);\n    //System.out.println(\"segdels3:\" + writer.docWriter.deletesToString());\n\n    fsmp.doMerge = true;\n    fsmp.start = 1;\n    fsmp.length = 2;\n    writer.maybeMerge();\n\n    // deletes for info1, the newly created segment from the\n    // merge should have no deletes because they were applied in\n    // the merge\n    //SegmentInfo info1 = writer.segmentInfos.info(1);\n    //assertFalse(exists(info1, writer.docWriter.segmentDeletes));\n\n    //System.out.println(\"infos4:\"+writer.segmentInfos);\n    //System.out.println(\"segdels4:\" + writer.docWriter.deletesToString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}