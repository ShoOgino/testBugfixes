{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer#testDigitsInRussianCharset().mjava","commits":[{"id":"3608f7774f8e3e1bfe9c93adc1020d3fd2634344","date":1210743465,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer#testDigitsInRussianCharset().mjava","pathOld":"/dev/null","sourceNew":"    public void testDigitsInRussianCharset() \n    {\n        Reader reader = new StringReader(\"text 1000\");\n        RussianAnalyzer ra = new RussianAnalyzer();\n        TokenStream stream = ra.tokenStream(\"\", reader);\n\n        try {\n            assertEquals(\"text\", stream.next().termText());\n            assertNotNull(\"RussianAnalyzer's tokenizer skips numbers from input text\", stream.next());\n        }\n        catch (IOException e)\n        {\n            fail(\"unexpected IOException\");\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer#testDigitsInRussianCharset().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer#testDigitsInRussianCharset().mjava","sourceNew":"    public void testDigitsInRussianCharset() \n    {\n        Reader reader = new StringReader(\"text 1000\");\n        RussianAnalyzer ra = new RussianAnalyzer();\n        TokenStream stream = ra.tokenStream(\"\", reader);\n\n        final Token reusableToken = new Token();\n        try {\n            assertEquals(\"text\", stream.next(reusableToken).term());\n            assertNotNull(\"RussianAnalyzer's tokenizer skips numbers from input text\", stream.next(reusableToken));\n        }\n        catch (IOException e)\n        {\n            fail(\"unexpected IOException\");\n        }\n    }\n\n","sourceOld":"    public void testDigitsInRussianCharset() \n    {\n        Reader reader = new StringReader(\"text 1000\");\n        RussianAnalyzer ra = new RussianAnalyzer();\n        TokenStream stream = ra.tokenStream(\"\", reader);\n\n        try {\n            assertEquals(\"text\", stream.next().termText());\n            assertNotNull(\"RussianAnalyzer's tokenizer skips numbers from input text\", stream.next());\n        }\n        catch (IOException e)\n        {\n            fail(\"unexpected IOException\");\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer#testDigitsInRussianCharset().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer#testDigitsInRussianCharset().mjava","sourceNew":"    public void testDigitsInRussianCharset() \n    {\n        Reader reader = new StringReader(\"text 1000\");\n        RussianAnalyzer ra = new RussianAnalyzer();\n        TokenStream stream = ra.tokenStream(\"\", reader);\n\n        final Token reusableToken = new Token();\n        try {\n            assertEquals(\"text\", stream.next(reusableToken).term());\n            assertNotNull(\"RussianAnalyzer's tokenizer skips numbers from input text\", stream.next(reusableToken));\n        }\n        catch (IOException e)\n        {\n            fail(\"unexpected IOException\");\n        }\n    }\n\n","sourceOld":"    public void testDigitsInRussianCharset() \n    {\n        Reader reader = new StringReader(\"text 1000\");\n        RussianAnalyzer ra = new RussianAnalyzer();\n        TokenStream stream = ra.tokenStream(\"\", reader);\n\n        final Token reusableToken = new Token();\n        try {\n            assertEquals(\"text\", stream.next(reusableToken).term());\n            assertNotNull(\"RussianAnalyzer's tokenizer skips numbers from input text\", stream.next(reusableToken));\n        }\n        catch (IOException e)\n        {\n            fail(\"unexpected IOException\");\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["3608f7774f8e3e1bfe9c93adc1020d3fd2634344"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3608f7774f8e3e1bfe9c93adc1020d3fd2634344":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3608f7774f8e3e1bfe9c93adc1020d3fd2634344"],"3608f7774f8e3e1bfe9c93adc1020d3fd2634344":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}