{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testIllegalArguments().mjava","commits":[{"id":"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4","date":1496825484,"type":0,"author":"jpgilaberte","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      Tokenizer tf = tokenizerFactory(WIKIPEDIA, TOKEN_OUTPUT, \"-1\").create(newAttributeFactory());\n    });\n    assertTrue(expected.getMessage().contains(\"tokenOutput must be TOKENS_ONLY, UNTOKENIZED_ONLY or BOTH\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f344bb33ca91f48e99c061980115b46fa84fc8f5","date":1496903283,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      Tokenizer tf = tokenizerFactory(WIKIPEDIA, TOKEN_OUTPUT, \"-1\").create(newAttributeFactory());\n    });\n    assertTrue(expected.getMessage().contains(\"tokenOutput must be TOKENS_ONLY, UNTOKENIZED_ONLY or BOTH\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      Tokenizer tf = tokenizerFactory(WIKIPEDIA, TOKEN_OUTPUT, \"-1\").create(newAttributeFactory());\n    });\n    assertTrue(expected.getMessage().contains(\"tokenOutput must be TOKENS_ONLY, UNTOKENIZED_ONLY or BOTH\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      Tokenizer tf = tokenizerFactory(WIKIPEDIA, TOKEN_OUTPUT, \"-1\").create(newAttributeFactory());\n    });\n    assertTrue(expected.getMessage().contains(\"tokenOutput must be TOKENS_ONLY, UNTOKENIZED_ONLY or BOTH\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4":["f344bb33ca91f48e99c061980115b46fa84fc8f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4","f344bb33ca91f48e99c061980115b46fa84fc8f5","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}