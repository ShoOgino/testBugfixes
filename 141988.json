{"path":"lucene/misc/src/test/org/apache/lucene/misc/SweetSpotSimilarityTest#testHyperbolicSweetSpot().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/misc/SweetSpotSimilarityTest#testHyperbolicSweetSpot().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/SweetSpotSimilarityTest#testHyperbolicSweetSpot().mjava","sourceNew":"  public void testHyperbolicSweetSpot() {\n  \n    SweetSpotSimilarity ss = new SweetSpotSimilarity() {\n        @Override\n        public float tf(int freq) {\n          return hyperbolicTf(freq);\n        }\n      };\n    ss.setHyperbolicTfFactors(3.3f, 7.7f, Math.E, 5.0f);\n    \n    TFIDFSimilarity s = ss;\n\n    for (int i = 1; i <=1000; i++) {\n      assertTrue(\"MIN tf: i=\"+i+\" : s=\"+s.tf(i),\n                 3.3f <= s.tf(i));\n      assertTrue(\"MAX tf: i=\"+i+\" : s=\"+s.tf(i),\n                 s.tf(i) <= 7.7f);\n    }\n    assertEquals(\"MID tf\", 3.3f+(7.7f - 3.3f)/2.0f, s.tf(5), 0.00001f);\n    \n    // stupidity\n    assertEquals(\"tf zero\", 0.0f, s.tf(0), 0.0f);\n    \n  }\n\n","sourceOld":"  public void testHyperbolicSweetSpot() {\n  \n    SweetSpotSimilarity ss = new SweetSpotSimilarity() {\n        @Override\n        public float tf(int freq) {\n          return hyperbolicTf(freq);\n        }\n      };\n    ss.setHyperbolicTfFactors(3.3f, 7.7f, Math.E, 5.0f);\n    \n    TFIDFSimilarity s = ss;\n\n    for (int i = 1; i <=1000; i++) {\n      assertTrue(\"MIN tf: i=\"+i+\" : s=\"+s.tf(i),\n                 3.3f <= s.tf(i));\n      assertTrue(\"MAX tf: i=\"+i+\" : s=\"+s.tf(i),\n                 s.tf(i) <= 7.7f);\n    }\n    assertEquals(\"MID tf\", 3.3f+(7.7f - 3.3f)/2.0f, s.tf(5), 0.00001f);\n    \n    // stupidity\n    assertEquals(\"tf zero\", 0.0f, s.tf(0), 0.0f);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b799defcfda6d303cbb180917bf1e749089adf42","date":1370695356,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/misc/SweetSpotSimilarityTest#testHyperbolicSweetSpot().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/misc/SweetSpotSimilarityTest#testHyperbolicSweetSpot().mjava","sourceNew":"  public void testHyperbolicSweetSpot() {\n  \n    SweetSpotSimilarity ss = new SweetSpotSimilarity() {\n        @Override\n        public float tf(float freq) {\n          return hyperbolicTf(freq);\n        }\n      };\n    ss.setHyperbolicTfFactors(3.3f, 7.7f, Math.E, 5.0f);\n    \n    TFIDFSimilarity s = ss;\n\n    for (int i = 1; i <=1000; i++) {\n      assertTrue(\"MIN tf: i=\"+i+\" : s=\"+s.tf(i),\n                 3.3f <= s.tf(i));\n      assertTrue(\"MAX tf: i=\"+i+\" : s=\"+s.tf(i),\n                 s.tf(i) <= 7.7f);\n    }\n    assertEquals(\"MID tf\", 3.3f+(7.7f - 3.3f)/2.0f, s.tf(5), 0.00001f);\n    \n    // stupidity\n    assertEquals(\"tf zero\", 0.0f, s.tf(0), 0.0f);\n    \n  }\n\n","sourceOld":"  public void testHyperbolicSweetSpot() {\n  \n    SweetSpotSimilarity ss = new SweetSpotSimilarity() {\n        @Override\n        public float tf(int freq) {\n          return hyperbolicTf(freq);\n        }\n      };\n    ss.setHyperbolicTfFactors(3.3f, 7.7f, Math.E, 5.0f);\n    \n    TFIDFSimilarity s = ss;\n\n    for (int i = 1; i <=1000; i++) {\n      assertTrue(\"MIN tf: i=\"+i+\" : s=\"+s.tf(i),\n                 3.3f <= s.tf(i));\n      assertTrue(\"MAX tf: i=\"+i+\" : s=\"+s.tf(i),\n                 s.tf(i) <= 7.7f);\n    }\n    assertEquals(\"MID tf\", 3.3f+(7.7f - 3.3f)/2.0f, s.tf(5), 0.00001f);\n    \n    // stupidity\n    assertEquals(\"tf zero\", 0.0f, s.tf(0), 0.0f);\n    \n  }\n\n","bugFix":["6f9cbf33fc4a562e686c8dc8f92b7856f051b90a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b799defcfda6d303cbb180917bf1e749089adf42":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b799defcfda6d303cbb180917bf1e749089adf42"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b799defcfda6d303cbb180917bf1e749089adf42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b799defcfda6d303cbb180917bf1e749089adf42":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}