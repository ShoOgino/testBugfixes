{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","commits":[{"id":"be46ccf1a05985ba9fec84cb8674b607a23d5442","date":1465576866,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointPrefixTermsEnum#nextRelation().mjava","sourceNew":"  private void nextRelation() {\n    double minLon = GeoPointField.decodeLongitude(currStart);\n    double minLat = GeoPointField.decodeLatitude(currStart);\n    double maxLon;\n    double maxLat;\n    boolean isWithin;\n    do {\n      maxLon = GeoPointField.decodeLongitude(currEnd);\n      maxLat = GeoPointField.decodeLatitude(currEnd);\n\n      isWithin = false;\n      // within or a boundary\n      if (boundary(minLat, maxLat, minLon, maxLon) == true) {\n        isWithin = within(minLat, maxLat, minLon, maxLon);\n        final int m;\n        if (isWithin == false || (m = shift % GeoPointField.PRECISION_STEP) == 0) {\n          setNextRange(isWithin == false);\n          advanceVariables();\n          break;\n        } else if (shift < 54) {\n          withinOnly = true;\n          shift = (short)(shift - m);\n          lastWithin = currEnd & ~((1L << shift) - 1);\n          setNextRange(false);\n          break;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (isWithin == true || (relationImpl.cellIntersectsMBR(minLat, maxLat, minLon, maxLon) == true && shift != maxShift)) {\n        // descend: currStart need not change since shift handles end of range\n        currEnd = currStart | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n        minLon = GeoPointField.decodeLongitude(currStart);\n        minLat = GeoPointField.decodeLatitude(currStart);\n      }\n    } while(shift < 63);\n  }\n\n","sourceOld":"  private void nextRelation() {\n    double minLon = GeoPointField.decodeLongitude(currStart);\n    double minLat = GeoPointField.decodeLatitude(currStart);\n    double maxLon;\n    double maxLat;\n    boolean isWithin;\n    do {\n      maxLon = GeoPointField.decodeLongitude(currEnd);\n      maxLat = GeoPointField.decodeLatitude(currEnd);\n\n      isWithin = false;\n      // within or a boundary\n      if (boundary(minLat, maxLat, minLon, maxLon) == true) {\n        isWithin = within(minLat, maxLat, minLon, maxLon);\n        final int m;\n        if (isWithin == false || (m = shift % GeoPointField.PRECISION_STEP) == 0) {\n          setNextRange(isWithin == false);\n          advanceVariables();\n          break;\n        } else if (shift < 54) {\n          withinOnly = true;\n          shift = (short)(shift - m);\n          lastWithin = currEnd & ~((1L << shift) - 1);\n          setNextRange(false);\n          break;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (isWithin == true || (relationImpl.cellIntersectsMBR(minLat, maxLat, minLon, maxLon) == true && shift != maxShift)) {\n        // descend: currStart need not change since shift handles end of range\n        currEnd = currStart | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n        minLon = GeoPointField.decodeLongitude(currStart);\n        minLat = GeoPointField.decodeLatitude(currStart);\n      }\n    } while(shift < 63);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a62e86d7b9cc6dec3c09f771166aa2393fd95c99","date":1466437108,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","sourceNew":"  private boolean nextRelation() {\n    Relation relation;\n    do {\n      // within or a boundary\n      if ((shift % GeoPointField.PRECISION_STEP) == 0 &&\n          (relation = relationImpl.relate(decodeLatitude(start), decodeLatitude(end),\n              decodeLongitude(start), decodeLongitude(end))) != Relation.CELL_OUTSIDE_QUERY) {\n        // if at max depth or cell completely within\n        if (shift == maxShift || relation == Relation.CELL_INSIDE_QUERY) {\n          setRange(relation == Relation.CELL_CROSSES_QUERY);\n          advanceVariables();\n          return true;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (shift != maxShift && relationImpl.cellIntersectsMBR(start, end) == true) {\n        // descend: start need not change since shift handles end of range\n        end = start | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n      }\n    } while(shift < 62);\n    return false;\n  }\n\n","sourceOld":"  private void nextRelation() {\n    double minLon = GeoPointField.decodeLongitude(currStart);\n    double minLat = GeoPointField.decodeLatitude(currStart);\n    double maxLon;\n    double maxLat;\n    boolean isWithin;\n    do {\n      maxLon = GeoPointField.decodeLongitude(currEnd);\n      maxLat = GeoPointField.decodeLatitude(currEnd);\n\n      isWithin = false;\n      // within or a boundary\n      if (boundary(minLat, maxLat, minLon, maxLon) == true) {\n        isWithin = within(minLat, maxLat, minLon, maxLon);\n        final int m;\n        if (isWithin == false || (m = shift % GeoPointField.PRECISION_STEP) == 0) {\n          setNextRange(isWithin == false);\n          advanceVariables();\n          break;\n        } else if (shift < 54) {\n          withinOnly = true;\n          shift = (short)(shift - m);\n          lastWithin = currEnd & ~((1L << shift) - 1);\n          setNextRange(false);\n          break;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (isWithin == true || (relationImpl.cellIntersectsMBR(minLat, maxLat, minLon, maxLon) == true && shift != maxShift)) {\n        // descend: currStart need not change since shift handles end of range\n        currEnd = currStart | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n        minLon = GeoPointField.decodeLongitude(currStart);\n        minLat = GeoPointField.decodeLatitude(currStart);\n      }\n    } while(shift < 63);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aaba221b22442bdf0ef28770c25fe259dfb3f55","date":1466496193,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","sourceNew":"  private boolean nextRelation() {\n    Relation relation;\n    do {\n      // within or a boundary\n      if ((shift % GeoPointField.PRECISION_STEP) == 0 &&\n          (relation = relationImpl.relate(decodeLatitude(start), decodeLatitude(end),\n              decodeLongitude(start), decodeLongitude(end))) != Relation.CELL_OUTSIDE_QUERY) {\n        // if at max depth or cell completely within\n        if (shift == maxShift || relation == Relation.CELL_INSIDE_QUERY) {\n          setRange(relation == Relation.CELL_CROSSES_QUERY);\n          advanceVariables();\n          return true;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (shift != maxShift && relationImpl.cellIntersectsMBR(start, end) == true) {\n        // descend: start need not change since shift handles end of range\n        end = start | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n      }\n    } while(shift < 62);\n    return false;\n  }\n\n","sourceOld":"  private void nextRelation() {\n    double minLon = GeoPointField.decodeLongitude(currStart);\n    double minLat = GeoPointField.decodeLatitude(currStart);\n    double maxLon;\n    double maxLat;\n    boolean isWithin;\n    do {\n      maxLon = GeoPointField.decodeLongitude(currEnd);\n      maxLat = GeoPointField.decodeLatitude(currEnd);\n\n      isWithin = false;\n      // within or a boundary\n      if (boundary(minLat, maxLat, minLon, maxLon) == true) {\n        isWithin = within(minLat, maxLat, minLon, maxLon);\n        final int m;\n        if (isWithin == false || (m = shift % GeoPointField.PRECISION_STEP) == 0) {\n          setNextRange(isWithin == false);\n          advanceVariables();\n          break;\n        } else if (shift < 54) {\n          withinOnly = true;\n          shift = (short)(shift - m);\n          lastWithin = currEnd & ~((1L << shift) - 1);\n          setNextRange(false);\n          break;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (isWithin == true || (relationImpl.cellIntersectsMBR(minLat, maxLat, minLon, maxLon) == true && shift != maxShift)) {\n        // descend: currStart need not change since shift handles end of range\n        currEnd = currStart | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n        minLon = GeoPointField.decodeLongitude(currStart);\n        minLat = GeoPointField.decodeLatitude(currStart);\n      }\n    } while(shift < 63);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","pathOld":"/dev/null","sourceNew":"  private boolean nextRelation() {\n    Relation relation;\n    do {\n      // within or a boundary\n      if ((shift % GeoPointField.PRECISION_STEP) == 0 &&\n          (relation = relationImpl.relate(decodeLatitude(start), decodeLatitude(end),\n              decodeLongitude(start), decodeLongitude(end))) != Relation.CELL_OUTSIDE_QUERY) {\n        // if at max depth or cell completely within\n        if (shift == maxShift || relation == Relation.CELL_INSIDE_QUERY) {\n          setRange(relation == Relation.CELL_CROSSES_QUERY);\n          advanceVariables();\n          return true;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (shift != maxShift && relationImpl.cellIntersectsMBR(start, end) == true) {\n        // descend: start need not change since shift handles end of range\n        end = start | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n      }\n    } while(shift < 62);\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc53adde67e2fa905526fcf1e14e3c9e1e64821","date":1486416055,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointTermsEnum#nextRelation().mjava","sourceNew":null,"sourceOld":"  private boolean nextRelation() {\n    Relation relation;\n    do {\n      // within or a boundary\n      if ((shift % GeoPointField.PRECISION_STEP) == 0 &&\n          (relation = relationImpl.relate(decodeLatitude(start), decodeLatitude(end),\n              decodeLongitude(start), decodeLongitude(end))) != Relation.CELL_OUTSIDE_QUERY) {\n        // if at max depth or cell completely within\n        if (shift == maxShift || relation == Relation.CELL_INSIDE_QUERY) {\n          setRange(relation == Relation.CELL_CROSSES_QUERY);\n          advanceVariables();\n          return true;\n        }\n      }\n\n      // within cell but not at a depth factor of PRECISION_STEP\n      if (shift != maxShift && relationImpl.cellIntersectsMBR(start, end) == true) {\n        // descend: start need not change since shift handles end of range\n        end = start | (1L<<--shift) - 1;\n      } else {\n        advanceVariables();\n      }\n    } while(shift < 62);\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["be46ccf1a05985ba9fec84cb8674b607a23d5442"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["be46ccf1a05985ba9fec84cb8674b607a23d5442","a62e86d7b9cc6dec3c09f771166aa2393fd95c99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821"]},"commit2Childs":{"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be46ccf1a05985ba9fec84cb8674b607a23d5442","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["a62e86d7b9cc6dec3c09f771166aa2393fd95c99","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}