{"path":"src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","commits":[{"id":"66f4f73f46badcff4112ae64dbd1a3eecfeedc04","date":1218747845,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","sourceNew":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","sourceOld":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66f4f73f46badcff4112ae64dbd1a3eecfeedc04":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["66f4f73f46badcff4112ae64dbd1a3eecfeedc04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"66f4f73f46badcff4112ae64dbd1a3eecfeedc04":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["66f4f73f46badcff4112ae64dbd1a3eecfeedc04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}