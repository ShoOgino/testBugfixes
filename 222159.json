{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * Start index represents the number of the first entry of the query - \n     * result. The order depends on the query. Is the query a search query the \n     * this value will be assinged to the score in a common feed query the value \n     * will be assigned to the update time of the entries. \n     *  \n     * @return - the requested start index \n     */ \n    public int getStartIndex() { \n        if (this.request.getParameter(START_INDEX_NEXT_PAGE_PARAMETER) == null) \n            return DEFAULT_START_INDEX; \n        int retval = -1; \n        try { \n            retval = new Integer(this.request \n                    .getParameter(START_INDEX_NEXT_PAGE_PARAMETER)).intValue(); \n        } catch (Exception e) { \n            LOG.warn(\"Start-index could not be parsed - \" + e.getMessage(), e); \n        } \n        return retval < 0 ? DEFAULT_START_INDEX : retval; \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","sourceNew":"    /**\n     * Start index represents the number of the first entry of the query -\n     * result. The order depends on the query. Is the query a search query the\n     * this value will be assinged to the score in a common feed query the value\n     * will be assigned to the update time of the entries.\n     * \n     * @return - the requested start index\n     */\n    public int getStartIndex() {\n        if (this.request.getParameter(START_INDEX_NEXT_PAGE_PARAMETER) == null)\n            return DEFAULT_START_INDEX;\n        int retval = -1;\n        try {\n            retval = new Integer(this.request\n                    .getParameter(START_INDEX_NEXT_PAGE_PARAMETER)).intValue();\n        } catch (Exception e) {\n            LOG.warn(\"Start-index could not be parsed - \" + e.getMessage(), e);\n        }\n        return retval < 0 ? DEFAULT_START_INDEX : retval;\n    }\n\n","sourceOld":"    /** \n     * Start index represents the number of the first entry of the query - \n     * result. The order depends on the query. Is the query a search query the \n     * this value will be assinged to the score in a common feed query the value \n     * will be assigned to the update time of the entries. \n     *  \n     * @return - the requested start index \n     */ \n    public int getStartIndex() { \n        if (this.request.getParameter(START_INDEX_NEXT_PAGE_PARAMETER) == null) \n            return DEFAULT_START_INDEX; \n        int retval = -1; \n        try { \n            retval = new Integer(this.request \n                    .getParameter(START_INDEX_NEXT_PAGE_PARAMETER)).intValue(); \n        } catch (Exception e) { \n            LOG.warn(\"Start-index could not be parsed - \" + e.getMessage(), e); \n        } \n        return retval < 0 ? DEFAULT_START_INDEX : retval; \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","sourceNew":"    /**\n     * Start index represents the number of the first entry of the query -\n     * result. The order depends on the query. Is the query a search query the\n     * this value will be assigned to the score in a common feed query the value\n     * will be assigned to the update time of the entries.\n     * \n     * @return - the requested start index\n     */\n    public int getStartIndex() {\n        String startIndex = this.request.getParameter(START_INDEX_NEXT_PAGE_PARAMETER);\n        if (startIndex == null)\n            return DEFAULT_START_INDEX;\n        int retval = -1;\n        try {\n            retval = new Integer(startIndex).intValue();\n        } catch (Exception e) {\n            LOG.warn(\"Start-index could not be parsed - not an integer - \" + e.getMessage());\n        }\n        return retval < 0 ? DEFAULT_START_INDEX : retval;\n    }\n\n","sourceOld":"    /**\n     * Start index represents the number of the first entry of the query -\n     * result. The order depends on the query. Is the query a search query the\n     * this value will be assinged to the score in a common feed query the value\n     * will be assigned to the update time of the entries.\n     * \n     * @return - the requested start index\n     */\n    public int getStartIndex() {\n        if (this.request.getParameter(START_INDEX_NEXT_PAGE_PARAMETER) == null)\n            return DEFAULT_START_INDEX;\n        int retval = -1;\n        try {\n            retval = new Integer(this.request\n                    .getParameter(START_INDEX_NEXT_PAGE_PARAMETER)).intValue();\n        } catch (Exception e) {\n            LOG.warn(\"Start-index could not be parsed - \" + e.getMessage(), e);\n        }\n        return retval < 0 ? DEFAULT_START_INDEX : retval;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#getStartIndex().mjava","sourceNew":"    /**\n     * Start index represents the number of the first entry of the query -\n     * result. The order depends on the query. Is the query a search query the\n     * this value will be assigned to the score in a common feed query the value\n     * will be assigned to the update time of the entries.\n     * \n     * @return - the requested start index\n     */\n    public int getStartIndex() {\n        String startIndex = this.request.getParameter(START_INDEX_NEXT_PAGE_PARAMETER);\n        if (startIndex == null)\n            return DEFAULT_START_INDEX;\n        int retval = -1;\n        try {\n            retval = new Integer(startIndex).intValue();\n        } catch (Exception e) {\n            LOG.warn(\"Start-index could not be parsed - not an integer - \" + e.getMessage());\n        }\n        return retval < 0 ? DEFAULT_START_INDEX : retval;\n    }\n\n","sourceOld":"    /**\n     * Start index represents the number of the first entry of the query -\n     * result. The order depends on the query. Is the query a search query the\n     * this value will be assigned to the score in a common feed query the value\n     * will be assigned to the update time of the entries.\n     * \n     * @return - the requested start index\n     */\n    public int getStartIndex() {\n        String startIndex = this.request.getParameter(START_INDEX_NEXT_PAGE_PARAMETER);\n        if (startIndex == null)\n            return DEFAULT_START_INDEX;\n        int retval = -1;\n        try {\n            retval = new Integer(startIndex).intValue();\n        } catch (Exception e) {\n            LOG.warn(\"Start-index could not be parsed - not an integer - \" + e.getMessage());\n        }\n        return retval < 0 ? DEFAULT_START_INDEX : retval;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["52754a40a1550056d5637c8992b4076b5ed77328"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}