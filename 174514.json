{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","commits":[{"id":"441c188ff9fd7da36e0e4d8a9b51cebe63b31192","date":1384814749,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetsSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"Author (145.0)\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"Author (145.0)\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"Author (145.0)\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"Author (145.0)\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"Author (145.0)\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"Author (145.0)\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"Author (145.0)\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7554009c97f9365492660c1df175b6349f7ec05c":["441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["7554009c97f9365492660c1df175b6349f7ec05c"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7554009c97f9365492660c1df175b6349f7ec05c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["7554009c97f9365492660c1df175b6349f7ec05c"],"ae75def1e2525383b6e1397ed97c44387da9941c":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}