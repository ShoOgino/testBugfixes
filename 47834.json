{"path":"solr/core/src/test/org/apache/solr/search/CurrencyRangeFacetCloudTest#assertEqualsHACK(String,long,Object).mjava","commits":[{"id":"6409f24cc7d96b04fb1c932845092b0e307fb5d4","date":1515972624,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/CurrencyRangeFacetCloudTest#assertEqualsHACK(String,long,Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * HACK to work around SOLR-11775.\n   * Asserts that the 'actual' argument is a (non-null) Number, then compares it's 'longValue' to the 'expected' argument\n   */\n  private static void assertEqualsHACK(String msg, long expected, Object actual) {\n    assertNotNull(msg, actual);\n    assertTrue(msg + \" ... NOT A NUMBER: \" + actual.getClass(), Number.class.isInstance(actual));\n    assertEquals(msg, expected, ((Number)actual).longValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/CurrencyRangeFacetCloudTest#assertEqualsHACK(String,long,Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * HACK to work around SOLR-11775.\n   * Asserts that the 'actual' argument is a (non-null) Number, then compares it's 'longValue' to the 'expected' argument\n   */\n  private static void assertEqualsHACK(String msg, long expected, Object actual) {\n    assertNotNull(msg, actual);\n    assertTrue(msg + \" ... NOT A NUMBER: \" + actual.getClass(), Number.class.isInstance(actual));\n    assertEquals(msg, expected, ((Number)actual).longValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c841e27891873cab110ebeb89f124a8ec470176","date":1586527220,"type":4,"author":"Munendra S N","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/CurrencyRangeFacetCloudTest#assertEqualsHACK(String,long,Object).mjava","sourceNew":null,"sourceOld":"  /**\n   * HACK to work around SOLR-11775.\n   * Asserts that the 'actual' argument is a (non-null) Number, then compares it's 'longValue' to the 'expected' argument\n   */\n  private static void assertEqualsHACK(String msg, long expected, Object actual) {\n    assertNotNull(msg, actual);\n    assertTrue(msg + \" ... NOT A NUMBER: \" + actual.getClass(), Number.class.isInstance(actual));\n    assertEquals(msg, expected, ((Number)actual).longValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1c841e27891873cab110ebeb89f124a8ec470176":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6409f24cc7d96b04fb1c932845092b0e307fb5d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6409f24cc7d96b04fb1c932845092b0e307fb5d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c841e27891873cab110ebeb89f124a8ec470176"]},"commit2Childs":{"1c841e27891873cab110ebeb89f124a8ec470176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b94236357aaa22b76c10629851fe4e376e0cea82":["1c841e27891873cab110ebeb89f124a8ec470176"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6409f24cc7d96b04fb1c932845092b0e307fb5d4"],"6409f24cc7d96b04fb1c932845092b0e307fb5d4":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}