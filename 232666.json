{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","commits":[{"id":"a2576170b353998ba9157b6d148ebfde21138316","date":1523488980,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes' in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, Math.max(1, liveNodes - 2))\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName, cluster.getSolrClient().getZkStateReader(), false, true, TIMEOUT);\n\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f5a9deac6e313e80a1f56468e14bb4c491b83d7","date":1523529596,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes' in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, Math.max(1, liveNodes - 2))\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName, cluster.getSolrClient().getZkStateReader(), false, true, TIMEOUT);\n\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05a3c9b5f1dfb39879069eb1dac3ca104d3e4108","date":1533256859,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, Math.max(1, liveNodes - 2))\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName, cluster.getSolrClient().getZkStateReader(), false, true, TIMEOUT);\n\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","sourceOld":"  /**\n   * Tests if the specification of 'preferReplicaTypes' in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, Math.max(1, liveNodes - 2))\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName, cluster.getSolrClient().getZkStateReader(), false, true, TIMEOUT);\n\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"14076e7b40405aa1f08702d8df762d08b5d44f70","date":1537071979,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, Math.max(1, liveNodes - 2))\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName, cluster.getSolrClient().getZkStateReader(), false, true, TIMEOUT);\n\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","sourceOld":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, Math.max(1, liveNodes - 2))\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName, cluster.getSolrClient().getZkStateReader(), false, true, TIMEOUT);\n\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","sourceOld":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, Math.max(1, liveNodes - 2))\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName, cluster.getSolrClient().getZkStateReader(), false, true, TIMEOUT);\n\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","bugFix":["a2576170b353998ba9157b6d148ebfde21138316"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21bb17514cc08de6e6c92d11d2595dfa3a64e5d2","date":1559145358,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n\n","sourceOld":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n\n","sourceOld":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#preferReplicaTypesTest().mjava","sourceNew":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n\n","sourceOld":"  /**\n   * Tests if the specification of 'preferReplicaTypes` in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 15-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For these tests we need to have multiple replica types.\n    // Hence the below configuration for our collection\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual tests for 'shards.preference=replica.type:*'\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    // Test to verify that preferLocalShards=true doesn't break this\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05a3c9b5f1dfb39879069eb1dac3ca104d3e4108":["1f5a9deac6e313e80a1f56468e14bb4c491b83d7"],"1f5a9deac6e313e80a1f56468e14bb4c491b83d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a2576170b353998ba9157b6d148ebfde21138316"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["14076e7b40405aa1f08702d8df762d08b5d44f70"],"21bb17514cc08de6e6c92d11d2595dfa3a64e5d2":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","21bb17514cc08de6e6c92d11d2595dfa3a64e5d2"],"14076e7b40405aa1f08702d8df762d08b5d44f70":["05a3c9b5f1dfb39879069eb1dac3ca104d3e4108"],"a2576170b353998ba9157b6d148ebfde21138316":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["21bb17514cc08de6e6c92d11d2595dfa3a64e5d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"05a3c9b5f1dfb39879069eb1dac3ca104d3e4108":["14076e7b40405aa1f08702d8df762d08b5d44f70"],"1f5a9deac6e313e80a1f56468e14bb4c491b83d7":["05a3c9b5f1dfb39879069eb1dac3ca104d3e4108"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["21bb17514cc08de6e6c92d11d2595dfa3a64e5d2","58af973abe9f7c0faa777c1a6285fc7f72c171c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5a9deac6e313e80a1f56468e14bb4c491b83d7","a2576170b353998ba9157b6d148ebfde21138316"],"21bb17514cc08de6e6c92d11d2595dfa3a64e5d2":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"14076e7b40405aa1f08702d8df762d08b5d44f70":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a2576170b353998ba9157b6d148ebfde21138316":["1f5a9deac6e313e80a1f56468e14bb4c491b83d7"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}