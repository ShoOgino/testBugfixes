{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#perc20Test().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#perc20Test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void perc20Test() throws Exception {\n    String[] params = new String[] {\n        \"o.p2r.s.int_id\", \"percentile(20,int_id)\",\n        \"o.p2r.s.long_ld\", \"percentile(20,long_ld)\",\n        \"o.p2r.s.float_fd\", \"percentile(20,float_fd)\",\n        \"o.p2r.s.double_dd\", \"percentile(20,double_dd)\",\n        \"o.p2r.s.date_dtd\", \"string(percentile(20,date_dtd))\",\n        \"o.p2r.s.string_sd\", \"percentile(20,string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int 20\n    Integer intResult = getValue(response, \"p2r\", \"int_id\");\n    Integer intTest = (Integer)calculateStat(intTestStart, \"perc_20\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long 20\n    Long longResult = getValue(response, \"p2r\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"perc_20\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float 20\n    Float floatResult = getValue(response, \"p2r\", \"float_fd\");\n    Float floatTest = (Float)calculateStat(floatTestStart, \"perc_20\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double 20\n    Double doubleResult = getValue(response, \"p2r\", \"double_dd\");\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"perc_20\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date 20\n    String dateResult = getValue(response, \"p2r\", \"date_dtd\");\n    String dateTest = (String)calculateStat(dateTestStart, \"perc_20\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String 20\n    String stringResult = getValue(response, \"p2r\", \"string_sd\");\n    String stringTest = (String)calculateStat(stringTestStart, \"perc_20\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#perc20Test().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#perc20Test().mjava","sourceNew":"  @Test\n  public void perc20Test() throws Exception {\n    String[] params = new String[] {\n        \"o.p2r.s.int_id\", \"percentile(20,int_id)\",\n        \"o.p2r.s.long_ld\", \"percentile(20,long_ld)\",\n        \"o.p2r.s.float_fd\", \"percentile(20,float_fd)\",\n        \"o.p2r.s.double_dd\", \"percentile(20,double_dd)\",\n        \"o.p2r.s.date_dtd\", \"string(percentile(20,date_dtd))\",\n        \"o.p2r.s.string_sd\", \"percentile(20,string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Int 20\n    Integer intResult = getValue(response, \"p2r\", \"int_id\");\n    Integer intTest = (Integer)calculateStat(intTestStart, \"perc_20\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long 20\n    Long longResult = getValue(response, \"p2r\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"perc_20\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float 20\n    Float floatResult = getValue(response, \"p2r\", \"float_fd\");\n    Float floatTest = (Float)calculateStat(floatTestStart, \"perc_20\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double 20\n    Double doubleResult = getValue(response, \"p2r\", \"double_dd\");\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"perc_20\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date 20\n    String dateResult = getValue(response, \"p2r\", \"date_dtd\");\n    String dateTest = (String)calculateStat(dateTestStart, \"perc_20\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String 20\n    String stringResult = getValue(response, \"p2r\", \"string_sd\");\n    String stringTest = (String)calculateStat(stringTestStart, \"perc_20\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }\n\n","sourceOld":"  @Test\n  public void perc20Test() throws Exception {\n    String[] params = new String[] {\n        \"o.p2r.s.int_id\", \"percentile(20,int_id)\",\n        \"o.p2r.s.long_ld\", \"percentile(20,long_ld)\",\n        \"o.p2r.s.float_fd\", \"percentile(20,float_fd)\",\n        \"o.p2r.s.double_dd\", \"percentile(20,double_dd)\",\n        \"o.p2r.s.date_dtd\", \"string(percentile(20,date_dtd))\",\n        \"o.p2r.s.string_sd\", \"percentile(20,string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int 20\n    Integer intResult = getValue(response, \"p2r\", \"int_id\");\n    Integer intTest = (Integer)calculateStat(intTestStart, \"perc_20\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long 20\n    Long longResult = getValue(response, \"p2r\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"perc_20\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float 20\n    Float floatResult = getValue(response, \"p2r\", \"float_fd\");\n    Float floatTest = (Float)calculateStat(floatTestStart, \"perc_20\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double 20\n    Double doubleResult = getValue(response, \"p2r\", \"double_dd\");\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"perc_20\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date 20\n    String dateResult = getValue(response, \"p2r\", \"date_dtd\");\n    String dateTest = (String)calculateStat(dateTestStart, \"perc_20\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String 20\n    String stringResult = getValue(response, \"p2r\", \"string_sd\");\n    String stringTest = (String)calculateStat(stringTestStart, \"perc_20\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#perc20Test().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#perc20Test().mjava","sourceNew":"  @Test\n  public void perc20Test() throws Exception {\n    String[] params = new String[] {\n        \"o.p2r.s.int_id\", \"percentile(20,int_id)\",\n        \"o.p2r.s.long_ld\", \"percentile(20,long_ld)\",\n        \"o.p2r.s.float_fd\", \"percentile(20,float_fd)\",\n        \"o.p2r.s.double_dd\", \"percentile(20,double_dd)\",\n        \"o.p2r.s.date_dtd\", \"string(percentile(20,date_dtd))\",\n        \"o.p2r.s.string_sd\", \"percentile(20,string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Int 20\n    Integer intResult = getValue(response, \"p2r\", \"int_id\");\n    Integer intTest = (Integer)calculateStat(intTestStart, \"perc_20\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long 20\n    Long longResult = getValue(response, \"p2r\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"perc_20\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float 20\n    Float floatResult = getValue(response, \"p2r\", \"float_fd\");\n    Float floatTest = (Float)calculateStat(floatTestStart, \"perc_20\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double 20\n    Double doubleResult = getValue(response, \"p2r\", \"double_dd\");\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"perc_20\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date 20\n    String dateResult = getValue(response, \"p2r\", \"date_dtd\");\n    String dateTest = (String)calculateStat(dateTestStart, \"perc_20\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String 20\n    String stringResult = getValue(response, \"p2r\", \"string_sd\");\n    String stringTest = (String)calculateStat(stringTestStart, \"perc_20\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }\n\n","sourceOld":"  @Test\n  public void perc20Test() throws Exception {\n    String[] params = new String[] {\n        \"o.p2r.s.int_id\", \"percentile(20,int_id)\",\n        \"o.p2r.s.long_ld\", \"percentile(20,long_ld)\",\n        \"o.p2r.s.float_fd\", \"percentile(20,float_fd)\",\n        \"o.p2r.s.double_dd\", \"percentile(20,double_dd)\",\n        \"o.p2r.s.date_dtd\", \"string(percentile(20,date_dtd))\",\n        \"o.p2r.s.string_sd\", \"percentile(20,string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int 20\n    Integer intResult = getValue(response, \"p2r\", \"int_id\");\n    Integer intTest = (Integer)calculateStat(intTestStart, \"perc_20\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long 20\n    Long longResult = getValue(response, \"p2r\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"perc_20\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float 20\n    Float floatResult = getValue(response, \"p2r\", \"float_fd\");\n    Float floatTest = (Float)calculateStat(floatTestStart, \"perc_20\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double 20\n    Double doubleResult = getValue(response, \"p2r\", \"double_dd\");\n    Double doubleTest = (Double)calculateStat(doubleTestStart, \"perc_20\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date 20\n    String dateResult = getValue(response, \"p2r\", \"date_dtd\");\n    String dateTest = (String)calculateStat(dateTestStart, \"perc_20\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String 20\n    String stringResult = getValue(response, \"p2r\", \"string_sd\");\n    String stringTest = (String)calculateStat(stringTestStart, \"perc_20\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}