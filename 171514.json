{"path":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","commits":[{"id":"c2ed332b2d8425551884fa46ddad5af0c7657eb3","date":1184808839,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"/dev/null","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.UN_TOKENIZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      Hits hits = searcher.search(query);\n      assertEquals(3, hits.length());\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = hits.doc(i);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.UN_TOKENIZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      Hits hits = searcher.search(query);\n      assertEquals(3, hits.length());\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = hits.doc(i);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.UN_TOKENIZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      Hits hits = searcher.search(query);\n      assertEquals(3, hits.length());\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = hits.doc(i);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.UN_TOKENIZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.UN_TOKENIZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      Hits hits = searcher.search(query);\n      assertEquals(3, hits.length());\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = hits.doc(i);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.UN_TOKENIZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(\n        TEST_VERSION_CURRENT)));\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(\n        TEST_VERSION_CURRENT)));\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(\n        TEST_VERSION_CURRENT)));\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValue().mjava","sourceNew":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(\n        TEST_VERSION_CURRENT)));\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","sourceOld":"    public void testFieldSetValue() throws Exception {\n\n      Field field = new Field(\"id\", \"id1\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      Document doc = new Document();\n      doc.add(field);\n      doc.add(new Field(\"keyword\", \"test\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n\n      RAMDirectory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(\n        TEST_VERSION_CURRENT)));\n      writer.addDocument(doc);\n      field.setValue(\"id2\");\n      writer.addDocument(doc);\n      field.setValue(\"id3\");\n      writer.addDocument(doc);\n      writer.close();\n\n      Searcher searcher = new IndexSearcher(dir, true);\n\n      Query query = new TermQuery(new Term(\"keyword\", \"test\"));\n\n      // ensure that queries return expected results without DateFilter first\n      ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n      assertEquals(3, hits.length);\n      int result = 0;\n      for(int i=0;i<3;i++) {\n        Document doc2 = searcher.doc(hits[i].doc);\n        Field f = doc2.getField(\"id\");\n        if (f.stringValue().equals(\"id1\"))\n          result |= 1;\n        else if (f.stringValue().equals(\"id2\"))\n          result |= 2;\n        else if (f.stringValue().equals(\"id3\"))\n          result |= 4;\n        else\n          fail(\"unexpected id field\");\n      }\n      searcher.close();\n      dir.close();\n      assertEquals(\"did not see all IDs\", 7, result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"0a046c0c310bc77931fc8441bd920053b607dd14":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["c2ed332b2d8425551884fa46ddad5af0c7657eb3"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"c2ed332b2d8425551884fa46ddad5af0c7657eb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"c2ed332b2d8425551884fa46ddad5af0c7657eb3":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2ed332b2d8425551884fa46ddad5af0c7657eb3"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}