{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsProducer#getNorms(FieldInfo).mjava","commits":[{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsProducer#getNorms(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      LoadedNorms loaded = loadNorms(norms.get(field.name));\n      instance = loaded.norms;\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n        ramBytesUsed.addAndGet(loaded.ramBytesUsed);\n        instancesInfo.put(field.name, loaded.info);\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsProducer#getNorms(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      LoadedNorms loaded = loadNorms(norms.get(field.name));\n      instance = loaded.norms;\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n        ramBytesUsed.addAndGet(loaded.ramBytesUsed);\n        instancesInfo.put(field.name, loaded.info);\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fca6c8418a91a6d30730ad418791ddf59ec3d07a","date":1418666585,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsProducer#getNorms(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsProducer#getNorms(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    Norms instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(norms.get(field.name));\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      LoadedNorms loaded = loadNorms(norms.get(field.name));\n      instance = loaded.norms;\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n        ramBytesUsed.addAndGet(loaded.ramBytesUsed);\n        instancesInfo.put(field.name, loaded.info);\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","date":1434069165,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsProducer#getNorms(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsProducer#getNorms(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    Norms instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(norms.get(field.name));\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    Norms instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(norms.get(field.name));\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["fca6c8418a91a6d30730ad418791ddf59ec3d07a"],"fca6c8418a91a6d30730ad418791ddf59ec3d07a":["9bb9a29a5e71a90295f175df8919802993142c9a"],"bc8f80fee115148a0e4a0574560be06b494de821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"]},"commit2Childs":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fca6c8418a91a6d30730ad418791ddf59ec3d07a":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["fca6c8418a91a6d30730ad418791ddf59ec3d07a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}