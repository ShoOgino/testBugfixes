{"path":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","commits":[{"id":"2349212cb1569cc30c7c141938c2aa3b5518ffd5","date":1293747049,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   * \n   * @deprecated This functionality is implemented in\n   *             {@link #handleRequestBody(SolrQueryRequest, SolrQueryResponse)}.\n   */\n  @Deprecated\n  public static String getFileContents( String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      SolrCore core = SolrCore.getSolrCore();\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   * \n   * @deprecated This functionality is implemented in\n   *             {@link #handleRequestBody(SolrQueryRequest, SolrQueryResponse)}.\n   */\n  @Deprecated\n  public static String getFileContents( String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      SolrCore core = SolrCore.getSolrCore();\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"651a613a8df324c5f834b6c2b6fb5bb945431755","date":1296820909,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#getFileContents(SolrCore,String).mjava","sourceNew":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","sourceOld":"  /**\n   * This is a utility function that lets you get the contents of an admin file\n   * \n   * It is only used so that we can get rid of \"/admin/get-file.jsp\" and include\n   * \"admin-extra.html\" in \"/admin/index.html\" using jsp scriptlets\n   */\n  public static String getFileContents(SolrCore core, String path )\n  {\n    if( instance != null && instance.hiddenFiles != null ) {\n      if( instance.hiddenFiles.contains( path ) ) {\n        return \"\"; // ignore it...\n      }\n    }\n    try {\n      InputStream input = core.getResourceLoader().openResource(path);\n      return IOUtils.toString( input, \"UTF-8\" );\n    }\n    catch( Exception ex ) {} // ignore it\n    return \"\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2349212cb1569cc30c7c141938c2aa3b5518ffd5"],"2349212cb1569cc30c7c141938c2aa3b5518ffd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2349212cb1569cc30c7c141938c2aa3b5518ffd5"],"651a613a8df324c5f834b6c2b6fb5bb945431755":["2349212cb1569cc30c7c141938c2aa3b5518ffd5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["651a613a8df324c5f834b6c2b6fb5bb945431755"],"c26f00b574427b55127e869b935845554afde1fa":["651a613a8df324c5f834b6c2b6fb5bb945431755","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","651a613a8df324c5f834b6c2b6fb5bb945431755"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["651a613a8df324c5f834b6c2b6fb5bb945431755"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","651a613a8df324c5f834b6c2b6fb5bb945431755"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"2349212cb1569cc30c7c141938c2aa3b5518ffd5":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","651a613a8df324c5f834b6c2b6fb5bb945431755"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"651a613a8df324c5f834b6c2b6fb5bb945431755":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","2349212cb1569cc30c7c141938c2aa3b5518ffd5","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}