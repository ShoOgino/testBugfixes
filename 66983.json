{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler, String asyncId, Map<String, String> requestMap) {\n    if (asyncId != null) {\n      String coreAdminAsyncId = asyncId + Math.abs(System.nanoTime());\n      params.set(ASYNC, coreAdminAsyncId);\n      requestMap.put(nodeName, coreAdminAsyncId);\n    }\n\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler, String asyncId, Map<String, String> requestMap) {\n    if (asyncId != null) {\n      String coreAdminAsyncId = asyncId + Math.abs(System.nanoTime());\n      params.set(ASYNC, coreAdminAsyncId);\n      requestMap.put(nodeName, coreAdminAsyncId);\n    }\n\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05","date":1446751515,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                                ShardHandler shardHandler, String asyncId,\n                                Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","sourceOld":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler, String asyncId, Map<String, String> requestMap) {\n    if (asyncId != null) {\n      String coreAdminAsyncId = asyncId + Math.abs(System.nanoTime());\n      params.set(ASYNC, coreAdminAsyncId);\n      requestMap.put(nodeName, coreAdminAsyncId);\n    }\n\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","date":1471585465,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                        ShardHandler shardHandler, String asyncId,\n                        Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","sourceOld":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                                ShardHandler shardHandler, String asyncId,\n                                Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                        ShardHandler shardHandler, String asyncId,\n                        Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","sourceOld":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                                ShardHandler shardHandler, String asyncId,\n                                Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                        ShardHandler shardHandler, String asyncId,\n                        Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","sourceOld":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                                ShardHandler shardHandler, String asyncId,\n                                Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                        ShardHandler shardHandler, String asyncId,\n                        Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","sourceOld":"  void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                        ShardHandler shardHandler, String asyncId,\n                        Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                        ShardHandler shardHandler, String asyncId,\n                        Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","sourceOld":"  void sendShardRequest(String nodeName, ModifiableSolrParams params,\n                        ShardHandler shardHandler, String asyncId,\n                        Map<String, String> requestMap) {\n    sendShardRequest(nodeName, params, shardHandler, asyncId, requestMap, adminPath, zkStateReader);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b94236357aaa22b76c10629851fe4e376e0cea82":["403d05f7f8d69b65659157eff1bc1d2717f04c66","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["403d05f7f8d69b65659157eff1bc1d2717f04c66","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}