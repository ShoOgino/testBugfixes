{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#indexDocsForMultipleDWPTs(IndexWriter).mjava","commits":[{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#indexDocsForMultipleDWPTs(IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#indexDocsForMultipleThreadStates(IndexWriter).mjava","sourceNew":"  private int indexDocsForMultipleDWPTs(IndexWriter w) throws InterruptedException {\n    Thread[] threads = new Thread[3];\n    CountDownLatch latch = new CountDownLatch(threads.length);\n    int numDocsPerThread = 10 + random().nextInt(30);\n    // ensure we have more than on thread state\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread(() -> {\n        latch.countDown();\n        try {\n          latch.await();\n          for (int j = 0; j < numDocsPerThread; j++) {\n            Document doc = new Document();\n            doc.add(new StringField(\"id\", \"foo\", Field.Store.YES));\n            w.addDocument(doc);\n          }\n        } catch (Exception e) {\n          throw new AssertionError(e);\n        }\n      });\n      threads[i].start();\n    }\n    for (Thread t : threads) {\n      t.join();\n    }\n    return numDocsPerThread * threads.length;\n  }\n\n","sourceOld":"  private int indexDocsForMultipleThreadStates(IndexWriter w) throws InterruptedException {\n    Thread[] threads = new Thread[3];\n    CountDownLatch latch = new CountDownLatch(threads.length);\n    int numDocsPerThread = 10 + random().nextInt(30);\n    // ensure we have more than on thread state\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread(() -> {\n        latch.countDown();\n        try {\n          latch.await();\n          for (int j = 0; j < numDocsPerThread; j++) {\n            Document doc = new Document();\n            doc.add(new StringField(\"id\", \"foo\", Field.Store.YES));\n            w.addDocument(doc);\n          }\n        } catch (Exception e) {\n          throw new AssertionError(e);\n        }\n      });\n      threads[i].start();\n    }\n    for (Thread t : threads) {\n      t.join();\n    }\n    return numDocsPerThread * threads.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["264935965977b4a9e2f3920420647072c9c49176"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}