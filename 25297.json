{"path":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#addPosition(int,BytesRef,int,int).mjava","commits":[{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#addPosition(int,BytesRef).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n\n    if (DEBUG) System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload, -1, -1);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = BytesRef.deepCopyOf(payload);\n        } else {\n          pos.payload.copyBytes(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n\n    if (DEBUG) System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = BytesRef.deepCopyOf(payload);\n        } else {\n          pos.payload.copyBytes(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n\n    if (DEBUG) System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload, -1, -1);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = BytesRef.deepCopyOf(payload);\n        } else {\n          pos.payload.copyBytes(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n\n    if (DEBUG) System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload, -1, -1);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = BytesRef.deepCopyOf(payload);\n        } else {\n          pos.payload.copyBytes(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}