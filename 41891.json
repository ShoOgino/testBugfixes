{"path":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","sourceNew":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          }\n          \n          @Override\n          public boolean isCacheable() {\n            return true;\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          }\n          \n          @Override\n          public boolean isCacheable() {\n            return true;\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ea8c8c94ae9da9a366175e2abbe1dde3aa0453","date":1402659583,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","sourceNew":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return DocIdSet.EMPTY;\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          }\n          \n          @Override\n          public boolean isCacheable() {\n            return true;\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","sourceNew":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return DocIdSet.EMPTY;\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return new DocIdSet() {\n          @Override\n          public DocIdSetIterator iterator() {\n            return null;\n          }\n          \n          @Override\n          public boolean isCacheable() {\n            return true;\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","sourceNew":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return DocIdSet.EMPTY;\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return DocIdSet.EMPTY;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6","date":1424027250,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","sourceNew":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return DocIdSet.EMPTY;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDISIFilter\";\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return DocIdSet.EMPTY;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"099c774ddd27f4ad437ca5df14d153bab0a3affe","date":1424527689,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getNullDISIFilter().mjava","sourceNew":null,"sourceOld":"  private Filter getNullDISIFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return DocIdSet.EMPTY;\n      }\n      @Override\n      public String toString(String field) {\n        return \"nullDISIFilter\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6"],"54ea8c8c94ae9da9a366175e2abbe1dde3aa0453":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["b89678825b68eccaf09e6ab71675fc0b0af1e099","54ea8c8c94ae9da9a366175e2abbe1dde3aa0453"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["54ea8c8c94ae9da9a366175e2abbe1dde3aa0453"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["099c774ddd27f4ad437ca5df14d153bab0a3affe"]},"commit2Childs":{"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6":["099c774ddd27f4ad437ca5df14d153bab0a3affe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["54ea8c8c94ae9da9a366175e2abbe1dde3aa0453","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54ea8c8c94ae9da9a366175e2abbe1dde3aa0453":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}