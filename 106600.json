{"path":"src/java/org/apache/lucene/search/FieldValueHitQueue#create(SortField[],int).mjava","commits":[{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldValueHitQueue#create(SortField[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a hit queue sorted by the given list of fields.\n   * \n   * @param fields\n   *          SortField array we are sorting by in priority order (highest\n   *          priority first); cannot be <code>null</code> or empty\n   * @param size\n   *          The number of hits to retain. Must be greater than zero.\n   * @throws IOException\n   */\n  public static FieldValueHitQueue create(SortField[] fields, int size) throws IOException {\n\n    if (fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    if (fields.length == 1) {\n      return new OneComparatorFieldValueHitQueue(fields, size);\n    } else {\n      return new MultiComparatorsFieldValueHitQueue(fields, size);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1efadbdb7d262e4f77e0cc5d0134f834e65f051","date":1245754135,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldValueHitQueue#create(SortField[],int).mjava","pathOld":"src/java/org/apache/lucene/search/FieldValueHitQueue#create(SortField[],int).mjava","sourceNew":"  /**\n   * Creates a hit queue sorted by the given list of fields.\n   * \n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length <code>numHits</code>.\n   * \n   * @param fields\n   *          SortField array we are sorting by in priority order (highest\n   *          priority first); cannot be <code>null</code> or empty\n   * @param size\n   *          The number of hits to retain. Must be greater than zero.\n   * @throws IOException\n   */\n  public static FieldValueHitQueue create(SortField[] fields, int size) throws IOException {\n\n    if (fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    if (fields.length == 1) {\n      return new OneComparatorFieldValueHitQueue(fields, size);\n    } else {\n      return new MultiComparatorsFieldValueHitQueue(fields, size);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a hit queue sorted by the given list of fields.\n   * \n   * @param fields\n   *          SortField array we are sorting by in priority order (highest\n   *          priority first); cannot be <code>null</code> or empty\n   * @param size\n   *          The number of hits to retain. Must be greater than zero.\n   * @throws IOException\n   */\n  public static FieldValueHitQueue create(SortField[] fields, int size) throws IOException {\n\n    if (fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    if (fields.length == 1) {\n      return new OneComparatorFieldValueHitQueue(fields, size);\n    } else {\n      return new MultiComparatorsFieldValueHitQueue(fields, size);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue#create(SortField[],int).mjava","pathOld":"src/java/org/apache/lucene/search/FieldValueHitQueue#create(SortField[],int).mjava","sourceNew":"  /**\n   * Creates a hit queue sorted by the given list of fields.\n   * \n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length <code>numHits</code>.\n   * \n   * @param fields\n   *          SortField array we are sorting by in priority order (highest\n   *          priority first); cannot be <code>null</code> or empty\n   * @param size\n   *          The number of hits to retain. Must be greater than zero.\n   * @throws IOException\n   */\n  public static FieldValueHitQueue create(SortField[] fields, int size) throws IOException {\n\n    if (fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    if (fields.length == 1) {\n      return new OneComparatorFieldValueHitQueue(fields, size);\n    } else {\n      return new MultiComparatorsFieldValueHitQueue(fields, size);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a hit queue sorted by the given list of fields.\n   * \n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length <code>numHits</code>.\n   * \n   * @param fields\n   *          SortField array we are sorting by in priority order (highest\n   *          priority first); cannot be <code>null</code> or empty\n   * @param size\n   *          The number of hits to retain. Must be greater than zero.\n   * @throws IOException\n   */\n  public static FieldValueHitQueue create(SortField[] fields, int size) throws IOException {\n\n    if (fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    if (fields.length == 1) {\n      return new OneComparatorFieldValueHitQueue(fields, size);\n    } else {\n      return new MultiComparatorsFieldValueHitQueue(fields, size);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1efadbdb7d262e4f77e0cc5d0134f834e65f051":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f1efadbdb7d262e4f77e0cc5d0134f834e65f051"]},"commit2Childs":{"f1efadbdb7d262e4f77e0cc5d0134f834e65f051":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["f1efadbdb7d262e4f77e0cc5d0134f834e65f051"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}