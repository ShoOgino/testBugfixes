{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/FieldReader.SegmentTermsEnum#pushFrame(FST.Arc[BytesRef],BytesRef,int).mjava","commits":[{"id":"d289450fa5030c34b5e378c04bcb03a026aad9f4","date":1400178141,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/FieldReader.SegmentTermsEnum#pushFrame(FST.Arc[BytesRef],BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"    // Pushes a frame we seek'd to\n    Frame pushFrame(FST.Arc<BytesRef> arc, BytesRef frameData, int length) throws IOException {\n      scratchReader.reset(frameData.bytes, frameData.offset, frameData.length);\n      final long code = scratchReader.readVLong();\n      final long fpSeek = code >>> BlockTreeTermsWriter.OUTPUT_FLAGS_NUM_BITS;\n      final Frame f = getFrame(1+currentFrame.ord);\n      f.hasTerms = (code & BlockTreeTermsWriter.OUTPUT_FLAG_HAS_TERMS) != 0;\n      f.hasTermsOrig = f.hasTerms;\n      f.isFloor = (code & BlockTreeTermsWriter.OUTPUT_FLAG_IS_FLOOR) != 0;\n      if (f.isFloor) {\n        f.setFloorData(scratchReader, frameData);\n      }\n      pushFrame(arc, fpSeek, length);\n\n      return f;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e50f0da93c6dcee20d8792637b1786e2c34975e9","date":1400182475,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/FieldReader.SegmentTermsEnum#pushFrame(FST.Arc[BytesRef],BytesRef,int).mjava","sourceNew":null,"sourceOld":"    // Pushes a frame we seek'd to\n    Frame pushFrame(FST.Arc<BytesRef> arc, BytesRef frameData, int length) throws IOException {\n      scratchReader.reset(frameData.bytes, frameData.offset, frameData.length);\n      final long code = scratchReader.readVLong();\n      final long fpSeek = code >>> BlockTreeTermsWriter.OUTPUT_FLAGS_NUM_BITS;\n      final Frame f = getFrame(1+currentFrame.ord);\n      f.hasTerms = (code & BlockTreeTermsWriter.OUTPUT_FLAG_HAS_TERMS) != 0;\n      f.hasTermsOrig = f.hasTerms;\n      f.isFloor = (code & BlockTreeTermsWriter.OUTPUT_FLAG_IS_FLOOR) != 0;\n      if (f.isFloor) {\n        f.setFloorData(scratchReader, frameData);\n      }\n      pushFrame(arc, fpSeek, length);\n\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e50f0da93c6dcee20d8792637b1786e2c34975e9":["d289450fa5030c34b5e378c04bcb03a026aad9f4"],"d289450fa5030c34b5e378c04bcb03a026aad9f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e50f0da93c6dcee20d8792637b1786e2c34975e9":[],"d289450fa5030c34b5e378c04bcb03a026aad9f4":["e50f0da93c6dcee20d8792637b1786e2c34975e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d289450fa5030c34b5e378c04bcb03a026aad9f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e50f0da93c6dcee20d8792637b1786e2c34975e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}