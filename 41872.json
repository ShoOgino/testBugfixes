{"path":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","commits":[{"id":"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","date":1269379515,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(FreqProxTermsWriter.PostingList,int).mjava","sourceNew":"  final void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","sourceOld":"  final void writeProx(FreqProxTermsWriter.PostingList p, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    p.lastPosition = fieldState.position;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","sourceOld":"  final void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","sourceOld":"  final void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n\n  }\n\n","sourceOld":"  final void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n\n  }\n\n","sourceOld":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n\n  }\n\n","sourceOld":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n\n  }\n\n","sourceOld":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n    \n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;      \n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    \n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    //System.out.println(\"writeProx termID=\" + termID + \" proxCode=\" + proxCode);\n    assert writeProx;\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else {\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    }\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n  }\n\n","sourceOld":"  void writeProx(final int termID, int proxCode) {\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else\n      termsHashPerField.writeVInt(1, proxCode<<1);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n\n  }\n\n","bugFix":null,"bugIntro":["83ede60c0b5bb96ad193414bbd663193b56689b3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeProx(int,int).mjava","sourceNew":"  void writeProx(final int termID, int proxCode) {\n    //System.out.println(\"writeProx termID=\" + termID + \" proxCode=\" + proxCode);\n    assert writeProx;\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else {\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    }\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n  }\n\n","sourceOld":"  void writeProx(final int termID, int proxCode) {\n    //System.out.println(\"writeProx termID=\" + termID + \" proxCode=\" + proxCode);\n    assert writeProx;\n    final Payload payload;\n    if (payloadAttribute == null) {\n      payload = null;\n    } else {\n      payload = payloadAttribute.getPayload();\n    }\n\n    if (payload != null && payload.length > 0) {\n      termsHashPerField.writeVInt(1, (proxCode<<1)|1);\n      termsHashPerField.writeVInt(1, payload.length);\n      termsHashPerField.writeBytes(1, payload.data, payload.offset, payload.length);\n      hasPayloads = true;\n    } else {\n      termsHashPerField.writeVInt(1, proxCode<<1);\n    }\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastPositions[termID] = fieldState.position;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a3776dccca01c11e7046323cfad46a3b4a471233":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["a3776dccca01c11e7046323cfad46a3b4a471233","b3e06be49006ecac364d39d12b9c9f74882f9b9f","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","31f025ae60076ae95274433f3fe8e6ace2857a87"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}