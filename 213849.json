{"path":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","commits":[{"id":"6131846417f8b92d140e341f38656a7140508aec","date":1466499795,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"/dev/null","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цей Чайковський.\",\n                     new String[] { \"чайковський\" });\n    a.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a3f58f9b1d94e49676dbe9005c6950e09d71e52","date":1467800252,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цей Чайковський і Ґете.\",\n                     new String[] { \"чайковський\", \"ґете\" });\n    a.close();\n  }\n\n","sourceOld":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цей Чайковський.\",\n                     new String[] { \"чайковський\" });\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"/dev/null","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цей Чайковський і Ґете.\",\n                     new String[] { \"чайковський\", \"ґете\" });\n    a.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e35cf72b2fefca2bc834361951b6944e5ef2d596","date":1492597278,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Ґете\" });\n    a.close();\n  }\n\n","sourceOld":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цей Чайковський і Ґете.\",\n                     new String[] { \"чайковський\", \"ґете\" });\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Ґете\" });\n    a.close();\n  }\n\n","sourceOld":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цей Чайковський і Ґете.\",\n                     new String[] { \"чайковський\", \"ґете\" });\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d85ac6aeaffe4e7512be7d1cd9a76eff15501ee9","date":1495714176,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Гете\" });\n    a.close();\n  }\n\n","sourceOld":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Ґете\" });\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Гете\" });\n    a.close();\n  }\n\n","sourceOld":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Ґете\" });\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/uk/TestUkrainianAnalyzer#testCapsTokenStream().mjava","sourceNew":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Гете\" });\n    a.close();\n  }\n\n","sourceOld":"  public void testCapsTokenStream() throws Exception {\n    Analyzer a = new UkrainianMorfologikAnalyzer();\n    assertAnalyzesTo(a, \"Цих Чайковського і Ґете.\",\n                     new String[] { \"Чайковське\", \"Чайковський\", \"Ґете\" });\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d85ac6aeaffe4e7512be7d1cd9a76eff15501ee9":["e35cf72b2fefca2bc834361951b6944e5ef2d596"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["6a3f58f9b1d94e49676dbe9005c6950e09d71e52"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d85ac6aeaffe4e7512be7d1cd9a76eff15501ee9"],"6131846417f8b92d140e341f38656a7140508aec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6a3f58f9b1d94e49676dbe9005c6950e09d71e52":["6131846417f8b92d140e341f38656a7140508aec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e35cf72b2fefca2bc834361951b6944e5ef2d596":["6a3f58f9b1d94e49676dbe9005c6950e09d71e52"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["e35cf72b2fefca2bc834361951b6944e5ef2d596","d85ac6aeaffe4e7512be7d1cd9a76eff15501ee9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6a3f58f9b1d94e49676dbe9005c6950e09d71e52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"d85ac6aeaffe4e7512be7d1cd9a76eff15501ee9":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"6131846417f8b92d140e341f38656a7140508aec":["6a3f58f9b1d94e49676dbe9005c6950e09d71e52"],"6a3f58f9b1d94e49676dbe9005c6950e09d71e52":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","e35cf72b2fefca2bc834361951b6944e5ef2d596","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6131846417f8b92d140e341f38656a7140508aec","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e35cf72b2fefca2bc834361951b6944e5ef2d596":["d85ac6aeaffe4e7512be7d1cd9a76eff15501ee9","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}