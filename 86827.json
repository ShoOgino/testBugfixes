{"path":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","sourceNew":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","sourceOld":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1516625300688fb75e3cc5a4894afd17b3ecb356","date":1166014543,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","sourceNew":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","sourceOld":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","sourceNew":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","sourceOld":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1516625300688fb75e3cc5a4894afd17b3ecb356":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["1516625300688fb75e3cc5a4894afd17b3ecb356"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"1516625300688fb75e3cc5a4894afd17b3ecb356":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["1516625300688fb75e3cc5a4894afd17b3ecb356"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}