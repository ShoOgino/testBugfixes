{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","commits":[{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["a4de1c9bc442e26377578457538c8fcbccf1ecf5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.shutdown();\n    Set<String> fieldsToLoad = new HashSet<>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.shutdown();\n    Set<String> fieldsToLoad = new HashSet<>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"field1\", \"foobar\", Field.Store.YES));\n    doc.add(newStringField(\"field2\", \"foobaz\", Field.Store.YES));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    StoredDocument doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1d028314cced5858683a1bb4741423d0f934257b"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"1d028314cced5858683a1bb4741423d0f934257b":["04f07771a2a7dd3a395700665ed839c3dae2def2","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}