{"path":"solr/core/src/java/org/apache/solr/cloud/ReplicateFromLeader#getCommitVersion(SolrCore).mjava","commits":[{"id":"be320990bdc77e643388fa801e75017f19289c42","date":1489477067,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ReplicateFromLeader#getCommitVersion(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public static String getCommitVersion(SolrCore solrCore) {\n    IndexCommit commit = solrCore.getDeletionPolicy().getLatestCommit();\n    try {\n      String commitVersion = commit.getUserData().get(SolrIndexWriter.COMMIT_COMMAND_VERSION);\n      if (commitVersion == null) return null;\n      else return commitVersion;\n    } catch (Exception e) {\n      LOG.warn(\"Cannot get commit command version from index commit point \",e);\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f996f8177b9204bdc92f7164460c6cefad9ac99a","date":1489482690,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ReplicateFromLeader#getCommitVersion(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public static String getCommitVersion(SolrCore solrCore) {\n    IndexCommit commit = solrCore.getDeletionPolicy().getLatestCommit();\n    try {\n      String commitVersion = commit.getUserData().get(SolrIndexWriter.COMMIT_COMMAND_VERSION);\n      if (commitVersion == null) return null;\n      else return commitVersion;\n    } catch (Exception e) {\n      LOG.warn(\"Cannot get commit command version from index commit point \",e);\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ReplicateFromLeader#getCommitVersion(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public static String getCommitVersion(SolrCore solrCore) {\n    IndexCommit commit = solrCore.getDeletionPolicy().getLatestCommit();\n    try {\n      String commitVersion = commit.getUserData().get(SolrIndexWriter.COMMIT_COMMAND_VERSION);\n      if (commitVersion == null) return null;\n      else return commitVersion;\n    } catch (Exception e) {\n      LOG.warn(\"Cannot get commit command version from index commit point \",e);\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ReplicateFromLeader#getCommitVersion(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ReplicateFromLeader#getCommitVersion(SolrCore).mjava","sourceNew":"  public static String getCommitVersion(SolrCore solrCore) {\n    IndexCommit commit = solrCore.getDeletionPolicy().getLatestCommit();\n    try {\n      String commitVersion = commit.getUserData().get(SolrIndexWriter.COMMIT_COMMAND_VERSION);\n      if (commitVersion == null) return null;\n      else return commitVersion;\n    } catch (Exception e) {\n      log.warn(\"Cannot get commit command version from index commit point \",e);\n      return null;\n    }\n  }\n\n","sourceOld":"  public static String getCommitVersion(SolrCore solrCore) {\n    IndexCommit commit = solrCore.getDeletionPolicy().getLatestCommit();\n    try {\n      String commitVersion = commit.getUserData().get(SolrIndexWriter.COMMIT_COMMAND_VERSION);\n      if (commitVersion == null) return null;\n      else return commitVersion;\n    } catch (Exception e) {\n      LOG.warn(\"Cannot get commit command version from index commit point \",e);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f996f8177b9204bdc92f7164460c6cefad9ac99a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be320990bdc77e643388fa801e75017f19289c42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f996f8177b9204bdc92f7164460c6cefad9ac99a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["be320990bdc77e643388fa801e75017f19289c42"]},"commit2Childs":{"f996f8177b9204bdc92f7164460c6cefad9ac99a":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f996f8177b9204bdc92f7164460c6cefad9ac99a","be320990bdc77e643388fa801e75017f19289c42","ab68488225b6a6c357dda72ed11dedca9914a192"],"be320990bdc77e643388fa801e75017f19289c42":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}