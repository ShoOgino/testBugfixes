{"path":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit(Map[String,String]).mjava","commits":[{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit(Map[String,String]).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit(Map).mjava","sourceNew":"  @Override\n  protected void doCommit(Map<String,String> commitUserData) throws IOException {\n    // todo: read/write lock\n\n    // 1. update norms\n    if (uncommittedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String,List<NormUpdate>> e : uncommittedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      uncommittedNormsByFieldNameAndDocumentNumber = null;\n    }\n\n    // 2. remove deleted documents\n    if (uncommittedDeletedDocuments != null) {\n      if (index.getDeletedDocuments() == null) {\n        index.setDeletedDocuments(uncommittedDeletedDocuments);\n      } else {\n        for (int d = 0; d< uncommittedDeletedDocuments.size(); d++) {\n          if (uncommittedDeletedDocuments.get(d)) {\n            index.getDeletedDocuments().set(d);\n          }\n        }\n      }\n      uncommittedDeletedDocuments = null;\n    }\n\n    // todo unlock read/writelock\n  }\n\n","sourceOld":"  @Override\n  protected void doCommit(Map commitUserData) throws IOException {\n    // todo: read/write lock\n\n    boolean updated = false;\n\n    // 1. update norms\n    if (uncommittedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String,List<NormUpdate>> e : uncommittedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      uncommittedNormsByFieldNameAndDocumentNumber = null;\n\n      updated = true;\n    }\n\n    // 2. remove deleted documents\n    if (uncommittedDeletedDocuments != null) {\n      if (index.getDeletedDocuments() == null) {\n        index.setDeletedDocuments(uncommittedDeletedDocuments);\n      } else {\n        for (int d = 0; d< uncommittedDeletedDocuments.size(); d++) {\n          if (uncommittedDeletedDocuments.get(d)) {\n            index.getDeletedDocuments().set(d);\n          }\n        }\n      }\n      uncommittedDeletedDocuments = null;\n\n      updated = true;\n\n    }\n\n    // todo unlock read/writelock\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit(Map[String,String]).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit(Map[String,String]).mjava","sourceNew":"  @Override\n  protected void doCommit(Map<String,String> commitUserData) throws IOException {\n    // todo: read/write lock\n\n    // 1. update norms\n    if (uncommittedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String,List<NormUpdate>> e : uncommittedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      uncommittedNormsByFieldNameAndDocumentNumber = null;\n    }\n\n    // 2. remove deleted documents\n    if (uncommittedDeletedDocuments != null) {\n      if (index.getDeletedDocuments() == null) {\n        index.setDeletedDocuments(uncommittedDeletedDocuments);\n      } else {\n        for (int d = 0; d< uncommittedDeletedDocuments.size(); d++) {\n          if (uncommittedDeletedDocuments.get(d)) {\n            index.getDeletedDocuments().set(d);\n          }\n        }\n      }\n      uncommittedDeletedDocuments = null;\n    }\n\n    // todo unlock read/writelock\n  }\n\n","sourceOld":"  @Override\n  protected void doCommit(Map<String,String> commitUserData) throws IOException {\n    // todo: read/write lock\n\n    // 1. update norms\n    if (uncommittedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String,List<NormUpdate>> e : uncommittedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      uncommittedNormsByFieldNameAndDocumentNumber = null;\n    }\n\n    // 2. remove deleted documents\n    if (uncommittedDeletedDocuments != null) {\n      if (index.getDeletedDocuments() == null) {\n        index.setDeletedDocuments(uncommittedDeletedDocuments);\n      } else {\n        for (int d = 0; d< uncommittedDeletedDocuments.size(); d++) {\n          if (uncommittedDeletedDocuments.get(d)) {\n            index.getDeletedDocuments().set(d);\n          }\n        }\n      }\n      uncommittedDeletedDocuments = null;\n    }\n\n    // todo unlock read/writelock\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}