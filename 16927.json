{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","commits":[{"id":"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c","date":1416362965,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw, true);\n    LeafReader r = getOnlySegmentReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","sourceNew":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlySegmentReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw, true);\n    LeafReader r = getOnlySegmentReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","sourceNew":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlyLeafReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlySegmentReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","sourceNew":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlyLeafReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlyLeafReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","sourceNew":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlyLeafReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlyLeafReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValues#testEmptyIndex().mjava","sourceNew":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlyLeafReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** \n   * If the field doesn't exist, we return empty instances:\n   * it can easily happen that a segment just doesn't have any docs with the field.\n   */\n  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.addDocument(new Document());\n    DirectoryReader dr = DirectoryReader.open(iw);\n    LeafReader r = getOnlyLeafReader(dr);\n    \n    // ok\n    assertNotNull(DocValues.getBinary(r, \"bogus\"));\n    assertNotNull(DocValues.getNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getSorted(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedSet(r, \"bogus\"));\n    assertNotNull(DocValues.getSortedNumeric(r, \"bogus\"));\n    assertNotNull(DocValues.getDocsWithField(r, \"bogus\"));\n    \n    dr.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["2a1862266772deb28cdcb7d996b64d2177022687"],"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a1862266772deb28cdcb7d996b64d2177022687":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c":["2a1862266772deb28cdcb7d996b64d2177022687"],"2a1862266772deb28cdcb7d996b64d2177022687":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}