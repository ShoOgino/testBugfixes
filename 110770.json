{"path":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = DirectoryReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = DirectoryReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = DirectoryReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = DirectoryReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = DirectoryReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d042843368f0d289e28164525546259d89d6dbb6","date":1512577756,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = DirectoryReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevenshteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = DirectoryReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":["b78fd44c119574bf1529f13e122a1ecfea5f83c0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"d042843368f0d289e28164525546259d89d6dbb6":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d042843368f0d289e28164525546259d89d6dbb6"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d042843368f0d289e28164525546259d89d6dbb6"],"d042843368f0d289e28164525546259d89d6dbb6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}