{"path":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","commits":[{"id":"0afa0bff72bc189cdf6fc95f80d80365a6417e3b","date":1118096970,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Close this index, writing all pending changes to disk.\n   * \n   * @throws IllegalStateException if the index has been closed before already\n   */\n  public void close() throws IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df","b46125f7ca61330819c6be0bc9ae5a37065b9cfc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4799e29dc1305c733ee92a39063d29708c603d49","date":1134008065,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","pathOld":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","sourceNew":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   */\n  public void close() throws IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","sourceOld":"  /**\n   * Close this index, writing all pending changes to disk.\n   * \n   * @throws IllegalStateException if the index has been closed before already\n   */\n  public void close() throws IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","pathOld":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","sourceNew":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void close() throws CorruptIndexException, IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","sourceOld":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   */\n  public void close() throws IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","bugFix":["0afa0bff72bc189cdf6fc95f80d80365a6417e3b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b46125f7ca61330819c6be0bc9ae5a37065b9cfc","date":1204500880,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","pathOld":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","sourceNew":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void close() throws CorruptIndexException, IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else if (indexReader != null) {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","sourceOld":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void close() throws CorruptIndexException, IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","bugFix":["0afa0bff72bc189cdf6fc95f80d80365a6417e3b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba712167ee848727018d8b77aa0c273839fbe15c","date":1244411561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","pathOld":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","sourceNew":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void close() throws CorruptIndexException, IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else if (indexReader != null) {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n      if (closeDir) {\n        directory.close();\n      }\n      closeDir = false;\n    }\n  }\n\n","sourceOld":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void close() throws CorruptIndexException, IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else if (indexReader != null) {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eaea03be31988a41275d45a429ac71ff0ad740fb","date":1254612554,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexModifier#close().mjava","sourceNew":null,"sourceOld":"  /**\n   * Close this index, writing all pending changes to disk.\n   *\n   * @throws IllegalStateException if the index has been closed before already\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void close() throws CorruptIndexException, IOException {\n    synchronized(directory) {\n      if (!open)\n        throw new IllegalStateException(\"Index is closed already\");\n      if (indexWriter != null) {\n        indexWriter.close();\n        indexWriter = null;\n      } else if (indexReader != null) {\n        indexReader.close();\n        indexReader = null;\n      }\n      open = false;\n      if (closeDir) {\n        directory.close();\n      }\n      closeDir = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["ba712167ee848727018d8b77aa0c273839fbe15c"],"1b54a9bc667895a2095a886184bf69a3179e63df":["4799e29dc1305c733ee92a39063d29708c603d49"],"4799e29dc1305c733ee92a39063d29708c603d49":["0afa0bff72bc189cdf6fc95f80d80365a6417e3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0afa0bff72bc189cdf6fc95f80d80365a6417e3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b46125f7ca61330819c6be0bc9ae5a37065b9cfc":["1b54a9bc667895a2095a886184bf69a3179e63df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eaea03be31988a41275d45a429ac71ff0ad740fb"],"ba712167ee848727018d8b77aa0c273839fbe15c":["b46125f7ca61330819c6be0bc9ae5a37065b9cfc"]},"commit2Childs":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1b54a9bc667895a2095a886184bf69a3179e63df":["b46125f7ca61330819c6be0bc9ae5a37065b9cfc"],"4799e29dc1305c733ee92a39063d29708c603d49":["1b54a9bc667895a2095a886184bf69a3179e63df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0afa0bff72bc189cdf6fc95f80d80365a6417e3b"],"0afa0bff72bc189cdf6fc95f80d80365a6417e3b":["4799e29dc1305c733ee92a39063d29708c603d49"],"b46125f7ca61330819c6be0bc9ae5a37065b9cfc":["ba712167ee848727018d8b77aa0c273839fbe15c"],"ba712167ee848727018d8b77aa0c273839fbe15c":["eaea03be31988a41275d45a429ac71ff0ad740fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}