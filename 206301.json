{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","commits":[{"id":"a6b82a3644db30161c3cbd3e23aeefe19cb88113","date":1435478870,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"/dev/null","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // We only hit exc if stale segments file was deleted:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w, true);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // We only hit exc if stale segments file was deleted:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // We only hit exc if stale segments file was deleted:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w, true);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // We only hit exc if stale segments file was deleted:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // We only hit exc if stale segments file was deleted:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // We only hit exc if stale segments file was deleted:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // We only hit exc if stale segments file was deleted:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      new IndexWriter(dir, iwc);\n    });\n    assertTrue(expected.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    try {\n      new IndexWriter(dir, iwc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n      assertTrue(iae.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb4029567b43f074ed7b6eb8fb126d355075dfd","date":1544812585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testNRTRollback().mjava","sourceNew":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.getDocStats().maxDoc);\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      new IndexWriter(dir, iwc);\n    });\n    assertTrue(expected.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // NRT rollback: pull NRT reader after writer has committed and then before indexing another doc\n  public void testNRTRollback() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    w.commit();\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.maxDoc());\n\n    // Add another doc\n    w.addDocument(new Document());\n    assertEquals(2, w.maxDoc());\n    w.close();\n\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      new IndexWriter(dir, iwc);\n    });\n    assertTrue(expected.getMessage().contains(\"the provided reader is stale: its prior commit file\"));      \n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["05fe562aa248790944d43cdd478f512572835ba0"],"5a207d19eac354d649c3f0e2cce070017c78125e":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["2a1862266772deb28cdcb7d996b64d2177022687","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"05fe562aa248790944d43cdd478f512572835ba0":["5a207d19eac354d649c3f0e2cce070017c78125e"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["2a1862266772deb28cdcb7d996b64d2177022687"],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["feb4029567b43f074ed7b6eb8fb126d355075dfd"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a207d19eac354d649c3f0e2cce070017c78125e":["05fe562aa248790944d43cdd478f512572835ba0"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"05fe562aa248790944d43cdd478f512572835ba0":["feb4029567b43f074ed7b6eb8fb126d355075dfd"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}