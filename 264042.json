{"path":"lucene/backwards/src/java/org/apache/lucene/index/TermsHashPerThread#TermsHashPerThread(DocInverterPerThread,TermsHash,TermsHash,TermsHashPerThread).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/TermsHashPerThread#TermsHashPerThread(DocInverterPerThread,TermsHash,TermsHash,TermsHashPerThread).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/TermsHashPerThread#TermsHashPerThread(DocInverterPerThread,TermsHash,TermsHash,TermsHashPerThread).mjava","sourceNew":"  public TermsHashPerThread(DocInverterPerThread docInverterPerThread, final TermsHash termsHash, final TermsHash nextTermsHash, final TermsHashPerThread primaryPerThread) {\n    docState = docInverterPerThread.docState;\n\n    this.termsHash = termsHash;\n    this.consumer = termsHash.consumer.addThread(this);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      charPool = new CharBlockPool(termsHash.docWriter);\n      primary = true;\n    } else {\n      charPool = primaryPerThread.charPool;\n      primary = false;\n    }\n\n    intPool = new IntBlockPool(termsHash.docWriter, termsHash.trackAllocations);\n    bytePool = new ByteBlockPool(termsHash.docWriter.byteBlockAllocator, termsHash.trackAllocations);\n\n    if (nextTermsHash != null)\n      nextPerThread = nextTermsHash.addThread(docInverterPerThread, this);\n    else\n      nextPerThread = null;\n  }\n\n","sourceOld":"  public TermsHashPerThread(DocInverterPerThread docInverterPerThread, final TermsHash termsHash, final TermsHash nextTermsHash, final TermsHashPerThread primaryPerThread) {\n    docState = docInverterPerThread.docState;\n\n    this.termsHash = termsHash;\n    this.consumer = termsHash.consumer.addThread(this);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      charPool = new CharBlockPool(termsHash.docWriter);\n      primary = true;\n    } else {\n      charPool = primaryPerThread.charPool;\n      primary = false;\n    }\n\n    intPool = new IntBlockPool(termsHash.docWriter, termsHash.trackAllocations);\n    bytePool = new ByteBlockPool(termsHash.docWriter.byteBlockAllocator, termsHash.trackAllocations);\n\n    if (nextTermsHash != null)\n      nextPerThread = nextTermsHash.addThread(docInverterPerThread, this);\n    else\n      nextPerThread = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/TermsHashPerThread#TermsHashPerThread(DocInverterPerThread,TermsHash,TermsHash,TermsHashPerThread).mjava","sourceNew":null,"sourceOld":"  public TermsHashPerThread(DocInverterPerThread docInverterPerThread, final TermsHash termsHash, final TermsHash nextTermsHash, final TermsHashPerThread primaryPerThread) {\n    docState = docInverterPerThread.docState;\n\n    this.termsHash = termsHash;\n    this.consumer = termsHash.consumer.addThread(this);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      charPool = new CharBlockPool(termsHash.docWriter);\n      primary = true;\n    } else {\n      charPool = primaryPerThread.charPool;\n      primary = false;\n    }\n\n    intPool = new IntBlockPool(termsHash.docWriter, termsHash.trackAllocations);\n    bytePool = new ByteBlockPool(termsHash.docWriter.byteBlockAllocator, termsHash.trackAllocations);\n\n    if (nextTermsHash != null)\n      nextPerThread = nextTermsHash.addThread(docInverterPerThread, this);\n    else\n      nextPerThread = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}