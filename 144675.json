{"path":"solr/core/src/java/org/apache/solr/search/SolrQueryParser#analyzeIfMultitermTermText(String,String,FieldType).mjava","commits":[{"id":"f15795b2193a8dd132f374975d4243687bee9351","date":1322413478,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrQueryParser#analyzeIfMultitermTermText(String,String,FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrQueryParser#analyzeIfMultitermTermText(String,String,Analyzer).mjava","sourceNew":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    // System.out.println(\"INPUT=\"+part + \" OUTPUT=\"+out);\n    return out;\n  }\n\n","sourceOld":"  protected String analyzeIfMultitermTermText(String field, String part, Analyzer analyzer) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (sf.getType() instanceof TextField)) return part;\n    return analyzeMultitermTerm(field, part, analyzer).utf8ToString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrQueryParser#analyzeIfMultitermTermText(String,String,FieldType).mjava","sourceNew":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    return out;\n  }\n\n","sourceOld":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    // System.out.println(\"INPUT=\"+part + \" OUTPUT=\"+out);\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/SolrQueryParser#analyzeIfMultitermTermText(String,String,FieldType).mjava","sourceNew":null,"sourceOld":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    // System.out.println(\"INPUT=\"+part + \" OUTPUT=\"+out);\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cdb67100dc016748799a77218aa409478372d79":["f15795b2193a8dd132f374975d4243687bee9351"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["f15795b2193a8dd132f374975d4243687bee9351","3cdb67100dc016748799a77218aa409478372d79"],"f15795b2193a8dd132f374975d4243687bee9351":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cdb67100dc016748799a77218aa409478372d79"]},"commit2Childs":{"3cdb67100dc016748799a77218aa409478372d79":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f15795b2193a8dd132f374975d4243687bee9351"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"f15795b2193a8dd132f374975d4243687bee9351":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}