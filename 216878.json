{"path":"backwards/src/java/org/apache/lucene/index/IndexWriter#setMergeFactor(int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexWriter#setMergeFactor(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Determines how often segment indices are merged by addDocument().  With\n   * smaller values, less RAM is used while indexing, and searches on\n   * unoptimized indices are faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while searches on unoptimized\n   * indices are slower, indexing is faster.  Thus larger values (> 10) are best\n   * for batch index creation, and smaller values (< 10) for indices that are\n   * interactively maintained.\n   *\n   * <p>Note that this method is a convenience method: it\n   * just calls mergePolicy.setMergeFactor as long as\n   * mergePolicy is an instance of {@link LogMergePolicy}.\n   * Otherwise an IllegalArgumentException is thrown.</p>\n   *\n   * <p>This must never be less than 2.  The default value is 10.\n   */\n  public void setMergeFactor(int mergeFactor) {\n    getLogMergePolicy().setMergeFactor(mergeFactor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#setMergeFactor(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#setMergeFactor(int).mjava","sourceNew":"  /** Determines how often segment indices are merged by addDocument().  With\n   * smaller values, less RAM is used while indexing, and searches on\n   * unoptimized indices are faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while searches on unoptimized\n   * indices are slower, indexing is faster.  Thus larger values (> 10) are best\n   * for batch index creation, and smaller values (< 10) for indices that are\n   * interactively maintained.\n   *\n   * <p>Note that this method is a convenience method: it\n   * just calls mergePolicy.setMergeFactor as long as\n   * mergePolicy is an instance of {@link LogMergePolicy}.\n   * Otherwise an IllegalArgumentException is thrown.</p>\n   *\n   * <p>This must never be less than 2.  The default value is 10.\n   */\n  public void setMergeFactor(int mergeFactor) {\n    getLogMergePolicy().setMergeFactor(mergeFactor);\n  }\n\n","sourceOld":"  /** Determines how often segment indices are merged by addDocument().  With\n   * smaller values, less RAM is used while indexing, and searches on\n   * unoptimized indices are faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while searches on unoptimized\n   * indices are slower, indexing is faster.  Thus larger values (> 10) are best\n   * for batch index creation, and smaller values (< 10) for indices that are\n   * interactively maintained.\n   *\n   * <p>Note that this method is a convenience method: it\n   * just calls mergePolicy.setMergeFactor as long as\n   * mergePolicy is an instance of {@link LogMergePolicy}.\n   * Otherwise an IllegalArgumentException is thrown.</p>\n   *\n   * <p>This must never be less than 2.  The default value is 10.\n   */\n  public void setMergeFactor(int mergeFactor) {\n    getLogMergePolicy().setMergeFactor(mergeFactor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}