{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * Initialize the GDataRequest. This will initialize all needed values / \n     * attributes in this request. \n     *  \n     * @throws GDataRequestException \n     */ \n    public void initializeRequest() throws GDataRequestException { \n        generateIdentificationProperties(); \n        setOutputFormat(); \n        /* \n         * ExtensionProfile is used for building the Entry / Feed Instances from an inputstream or reader \n         */ \n        this.extensionProfile = GDataServerRegistry.getRegistry().getExtensionProfile(this.feedId); \n        if(this.extensionProfile == null) \n            throw new GDataRequestException(\"feed is not registered or extension profile could not be created\"); \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","sourceNew":"    /**\n     * Initialize the GDataRequest. This will initialize all needed values /\n     * attributes in this request.\n     * \n     * @throws GDataRequestException\n     */\n    public void initializeRequest() throws GDataRequestException {\n        generateIdentificationProperties();\n        setOutputFormat();\n        // TODO remove this dependency\n        StorageController controller = GDataServerRegistry.getRegistry()\n                .lookup(StorageController.class,\n                        ComponentType.STORAGECONTROLLER);\n        try {\n\n            Storage storage = controller.getStorage();\n\n            String service = storage.getServiceForFeed(this.feedId);\n            /*\n             * ExtensionProfile and the type is used for building the Entry /\n             * Feed Instances from an inputstream or reader\n             * \n             */\n            this.configurator = GDataServerRegistry.getRegistry()\n                    .getProvidedService(service);\n            if (this.configurator == null)\n                throw new GDataRequestException(\n                        \"feed is not registered or extension profile could not be created\");\n\n        } catch (Exception e) {\n            throw new GDataRequestException(\n                    \"feed is not registered or extension profile could not be created\");\n        }\n\n    }\n\n","sourceOld":"    /** \n     * Initialize the GDataRequest. This will initialize all needed values / \n     * attributes in this request. \n     *  \n     * @throws GDataRequestException \n     */ \n    public void initializeRequest() throws GDataRequestException { \n        generateIdentificationProperties(); \n        setOutputFormat(); \n        /* \n         * ExtensionProfile is used for building the Entry / Feed Instances from an inputstream or reader \n         */ \n        this.extensionProfile = GDataServerRegistry.getRegistry().getExtensionProfile(this.feedId); \n        if(this.extensionProfile == null) \n            throw new GDataRequestException(\"feed is not registered or extension profile could not be created\"); \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","sourceNew":"    /**\n     * Initialize the GDataRequest. This will initialize all needed values /\n     * attributes in this request.\n     * \n     * @throws GDataRequestException\n     */\n    public void initializeRequest() throws GDataRequestException {\n        generateIdentificationProperties();\n        setOutputFormat();\n        // TODO remove this dependency\n        StorageController controller = GDataServerRegistry.getRegistry()\n                .lookup(StorageController.class,\n                        ComponentType.STORAGECONTROLLER);\n        try {\n\n            Storage storage = controller.getStorage();\n\n            String service = storage.getServiceForFeed(this.feedId);\n            storage.close();\n            /*\n             * ExtensionProfile and the type is used for building the Entry /\n             * Feed Instances from an inputstream or reader\n             * \n             */\n            this.configurator = GDataServerRegistry.getRegistry()\n                    .getProvidedService(service);\n            if (this.configurator == null)\n                throw new GDataRequestException(\n                        \"feed is not registered or extension profile could not be created\");\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            \n            throw new GDataRequestException(\n                    \"feed is not registered or extension profile could not be created -- \"\n                            + e.getMessage(), e);\n        }\n\n    }\n\n","sourceOld":"    /**\n     * Initialize the GDataRequest. This will initialize all needed values /\n     * attributes in this request.\n     * \n     * @throws GDataRequestException\n     */\n    public void initializeRequest() throws GDataRequestException {\n        generateIdentificationProperties();\n        setOutputFormat();\n        // TODO remove this dependency\n        StorageController controller = GDataServerRegistry.getRegistry()\n                .lookup(StorageController.class,\n                        ComponentType.STORAGECONTROLLER);\n        try {\n\n            Storage storage = controller.getStorage();\n\n            String service = storage.getServiceForFeed(this.feedId);\n            /*\n             * ExtensionProfile and the type is used for building the Entry /\n             * Feed Instances from an inputstream or reader\n             * \n             */\n            this.configurator = GDataServerRegistry.getRegistry()\n                    .getProvidedService(service);\n            if (this.configurator == null)\n                throw new GDataRequestException(\n                        \"feed is not registered or extension profile could not be created\");\n\n        } catch (Exception e) {\n            throw new GDataRequestException(\n                    \"feed is not registered or extension profile could not be created\");\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","sourceNew":"    /**\n     * Initialize the GDataRequest. This will initialize all needed values /\n     * attributes in this request.\n     * \n     * @throws GDataRequestException\n     */\n    public void initializeRequest() throws GDataRequestException {\n        generateIdentificationProperties();\n        setOutputFormat();\n        \n        try {\n            /*\n             * ExtensionProfile and the type is used for building the Entry /\n             * Feed Instances from an input stream or reader\n             * \n             */\n            this.configurator = GDataServerRegistry.getRegistry()\n                    .getProvidedService(this.service);\n            \n            if (this.configurator == null)\n                throw new GDataRequestException(\n                        \"no Provided Service found for service id: \"+this.service,GDataResponse.NOT_FOUND);\n            applyRequestParameter();\n            if(this.translatedSearchQuery != null)\n                this.isSearchRequest = true;\n        } catch(GDataRequestException ex){\n            throw ex;\n        } catch (Exception e) {\n            throw new GDataRequestException(\n                    \"failed to initialize GDataRequest -- \"\n                            + e.getMessage(), e,GDataResponse.SERVER_ERROR);\n        }\n        \n    }\n\n","sourceOld":"    /**\n     * Initialize the GDataRequest. This will initialize all needed values /\n     * attributes in this request.\n     * \n     * @throws GDataRequestException\n     */\n    public void initializeRequest() throws GDataRequestException {\n        generateIdentificationProperties();\n        setOutputFormat();\n        // TODO remove this dependency\n        StorageController controller = GDataServerRegistry.getRegistry()\n                .lookup(StorageController.class,\n                        ComponentType.STORAGECONTROLLER);\n        try {\n\n            Storage storage = controller.getStorage();\n\n            String service = storage.getServiceForFeed(this.feedId);\n            storage.close();\n            /*\n             * ExtensionProfile and the type is used for building the Entry /\n             * Feed Instances from an inputstream or reader\n             * \n             */\n            this.configurator = GDataServerRegistry.getRegistry()\n                    .getProvidedService(service);\n            if (this.configurator == null)\n                throw new GDataRequestException(\n                        \"feed is not registered or extension profile could not be created\");\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            \n            throw new GDataRequestException(\n                    \"feed is not registered or extension profile could not be created -- \"\n                            + e.getMessage(), e);\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataRequest#initializeRequest().mjava","sourceNew":"    /**\n     * Initialize the GDataRequest. This will initialize all needed values /\n     * attributes in this request.\n     * \n     * @throws GDataRequestException\n     */\n    public void initializeRequest() throws GDataRequestException {\n        generateIdentificationProperties();\n        setOutputFormat();\n        \n        try {\n            /*\n             * ExtensionProfile and the type is used for building the Entry /\n             * Feed Instances from an input stream or reader\n             * \n             */\n            this.configurator = GDataServerRegistry.getRegistry()\n                    .getProvidedService(this.service);\n            \n            if (this.configurator == null)\n                throw new GDataRequestException(\n                        \"no Provided Service found for service id: \"+this.service,GDataResponse.NOT_FOUND);\n            applyRequestParameter();\n            if(this.translatedSearchQuery != null)\n                this.isSearchRequest = true;\n        } catch(GDataRequestException ex){\n            throw ex;\n        } catch (Exception e) {\n            throw new GDataRequestException(\n                    \"failed to initialize GDataRequest -- \"\n                            + e.getMessage(), e,GDataResponse.SERVER_ERROR);\n        }\n        \n    }\n\n","sourceOld":"    /**\n     * Initialize the GDataRequest. This will initialize all needed values /\n     * attributes in this request.\n     * \n     * @throws GDataRequestException\n     */\n    public void initializeRequest() throws GDataRequestException {\n        generateIdentificationProperties();\n        setOutputFormat();\n        \n        try {\n            /*\n             * ExtensionProfile and the type is used for building the Entry /\n             * Feed Instances from an input stream or reader\n             * \n             */\n            this.configurator = GDataServerRegistry.getRegistry()\n                    .getProvidedService(this.service);\n            \n            if (this.configurator == null)\n                throw new GDataRequestException(\n                        \"no Provided Service found for service id: \"+this.service,GDataResponse.NOT_FOUND);\n            applyRequestParameter();\n            if(this.translatedSearchQuery != null)\n                this.isSearchRequest = true;\n        } catch(GDataRequestException ex){\n            throw ex;\n        } catch (Exception e) {\n            throw new GDataRequestException(\n                    \"failed to initialize GDataRequest -- \"\n                            + e.getMessage(), e,GDataResponse.SERVER_ERROR);\n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["52754a40a1550056d5637c8992b4076b5ed77328"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}