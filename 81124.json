{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInPolygonQuery#GeoPointInPolygonQuery(String,GeoRect,double[],double[]).mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInPolygonQuery#GeoPointInPolygonQuery(String,GeoRect,double[],double[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointInPolygonQuery#GeoPointInPolygonQuery(String,GeoRect,double[],double[]).mjava","sourceNew":"  /** Common constructor, used only internally. */\n  private GeoPointInPolygonQuery(final String field, GeoRect bbox, final double[] polyLons, final double[] polyLats) {\n    super(field, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    if (polyLats.length != polyLons.length) {\n      throw new IllegalArgumentException(\"polyLats and polyLons must be equal length\");\n    }\n    if (polyLats.length < 4) {\n      throw new IllegalArgumentException(\"at least 4 polygon points required\");\n    }\n    if (polyLats[0] != polyLats[polyLats.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLats[0]=\" + polyLats[0] + \" polyLats[\" + (polyLats.length-1) + \"]=\" + polyLats[polyLats.length-1]);\n    }\n    if (polyLons[0] != polyLons[polyLons.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLons[0]=\" + polyLons[0] + \" polyLons[\" + (polyLons.length-1) + \"]=\" + polyLons[polyLons.length-1]);\n    }\n\n    this.x = polyLons;\n    this.y = polyLats;\n  }\n\n","sourceOld":"  /** Common constructor, used only internally. */\n  private GeoPointInPolygonQuery(final String field, GeoRect bbox, final double[] polyLons, final double[] polyLats) {\n    super(field, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    if (polyLats.length != polyLons.length) {\n      throw new IllegalArgumentException(\"polyLats and polyLons must be equal length\");\n    }\n    if (polyLats.length < 4) {\n      throw new IllegalArgumentException(\"at least 4 polygon points required\");\n    }\n    if (polyLats[0] != polyLats[polyLats.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLats[0]=\" + polyLats[0] + \" polyLats[\" + (polyLats.length-1) + \"]=\" + polyLats[polyLats.length-1]);\n    }\n    if (polyLons[0] != polyLons[polyLons.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLons[0]=\" + polyLons[0] + \" polyLons[\" + (polyLons.length-1) + \"]=\" + polyLons[polyLons.length-1]);\n    }\n\n    this.x = polyLons;\n    this.y = polyLats;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62cc423073d23f01208c6cf85844dedd80011121","date":1454731549,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInPolygonQuery#GeoPointInPolygonQuery(String,TermEncoding,GeoRect,double[],double[]).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInPolygonQuery#GeoPointInPolygonQuery(String,GeoRect,double[],double[]).mjava","sourceNew":"  /** Common constructor, used only internally. */\n  private GeoPointInPolygonQuery(final String field, TermEncoding termEncoding, GeoRect bbox, final double[] polyLons, final double[] polyLats) {\n    super(field, termEncoding, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    if (polyLats.length != polyLons.length) {\n      throw new IllegalArgumentException(\"polyLats and polyLons must be equal length\");\n    }\n    if (polyLats.length < 4) {\n      throw new IllegalArgumentException(\"at least 4 polygon points required\");\n    }\n    if (polyLats[0] != polyLats[polyLats.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLats[0]=\" + polyLats[0] + \" polyLats[\" + (polyLats.length-1) + \"]=\" + polyLats[polyLats.length-1]);\n    }\n    if (polyLons[0] != polyLons[polyLons.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLons[0]=\" + polyLons[0] + \" polyLons[\" + (polyLons.length-1) + \"]=\" + polyLons[polyLons.length-1]);\n    }\n\n    this.x = polyLons;\n    this.y = polyLats;\n  }\n\n","sourceOld":"  /** Common constructor, used only internally. */\n  private GeoPointInPolygonQuery(final String field, GeoRect bbox, final double[] polyLons, final double[] polyLats) {\n    super(field, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    if (polyLats.length != polyLons.length) {\n      throw new IllegalArgumentException(\"polyLats and polyLons must be equal length\");\n    }\n    if (polyLats.length < 4) {\n      throw new IllegalArgumentException(\"at least 4 polygon points required\");\n    }\n    if (polyLats[0] != polyLats[polyLats.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLats[0]=\" + polyLats[0] + \" polyLats[\" + (polyLats.length-1) + \"]=\" + polyLats[polyLats.length-1]);\n    }\n    if (polyLons[0] != polyLons[polyLons.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLons[0]=\" + polyLons[0] + \" polyLons[\" + (polyLons.length-1) + \"]=\" + polyLons[polyLons.length-1]);\n    }\n\n    this.x = polyLons;\n    this.y = polyLats;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":5,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInPolygonQuery#GeoPointInPolygonQuery(String,TermEncoding,GeoRect,double[],double[]).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInPolygonQuery#GeoPointInPolygonQuery(String,GeoRect,double[],double[]).mjava","sourceNew":"  /** Common constructor, used only internally. */\n  private GeoPointInPolygonQuery(final String field, TermEncoding termEncoding, GeoRect bbox, final double[] polyLons, final double[] polyLats) {\n    super(field, termEncoding, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    if (polyLats.length != polyLons.length) {\n      throw new IllegalArgumentException(\"polyLats and polyLons must be equal length\");\n    }\n    if (polyLats.length < 4) {\n      throw new IllegalArgumentException(\"at least 4 polygon points required\");\n    }\n    if (polyLats[0] != polyLats[polyLats.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLats[0]=\" + polyLats[0] + \" polyLats[\" + (polyLats.length-1) + \"]=\" + polyLats[polyLats.length-1]);\n    }\n    if (polyLons[0] != polyLons[polyLons.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLons[0]=\" + polyLons[0] + \" polyLons[\" + (polyLons.length-1) + \"]=\" + polyLons[polyLons.length-1]);\n    }\n\n    this.x = polyLons;\n    this.y = polyLats;\n  }\n\n","sourceOld":"  /** Common constructor, used only internally. */\n  private GeoPointInPolygonQuery(final String field, GeoRect bbox, final double[] polyLons, final double[] polyLats) {\n    super(field, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    if (polyLats.length != polyLons.length) {\n      throw new IllegalArgumentException(\"polyLats and polyLons must be equal length\");\n    }\n    if (polyLats.length < 4) {\n      throw new IllegalArgumentException(\"at least 4 polygon points required\");\n    }\n    if (polyLats[0] != polyLats[polyLats.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLats[0]=\" + polyLats[0] + \" polyLats[\" + (polyLats.length-1) + \"]=\" + polyLats[polyLats.length-1]);\n    }\n    if (polyLons[0] != polyLons[polyLons.length-1]) {\n      throw new IllegalArgumentException(\"first and last points of the polygon must be the same (it must close itself): polyLons[0]=\" + polyLons[0] + \" polyLons[\" + (polyLons.length-1) + \"]=\" + polyLons[polyLons.length-1]);\n    }\n\n    this.x = polyLons;\n    this.y = polyLats;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5a207d19eac354d649c3f0e2cce070017c78125e":["937923083e4d137932336fc80f3d78758ff698a6","62cc423073d23f01208c6cf85844dedd80011121"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62cc423073d23f01208c6cf85844dedd80011121":["937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"]},"commit2Childs":{"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["937923083e4d137932336fc80f3d78758ff698a6"],"62cc423073d23f01208c6cf85844dedd80011121":["5a207d19eac354d649c3f0e2cce070017c78125e"],"937923083e4d137932336fc80f3d78758ff698a6":["5a207d19eac354d649c3f0e2cce070017c78125e","62cc423073d23f01208c6cf85844dedd80011121"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}