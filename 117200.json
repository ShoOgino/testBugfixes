{"path":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.shutdown();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.shutdown();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, PostingsEnum.FLAG_FREQS);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, PostingsEnum.FLAG_FREQS);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return new Explanation(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new ClassicSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new DefaultSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92b4a131f1796dd57cc6698aae3d589d32a29deb","date":1457087316,"type":3,"author":"Luc Vanlerberghe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new ClassicSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery.Builder queryBuilder = new MultiPhraseQuery.Builder();\n    queryBuilder.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    queryBuilder.add(new Term(\"body\", \"is\"));\n    Weight weight = queryBuilder.build().createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new ClassicSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new ClassicSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery.Builder queryBuilder = new MultiPhraseQuery.Builder();\n    queryBuilder.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    queryBuilder.add(new Term(\"body\", \"is\"));\n    Weight weight = queryBuilder.build().createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new ClassicSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    query.add(new Term(\"body\", \"is\"));\n    Weight weight = query.createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":null,"sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new ClassicSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery.Builder queryBuilder = new MultiPhraseQuery.Builder();\n    queryBuilder.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    queryBuilder.add(new Term(\"body\", \"is\"));\n    Weight weight = queryBuilder.build().createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testCustomIDF().mjava","sourceNew":null,"sourceOld":"  public void testCustomIDF() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    add(\"This is a test\", \"object\", writer);\n    add(\"a note\", \"note\", writer);\n    \n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    searcher.setSimilarity(new ClassicSimilarity() { \n      @Override\n      public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {\n        return Explanation.match(10f, \"just a test\");\n      } \n    });\n    \n    MultiPhraseQuery.Builder queryBuilder = new MultiPhraseQuery.Builder();\n    queryBuilder.add(new Term[] { new Term(\"body\", \"this\"), new Term(\"body\", \"that\") });\n    queryBuilder.add(new Term(\"body\", \"is\"));\n    Weight weight = queryBuilder.build().createWeight(searcher, true);\n    assertEquals(10f * 10f, weight.getValueForNormalization(), 0.001f);\n\n    writer.close();\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"fb17639909a369c1e64866842e5c213440acc17e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"954e59be3da8dc1b046646ad7af4b466852009d3":["fb17639909a369c1e64866842e5c213440acc17e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"92b4a131f1796dd57cc6698aae3d589d32a29deb":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["81d0720146de53dd3a4a023d2a3d1089d86d748d","92b4a131f1796dd57cc6698aae3d589d32a29deb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"fb17639909a369c1e64866842e5c213440acc17e":["954e59be3da8dc1b046646ad7af4b466852009d3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["92b4a131f1796dd57cc6698aae3d589d32a29deb","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"92b4a131f1796dd57cc6698aae3d589d32a29deb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["fb17639909a369c1e64866842e5c213440acc17e"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}