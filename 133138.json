{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilderLight.State#newState(int).mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilderLight.State#newState(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Create a new outgoing transition labeled <code>label</code> and return\n     * the newly created target state for this transition.\n     */\n    State newState(int label) {\n      assert Arrays.binarySearch(labels, label) < 0 : \"State already has transition labeled: \"\n          + label;\n      \n      labels = Arrays.copyOf(labels, labels.length + 1);\n      states = Arrays.copyOf(states, states.length + 1);\n\n      labels[labels.length - 1] = label;\n      return states[states.length - 1] = new State();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#newState(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilderLight.State#newState(int).mjava","sourceNew":"    /**\n     * Create a new outgoing transition labeled <code>label</code> and return\n     * the newly created target state for this transition.\n     */\n    State newState(int label) {\n      assert Arrays.binarySearch(labels, label) < 0 : \"State already has transition labeled: \"\n          + label;\n      \n      labels = Arrays.copyOf(labels, labels.length + 1);\n      states = Arrays.copyOf(states, states.length + 1);\n\n      labels[labels.length - 1] = label;\n      return states[states.length - 1] = new State();\n    }\n\n","sourceOld":"    /**\n     * Create a new outgoing transition labeled <code>label</code> and return\n     * the newly created target state for this transition.\n     */\n    State newState(int label) {\n      assert Arrays.binarySearch(labels, label) < 0 : \"State already has transition labeled: \"\n          + label;\n      \n      labels = Arrays.copyOf(labels, labels.length + 1);\n      states = Arrays.copyOf(states, states.length + 1);\n\n      labels[labels.length - 1] = label;\n      return states[states.length - 1] = new State();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}