{"path":"solr/solrj/src/java/org/apache/solr/common/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","commits":[{"id":"520d7467475e194bd1143ba662a0717e6345137f","date":1496984366,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","sourceNew":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","sourceNew":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","sourceNew":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/OneOfValidator[JsonSchemaValidator]#validate(Object,List[String]).mjava","sourceNew":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean validate(Object o, List<String> errs) {\n    if (o instanceof Map) {\n      Map map = (Map) o;\n      for (Object key : map.keySet()) {\n        if (oneOfProps.contains(key.toString())) return true;\n      }\n      errs.add(\"One of fields :\"  + oneOfProps + \" is not presented in object : \" + Utils.toJSONString(o));\n      return false;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"520d7467475e194bd1143ba662a0717e6345137f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","520d7467475e194bd1143ba662a0717e6345137f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","520d7467475e194bd1143ba662a0717e6345137f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"]},"commit2Childs":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["520d7467475e194bd1143ba662a0717e6345137f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"520d7467475e194bd1143ba662a0717e6345137f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}