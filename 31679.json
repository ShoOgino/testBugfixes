{"path":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/MetricSamples#addAll(MetricSamples).mjava","commits":[{"id":"4cd8a9425419baa85ef4a56ed411ffb4c57964d3","date":1551677567,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/MetricSamples#addAll(MetricSamples).mjava","pathOld":"/dev/null","sourceNew":"  public void addAll(MetricSamples other) {\n    for (String key : other.samplesByMetricName.keySet()) {\n      if (this.samplesByMetricName.containsKey(key)) {\n        for (Collector.MetricFamilySamples.Sample sample : other.samplesByMetricName.get(key).samples) {\n          addSampleIfMetricExists(key, sample);\n        }\n      } else {\n        this.samplesByMetricName.put(key, other.samplesByMetricName.get(key));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","date":1571070979,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/MetricSamples#addAll(MetricSamples).mjava","pathOld":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/MetricSamples#addAll(MetricSamples).mjava","sourceNew":"  public void addAll(MetricSamples other) {\n    for (Map.Entry<String, Collector.MetricFamilySamples> entry : other.samplesByMetricName.entrySet()) {\n      String key = entry.getKey();\n      if (this.samplesByMetricName.containsKey(key)) {\n        for (Collector.MetricFamilySamples.Sample sample : entry.getValue().samples) {\n          addSampleIfMetricExists(key, sample);\n        }\n      } else {\n        this.samplesByMetricName.put(key, entry.getValue());\n      }\n    }\n  }\n\n","sourceOld":"  public void addAll(MetricSamples other) {\n    for (String key : other.samplesByMetricName.keySet()) {\n      if (this.samplesByMetricName.containsKey(key)) {\n        for (Collector.MetricFamilySamples.Sample sample : other.samplesByMetricName.get(key).samples) {\n          addSampleIfMetricExists(key, sample);\n        }\n      } else {\n        this.samplesByMetricName.put(key, other.samplesByMetricName.get(key));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/MetricSamples#addAll(MetricSamples).mjava","pathOld":"solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/MetricSamples#addAll(MetricSamples).mjava","sourceNew":"  public void addAll(MetricSamples other) {\n    for (Map.Entry<String, Collector.MetricFamilySamples> entry : other.samplesByMetricName.entrySet()) {\n      String key = entry.getKey();\n      if (this.samplesByMetricName.containsKey(key)) {\n        for (Collector.MetricFamilySamples.Sample sample : entry.getValue().samples) {\n          addSampleIfMetricExists(key, sample);\n        }\n      } else {\n        this.samplesByMetricName.put(key, entry.getValue());\n      }\n    }\n  }\n\n","sourceOld":"  public void addAll(MetricSamples other) {\n    for (String key : other.samplesByMetricName.keySet()) {\n      if (this.samplesByMetricName.containsKey(key)) {\n        for (Collector.MetricFamilySamples.Sample sample : other.samplesByMetricName.get(key).samples) {\n          addSampleIfMetricExists(key, sample);\n        }\n      } else {\n        this.samplesByMetricName.put(key, other.samplesByMetricName.get(key));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0b597c65628ca9e73913a07e81691f8229bae35":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3","7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"]},"commit2Childs":{"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}