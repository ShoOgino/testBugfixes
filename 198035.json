{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","sourceNew":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(40) == 17) {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(40) == 17) {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"978de4e2d23054c6624dd5928ddeb734dca68eec","date":1370592803,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.TestPoint1#apply(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","sourceNew":"    @Override\n    public void apply(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(40) == 17) {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n    }\n\n","sourceOld":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(40) == 17) {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"978de4e2d23054c6624dd5928ddeb734dca68eec":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["978de4e2d23054c6624dd5928ddeb734dca68eec"]},"commit2Childs":{"978de4e2d23054c6624dd5928ddeb734dca68eec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["978de4e2d23054c6624dd5928ddeb734dca68eec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}