{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","commits":[{"id":"83bbb041887bbef07b8a98d08a0e1713ce137039","date":1200330381,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1fd1f3c5c06036aebe90bc6da756a37d03f63884","1fd1f3c5c06036aebe90bc6da756a37d03f63884"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1fd1f3c5c06036aebe90bc6da756a37d03f63884","date":1200847858,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","sourceNew":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","sourceOld":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush());\n  }\n\n","bugFix":["83bbb041887bbef07b8a98d08a0e1713ce137039"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestIOExceptionDuringAbortWithThreads().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","sourceNew":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void xxxtestIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","sourceOld":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestIOExceptionDuringAbortWithThreads().mjava","sourceNew":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","sourceOld":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void xxxtestIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","sourceNew":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws Exception {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","sourceOld":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws IOException {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","sourceNew":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during rollback(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws Exception {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","sourceOld":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during abort(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws Exception {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testIOExceptionDuringAbortWithThreads().mjava","sourceNew":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during rollback(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws Exception {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","sourceOld":"  // LUCENE-1130: make sure initial IOException, and then 2nd\n  // IOException during rollback(), with multiple threads, is OK:\n  public void testIOExceptionDuringAbortWithThreads() throws Exception {\n    _testMultipleThreadsFailure(new FailOnlyOnAbortOrFlush(false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1fd1f3c5c06036aebe90bc6da756a37d03f63884":["83bbb041887bbef07b8a98d08a0e1713ce137039"],"83bbb041887bbef07b8a98d08a0e1713ce137039":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["1fd1f3c5c06036aebe90bc6da756a37d03f63884"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"]},"commit2Childs":{"1fd1f3c5c06036aebe90bc6da756a37d03f63884":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"83bbb041887bbef07b8a98d08a0e1713ce137039":["1fd1f3c5c06036aebe90bc6da756a37d03f63884"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83bbb041887bbef07b8a98d08a0e1713ce137039"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"09c482d1e63332617181729a225b215c452d8a79":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}