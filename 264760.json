{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","commits":[{"id":"fba839b7548159227edcb740033d0f814b323d8d","date":1424455904,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    return s;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","sourceNew":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    if (softDelCount > 0) {\n      s += \" :softDel=\" + softDelCount;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","sourceNew":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    if (softDelCount > 0) {\n      s += \" :softDel=\" + softDelCount;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","sourceNew":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    if (softDelCount > 0) {\n      s += \" :softDel=\" + softDelCount;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14654be3f7a82c9a3c52169e365baa55bfe64f66","date":1587212697,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#toString(int).mjava","sourceNew":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    if (softDelCount > 0) {\n      s += \" :softDel=\" + softDelCount;\n    }\n    if (this.id != null) {\n      s += \" :id=\" + StringHelper.idToString(id);\n    }\n\n    return s;\n  }\n\n","sourceOld":"  /** Returns a description of this segment. */\n  public String toString(int pendingDelCount) {\n    String s = info.toString(delCount + pendingDelCount);\n    if (delGen != -1) {\n      s += \":delGen=\" + delGen;\n    }\n    if (fieldInfosGen != -1) {\n      s += \":fieldInfosGen=\" + fieldInfosGen;\n    }\n    if (docValuesGen != -1) {\n      s += \":dvGen=\" + docValuesGen;\n    }\n    if (softDelCount > 0) {\n      s += \" :softDel=\" + softDelCount;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14654be3f7a82c9a3c52169e365baa55bfe64f66":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"fba839b7548159227edcb740033d0f814b323d8d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["fba839b7548159227edcb740033d0f814b323d8d","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["fba839b7548159227edcb740033d0f814b323d8d"],"f592209545c71895260367152601e9200399776d":["fba839b7548159227edcb740033d0f814b323d8d","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14654be3f7a82c9a3c52169e365baa55bfe64f66"]},"commit2Childs":{"14654be3f7a82c9a3c52169e365baa55bfe64f66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fba839b7548159227edcb740033d0f814b323d8d":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fba839b7548159227edcb740033d0f814b323d8d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["14654be3f7a82c9a3c52169e365baa55bfe64f66","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}