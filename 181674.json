{"path":"lucene/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","commits":[{"id":"820a861d967afb6996fae98baa3c535f7cb7c3fc","date":1313760019,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"67aadace85f701c87a4e0721eedcda25d8415a70":["820a861d967afb6996fae98baa3c535f7cb7c3fc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["67aadace85f701c87a4e0721eedcda25d8415a70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"820a861d967afb6996fae98baa3c535f7cb7c3fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"67aadace85f701c87a4e0721eedcda25d8415a70":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["820a861d967afb6996fae98baa3c535f7cb7c3fc"],"820a861d967afb6996fae98baa3c535f7cb7c3fc":["67aadace85f701c87a4e0721eedcda25d8415a70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}