{"path":"solr/core/src/test/org/apache/solr/response/TestSolrQueryResponse#testAddHttpHeader().mjava","commits":[{"id":"a61db381110025f8c1e2dd7d9f0861599c97a4bc","date":1449768113,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestSolrQueryResponse#testAddHttpHeader().mjava","pathOld":"solr/core/src/test/org/apache/solr/servlet/ResponseHeaderTest#testAddHttpHeader().mjava","sourceNew":"  @Test\n  public void testAddHttpHeader() {\n    SolrQueryResponse response = new SolrQueryResponse();\n    Iterator<Entry<String, String>> it = response.httpHeaders();\n    assertFalse(it.hasNext());\n    \n    response.addHttpHeader(\"key1\", \"value1\");\n    it = response.httpHeaders();\n    assertTrue(it.hasNext());\n    Entry<String, String> entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value1\", entry.getValue());\n    assertFalse(it.hasNext());\n    \n    response.addHttpHeader(\"key1\", \"value2\");\n    it = response.httpHeaders();\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value1\", entry.getValue());\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value2\", entry.getValue());\n    assertFalse(it.hasNext());\n    \n    response.addHttpHeader(\"key2\", \"value2\");\n    it = response.httpHeaders();\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value1\", entry.getValue());\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value2\", entry.getValue());\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key2\", entry.getKey());\n    assertEquals(\"value2\", entry.getValue());\n    assertFalse(it.hasNext());\n  }\n\n","sourceOld":"  @Test\n  public void testAddHttpHeader() {\n    SolrQueryResponse response = new SolrQueryResponse();\n    Iterator<Entry<String, String>> it = response.httpHeaders();\n    assertFalse(it.hasNext());\n    \n    response.addHttpHeader(\"key1\", \"value1\");\n    it = response.httpHeaders();\n    assertTrue(it.hasNext());\n    Entry<String, String> entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value1\", entry.getValue());\n    assertFalse(it.hasNext());\n    \n    response.addHttpHeader(\"key1\", \"value2\");\n    it = response.httpHeaders();\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value1\", entry.getValue());\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value2\", entry.getValue());\n    assertFalse(it.hasNext());\n    \n    response.addHttpHeader(\"key2\", \"value2\");\n    it = response.httpHeaders();\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value1\", entry.getValue());\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key1\", entry.getKey());\n    assertEquals(\"value2\", entry.getValue());\n    assertTrue(it.hasNext());\n    entry = it.next();\n    assertEquals(\"key2\", entry.getKey());\n    assertEquals(\"value2\", entry.getValue());\n    assertFalse(it.hasNext());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a61db381110025f8c1e2dd7d9f0861599c97a4bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a61db381110025f8c1e2dd7d9f0861599c97a4bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a61db381110025f8c1e2dd7d9f0861599c97a4bc"],"a61db381110025f8c1e2dd7d9f0861599c97a4bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}