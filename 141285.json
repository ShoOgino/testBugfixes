{"path":"lucene/backwards/src/java/org/apache/lucene/index/ByteSliceReader#init(ByteBlockPool,int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/ByteSliceReader#init(ByteBlockPool,int,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/ByteSliceReader#init(ByteBlockPool,int,int).mjava","sourceNew":"  public void init(ByteBlockPool pool, int startIndex, int endIndex) {\n\n    assert endIndex-startIndex >= 0;\n    assert startIndex >= 0;\n    assert endIndex >= 0;\n\n    this.pool = pool;\n    this.endIndex = endIndex;\n\n    level = 0;\n    bufferUpto = startIndex / DocumentsWriter.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * DocumentsWriter.BYTE_BLOCK_SIZE;\n    buffer = pool.buffers[bufferUpto];\n    upto = startIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n\n    final int firstSize = ByteBlockPool.levelSizeArray[0];\n\n    if (startIndex+firstSize >= endIndex) {\n      // There is only this one slice to read\n      limit = endIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n    } else\n      limit = upto+firstSize-4;\n  }\n\n","sourceOld":"  public void init(ByteBlockPool pool, int startIndex, int endIndex) {\n\n    assert endIndex-startIndex >= 0;\n    assert startIndex >= 0;\n    assert endIndex >= 0;\n\n    this.pool = pool;\n    this.endIndex = endIndex;\n\n    level = 0;\n    bufferUpto = startIndex / DocumentsWriter.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * DocumentsWriter.BYTE_BLOCK_SIZE;\n    buffer = pool.buffers[bufferUpto];\n    upto = startIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n\n    final int firstSize = ByteBlockPool.levelSizeArray[0];\n\n    if (startIndex+firstSize >= endIndex) {\n      // There is only this one slice to read\n      limit = endIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n    } else\n      limit = upto+firstSize-4;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/ByteSliceReader#init(ByteBlockPool,int,int).mjava","sourceNew":null,"sourceOld":"  public void init(ByteBlockPool pool, int startIndex, int endIndex) {\n\n    assert endIndex-startIndex >= 0;\n    assert startIndex >= 0;\n    assert endIndex >= 0;\n\n    this.pool = pool;\n    this.endIndex = endIndex;\n\n    level = 0;\n    bufferUpto = startIndex / DocumentsWriter.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * DocumentsWriter.BYTE_BLOCK_SIZE;\n    buffer = pool.buffers[bufferUpto];\n    upto = startIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n\n    final int firstSize = ByteBlockPool.levelSizeArray[0];\n\n    if (startIndex+firstSize >= endIndex) {\n      // There is only this one slice to read\n      limit = endIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n    } else\n      limit = upto+firstSize-4;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}