{"path":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricManager,String,String,String).mjava","commits":[{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    manager.registerGauge(this, registryName, metricsMap, tag, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    manager.register(this, registryName, metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    manager.registerGauge(this, registryName, metricsMap, tag, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    manager.register(this, registryName, metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext;\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    solrMetricsContext.gauge(this, metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    manager.registerGauge(this, registryName, metricsMap, tag, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfc52860e6d13d034226a760813c59d984c6817a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bfc52860e6d13d034226a760813c59d984c6817a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"]},"commit2Childs":{"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43564cbb30b064675027cfb569564e8531096e97":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}