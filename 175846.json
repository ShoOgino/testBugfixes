{"path":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","sourceNew":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n    TermFreqVector tfv = reader.getTermFreqVector(docId, field);\n    if (tfv == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    if (tfv instanceof TermPositionVector) {\n      TermPositionVector tpv = (TermPositionVector) reader.getTermFreqVector(\n          docId, field);\n      return getTokenStream(tpv);\n    }\n    throw new IllegalArgumentException(field + \" in doc #\" + docId\n        + \"does not have any term position data stored\");\n  }\n\n","sourceOld":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n    TermFreqVector tfv = reader.getTermFreqVector(docId, field);\n    if (tfv == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    if (tfv instanceof TermPositionVector) {\n      TermPositionVector tpv = (TermPositionVector) reader.getTermFreqVector(\n          docId, field);\n      return getTokenStream(tpv);\n    }\n    throw new IllegalArgumentException(field + \" in doc #\" + docId\n        + \"does not have any term position data stored\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","sourceNew":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n\n    Fields vectors = reader.getTermVectors(docId);\n    if (vectors == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    Terms vector = vectors.terms(field);\n    if (vector == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    if (!hasPositions(vector)) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    \n    return getTokenStream(vector);\n  }\n\n","sourceOld":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n    TermFreqVector tfv = reader.getTermFreqVector(docId, field);\n    if (tfv == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    if (tfv instanceof TermPositionVector) {\n      TermPositionVector tpv = (TermPositionVector) reader.getTermFreqVector(\n          docId, field);\n      return getTokenStream(tpv);\n    }\n    throw new IllegalArgumentException(field + \" in doc #\" + docId\n        + \"does not have any term position data stored\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","sourceNew":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n\n    InvertedFields vectors = reader.getTermVectors(docId);\n    if (vectors == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    Terms vector = vectors.terms(field);\n    if (vector == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    if (!hasPositions(vector)) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    \n    return getTokenStream(vector);\n  }\n\n","sourceOld":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n\n    Fields vectors = reader.getTermVectors(docId);\n    if (vectors == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    Terms vector = vectors.terms(field);\n    if (vector == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    if (!hasPositions(vector)) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    \n    return getTokenStream(vector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","sourceNew":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n\n    Fields vectors = reader.getTermVectors(docId);\n    if (vectors == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    Terms vector = vectors.terms(field);\n    if (vector == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    if (!hasPositions(vector)) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    \n    return getTokenStream(vector);\n  }\n\n","sourceOld":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n\n    InvertedFields vectors = reader.getTermVectors(docId);\n    if (vectors == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    Terms vector = vectors.terms(field);\n    if (vector == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    if (!hasPositions(vector)) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    \n    return getTokenStream(vector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#getTokenStream(IndexReader,int,String).mjava","sourceNew":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n\n    Fields vectors = reader.getTermVectors(docId);\n    if (vectors == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    Terms vector = vectors.terms(field);\n    if (vector == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    if (!hasPositions(vector)) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    \n    return getTokenStream(vector);\n  }\n\n","sourceOld":"  public static TokenStream getTokenStream(IndexReader reader, int docId,\n      String field) throws IOException {\n\n    Fields vectors = reader.getTermVectors(docId);\n    if (vectors == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    Terms vector = vectors.terms(field);\n    if (vector == null) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n\n    if (!hasPositions(vector)) {\n      throw new IllegalArgumentException(field + \" in doc #\" + docId\n          + \"does not have any term position data stored\");\n    }\n    \n    return getTokenStream(vector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"3cc749c053615f5871f3b95715fe292f34e70a53":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc749c053615f5871f3b95715fe292f34e70a53":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}