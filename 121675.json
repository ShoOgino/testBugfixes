{"path":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","commits":[{"id":"0e10d5539266ae943f9fa6befa6ac3481a2419c8","date":1371692194,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWRiterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompountFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWRiterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompountFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1374e042e3b27f8ec208068e9fefef1080f0237","date":1407050777,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","sourceNew":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWriterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompountFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWRiterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompountFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","sourceNew":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWriterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompoundFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWriterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompountFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70d848516a5d0b23d183a2ceb4f4fb8634205956","date":1496408348,"type":4,"author":"Christine Poerschke","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","sourceNew":null,"sourceOld":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWriterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompoundFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","sourceNew":null,"sourceOld":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWriterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompoundFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexConfig#fixUseCFMergePolicyInitArg(Class).mjava","sourceNew":null,"sourceOld":"  /**\n   * Lucene 4.4 removed the setUseCompoundFile(boolean) method from the two \n   * conrete MergePolicies provided with Lucene/Solr and added it to the \n   * IndexWriterConfig.  \n   * In the event that users have a value explicitly configured for this \n   * setter in their MergePolicy init args, we remove it from the MergePolicy \n   * init args, update the 'effective' useCompoundFile setting used by the \n   * IndexWriterConfig, and warn about discontinuing to use this init arg.\n   * \n   * @see #getUseCompoundFile\n   */\n  private void fixUseCFMergePolicyInitArg(Class c) {\n\n    if (null == mergePolicyInfo || null == mergePolicyInfo.initArgs) return;\n\n    Object useCFSArg = mergePolicyInfo.initArgs.remove(\"useCompoundFile\");\n    if (null != useCFSArg) {\n      log.warn(\"Ignoring 'useCompoundFile' specified as an init arg for the <mergePolicy> since it is no directly longer supported by \" + c.getSimpleName());\n      if (useCFSArg instanceof Boolean) {\n        boolean cfs = ((Boolean)useCFSArg).booleanValue();\n        log.warn(\"Please update your config to specify <useCompoundFile>\"+cfs+\"</useCompoundFile> directly in your <indexConfig> settings.\");\n        effectiveUseCompoundFileSetting = cfs;\n      } else {\n        log.error(\"MergePolicy's 'useCompoundFile' init arg is not a boolean, can not apply back compat logic to apply to the IndexWriterConfig: \" + useCFSArg.toString());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["d1374e042e3b27f8ec208068e9fefef1080f0237"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e10d5539266ae943f9fa6befa6ac3481a2419c8"],"d1374e042e3b27f8ec208068e9fefef1080f0237":["0e10d5539266ae943f9fa6befa6ac3481a2419c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e10d5539266ae943f9fa6befa6ac3481a2419c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"28288370235ed02234a64753cdbf0c6ec096304a":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["e9017cf144952056066919f1ebc7897ff9bd71b1","70d848516a5d0b23d183a2ceb4f4fb8634205956","28288370235ed02234a64753cdbf0c6ec096304a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"d1374e042e3b27f8ec208068e9fefef1080f0237":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","0e10d5539266ae943f9fa6befa6ac3481a2419c8"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"0e10d5539266ae943f9fa6befa6ac3481a2419c8":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d1374e042e3b27f8ec208068e9fefef1080f0237"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}