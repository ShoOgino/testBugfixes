{"path":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#testRandomAccessWrites().mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#testRandomAccessWrites().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRandomAccessWrites() throws IOException {\n    long t1 = System.nanoTime();\n\n    int i = 0;\n    try {\n      for (; i < 10; i++) {\n        Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n        String name = getName();\n        createFile(name, fsDir, directory);\n        assertInputsEquals(name, fsDir, directory);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Test failed on pass [\" + i + \"]\");\n    }\n    long t2 = System.nanoTime();\n    System.out.println(\"Total time is \" + ((t2 - t1)/1000000) + \"ms\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#testRandomAccessWrites().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRandomAccessWrites() throws IOException {\n    long t1 = System.nanoTime();\n\n    int i = 0;\n    try {\n      for (; i < 10; i++) {\n        Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n        String name = getName();\n        createFile(name, fsDir, directory);\n        assertInputsEquals(name, fsDir, directory);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Test failed on pass [\" + i + \"]\");\n    }\n    long t2 = System.nanoTime();\n    System.out.println(\"Total time is \" + ((t2 - t1)/1000000) + \"ms\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#testRandomAccessWrites().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#testRandomAccessWrites().mjava","sourceNew":"  @Test\n  public void testRandomAccessWrites() throws IOException {\n    long t1 = System.nanoTime();\n\n    int i = 0;\n    try {\n      for (; i < 10; i++) {\n        Directory fsDir = FSDirectory.open(new File(file, \"normal\").toPath());\n        String name = getName();\n        createFile(name, fsDir, directory);\n        assertInputsEquals(name, fsDir, directory);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Test failed on pass [\" + i + \"]\");\n    }\n    long t2 = System.nanoTime();\n    System.out.println(\"Total time is \" + ((t2 - t1)/1000000) + \"ms\");\n  }\n\n","sourceOld":"  @Test\n  public void testRandomAccessWrites() throws IOException {\n    long t1 = System.nanoTime();\n\n    int i = 0;\n    try {\n      for (; i < 10; i++) {\n        Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n        String name = getName();\n        createFile(name, fsDir, directory);\n        assertInputsEquals(name, fsDir, directory);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Test failed on pass [\" + i + \"]\");\n    }\n    long t2 = System.nanoTime();\n    System.out.println(\"Total time is \" + ((t2 - t1)/1000000) + \"ms\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}