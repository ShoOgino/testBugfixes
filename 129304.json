{"path":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Rescorer,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","commits":[{"id":"ffcff9959b822d9b743768173e0094d3ff62f0dd","date":1470415332,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Rescorer,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Query,double,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","sourceNew":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Rescorer reRankQueryRescorer,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankQueryRescorer = reRankQueryRescorer;\n    }\n\n","sourceOld":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Query reRankQuery,\n                           double reRankWeight,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankQuery = reRankQuery;\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankWeight = reRankWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Rescorer,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","pathOld":"/dev/null","sourceNew":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Rescorer reRankQueryRescorer,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankQueryRescorer = reRankQueryRescorer;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d729a652b9a64220536d47218ed1c8324955e86d","date":1474975102,"type":4,"author":"Christine Poerschke","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Rescorer,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","sourceNew":null,"sourceOld":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Rescorer reRankQueryRescorer,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankQueryRescorer = reRankQueryRescorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/ReRankQParserPlugin.ReRankCollector#ReRankCollector(int,int,Rescorer,QueryCommand,IndexSearcher,Map[BytesRef,Integer]).mjava","sourceNew":null,"sourceOld":"    public ReRankCollector(int reRankDocs,\n                           int length,\n                           Rescorer reRankQueryRescorer,\n                           QueryCommand cmd,\n                           IndexSearcher searcher,\n                           Map<BytesRef, Integer> boostedPriority) throws IOException {\n      super(null);\n      this.reRankDocs = reRankDocs;\n      this.length = length;\n      this.boostedPriority = boostedPriority;\n      Sort sort = cmd.getSort();\n      if(sort == null) {\n        this.mainCollector = TopScoreDocCollector.create(Math.max(this.reRankDocs, length));\n      } else {\n        sort = sort.rewrite(searcher);\n        this.mainCollector = TopFieldCollector.create(sort, Math.max(this.reRankDocs, length), false, true, true);\n      }\n      this.searcher = searcher;\n      this.reRankQueryRescorer = reRankQueryRescorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d729a652b9a64220536d47218ed1c8324955e86d":["ffcff9959b822d9b743768173e0094d3ff62f0dd"],"ffcff9959b822d9b743768173e0094d3ff62f0dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ffcff9959b822d9b743768173e0094d3ff62f0dd","d729a652b9a64220536d47218ed1c8324955e86d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ffcff9959b822d9b743768173e0094d3ff62f0dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"d729a652b9a64220536d47218ed1c8324955e86d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"ffcff9959b822d9b743768173e0094d3ff62f0dd":["d729a652b9a64220536d47218ed1c8324955e86d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ffcff9959b822d9b743768173e0094d3ff62f0dd","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}