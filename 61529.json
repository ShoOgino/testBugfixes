{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener).mjava","sourceNew":"  private void notifyListener(EventListener listener) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n  }\n\n","sourceOld":"  private void notifyListener(EventListener listener) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener).mjava","sourceNew":"  private void notifyListener(EventListener listener) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n  }\n\n","sourceOld":"  private void notifyListener(EventListener listener) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5","date":1406290788,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener,Exception).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener).mjava","sourceNew":"  private void notifyListener(EventListener listener, Exception lastException) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    ContextImpl ctx = new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this);\n    ctx.lastException = lastException;\n    listener.onEvent(ctx);\n  }\n\n","sourceOld":"  private void notifyListener(EventListener listener) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}