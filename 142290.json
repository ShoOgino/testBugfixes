{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter, StopFilter, GermanStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, _stemdict);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter, StopFilter, GermanStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, _stemdict);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09507e4ed6ad3ff3ead770b942eed05e86f944a7","date":1117234927,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter,\n   * StopFilter, DutchStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, _stemdict);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter, StopFilter, GermanStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, _stemdict);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"777266061356b1925b597f20861d8e2e67650716","date":1149891347,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter,\n   * StopFilter, DutchStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, stemdict);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter,\n   * StopFilter, DutchStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, _stemdict);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter,\n   * StopFilter, DutchStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, stemdict);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided TextReader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter,\n   * StopFilter, DutchStemFilter\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new DutchStemFilter(result, excltable, stemdict);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["777266061356b1925b597f20861d8e2e67650716"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"777266061356b1925b597f20861d8e2e67650716":["09507e4ed6ad3ff3ead770b942eed05e86f944a7"],"09507e4ed6ad3ff3ead770b942eed05e86f944a7":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["09507e4ed6ad3ff3ead770b942eed05e86f944a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"777266061356b1925b597f20861d8e2e67650716":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"09507e4ed6ad3ff3ead770b942eed05e86f944a7":["777266061356b1925b597f20861d8e2e67650716"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}