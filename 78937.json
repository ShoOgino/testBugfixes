{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/CountingFacetsAggregatorTest#newCounts().mjava","commits":[{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/CountingFacetsAggregatorTest#newCounts().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/CountingFacetsCollectorTest#newCounts().mjava","sourceNew":"  // initialize expectedCounts w/ 0 for all categories\n  private static ObjectToIntMap<CategoryPath> newCounts() {\n    ObjectToIntMap<CategoryPath> counts = new ObjectToIntMap<CategoryPath>();\n    counts.put(CP_A, 0);\n    counts.put(CP_B, 0);\n    counts.put(CP_C, 0);\n    counts.put(CP_D, 0);\n    for (CategoryPath cp : CATEGORIES_A) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_B) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_C) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_D) {\n      counts.put(cp.subpath(2), 0);\n    }\n    return counts;\n  }\n\n","sourceOld":"  // initialize expectedCounts w/ 0 for all categories\n  private static ObjectToIntMap<CategoryPath> newCounts() {\n    ObjectToIntMap<CategoryPath> counts = new ObjectToIntMap<CategoryPath>();\n    counts.put(CP_A, 0);\n    counts.put(CP_B, 0);\n    counts.put(CP_C, 0);\n    counts.put(CP_D, 0);\n    for (CategoryPath cp : CATEGORIES_A) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_B) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_C) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_D) {\n      counts.put(cp.subpath(2), 0);\n    }\n    return counts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/CountingFacetsAggregatorTest#newCounts().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/CountingFacetsAggregatorTest#newCounts().mjava","sourceNew":"  // initialize expectedCounts w/ 0 for all categories\n  private static ObjectToIntMap<FacetLabel> newCounts() {\n    ObjectToIntMap<FacetLabel> counts = new ObjectToIntMap<FacetLabel>();\n    counts.put(CP_A, 0);\n    counts.put(CP_B, 0);\n    counts.put(CP_C, 0);\n    counts.put(CP_D, 0);\n    for (FacetLabel cp : CATEGORIES_A) {\n      counts.put(cp, 0);\n    }\n    for (FacetLabel cp : CATEGORIES_B) {\n      counts.put(cp, 0);\n    }\n    for (FacetLabel cp : CATEGORIES_C) {\n      counts.put(cp, 0);\n    }\n    for (FacetLabel cp : CATEGORIES_D) {\n      counts.put(cp.subpath(2), 0);\n    }\n    return counts;\n  }\n\n","sourceOld":"  // initialize expectedCounts w/ 0 for all categories\n  private static ObjectToIntMap<CategoryPath> newCounts() {\n    ObjectToIntMap<CategoryPath> counts = new ObjectToIntMap<CategoryPath>();\n    counts.put(CP_A, 0);\n    counts.put(CP_B, 0);\n    counts.put(CP_C, 0);\n    counts.put(CP_D, 0);\n    for (CategoryPath cp : CATEGORIES_A) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_B) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_C) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_D) {\n      counts.put(cp.subpath(2), 0);\n    }\n    return counts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca39562b2d7687143fdb601d5de1b8f7b778f1db","date":1385299806,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts2#newCounts().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/CountingFacetsAggregatorTest#newCounts().mjava","sourceNew":"  // initialize expectedCounts w/ 0 for all categories\n  private static ObjectToIntMap<String> newCounts() {\n    ObjectToIntMap<String> counts = new ObjectToIntMap<String>();\n    counts.put(CP_A, 0);\n    counts.put(CP_B, 0);\n    counts.put(CP_C, 0);\n    counts.put(CP_D, 0);\n    for (FacetField ff : CATEGORIES_A) {\n      counts.put(ff.dim + \"/\" + ff.path[0], 0);\n    }\n    for (FacetField ff : CATEGORIES_B) {\n      counts.put(ff.dim + \"/\" + ff.path[0], 0);\n    }\n    for (FacetField ff : CATEGORIES_C) {\n      counts.put(ff.dim + \"/\" + ff.path[0], 0);\n    }\n    for (FacetField ff : CATEGORIES_D) {\n      counts.put(ff.dim + \"/\" + ff.path[0], 0);\n    }\n    return counts;\n  }\n\n","sourceOld":"  // initialize expectedCounts w/ 0 for all categories\n  private static ObjectToIntMap<FacetLabel> newCounts() {\n    ObjectToIntMap<FacetLabel> counts = new ObjectToIntMap<FacetLabel>();\n    counts.put(CP_A, 0);\n    counts.put(CP_B, 0);\n    counts.put(CP_C, 0);\n    counts.put(CP_D, 0);\n    for (FacetLabel cp : CATEGORIES_A) {\n      counts.put(cp, 0);\n    }\n    for (FacetLabel cp : CATEGORIES_B) {\n      counts.put(cp, 0);\n    }\n    for (FacetLabel cp : CATEGORIES_C) {\n      counts.put(cp, 0);\n    }\n    for (FacetLabel cp : CATEGORIES_D) {\n      counts.put(cp.subpath(2), 0);\n    }\n    return counts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/CountingFacetsAggregatorTest#newCounts().mjava","sourceNew":null,"sourceOld":"  // initialize expectedCounts w/ 0 for all categories\n  private static ObjectToIntMap<CategoryPath> newCounts() {\n    ObjectToIntMap<CategoryPath> counts = new ObjectToIntMap<CategoryPath>();\n    counts.put(CP_A, 0);\n    counts.put(CP_B, 0);\n    counts.put(CP_C, 0);\n    counts.put(CP_D, 0);\n    for (CategoryPath cp : CATEGORIES_A) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_B) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_C) {\n      counts.put(cp, 0);\n    }\n    for (CategoryPath cp : CATEGORIES_D) {\n      counts.put(cp.subpath(2), 0);\n    }\n    return counts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["571abba77e55fea386a38c0024f72ffa5b37a9ad","ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["571abba77e55fea386a38c0024f72ffa5b37a9ad"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["ca39562b2d7687143fdb601d5de1b8f7b778f1db"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}