{"path":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","commits":[{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int).mjava","sourceNew":"  /**\n   * This is where implementations do the actual work\n   *\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id\n   * @param score\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","sourceOld":"  /**\n   * This is where implementations do the actual work\n   *\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void transform(SolrDocument doc, int docid) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17473eb131f5386a57f9c926a4dbc4c176807f04","date":1440834423,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  /**\n   * This is where implementations do the actual work\n   *\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","sourceOld":"  /**\n   * This is where implementations do the actual work\n   *\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id\n   * @param score\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","bugFix":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","sourceOld":"  /**\n   * This is where implementations do the actual work\n   *\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","bugFix":["b68df8b95f3ea758a8dc21cb20a50a01db973e8e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","sourceOld":"  /**\n   * This is where implementations do the actual work\n   *\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * Default implementation calls {@link #transform(SolrDocument, int)}.\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public void transform(SolrDocument doc, int docid, float score) throws IOException {\n    transform(doc, docid);\n  }\n\n","sourceOld":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * Default implementation calls {@link #transform(SolrDocument, int)}.\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public void transform(SolrDocument doc, int docid, float score) throws IOException {\n    transform(doc, docid);\n  }\n\n","sourceOld":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/DocTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * Default implementation calls {@link #transform(SolrDocument, int)}.\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public void transform(SolrDocument doc, int docid, float score) throws IOException {\n    transform(doc, docid);\n  }\n\n","sourceOld":"  /**\n   * This is where implementations do the actual work.\n   * If implementations require a valid docId and index access, the {@link #needsSolrIndexSearcher} \n   * method must return true\n   *\n   * @param doc The document to alter\n   * @param docid The Lucene internal doc id, or -1 in cases where the <code>doc</code> did not come from the index\n   * @param score the score for this document\n   * @throws IOException If there is a low-level I/O error.\n   * @see #needsSolrIndexSearcher\n   */\n  public abstract void transform(SolrDocument doc, int docid, float score) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["136796946c32863f11b97ebec6b4091cdfe3a20b","182384b20c064aa16998ddebe9f36e649279c5a6"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["136796946c32863f11b97ebec6b4091cdfe3a20b","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["17473eb131f5386a57f9c926a4dbc4c176807f04"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["17473eb131f5386a57f9c926a4dbc4c176807f04","136796946c32863f11b97ebec6b4091cdfe3a20b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["182384b20c064aa16998ddebe9f36e649279c5a6"],"17473eb131f5386a57f9c926a4dbc4c176807f04":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["17473eb131f5386a57f9c926a4dbc4c176807f04"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"17473eb131f5386a57f9c926a4dbc4c176807f04":["136796946c32863f11b97ebec6b4091cdfe3a20b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}