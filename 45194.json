{"path":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","commits":[{"id":"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","date":1323543613,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiReader#docFreq(String,BytesRef).mjava","sourceNew":"  @Override\n  public int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiReader#docFreq(String,BytesRef).mjava","sourceNew":"  @Override\n  public int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85dda37116c8d94fccd74dfe59f4d7fe4503e74c","date":1327234819,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","date":1328092914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","sourceNew":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","sourceNew":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"85dda37116c8d94fccd74dfe59f4d7fe4503e74c":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"]},"commit2Childs":{"85dda37116c8d94fccd74dfe59f4d7fe4503e74c":[],"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["85dda37116c8d94fccd74dfe59f4d7fe4503e74c"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["85dda37116c8d94fccd74dfe59f4d7fe4503e74c","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}