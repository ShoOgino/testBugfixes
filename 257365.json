{"path":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3d3c1549009ef49f4e37339712fbff21eebe3dc","date":1417457396,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    return loadLocalFromHandler(\"/update/extract\", filename, args);\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3d3c1549009ef49f4e37339712fbff21eebe3dc":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3d3c1549009ef49f4e37339712fbff21eebe3dc"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["f3d3c1549009ef49f4e37339712fbff21eebe3dc"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"f3d3c1549009ef49f4e37339712fbff21eebe3dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}