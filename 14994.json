{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DPoint#convertToDescription(Polygon...).mjava","commits":[{"id":"d96ad5ec0c23d196a0c31b948fc260195a06133a","date":1461951175,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DPoint#convertToDescription(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DPoint#convertToDescription(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f32db9456b1759bf570a512581f5cea321f69f73","date":1463520039,"type":5,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#convertToDescription(Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DPoint#convertToDescription(Polygon...).mjava","sourceNew":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","sourceOld":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c9819d04ff44d2877a5a19257cd662751284a5f","date":1463541580,"type":5,"author":"David Smiley","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#convertToDescription(Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DPoint#convertToDescription(Polygon...).mjava","sourceNew":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","sourceOld":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#convertToDescription(Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DPoint#convertToDescription(Polygon...).mjava","sourceNew":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","sourceOld":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#convertToDescription(Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DPoint#convertToDescription(Polygon...).mjava","sourceNew":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","sourceOld":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9c9819d04ff44d2877a5a19257cd662751284a5f":["d96ad5ec0c23d196a0c31b948fc260195a06133a","f32db9456b1759bf570a512581f5cea321f69f73"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f32db9456b1759bf570a512581f5cea321f69f73":["d96ad5ec0c23d196a0c31b948fc260195a06133a"],"d96ad5ec0c23d196a0c31b948fc260195a06133a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["d96ad5ec0c23d196a0c31b948fc260195a06133a","f32db9456b1759bf570a512581f5cea321f69f73"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d96ad5ec0c23d196a0c31b948fc260195a06133a"]},"commit2Childs":{"9c9819d04ff44d2877a5a19257cd662751284a5f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d96ad5ec0c23d196a0c31b948fc260195a06133a","55b50463286869f584cf849d1587a0fcd54d1dfa"],"f32db9456b1759bf570a512581f5cea321f69f73":["9c9819d04ff44d2877a5a19257cd662751284a5f","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d96ad5ec0c23d196a0c31b948fc260195a06133a":["9c9819d04ff44d2877a5a19257cd662751284a5f","f32db9456b1759bf570a512581f5cea321f69f73","d470c8182e92b264680e34081b75e70a9f2b3c89","55b50463286869f584cf849d1587a0fcd54d1dfa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9c9819d04ff44d2877a5a19257cd662751284a5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}