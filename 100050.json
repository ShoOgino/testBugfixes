{"path":"lucene/src/java/org/apache/lucene/index/DocTermOrds#writeInt(int,byte[],int).mjava","commits":[{"id":"95ae76773bf2b95987d5f9c8f566ab3738953fb4","date":1301758351,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#writeInt(int,byte[],int).mjava","pathOld":"solr/src/java/org/apache/solr/request/UnInvertedField#writeInt(int,byte[],int).mjava","sourceNew":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  private static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","sourceOld":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#writeInt(int,byte[],int).mjava","pathOld":"solr/src/java/org/apache/solr/request/UnInvertedField#writeInt(int,byte[],int).mjava","sourceNew":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  private static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","sourceOld":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#writeInt(int,byte[],int).mjava","pathOld":"/dev/null","sourceNew":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  private static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#writeInt(int,byte[],int).mjava","pathOld":"/dev/null","sourceNew":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  private static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#writeInt(int,byte[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds#writeInt(int,byte[],int).mjava","sourceNew":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  private static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","sourceOld":"  // todo: if we know the size of the vInt already, we could do\n  // a single switch on the size\n  private static int writeInt(int x, byte[] arr, int pos) {\n    int a;\n    a = (x >>> (7*4));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*3));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*2));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    a = (x >>> (7*1));\n    if (a != 0) {\n      arr[pos++] = (byte)(a | 0x80);\n    }\n    arr[pos++] = (byte)(x & 0x7f);\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","95ae76773bf2b95987d5f9c8f566ab3738953fb4","45669a651c970812a680841b97a77cce06af559f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f"],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}