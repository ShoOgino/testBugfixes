{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/UnknownDictionaryBuilder#readCharacterDefinition(Path,UnknownDictionaryWriter).mjava","commits":[{"id":"05feb7eb5e91cb64742ce32b2ca3f02433530446","date":1561602840,"type":0,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/UnknownDictionaryBuilder#readCharacterDefinition(Path,UnknownDictionaryWriter).mjava","pathOld":"/dev/null","sourceNew":"  private void readCharacterDefinition(Path path, UnknownDictionaryWriter dictionary) throws IOException {\n    try (Reader reader = Files.newBufferedReader(path, Charset.forName(encoding));\n         LineNumberReader lineReader = new LineNumberReader(reader)) {\n\n      String line;\n      while ((line = lineReader.readLine()) != null) {\n        line = line.replaceAll(\"^\\\\s\", \"\");\n        line = line.replaceAll(\"\\\\s*#.*\", \"\");\n        line = line.replaceAll(\"\\\\s+\", \" \");\n\n        // Skip empty line or comment line\n        if (line.length() == 0) {\n          continue;\n        }\n\n        if (line.startsWith(\"0x\")) {  // Category mapping\n          String[] values = line.split(\" \", 2);  // Split only first space\n\n          if (!values[0].contains(\"..\")) {\n            int cp = Integer.decode(values[0]);\n            dictionary.putCharacterCategory(cp, values[1]);\n          } else {\n            String[] codePoints = values[0].split(\"\\\\.\\\\.\");\n            int cpFrom = Integer.decode(codePoints[0]);\n            int cpTo = Integer.decode(codePoints[1]);\n\n            for (int i = cpFrom; i <= cpTo; i++) {\n              dictionary.putCharacterCategory(i, values[1]);\n            }\n          }\n        } else {  // Invoke definition\n          String[] values = line.split(\" \"); // Consecutive space is merged above\n          String characterClassName = values[0];\n          int invoke = Integer.parseInt(values[1]);\n          int group = Integer.parseInt(values[2]);\n          int length = Integer.parseInt(values[3]);\n          dictionary.putInvokeDefinition(characterClassName, invoke, group, length);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05feb7eb5e91cb64742ce32b2ca3f02433530446":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05feb7eb5e91cb64742ce32b2ca3f02433530446"]},"commit2Childs":{"05feb7eb5e91cb64742ce32b2ca3f02433530446":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05feb7eb5e91cb64742ce32b2ca3f02433530446"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}