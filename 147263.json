{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","commits":[{"id":"82c0f50a240cf02105b13b11e49095779864d37f","date":1311151772,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"/dev/null","sourceNew":"\t@Override\n\tpublic Properties readIndexerProperties() {\n\t\tProperties props = new Properties();\n\t\tInputStream propInput = null;\n\n\t\ttry {\n\t\t\tpropInput = new FileInputStream(configDir + persistFilename);\n\t\t\tprops.load(propInput);\n\t\t\tlog.info(\"Read \" + persistFilename);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Unable to read: \" + persistFilename);\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (propInput != null)\n\t\t\t\t\tpropInput.close();\n\t\t\t} catch (IOException e) {\n\t\t\t\tpropInput = null;\n\t\t\t}\n\t\t}\n\n\t\treturn props;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Properties readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;\n\n    try {\n      propInput = new FileInputStream(configDir + persistFilename);\n      props.load(propInput);\n      log.info(\"Read \" + persistFilename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + persistFilename);\n    } finally {\n      try {\n        if (propInput != null)\n          propInput.close();\n      } catch (IOException e) {\n        propInput = null;\n      }\n    }\n\n    return props;\n  }\n\n","sourceOld":"\t@Override\n\tpublic Properties readIndexerProperties() {\n\t\tProperties props = new Properties();\n\t\tInputStream propInput = null;\n\n\t\ttry {\n\t\t\tpropInput = new FileInputStream(configDir + persistFilename);\n\t\t\tprops.load(propInput);\n\t\t\tlog.info(\"Read \" + persistFilename);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Unable to read: \" + persistFilename);\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (propInput != null)\n\t\t\t\t\tpropInput.close();\n\t\t\t} catch (IOException e) {\n\t\t\t\tpropInput = null;\n\t\t\t}\n\t\t}\n\n\t\treturn props;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4804614e0358954d5d9f51128fcf3cd79e6e25b","date":1352831451,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(propInput);\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      try {\n        if (propInput != null) propInput.close();\n      } catch (IOException e) {\n        propInput = null;\n      }\n    }    \n    return propertiesToMap(props);\n  }\n\n","sourceOld":"  @Override\n  public Properties readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;\n\n    try {\n      propInput = new FileInputStream(configDir + persistFilename);\n      props.load(propInput);\n      log.info(\"Read \" + persistFilename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + persistFilename);\n    } finally {\n      try {\n        if (propInput != null)\n          propInput.close();\n      } catch (IOException e) {\n        propInput = null;\n      }\n    }\n\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(propInput);\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      try {\n        if (propInput != null) propInput.close();\n      } catch (IOException e) {\n        propInput = null;\n      }\n    }    \n    return propertiesToMap(props);\n  }\n\n","sourceOld":"  @Override\n  public Properties readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;\n\n    try {\n      propInput = new FileInputStream(configDir + persistFilename);\n      props.load(propInput);\n      log.info(\"Read \" + persistFilename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + persistFilename);\n    } finally {\n      try {\n        if (propInput != null)\n          propInput.close();\n      } catch (IOException e) {\n        propInput = null;\n      }\n    }\n\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fd8fc50365ae7bb9c0d47256bc40182559b70d1","date":1373649022,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, IOUtils.CHARSET_UTF_8));\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(propInput);\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      try {\n        if (propInput != null) propInput.close();\n      } catch (IOException e) {\n        propInput = null;\n      }\n    }    \n    return propertiesToMap(props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, IOUtils.CHARSET_UTF_8));\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(propInput);\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      try {\n        if (propInput != null) propInput.close();\n      } catch (IOException e) {\n        propInput = null;\n      }\n    }    \n    return propertiesToMap(props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, StandardCharsets.UTF_8));\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, IOUtils.CHARSET_UTF_8));\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, StandardCharsets.UTF_8));\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, IOUtils.CHARSET_UTF_8));\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, StandardCharsets.UTF_8));\n      log.info(\"Read {}\", filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: {}\", filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, StandardCharsets.UTF_8));\n      log.info(\"Read \" + filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: \" + filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#readIndexerProperties().mjava","sourceNew":null,"sourceOld":"  @Override\n  public Map<String, Object> readIndexerProperties() {\n    Properties props = new Properties();\n    InputStream propInput = null;    \n    try {\n      String filePath = configDir;\n      if (configDir != null && !configDir.endsWith(File.separator)) {\n        filePath += File.separator;\n      }\n      filePath += filename;\n      propInput = new FileInputStream(filePath);\n      props.load(new InputStreamReader(propInput, StandardCharsets.UTF_8));\n      log.info(\"Read {}\", filename);\n    } catch (Exception e) {\n      log.warn(\"Unable to read: {}\", filename);\n    } finally {\n      IOUtils.closeWhileHandlingException(propInput);\n    }    \n    return propertiesToMap(props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["1fd8fc50365ae7bb9c0d47256bc40182559b70d1","7d89d7e4e5101347833eea558851bf4209218619"],"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"82c0f50a240cf02105b13b11e49095779864d37f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["b4804614e0358954d5d9f51128fcf3cd79e6e25b","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"7d89d7e4e5101347833eea558851bf4209218619":["1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["7d89d7e4e5101347833eea558851bf4209218619"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["82c0f50a240cf02105b13b11e49095779864d37f"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["37a0f60745e53927c4c876cfe5b5a58170f0646c","407687e67faf6e1f02a211ca078d8e3eed631027","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"82c0f50a240cf02105b13b11e49095779864d37f":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["82c0f50a240cf02105b13b11e49095779864d37f"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","7d89d7e4e5101347833eea558851bf4209218619"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b4804614e0358954d5d9f51128fcf3cd79e6e25b","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}