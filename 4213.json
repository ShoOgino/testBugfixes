{"path":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","commits":[{"id":"0445bcd8433e331f296f5502fc089b336cbac3a6","date":1322630375,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    PerDocValues leftPerDoc = MultiPerDocValues.getPerDocs(leftReader);\n    PerDocValues rightPerDoc = MultiPerDocValues.getPerDocs(rightReader);\n    \n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      IndexDocValues leftDocValues = leftPerDoc.docValues(field);\n      IndexDocValues rightDocValues = rightPerDoc.docValues(field);\n      if (leftDocValues == null || rightDocValues == null) {\n        assertNull(info, leftDocValues);\n        assertNull(info, rightDocValues);\n        continue;\n      }\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    PerDocValues leftPerDoc = MultiPerDocValues.getPerDocs(leftReader);\n    PerDocValues rightPerDoc = MultiPerDocValues.getPerDocs(rightReader);\n    \n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftDocValues = leftPerDoc.docValues(field);\n      DocValues rightDocValues = rightPerDoc.docValues(field);\n      if (leftDocValues == null || rightDocValues == null) {\n        assertNull(info, leftDocValues);\n        assertNull(info, rightDocValues);\n        continue;\n      }\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    PerDocValues leftPerDoc = MultiPerDocValues.getPerDocs(leftReader);\n    PerDocValues rightPerDoc = MultiPerDocValues.getPerDocs(rightReader);\n    \n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      IndexDocValues leftDocValues = leftPerDoc.docValues(field);\n      IndexDocValues rightDocValues = rightPerDoc.docValues(field);\n      if (leftDocValues == null || rightDocValues == null) {\n        assertNull(info, leftDocValues);\n        assertNull(info, rightDocValues);\n        continue;\n      }\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cac4d5fa6c305b94f6232a70bda07f096ad0348c","date":1323538980,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = new HashSet<String>(leftReader.getFieldNames(FieldOption.DOC_VALUES));\n    Set<String> rightValues = new HashSet<String>(rightReader.getFieldNames(FieldOption.DOC_VALUES));\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertNotNull(info, leftDocValues);\n      assertNotNull(info, rightDocValues);\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    PerDocValues leftPerDoc = MultiPerDocValues.getPerDocs(leftReader);\n    PerDocValues rightPerDoc = MultiPerDocValues.getPerDocs(rightReader);\n    \n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftDocValues = leftPerDoc.docValues(field);\n      DocValues rightDocValues = rightPerDoc.docValues(field);\n      if (leftDocValues == null || rightDocValues == null) {\n        assertNull(info, leftDocValues);\n        assertNull(info, rightDocValues);\n        continue;\n      }\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = new HashSet<String>(leftReader.getFieldNames(FieldOption.DOC_VALUES));\n    Set<String> rightValues = new HashSet<String>(rightReader.getFieldNames(FieldOption.DOC_VALUES));\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertNotNull(info, leftDocValues);\n      assertNotNull(info, rightDocValues);\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    PerDocValues leftPerDoc = MultiPerDocValues.getPerDocs(leftReader);\n    PerDocValues rightPerDoc = MultiPerDocValues.getPerDocs(rightReader);\n    \n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      IndexDocValues leftDocValues = leftPerDoc.docValues(field);\n      IndexDocValues rightDocValues = rightPerDoc.docValues(field);\n      if (leftDocValues == null || rightDocValues == null) {\n        assertNull(info, leftDocValues);\n        assertNull(info, rightDocValues);\n        continue;\n      }\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ac8fdcc5eee388f0bcb670fcc6d838f1bd69f765","date":1323861442,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = new HashSet<String>(leftReader.getFieldNames(FieldOption.DOC_VALUES));\n    Set<String> rightValues = new HashSet<String>(rightReader.getFieldNames(FieldOption.DOC_VALUES));\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertNotNull(info, leftDocValues);\n      assertNotNull(info, rightDocValues);\n      assertEquals(info, leftDocValues.type(), rightDocValues.type());\n      assertEquals(info, leftDocValues.getValueSize(), rightDocValues.getValueSize());\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = new HashSet<String>(leftReader.getFieldNames(FieldOption.DOC_VALUES));\n    Set<String> rightValues = new HashSet<String>(rightReader.getFieldNames(FieldOption.DOC_VALUES));\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertNotNull(info, leftDocValues);\n      assertNotNull(info, rightDocValues);\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d","date":1325789720,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = new HashSet<String>(leftReader.getFieldNames(FieldOption.DOC_VALUES));\n    Set<String> rightValues = new HashSet<String>(rightReader.getFieldNames(FieldOption.DOC_VALUES));\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertDocValues(leftDocValues, rightDocValues);\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = new HashSet<String>(leftReader.getFieldNames(FieldOption.DOC_VALUES));\n    Set<String> rightValues = new HashSet<String>(rightReader.getFieldNames(FieldOption.DOC_VALUES));\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertNotNull(info, leftDocValues);\n      assertNotNull(info, rightDocValues);\n      assertEquals(info, leftDocValues.type(), rightDocValues.type());\n      assertEquals(info, leftDocValues.getValueSize(), rightDocValues.getValueSize());\n      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = getDVFields(leftReader);\n    Set<String> rightValues = getDVFields(rightReader);\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertDocValues(leftDocValues, rightDocValues);\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = new HashSet<String>(leftReader.getFieldNames(FieldOption.DOC_VALUES));\n    Set<String> rightValues = new HashSet<String>(rightReader.getFieldNames(FieldOption.DOC_VALUES));\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertDocValues(leftDocValues, rightDocValues);\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868186558eb3a854ce7e720a52bb445795d54910","date":1327853682,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = getDVFields(leftReader);\n    Set<String> rightValues = getDVFields(rightReader);\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      if (leftDocValues != null && rightDocValues != null) {\n        assertDocValues(leftDocValues, rightDocValues);\n      } else {\n        assertNull(leftDocValues);\n        assertNull(rightDocValues);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = getDVFields(leftReader);\n    Set<String> rightValues = getDVFields(rightReader);\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertDocValues(leftDocValues, rightDocValues);\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = getDVFields(leftReader);\n    Set<String> rightValues = getDVFields(rightReader);\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      if (leftDocValues != null && rightDocValues != null) {\n        assertDocValues(leftDocValues, rightDocValues);\n      } else {\n        assertNull(leftDocValues);\n        assertNull(rightDocValues);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = getDVFields(leftReader);\n    Set<String> rightValues = getDVFields(rightReader);\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      assertDocValues(leftDocValues, rightDocValues);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = getDVFields(leftReader);\n    Set<String> rightValues = getDVFields(rightReader);\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      if (leftDocValues != null && rightDocValues != null) {\n        assertDocValues(leftDocValues, rightDocValues);\n      } else {\n        assertNull(leftDocValues);\n        assertNull(rightDocValues);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftValues = getDVFields(leftReader);\n    Set<String> rightValues = getDVFields(rightReader);\n    assertEquals(info, leftValues, rightValues);\n\n    for (String field : leftValues) {\n      DocValues leftDocValues = MultiDocValues.getDocValues(leftReader, field);\n      DocValues rightDocValues = MultiDocValues.getDocValues(rightReader, field);\n      if (leftDocValues != null && rightDocValues != null) {\n        assertDocValues(leftDocValues, rightDocValues);\n      } else {\n        assertNull(leftDocValues);\n        assertNull(rightDocValues);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d":["ac8fdcc5eee388f0bcb670fcc6d838f1bd69f765"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"0445bcd8433e331f296f5502fc089b336cbac3a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac8fdcc5eee388f0bcb670fcc6d838f1bd69f765":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","868186558eb3a854ce7e720a52bb445795d54910"],"868186558eb3a854ce7e720a52bb445795d54910":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["0445bcd8433e331f296f5502fc089b336cbac3a6","cac4d5fa6c305b94f6232a70bda07f096ad0348c"]},"commit2Childs":{"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"0445bcd8433e331f296f5502fc089b336cbac3a6":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"ac8fdcc5eee388f0bcb670fcc6d838f1bd69f765":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["cac4d5fa6c305b94f6232a70bda07f096ad0348c"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["5cab9a86bd67202d20b6adc463008c8e982b070a","868186558eb3a854ce7e720a52bb445795d54910"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"868186558eb3a854ce7e720a52bb445795d54910":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["ac8fdcc5eee388f0bcb670fcc6d838f1bd69f765"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}