{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","commits":[{"id":"683d3f90dda2bbb999c3ce855706d74563a53680","date":1285654576,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer().mjava","sourceNew":"\t/** @deprecated testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n \t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\tpublic void testAnalyzer() throws Exception {\n\t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n\t\tThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f","date":1287243791,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","sourceNew":"\t/** @deprecated testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\t/** @deprecated testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n \t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","sourceNew":"\t/** @deprecated testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\t/** @deprecated testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n \t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","sourceNew":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\t/** @deprecated testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","sourceNew":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\t/** @deprecated testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"/dev/null","sourceNew":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf703a22c95bad237d2d787a15bfbbc329df81c0","date":1323380832,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","sourceNew":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","sourceNew":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testAnalyzer30().mjava","sourceNew":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","sourceOld":"\t/** @deprecated (3.1) testing backwards behavior */\n\t@Deprecated\n    public void testAnalyzer30() throws Exception {\n        ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_30);\n\t\n\t\tassertAnalyzesTo(analyzer, \"\", new String[] {});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"การที่ได้ต้องแสดงว่างานดี\",\n\t\t\tnew String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n\t\t\tnew String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\n    // English stop words\n\t\tassertAnalyzesTo(\n\t\t\tanalyzer,\n\t\t\t\"ประโยคว่า The quick brown fox jumped over the lazy dogs\",\n\t\t\tnew String[] { \"ประโยค\", \"ว่า\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"lazy\", \"dogs\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["bf703a22c95bad237d2d787a15bfbbc329df81c0"],"683d3f90dda2bbb999c3ce855706d74563a53680":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["4e8cc373c801e54cec75daf9f52792cb4b17f536","bf703a22c95bad237d2d787a15bfbbc329df81c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf703a22c95bad237d2d787a15bfbbc329df81c0":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["683d3f90dda2bbb999c3ce855706d74563a53680","e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"],"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f":["683d3f90dda2bbb999c3ce855706d74563a53680"],"3bb13258feba31ab676502787ab2e1779f129b7a":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"683d3f90dda2bbb999c3ce855706d74563a53680":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["683d3f90dda2bbb999c3ce855706d74563a53680","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"bf703a22c95bad237d2d787a15bfbbc329df81c0":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["3bb13258feba31ab676502787ab2e1779f129b7a"],"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","bf703a22c95bad237d2d787a15bfbbc329df81c0","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}