{"path":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public InvertedFieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      InvertedFieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public InvertedFieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      InvertedFieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc97c61094c5498702b29cc2e8309beac50c23dc","date":1337293692,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e5adcbe5a27941451fdb6194bcbff96c8630e14","date":1346419102,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d1f90e969803cc84174589b5e4a39b7935fecd","date":1346584861,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo.name,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/appending/AppendingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postings = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    \n    boolean success = false;\n    try {\n      FieldsProducer ret = new AppendingTermsReader(\n                                                    state.dir,\n                                                    state.fieldInfos,\n                                                    state.segmentInfo,\n                                                    postings,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postings.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0d1f90e969803cc84174589b5e4a39b7935fecd":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","6e5adcbe5a27941451fdb6194bcbff96c8630e14"],"6e5adcbe5a27941451fdb6194bcbff96c8630e14":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","dc97c61094c5498702b29cc2e8309beac50c23dc"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["6e5adcbe5a27941451fdb6194bcbff96c8630e14"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"dc97c61094c5498702b29cc2e8309beac50c23dc":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"d0d1f90e969803cc84174589b5e4a39b7935fecd":[],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["d0d1f90e969803cc84174589b5e4a39b7935fecd","6e5adcbe5a27941451fdb6194bcbff96c8630e14"],"6e5adcbe5a27941451fdb6194bcbff96c8630e14":["d0d1f90e969803cc84174589b5e4a39b7935fecd","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","dc97c61094c5498702b29cc2e8309beac50c23dc"],"dc97c61094c5498702b29cc2e8309beac50c23dc":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d0d1f90e969803cc84174589b5e4a39b7935fecd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}