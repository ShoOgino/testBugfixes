{"path":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"323f871ffe96b871d8c534a614be60751bb023c2","date":1294820532,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      setup(FieldCache.DEFAULT.getBytes(context.reader, creator.field, creator));\n      docValues = cached.values;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      setup(FieldCache.DEFAULT.getBytes(context.reader, creator.field, creator));\n      docValues = cached.values;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      setup(FieldCache.DEFAULT.getBytes(context.reader, creator.field, creator));\n      docValues = cached.values;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader, field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      setup(FieldCache.DEFAULT.getBytes(context.reader, creator.field, creator));\n      docValues = cached.values;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d080078d9a1c91df2c8d643b6b305317813c39f","date":1321054153,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      // NOTE: must do this before calling super otherwise\n      // we compute the docsWithField Bits twice!\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader, field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader, field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fff8f4b218bd0626afcdce82027bafeb84a50a4","date":1327229950,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      // NOTE: must do this before calling super otherwise\n      // we compute the docsWithField Bits twice!\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader(), field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      // NOTE: must do this before calling super otherwise\n      // we compute the docsWithField Bits twice!\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader, field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      // NOTE: must do this before calling super otherwise\n      // we compute the docsWithField Bits twice!\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader(), field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      // NOTE: must do this before calling super otherwise\n      // we compute the docsWithField Bits twice!\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader, field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.ByteComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      // NOTE: must do this before calling super otherwise\n      // we compute the docsWithField Bits twice!\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader(), field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      // NOTE: must do this before calling super otherwise\n      // we compute the docsWithField Bits twice!\n      currentReaderValues = FieldCache.DEFAULT.getBytes(context.reader(), field, parser, missingValue != null);\n      return super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"323f871ffe96b871d8c534a614be60751bb023c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","323f871ffe96b871d8c534a614be60751bb023c2"],"3d080078d9a1c91df2c8d643b6b305317813c39f":["382fe3a6ca9745891afebda9b9a57cc158305545"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["3d080078d9a1c91df2c8d643b6b305317813c39f"],"382fe3a6ca9745891afebda9b9a57cc158305545":["323f871ffe96b871d8c534a614be60751bb023c2"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","323f871ffe96b871d8c534a614be60751bb023c2"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3d080078d9a1c91df2c8d643b6b305317813c39f","6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"323f871ffe96b871d8c534a614be60751bb023c2":["29ef99d61cda9641b6250bf9567329a6e65f901d","382fe3a6ca9745891afebda9b9a57cc158305545","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["323f871ffe96b871d8c534a614be60751bb023c2","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3d080078d9a1c91df2c8d643b6b305317813c39f":["6fff8f4b218bd0626afcdce82027bafeb84a50a4","5cab9a86bd67202d20b6adc463008c8e982b070a"],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"382fe3a6ca9745891afebda9b9a57cc158305545":["3d080078d9a1c91df2c8d643b6b305317813c39f"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}