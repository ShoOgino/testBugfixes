{"path":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/LovinsStemmer#stem().mjava","commits":[{"id":"8497ea87d47a78ce96caf21099e6e5fd3536b512","date":1040423984,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/LovinsStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 197\n            // backwards, line 199\n            limit_backward = cursor; cursor = limit;\n            // (, line 199\n            // do, line 200\n            v_1 = limit - cursor;\n            lab0: do {\n                // call endings, line 200\n                if (!r_endings())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = limit - v_1;\n            // do, line 201\n            v_2 = limit - cursor;\n            lab1: do {\n                // call undouble, line 201\n                if (!r_undouble())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 202\n            v_3 = limit - cursor;\n            lab2: do {\n                // call respell, line 202\n                if (!r_respell())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/LovinsStemmer#stem().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/LovinsStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 197\n            // backwards, line 199\n            limit_backward = cursor; cursor = limit;\n            // (, line 199\n            // do, line 200\n            v_1 = limit - cursor;\n            lab0: do {\n                // call endings, line 200\n                if (!r_endings())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = limit - v_1;\n            // do, line 201\n            v_2 = limit - cursor;\n            lab1: do {\n                // call undouble, line 201\n                if (!r_undouble())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 202\n            v_3 = limit - cursor;\n            lab2: do {\n                // call respell, line 202\n                if (!r_respell())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 197\n            // backwards, line 199\n            limit_backward = cursor; cursor = limit;\n            // (, line 199\n            // do, line 200\n            v_1 = limit - cursor;\n            lab0: do {\n                // call endings, line 200\n                if (!r_endings())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = limit - v_1;\n            // do, line 201\n            v_2 = limit - cursor;\n            lab1: do {\n                // call undouble, line 201\n                if (!r_undouble())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 202\n            v_3 = limit - cursor;\n            lab2: do {\n                // call respell, line 202\n                if (!r_respell())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["8497ea87d47a78ce96caf21099e6e5fd3536b512"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8497ea87d47a78ce96caf21099e6e5fd3536b512":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8497ea87d47a78ce96caf21099e6e5fd3536b512"],"8497ea87d47a78ce96caf21099e6e5fd3536b512":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}