{"path":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","commits":[{"id":"fd10af23d6329d28dbd5033cccfbbf9748f593f0","date":1288946780,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","sourceNew":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","sourceNew":null,"sourceOld":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","sourceNew":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["85a883878c0af761245ab048babc63d099f835f3","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["fd10af23d6329d28dbd5033cccfbbf9748f593f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd10af23d6329d28dbd5033cccfbbf9748f593f0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd10af23d6329d28dbd5033cccfbbf9748f593f0"],"fd10af23d6329d28dbd5033cccfbbf9748f593f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81ea17596392ebd5d12741eb9e3b2516258b9413"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd10af23d6329d28dbd5033cccfbbf9748f593f0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"fd10af23d6329d28dbd5033cccfbbf9748f593f0":["81ea17596392ebd5d12741eb9e3b2516258b9413","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}