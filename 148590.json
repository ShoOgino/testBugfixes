{"path":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/util/IOUtils#writeToTempFile(InputStream,String).mjava","commits":[{"id":"3fce85454a250d21604a63955fa07ab2da7a43fa","date":1030730633,"type":0,"author":"Kelvin Tan","isMerge":false,"pathNew":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/util/IOUtils#writeToTempFile(InputStream,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Writes an input stream to a temporary file which is set\n     * to delete when the VM exits.\n     * @param Inputstream to read data from\n     * @param Temporary file to write to\n     */\n    public static void writeToTempFile(InputStream in, String tempfile)\n            throws IOException\n    {\n        OutputStream out = null;\n        try\n        {\n            File f = new File(tempfile);\n            f.deleteOnExit();\n            char lastChar = tempfile.charAt(tempfile.length() - 1);\n            // make no assumptions that java.io.File detects directories\n            // in a cross-platform manner\n            if (f.isDirectory() || lastChar == '\\\\' || lastChar == '/')\n                f.mkdirs();\n            else\n            {\n                // ensure that all necessary directories are created\n                File parent = f.getParentFile();\n                parent.deleteOnExit();\n                parent.mkdirs();\n                out = new FileOutputStream(tempfile);\n                transferData(in, out);\n            }\n        }\n        finally\n        {\n            if (out != null)\n                out.close();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3461c2f9e7fbdbc35cc20710cf75a221d2898e90","date":1051838935,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/util/IOUtils#writeToTempFile(InputStream,String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Writes an input stream to a temporary file which is set\n     * to delete when the VM exits.\n     * @param Inputstream to read data from\n     * @param Temporary file to write to\n     */\n    public static void writeToTempFile(InputStream in, String tempfile)\n            throws IOException\n    {\n        OutputStream out = null;\n        try\n        {\n            File f = new File(tempfile);\n            f.deleteOnExit();\n            char lastChar = tempfile.charAt(tempfile.length() - 1);\n            // make no assumptions that java.io.File detects directories\n            // in a cross-platform manner\n            if (f.isDirectory() || lastChar == '\\\\' || lastChar == '/')\n                f.mkdirs();\n            else\n            {\n                // ensure that all necessary directories are created\n                File parent = f.getParentFile();\n                parent.deleteOnExit();\n                parent.mkdirs();\n                out = new FileOutputStream(tempfile);\n                transferData(in, out);\n            }\n        }\n        finally\n        {\n            if (out != null)\n                out.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3fce85454a250d21604a63955fa07ab2da7a43fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3461c2f9e7fbdbc35cc20710cf75a221d2898e90":["3fce85454a250d21604a63955fa07ab2da7a43fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3461c2f9e7fbdbc35cc20710cf75a221d2898e90"]},"commit2Childs":{"3fce85454a250d21604a63955fa07ab2da7a43fa":["3461c2f9e7fbdbc35cc20710cf75a221d2898e90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fce85454a250d21604a63955fa07ab2da7a43fa"],"3461c2f9e7fbdbc35cc20710cf75a221d2898e90":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}