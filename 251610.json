{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader,int).mjava","commits":[{"id":"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704","date":1371043069,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","sourceNew":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader, int numChars) throws IOException {\n      assert buffer.buffer.length >= 2;\n      if (numChars < 2 || numChars > buffer.buffer.length) {\n        throw new IllegalArgumentException(\"numChars must be >= 2 and <= the buffer size\");\n      }\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        buffer.lastTrailingHighSurrogate = 0;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = readFully(reader, charBuffer, offset, numChars - offset);\n\n      buffer.length = offset + read;\n      final boolean result = buffer.length == numChars;\n      if (buffer.length < numChars) {\n        // We failed to fill the buffer. Even if the last char is a high\n        // surrogate, there is nothing we can do\n        return result;\n      }\n\n      if (Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = reader.read(charBuffer,\n                                   offset,\n                                   charBuffer.length - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        buffer.lastTrailingHighSurrogate = 0;\n        return offset != 0;\n      }\n      assert read > 0;\n      buffer.length = read + offset;\n\n      // If we read only a single char, and that char was a\n      // high surrogate, read again:\n      if (buffer.length == 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        final int read2 = reader.read(charBuffer,\n                                      1,\n                                      charBuffer.length - 1);\n        if (read2 == -1) {\n          // NOTE: mal-formed input (ended on a high\n          // surrogate)!  Consumer must deal with it...\n          return true;\n        }\n        assert read2 > 0;\n\n        buffer.length += read2;\n      }\n\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      } else {\n        buffer.lastTrailingHighSurrogate = 0;\n      }\n\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc","date":1465824262,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader, int numChars) throws IOException {\n      assert buffer.buffer.length >= 2;\n      if (numChars < 2 || numChars > buffer.buffer.length) {\n        throw new IllegalArgumentException(\"numChars must be >= 2 and <= the buffer size\");\n      }\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        buffer.lastTrailingHighSurrogate = 0;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = readFully(reader, charBuffer, offset, numChars - offset);\n\n      buffer.length = offset + read;\n      final boolean result = buffer.length == numChars;\n      if (buffer.length < numChars) {\n        // We failed to fill the buffer. Even if the last char is a high\n        // surrogate, there is nothing we can do\n        return result;\n      }\n\n      if (Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","date":1465913303,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader, int numChars) throws IOException {\n      assert buffer.buffer.length >= 2;\n      if (numChars < 2 || numChars > buffer.buffer.length) {\n        throw new IllegalArgumentException(\"numChars must be >= 2 and <= the buffer size\");\n      }\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        buffer.lastTrailingHighSurrogate = 0;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = readFully(reader, charBuffer, offset, numChars - offset);\n\n      buffer.length = offset + read;\n      final boolean result = buffer.length == numChars;\n      if (buffer.length < numChars) {\n        // We failed to fill the buffer. Even if the last char is a high\n        // surrogate, there is nothing we can do\n        return result;\n      }\n\n      if (Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader, int numChars) throws IOException {\n      assert buffer.buffer.length >= 2;\n      if (numChars < 2 || numChars > buffer.buffer.length) {\n        throw new IllegalArgumentException(\"numChars must be >= 2 and <= the buffer size\");\n      }\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        buffer.lastTrailingHighSurrogate = 0;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = readFully(reader, charBuffer, offset, numChars - offset);\n\n      buffer.length = offset + read;\n      final boolean result = buffer.length == numChars;\n      if (buffer.length < numChars) {\n        // We failed to fill the buffer. Even if the last char is a high\n        // surrogate, there is nothing we can do\n        return result;\n      }\n\n      if (Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704","fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"]},"commit2Childs":{"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}