{"path":"solr/core/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","sourceNew":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRef readable = new CharsRef();\n        ft.indexedToReadable(val, readable);\n        out.append(readable);\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","sourceOld":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRef readable = new CharsRef();\n        ft.indexedToReadable(val, readable);\n        out.append(readable);\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","sourceNew":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRef readable = new CharsRef();\n        ft.indexedToReadable(val, readable);\n        out.append(readable);\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","sourceOld":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRef readable = new CharsRef();\n        ft.indexedToReadable(val, readable);\n        out.append(readable);\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","sourceNew":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRef readable = new CharsRef();\n        ft.indexedToReadable(val, readable);\n        out.append(readable);\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","sourceOld":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRef readable = new CharsRef();\n        ft.indexedToReadable(val, readable);\n        out.append(readable);\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing#writeFieldVal(BytesRef,FieldType,Appendable,int).mjava","sourceNew":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRefBuilder readable = new CharsRefBuilder();\n        ft.indexedToReadable(val, readable);\n        out.append(readable.get());\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","sourceOld":"  static void writeFieldVal(BytesRef val, FieldType ft, Appendable out, int flags) throws IOException {\n    if (ft != null) {\n      try {\n        CharsRef readable = new CharsRef();\n        ft.indexedToReadable(val, readable);\n        out.append(readable);\n      } catch (Exception e) {\n        out.append(\"EXCEPTION(val=\");\n        out.append(val.utf8ToString());\n        out.append(\")\");\n      }\n    } else {\n      out.append(val.utf8ToString());\n    }\n  }\n\n","bugFix":["b76f6f82625f0e41eb3a5200a196efeecf36b1ec"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}