{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5d497ef5f4afb803f608c705a49782def2f7082","date":1327943814,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","sourceOld":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","sourceOld":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","sourceOld":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f88699fd6466ac6a5a6602672bccf6f094b88aa8","date":1329871275,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      synchronized (nodeStateWatches) {\n        NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      }\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","sourceOld":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","sourceNew":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      synchronized (nodeStateWatches) {\n        NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      }\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","sourceOld":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5093a9e893633cc091cf2f729d7863671c2b715","date":1339132888,"type":4,"author":"Sami Siren","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#processLiveNodesChanged(Collection[String],Collection[String]).mjava","sourceNew":null,"sourceOld":"  private void processLiveNodesChanged(Collection<String> oldLiveNodes,\n      Collection<String> liveNodes) throws InterruptedException, KeeperException {\n    \n    Set<String> upNodes = complement(liveNodes, oldLiveNodes);\n    if (upNodes.size() > 0) {\n      addNodeStateWatches(upNodes);\n    }\n    \n    Set<String> downNodes = complement(oldLiveNodes, liveNodes);\n    for(String node: downNodes) {\n      synchronized (nodeStateWatches) {\n        NodeStateWatcher watcher = nodeStateWatches.remove(node);\n      }\n      log.debug(\"Removed NodeStateWatcher for node:\" + node);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["f5d497ef5f4afb803f608c705a49782def2f7082","f88699fd6466ac6a5a6602672bccf6f094b88aa8"],"410e066f093e407222d9681429d209084e783149":["0d22ac6a4146774c1bc8400160fc0b6150294e92","f5d497ef5f4afb803f608c705a49782def2f7082"],"f88699fd6466ac6a5a6602672bccf6f094b88aa8":["f5d497ef5f4afb803f608c705a49782def2f7082"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5093a9e893633cc091cf2f729d7863671c2b715":["f88699fd6466ac6a5a6602672bccf6f094b88aa8"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","f5d497ef5f4afb803f608c705a49782def2f7082"],"f5d497ef5f4afb803f608c705a49782def2f7082":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a5093a9e893633cc091cf2f729d7863671c2b715"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["410e066f093e407222d9681429d209084e783149"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"410e066f093e407222d9681429d209084e783149":[],"f88699fd6466ac6a5a6602672bccf6f094b88aa8":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a5093a9e893633cc091cf2f729d7863671c2b715"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a5093a9e893633cc091cf2f729d7863671c2b715":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["5b6fdfce35d0adb18836cf8711abe487a934df33"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","f5d497ef5f4afb803f608c705a49782def2f7082"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"f5d497ef5f4afb803f608c705a49782def2f7082":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","410e066f093e407222d9681429d209084e783149","f88699fd6466ac6a5a6602672bccf6f094b88aa8","5b6fdfce35d0adb18836cf8711abe487a934df33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}