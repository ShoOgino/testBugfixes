{"path":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.StringIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.StringIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    terms = si.lookup;\n    termNum = si.order;\n    startTermIndex = 1;\n    endTermIndex = terms.length;\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"c26f00b574427b55127e869b935845554afde1fa":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}