{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","sourceNew":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !(shape instanceof Point)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","sourceOld":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !(shape instanceof Point)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","sourceNew":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !(shape instanceof Point)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","sourceOld":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !(shape instanceof Point)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd","date":1495828828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","sourceNew":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !isPointShape(shape)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","sourceOld":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !(shape instanceof Point)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","sourceNew":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !isPointShape(shape)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","sourceOld":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !(shape instanceof Point)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createCellIteratorToIndex(Shape,int,Iterator[Cell]).mjava","sourceNew":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !isPointShape(shape)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","sourceOld":"  protected Iterator<Cell> createCellIteratorToIndex(Shape shape, int detailLevel, Iterator<Cell> reuse) {\n    if (pointsOnly && !(shape instanceof Point)) {\n      throw new IllegalArgumentException(\"pointsOnly is true yet a \" + shape.getClass() + \" is given for indexing\");\n    }\n    return grid.getTreeCellIterator(shape, detailLevel);//TODO should take a re-use iterator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["af2638813028b254a88b418ebeafb541afb49653","1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd":["af2638813028b254a88b418ebeafb541afb49653"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["af2638813028b254a88b418ebeafb541afb49653","1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["e9017cf144952056066919f1ebc7897ff9bd71b1","1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}