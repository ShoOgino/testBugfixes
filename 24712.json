{"path":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(InputStream).mjava","sourceNew":"  private void checkValidFormat(IndexInput in) throws IOException\n  {\n    int format = in.readInt();\n    if (format > TermVectorsWriter.FORMAT_VERSION)\n    {\n      throw new IOException(\"Incompatible format version: \" + format + \" expected \" \n              + TermVectorsWriter.FORMAT_VERSION + \" or less\");\n    }\n    \n  }\n\n","sourceOld":"  private void checkValidFormat(InputStream in) throws IOException\n  {\n    int format = in.readInt();\n    if (format > TermVectorsWriter.FORMAT_VERSION)\n    {\n      throw new IOException(\"Incompatible format version: \" + format + \" expected \" \n              + TermVectorsWriter.FORMAT_VERSION + \" or less\");\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws IOException\n  {\n    int format = in.readInt();\n    if (format > TermVectorsWriter.FORMAT_VERSION)\n    {\n      throw new IOException(\"Incompatible format version: \" + format + \" expected \" \n              + TermVectorsWriter.FORMAT_VERSION + \" or less\");\n    }\n    return format;\n  }\n\n","sourceOld":"  private void checkValidFormat(IndexInput in) throws IOException\n  {\n    int format = in.readInt();\n    if (format > TermVectorsWriter.FORMAT_VERSION)\n    {\n      throw new IOException(\"Incompatible format version: \" + format + \" expected \" \n              + TermVectorsWriter.FORMAT_VERSION + \" or less\");\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > TermVectorsWriter.FORMAT_VERSION)\n    {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + TermVectorsWriter.FORMAT_VERSION + \" or less\");\n    }\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in) throws IOException\n  {\n    int format = in.readInt();\n    if (format > TermVectorsWriter.FORMAT_VERSION)\n    {\n      throw new IOException(\"Incompatible format version: \" + format + \" expected \" \n              + TermVectorsWriter.FORMAT_VERSION + \" or less\");\n    }\n    return format;\n  }\n\n","bugFix":["770281b8a8459cafcdd2354b6a06078fea2d83c9","6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"bugIntro":["11764865fb318bf86302eab36bdf9cd00c50c110"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"11764865fb318bf86302eab36bdf9cd00c50c110","date":1190109214,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > FORMAT_VERSION)\n    {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + FORMAT_VERSION + \" or less\");\n    }\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > TermVectorsWriter.FORMAT_VERSION)\n    {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + TermVectorsWriter.FORMAT_VERSION + \" or less\");\n    }\n    return format;\n  }\n\n","bugFix":["770281b8a8459cafcdd2354b6a06078fea2d83c9","1b54a9bc667895a2095a886184bf69a3179e63df"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33","date":1201260752,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > FORMAT_VERSION2) {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + FORMAT_VERSION2 + \" or less\");\n    }\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > FORMAT_VERSION)\n    {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + FORMAT_VERSION + \" or less\");\n    }\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > FORMAT_CURRENT) {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + FORMAT_CURRENT + \" or less\");\n    }\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > FORMAT_VERSION2) {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + FORMAT_VERSION2 + \" or less\");\n    }\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > FORMAT_CURRENT) {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + FORMAT_CURRENT + \" or less\");\n    }\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format > FORMAT_CURRENT) {\n      throw new CorruptIndexException(\"Incompatible format version: \" + format + \" expected \" \n                                      + FORMAT_CURRENT + \" or less\");\n    }\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["11764865fb318bf86302eab36bdf9cd00c50c110"],"1b54a9bc667895a2095a886184bf69a3179e63df":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"11764865fb318bf86302eab36bdf9cd00c50c110":["1b54a9bc667895a2095a886184bf69a3179e63df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"1b54a9bc667895a2095a886184bf69a3179e63df":["11764865fb318bf86302eab36bdf9cd00c50c110"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"11764865fb318bf86302eab36bdf9cd00c50c110":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["1b54a9bc667895a2095a886184bf69a3179e63df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}