{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#findLeader().mjava","commits":[{"id":"fa64435b5902ce266c23755a4a00691a3285dab8","date":1347243290,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#findLeader().mjava","pathOld":"/dev/null","sourceNew":"  private Replica findLeader() {\n    for (Replica replica : replicas.values()) {\n      if (replica.getStr(LEADER) != null) return replica;\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#findLeader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#findLeader().mjava","sourceNew":"  private Replica findLeader() {\n    for (Replica replica : replicas.values()) {\n      if (replica.getStr(LEADER) != null) {\n        assert replica.getType() == Type.TLOG || replica.getType() == Type.NRT: \"Pull replica should not become leader!\";\n        return replica;\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private Replica findLeader() {\n    for (Replica replica : replicas.values()) {\n      if (replica.getStr(LEADER) != null) return replica;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#findLeader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#findLeader().mjava","sourceNew":"  private Replica findLeader() {\n    for (Replica replica : replicas.values()) {\n      if (replica.getStr(LEADER) != null) {\n        assert replica.getType() == Type.TLOG || replica.getType() == Type.NRT: \"Pull replica should not become leader!\";\n        return replica;\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private Replica findLeader() {\n    for (Replica replica : replicas.values()) {\n      if (replica.getStr(LEADER) != null) return replica;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["fa64435b5902ce266c23755a4a00691a3285dab8","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["fa64435b5902ce266c23755a4a00691a3285dab8"],"fa64435b5902ce266c23755a4a00691a3285dab8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61c45e99cf6676da48f19d7511c73712ad39402b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fa64435b5902ce266c23755a4a00691a3285dab8":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa64435b5902ce266c23755a4a00691a3285dab8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}