{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/QueryParserHelper#setQueryNodeProcessor(QueryNodeProcessor).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/QueryParserHelper#setQueryNodeProcessor(QueryNodeProcessor).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/QueryParserHelper#setQueryNodeProcessor(QueryNodeProcessor).mjava","sourceNew":"  /**\n   * Sets the processor that will be used to process the query node tree. If\n   * there is any {@link QueryConfigHandler} returned by\n   * {@link #getQueryConfigHandler()}, it will be set on the processor. The\n   * argument can be <code>null</code>, which means that no processor will be\n   * used to process the query node tree.\n   * \n   * @param processor\n   *          the processor that will be used to process the query node tree,\n   *          this argument can be <code>null</code>\n   * \n   * @see #getQueryNodeProcessor()\n   * @see QueryNodeProcessor\n   */\n  public void setQueryNodeProcessor(QueryNodeProcessor processor) {\n    this.processor = processor;\n    this.processor.setQueryConfigHandler(getQueryConfigHandler());\n\n  }\n\n","sourceOld":"  /**\n   * Sets the processor that will be used to process the query node tree. If\n   * there is any {@link QueryConfigHandler} returned by\n   * {@link #getQueryConfigHandler()}, it will be set on the processor. The\n   * argument can be <code>null</code>, which means that no processor will be\n   * used to process the query node tree.\n   * \n   * @param processor\n   *          the processor that will be used to process the query node tree,\n   *          this argument can be <code>null</code>\n   * \n   * @see #getQueryNodeProcessor()\n   * @see QueryNodeProcessor\n   */\n  public void setQueryNodeProcessor(QueryNodeProcessor processor) {\n    this.processor = processor;\n    this.processor.setQueryConfigHandler(getQueryConfigHandler());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}