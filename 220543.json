{"path":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testRandomFewDifferentValues().mjava","commits":[{"id":"e70dbc563c35c0f6b6a0a545e65346166e6e5f2b","date":1561536972,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testRandomFewDifferentValues().mjava","pathOld":"/dev/null","sourceNew":"  // this should trigger low cardinality leaves\n  public void testRandomFewDifferentValues() throws Exception {\n    int numBytesPerDim = TestUtil.nextInt(random(), 2, 30);\n    int numIndexDims = TestUtil.nextInt(random(), 1, 8);\n    int numDataDims = TestUtil.nextInt(random(), numIndexDims, 8);\n\n    int numDocs = atLeast(10000);\n    int cardinality = TestUtil.nextInt(random(), 2, 100);\n    byte[][][] values = new byte[cardinality][numDataDims][numBytesPerDim];\n    for (int i = 0; i < cardinality; i++) {\n      for (int j = 0; j < numDataDims; j++) {\n        random().nextBytes(values[i][j]);\n      }\n    }\n\n    byte[][][] docValues = new byte[numDocs][][];\n    for(int docID = 0; docID < numDocs; docID++) {\n      docValues[docID] = values[random().nextInt(cardinality)];\n    }\n\n    verify(docValues, null, numDataDims, numIndexDims, numBytesPerDim);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testRandomFewDifferentValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testRandomFewDifferentValues().mjava","sourceNew":"  // this should trigger low cardinality leaves\n  public void testRandomFewDifferentValues() throws Exception {\n    int numBytesPerDim = TestUtil.nextInt(random(), 2, 30);\n    int numDataDims = TestUtil.nextInt(random(), 1, PointValues.MAX_DIMENSIONS);\n    int numIndexDims = Math.min(TestUtil.nextInt(random(), 1, numDataDims), PointValues.MAX_INDEX_DIMENSIONS);\n\n    int numDocs = atLeast(10000);\n    int cardinality = TestUtil.nextInt(random(), 2, 100);\n    byte[][][] values = new byte[cardinality][numDataDims][numBytesPerDim];\n    for (int i = 0; i < cardinality; i++) {\n      for (int j = 0; j < numDataDims; j++) {\n        random().nextBytes(values[i][j]);\n      }\n    }\n\n    byte[][][] docValues = new byte[numDocs][][];\n    for(int docID = 0; docID < numDocs; docID++) {\n      docValues[docID] = values[random().nextInt(cardinality)];\n    }\n\n    verify(docValues, null, numDataDims, numIndexDims, numBytesPerDim);\n  }\n\n","sourceOld":"  // this should trigger low cardinality leaves\n  public void testRandomFewDifferentValues() throws Exception {\n    int numBytesPerDim = TestUtil.nextInt(random(), 2, 30);\n    int numIndexDims = TestUtil.nextInt(random(), 1, 8);\n    int numDataDims = TestUtil.nextInt(random(), numIndexDims, 8);\n\n    int numDocs = atLeast(10000);\n    int cardinality = TestUtil.nextInt(random(), 2, 100);\n    byte[][][] values = new byte[cardinality][numDataDims][numBytesPerDim];\n    for (int i = 0; i < cardinality; i++) {\n      for (int j = 0; j < numDataDims; j++) {\n        random().nextBytes(values[i][j]);\n      }\n    }\n\n    byte[][][] docValues = new byte[numDocs][][];\n    for(int docID = 0; docID < numDocs; docID++) {\n      docValues[docID] = values[random().nextInt(cardinality)];\n    }\n\n    verify(docValues, null, numDataDims, numIndexDims, numBytesPerDim);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["e70dbc563c35c0f6b6a0a545e65346166e6e5f2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e70dbc563c35c0f6b6a0a545e65346166e6e5f2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e70dbc563c35c0f6b6a0a545e65346166e6e5f2b"],"e70dbc563c35c0f6b6a0a545e65346166e6e5f2b":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}