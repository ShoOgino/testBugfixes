{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testCreate().mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testCreate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCreate() throws Exception {\n    // no old, no new\n    verifyCreate(\"baseConfigSet1\", \"configSet1\", null, null);\n\n    // no old, new\n    verifyCreate(\"baseConfigSet2\", \"configSet2\",\n        null, ImmutableMap.<String, String>of(\"immutable\", \"true\", \"key1\", \"value1\"));\n\n    // old, no new\n    verifyCreate(\"baseConfigSet3\", \"configSet3\",\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"key2\", \"value2\"), null);\n\n    // old, new\n    verifyCreate(\"baseConfigSet4\", \"configSet4\",\n        ImmutableMap.<String, String>of(\"immutable\", \"true\", \"onlyOld\", \"onlyOldValue\"),\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"onlyNew\", \"onlyNewValue\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e29778bfb04e9115636606cb8f74e23ecba15c7b","date":1536084166,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testCreate().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testCreate().mjava","sourceNew":"  @Test\n  public void testCreate() throws Exception {\n    // no old, no new\n    verifyCreate(null, \"configSet1\", null, null);\n\n    // no old, new\n    verifyCreate(\"baseConfigSet2\", \"configSet2\",\n        null, ImmutableMap.<String, String>of(\"immutable\", \"true\", \"key1\", \"value1\"));\n\n    // old, no new\n    verifyCreate(\"baseConfigSet3\", \"configSet3\",\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"key2\", \"value2\"), null);\n\n    // old, new\n    verifyCreate(\"baseConfigSet4\", \"configSet4\",\n        ImmutableMap.<String, String>of(\"immutable\", \"true\", \"onlyOld\", \"onlyOldValue\"),\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"onlyNew\", \"onlyNewValue\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreate() throws Exception {\n    // no old, no new\n    verifyCreate(\"baseConfigSet1\", \"configSet1\", null, null);\n\n    // no old, new\n    verifyCreate(\"baseConfigSet2\", \"configSet2\",\n        null, ImmutableMap.<String, String>of(\"immutable\", \"true\", \"key1\", \"value1\"));\n\n    // old, no new\n    verifyCreate(\"baseConfigSet3\", \"configSet3\",\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"key2\", \"value2\"), null);\n\n    // old, new\n    verifyCreate(\"baseConfigSet4\", \"configSet4\",\n        ImmutableMap.<String, String>of(\"immutable\", \"true\", \"onlyOld\", \"onlyOldValue\"),\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"onlyNew\", \"onlyNewValue\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01ee5edcdd3cffaab03842feda0c26516290698","date":1601586820,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testCreate().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testCreate().mjava","sourceNew":"  @Test\n  public void testCreate() throws Exception {\n    // no old, no new\n    verifyCreate(null, \"configSet1\", null, null, \"solr\");\n\n    // no old, new\n    verifyCreate(\"baseConfigSet2\", \"configSet2\",\n        null, ImmutableMap.<String, String>of(\"immutable\", \"true\", \"key1\", \"value1\"), \"solr\");\n\n    // old, no new\n    verifyCreate(\"baseConfigSet3\", \"configSet3\",\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"key2\", \"value2\"), null, \"solr\");\n\n    // old, new\n    verifyCreate(\"baseConfigSet4\", \"configSet4\",\n        ImmutableMap.<String, String>of(\"immutable\", \"true\", \"onlyOld\", \"onlyOldValue\"),\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"onlyNew\", \"onlyNewValue\"), \"solr\");\n  }\n\n","sourceOld":"  @Test\n  public void testCreate() throws Exception {\n    // no old, no new\n    verifyCreate(null, \"configSet1\", null, null);\n\n    // no old, new\n    verifyCreate(\"baseConfigSet2\", \"configSet2\",\n        null, ImmutableMap.<String, String>of(\"immutable\", \"true\", \"key1\", \"value1\"));\n\n    // old, no new\n    verifyCreate(\"baseConfigSet3\", \"configSet3\",\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"key2\", \"value2\"), null);\n\n    // old, new\n    verifyCreate(\"baseConfigSet4\", \"configSet4\",\n        ImmutableMap.<String, String>of(\"immutable\", \"true\", \"onlyOld\", \"onlyOldValue\"),\n        ImmutableMap.<String, String>of(\"immutable\", \"false\", \"onlyNew\", \"onlyNewValue\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c01ee5edcdd3cffaab03842feda0c26516290698":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c01ee5edcdd3cffaab03842feda0c26516290698"]},"commit2Childs":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"c01ee5edcdd3cffaab03842feda0c26516290698":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["c01ee5edcdd3cffaab03842feda0c26516290698"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}