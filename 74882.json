{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%4) {\n      case 0:\n        writer2.addIndexesNoOptimize(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexesNoOptimize(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%4) {\n      case 0:\n        writer2.addIndexesNoOptimize(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexesNoOptimize(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%4) {\n      case 0:\n        writer2.addIndexesNoOptimize(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexesNoOptimize(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":null,"sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"85a883878c0af761245ab048babc63d099f835f3":[],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["85a883878c0af761245ab048babc63d099f835f3","fd4c4b2a55a46d2c45e3de4514f08e33215caa21","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"]},"heads":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}