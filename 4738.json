{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return this.getBoost() == other.getBoost()\n            && this.func.equals(other.func);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return this.getBoost() == other.getBoost()\n            && this.func.equals(other.func);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdd0e99daabe8cd52cd4d7755679337bede8abe0","date":1425571318,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return super.equals(o)\n            && this.func.equals(other.func);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return this.getBoost() == other.getBoost()\n            && this.func.equals(other.func);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return super.equals(o)\n            && this.func.equals(other.func);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return this.getBoost() == other.getBoost()\n            && this.func.equals(other.func);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           func.equals(((FunctionQuery) other).func);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return super.equals(o)\n            && this.func.equals(other.func);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           func.equals(((FunctionQuery) other).func);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!FunctionQuery.class.isInstance(o)) return false;\n    FunctionQuery other = (FunctionQuery)o;\n    return super.equals(o)\n            && this.func.equals(other.func);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["fdd0e99daabe8cd52cd4d7755679337bede8abe0","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fdd0e99daabe8cd52cd4d7755679337bede8abe0","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}