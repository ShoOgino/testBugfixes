{"path":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","commits":[{"id":"f0ccb38525d59e4082f912797fe4d0a7d9bead43","date":1245100309,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8","date":1254593002,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d16275d75dfe0b780ed62df4c811d083187c71a","date":1268583591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["3741149a89925c02f14dbeef8365b896798d91fc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d16275d75dfe0b780ed62df4c811d083187c71a"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}