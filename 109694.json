{"path":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialPrefixTreeFieldType#checkSchemaField(SchemaField).mjava","commits":[{"id":"6023012e4b24619ad41b644a479b6ad4ad2a90c8","date":1600707428,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialPrefixTreeFieldType#checkSchemaField(SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   *\n   * @see #FIELD_TYPE_INVARIANTS\n   */\n  @Override\n  public void checkSchemaField(final SchemaField field) {\n    super.checkSchemaField(field);\n\n    if (! field.omitNorms()) {\n      final String message = String.format(Locale.ROOT, \"%s of type %s is incompatible with omitNorms=false; hardcoded \" +\n                      \"behavior is omitNorms=true.  Remove specification in schema\", field.getName(), getClass().getSimpleName());\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, message);\n    }\n    if (field.indexOptions() != IndexOptions.DOCS) {\n      final String message = String.format(Locale.ROOT,\n              \"%s of type %s is incompatible with termFreq or position storage.  Remove specification in schema.\",\n              field.getName(), getClass().getSimpleName());\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, message);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6023012e4b24619ad41b644a479b6ad4ad2a90c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6023012e4b24619ad41b644a479b6ad4ad2a90c8"]},"commit2Childs":{"6023012e4b24619ad41b644a479b6ad4ad2a90c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6023012e4b24619ad41b644a479b6ad4ad2a90c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}