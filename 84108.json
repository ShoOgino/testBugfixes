{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","commits":[{"id":"6b538dc75c275415cfba029900b48590b36b3b68","date":1339713606,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(\"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c70cdb81dc660d90f9d0664dd91b473b7e66563","date":1341679310,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(\"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(\"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(\"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(\"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a16b40feb4e6e0d55c1716733bde48296bedd20","date":1400540388,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      if (acceptDocs != null) {\n        // Skip deleted docs:\n        while (acceptDocs.get(start) == false) {\n          start++;\n        }\n      }\n      int end = parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", docBase+start, docBase+end)\n      );\n    }\n\n","sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d580256eea4ca9a38636dd2ab5ed1c51f2dfea0","date":1400749734,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      if (acceptDocs != null) {\n        // Skip deleted docs:\n        while (acceptDocs.get(start) == false) {\n          start++;\n        }\n      }\n      int end = parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", docBase+start, docBase+end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return Explanation.match(score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return new ComplexExplanation(\n          true, score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5c16d494b4cccbc6f3aa00f05421575bdb11da7","date":1464182657,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":null,"sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return Explanation.match(score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":null,"sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return Explanation.match(score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":4,"author":"Mike McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":null,"sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return Explanation.match(score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#explain(int).mjava","sourceNew":null,"sourceOld":"    public Explanation explain(int docBase) throws IOException {\n      int start = docBase + prevParentDoc + 1; // +1 b/c prevParentDoc is previous parent doc\n      int end = docBase + parentDoc - 1; // -1 b/c parentDoc is parent doc\n      return Explanation.match(score(), String.format(Locale.ROOT, \"Score based on child doc range from %d to %d\", start, end)\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a16b40feb4e6e0d55c1716733bde48296bedd20":["2acf500f78aa12b92e371fd89c719291986b6b90"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","e5c16d494b4cccbc6f3aa00f05421575bdb11da7"],"2acf500f78aa12b92e371fd89c719291986b6b90":["6b538dc75c275415cfba029900b48590b36b3b68","9c70cdb81dc660d90f9d0664dd91b473b7e66563"],"83870855d82aba6819217abeff5a40779dbb28b4":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","0e121d43b5a10f2df530f406f935102656e9c4e8"],"e5c16d494b4cccbc6f3aa00f05421575bdb11da7":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","0e121d43b5a10f2df530f406f935102656e9c4e8"],"9c70cdb81dc660d90f9d0664dd91b473b7e66563":["6b538dc75c275415cfba029900b48590b36b3b68"],"46d8ada1fff8d18cb197c38c7983225162599948":["6b538dc75c275415cfba029900b48590b36b3b68","2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["6b538dc75c275415cfba029900b48590b36b3b68","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6b538dc75c275415cfba029900b48590b36b3b68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["2acf500f78aa12b92e371fd89c719291986b6b90"],"7d580256eea4ca9a38636dd2ab5ed1c51f2dfea0":["0a16b40feb4e6e0d55c1716733bde48296bedd20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"0a16b40feb4e6e0d55c1716733bde48296bedd20":["7d580256eea4ca9a38636dd2ab5ed1c51f2dfea0"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2acf500f78aa12b92e371fd89c719291986b6b90":["0a16b40feb4e6e0d55c1716733bde48296bedd20","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"e5c16d494b4cccbc6f3aa00f05421575bdb11da7":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"9c70cdb81dc660d90f9d0664dd91b473b7e66563":["2acf500f78aa12b92e371fd89c719291986b6b90"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b538dc75c275415cfba029900b48590b36b3b68"],"6b538dc75c275415cfba029900b48590b36b3b68":["2acf500f78aa12b92e371fd89c719291986b6b90","9c70cdb81dc660d90f9d0664dd91b473b7e66563","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","e5c16d494b4cccbc6f3aa00f05421575bdb11da7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7d580256eea4ca9a38636dd2ab5ed1c51f2dfea0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","7d580256eea4ca9a38636dd2ab5ed1c51f2dfea0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}