{"path":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","commits":[{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File managedSchemaFile = new File(loader.getConfigDir(), resourceName);\n    OutputStreamWriter writer = null;\n    try {\n      File parentDir = managedSchemaFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      final FileOutputStream out = new FileOutputStream(managedSchemaFile);\n      out.write(content);\n      log.info(\"Upgraded to managed schema at \" + managedSchemaFile.getPath());\n    } catch (IOException e) {\n      final String msg = \"Error persisting managed schema \" + managedSchemaFile;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(writer);\n      try {\n        FileUtils.sync(managedSchemaFile);\n      } catch (IOException e) {\n        final String msg = \"Error syncing the managed schema file \" + managedSchemaFile;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0426db639e5d76d8bfcea5969a4442c88debdae","date":1420472697,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    OutputStreamWriter writer = null;\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      final FileOutputStream out = new FileOutputStream(confFile);\n      out.write(content);\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(writer);\n      try {\n        FileUtils.sync(confFile);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File managedSchemaFile = new File(loader.getConfigDir(), resourceName);\n    OutputStreamWriter writer = null;\n    try {\n      File parentDir = managedSchemaFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      final FileOutputStream out = new FileOutputStream(managedSchemaFile);\n      out.write(content);\n      log.info(\"Upgraded to managed schema at \" + managedSchemaFile.getPath());\n    } catch (IOException e) {\n      final String msg = \"Error persisting managed schema \" + managedSchemaFile;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(writer);\n      try {\n        FileUtils.sync(managedSchemaFile);\n      } catch (IOException e) {\n        final String msg = \"Error syncing the managed schema file \" + managedSchemaFile;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8238b792beed1cfcb258424c4176d309e89c769","date":1424978043,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    OutputStream out = null;\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      out = new FileOutputStream(confFile);\n      out.write(content);\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(out);\n      try {\n        FileUtils.sync(confFile);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    OutputStreamWriter writer = null;\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      final FileOutputStream out = new FileOutputStream(confFile);\n      out.write(content);\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(writer);\n      try {\n        FileUtils.sync(confFile);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"865041f4c2a5e289f088894702fccf527ff1225c","date":1425042304,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    OutputStream out = null;\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      out = new FileOutputStream(confFile);\n      out.write(content);\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(out);\n      try {\n        FileUtils.sync(confFile);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    OutputStreamWriter writer = null;\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      final FileOutputStream out = new FileOutputStream(confFile);\n      out.write(content);\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(writer);\n      try {\n        FileUtils.sync(confFile);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99d6782cf9de8c5ffeb8d0b0f103b578205af068","date":1566878682,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile)) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile)) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile)) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if (!parentDir.isDirectory()) {\n        if (!parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if ( ! parentDir.isDirectory()) {\n        if ( ! parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#persistConfLocally(SolrResourceLoader,String,byte[]).mjava","sourceNew":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if (!parentDir.isDirectory()) {\n        if (!parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile {}\", resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void persistConfLocally(SolrResourceLoader loader, String resourceName, byte[] content) {\n    // Persist locally\n    File confFile = new File(loader.getConfigDir(), resourceName);\n    try {\n      File parentDir = confFile.getParentFile();\n      if (!parentDir.isDirectory()) {\n        if (!parentDir.mkdirs()) {\n          final String msg = \"Can't create managed schema directory \" + parentDir.getAbsolutePath();\n          log.error(msg);\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n        }\n      }\n      try (OutputStream out = new FileOutputStream(confFile);) {\n        out.write(content);\n      }\n      log.info(\"Written confile \" + resourceName);\n    } catch (IOException e) {\n      final String msg = \"Error persisting conf file \" + resourceName;\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      try {\n        IOUtils.fsync(confFile.toPath(), false);\n      } catch (IOException e) {\n        final String msg = \"Error syncing conf file \" + resourceName;\n        log.error(msg, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c0426db639e5d76d8bfcea5969a4442c88debdae","865041f4c2a5e289f088894702fccf527ff1225c"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["c44cc06c26e456fe9c215072b79fce30babe3975"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["865041f4c2a5e289f088894702fccf527ff1225c"],"140be51d03394488536f4aacedace29f9b318347":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c0426db639e5d76d8bfcea5969a4442c88debdae":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"865041f4c2a5e289f088894702fccf527ff1225c":["e8238b792beed1cfcb258424c4176d309e89c769"],"c44cc06c26e456fe9c215072b79fce30babe3975":["99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"e8238b792beed1cfcb258424c4176d309e89c769":["c0426db639e5d76d8bfcea5969a4442c88debdae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"],"b0b597c65628ca9e73913a07e81691f8229bae35":["99d6782cf9de8c5ffeb8d0b0f103b578205af068","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"531fe719c7218235a679452eb3d137bfd8fc6af1":["c0426db639e5d76d8bfcea5969a4442c88debdae"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["140be51d03394488536f4aacedace29f9b318347"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0426db639e5d76d8bfcea5969a4442c88debdae":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e8238b792beed1cfcb258424c4176d309e89c769"],"865041f4c2a5e289f088894702fccf527ff1225c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"c44cc06c26e456fe9c215072b79fce30babe3975":["954ae83b7dfacaa33d48ea056448ae11f7745a93","b0b597c65628ca9e73913a07e81691f8229bae35"],"e8238b792beed1cfcb258424c4176d309e89c769":["865041f4c2a5e289f088894702fccf527ff1225c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}