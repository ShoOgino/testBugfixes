{"path":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","commits":[{"id":"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc","date":1359570667,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":null,"sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":null,"sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["a45bec74b98f6fc05f52770cfb425739e6563960"],"61d5f95d14e5b9b046998c51e16709a398c15226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"a45bec74b98f6fc05f52770cfb425739e6563960":["1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a45bec74b98f6fc05f52770cfb425739e6563960","d33e19a97046248623a7591aeaa6547233fd15e2"],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"a45bec74b98f6fc05f52770cfb425739e6563960":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["61d5f95d14e5b9b046998c51e16709a398c15226","1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["61d5f95d14e5b9b046998c51e16709a398c15226","a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}