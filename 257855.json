{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = newDirectory(random);\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    Directory dir = newDirectory(random);\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = newDirectory(random);\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    Directory dir = newDirectory(random);\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8797b4584f9c10520b8f985903790413b682f776","date":1288950293,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionWithCachingTokenFilter().mjava","sourceNew":null,"sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionWithCachingTokenFilter() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    Analyzer analyzer = new MockAnalyzer();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    TokenStream stream = new CachingTokenFilter(analyzer.tokenStream(\"field\", new StringReader(\"abcd   \")));\n    Field f = new Field(\"field\", stream, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(8, termOffsets[1].getStartOffset());\n    assertEquals(12, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8797b4584f9c10520b8f985903790413b682f776":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["1f653cfcf159baeaafe5d01682a911e95bba4012","8797b4584f9c10520b8f985903790413b682f776"],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","8797b4584f9c10520b8f985903790413b682f776"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8797b4584f9c10520b8f985903790413b682f776"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8797b4584f9c10520b8f985903790413b682f776":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["8797b4584f9c10520b8f985903790413b682f776","85a883878c0af761245ab048babc63d099f835f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"85a883878c0af761245ab048babc63d099f835f3":[],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}