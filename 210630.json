{"path":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","commits":[{"id":"b785b1f61f30f94f0708b16d7f2eee3ee23194ef","date":1285384789,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      advance(doc);\n      boolean matched = this.doc == doc;\n      this.doc = doc;\n\n      float sc = matched ? score() : 0;\n      double dist = dist(latVals.doubleVal(doc), lonVals.doubleVal(doc));\n\n      String description = SpatialDistanceQuery.this.toString();\n\n      Explanation result = new ComplexExplanation\n        (this.doc == doc, sc, description +  \" product of:\");\n      // result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.explain(doc)+\",\"+lonVals.explain(doc)));\n      result.addDetail(new Explanation((float)dist, \"hsin(\"+latVals.doubleVal(doc)+\",\"+lonVals.doubleVal(doc)));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef"],"c26f00b574427b55127e869b935845554afde1fa":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef"],"b785b1f61f30f94f0708b16d7f2eee3ee23194ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b785b1f61f30f94f0708b16d7f2eee3ee23194ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"b785b1f61f30f94f0708b16d7f2eee3ee23194ef":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}