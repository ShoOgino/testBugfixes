{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is closed\n   */\n  protected final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is closed\n   */\n  protected final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c469c8957ea01f0b79204fcdc3335ead0133d19","date":1354485477,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   * closed\n   * @param failIfClosing if true, also fail when\n   * {@code IndexWriter} is in the process of closing\n   * ({@code closing=true}) but not yet done closing ({@code\n   * closed=false})\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is closed\n   */\n  protected final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ce1418603d4661474b14c32f6c593dedadb1863","date":1354489198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @param failIfClosing if true, also fail when\n   * {@code IndexWriter} is in the process of closing\n   * ({@code closing=true}) but not yet done closing ({@code\n   * closed=false})\n   * @throws AlreadyClosedException if this IndexWriter is\n   * closed\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   * closed\n   * @param failIfClosing if true, also fail when\n   * {@code IndexWriter} is in the process of closing\n   * ({@code closing=true}) but not yet done closing ({@code\n   * closed=false})\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link AlreadyClosedException} if this\n   * IndexWriter has been closed or is in the process of closing.\n   * \n   * @param failIfClosing\n   *          if true, also fail when {@code IndexWriter} is in the process of\n   *          closing ({@code closing=true}) but not yet done closing (\n   *          {@code closed=false})\n   * @throws AlreadyClosedException\n   *           if this IndexWriter is closed or in the process of closing\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @param failIfClosing if true, also fail when\n   * {@code IndexWriter} is in the process of closing\n   * ({@code closing=true}) but not yet done closing ({@code\n   * closed=false})\n   * @throws AlreadyClosedException if this IndexWriter is\n   * closed\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link AlreadyClosedException} if this\n   * IndexWriter has been closed or is in the process of closing.\n   * \n   * @param failIfClosing\n   *          if true, also fail when {@code IndexWriter} is in the process of\n   *          closing ({@code closing=true}) but not yet done closing (\n   *          {@code closed=false})\n   * @throws AlreadyClosedException\n   *           if this IndexWriter is closed or in the process of closing\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is closed\n   */\n  protected final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"949847c0040cd70a68222d526cb0da7bf6cbb3c2","date":1410997182,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link AlreadyClosedException} if this\n   * IndexWriter has been closed or is in the process of closing.\n   * \n   * @param failIfClosing\n   *          if true, also fail when {@code IndexWriter} is in the process of\n   *          closing ({@code closing=true}) but not yet done closing (\n   *          {@code closed=false})\n   * @throws AlreadyClosedException\n   *           if this IndexWriter is closed or in the process of closing\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\", tragedy);\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link AlreadyClosedException} if this\n   * IndexWriter has been closed or is in the process of closing.\n   * \n   * @param failIfClosing\n   *          if true, also fail when {@code IndexWriter} is in the process of\n   *          closing ({@code closing=true}) but not yet done closing (\n   *          {@code closed=false})\n   * @throws AlreadyClosedException\n   *           if this IndexWriter is closed or in the process of closing\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"845b760a99e5f369fcd0a5d723a87b8def6a3f56","date":1521117993,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link AlreadyClosedException} if this\n   * IndexWriter has been closed or is in the process of closing.\n   * \n   * @param failIfClosing\n   *          if true, also fail when {@code IndexWriter} is in the process of\n   *          closing ({@code closing=true}) but not yet done closing (\n   *          {@code closed=false})\n   * @throws AlreadyClosedException\n   *           if this IndexWriter is closed or in the process of closing\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\", tragedy.get());\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link AlreadyClosedException} if this\n   * IndexWriter has been closed or is in the process of closing.\n   * \n   * @param failIfClosing\n   *          if true, also fail when {@code IndexWriter} is in the process of\n   *          closing ({@code closing=true}) but not yet done closing (\n   *          {@code closed=false})\n   * @throws AlreadyClosedException\n   *           if this IndexWriter is closed or in the process of closing\n   */\n  protected final void ensureOpen(boolean failIfClosing) throws AlreadyClosedException {\n    if (closed || (failIfClosing && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\", tragedy);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"845b760a99e5f369fcd0a5d723a87b8def6a3f56":["949847c0040cd70a68222d526cb0da7bf6cbb3c2"],"3c469c8957ea01f0b79204fcdc3335ead0133d19":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ce1418603d4661474b14c32f6c593dedadb1863":["3c469c8957ea01f0b79204fcdc3335ead0133d19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b47e1512544568a22b82c96169d466fae8a4b79e"],"b47e1512544568a22b82c96169d466fae8a4b79e":["4ce1418603d4661474b14c32f6c593dedadb1863"],"949847c0040cd70a68222d526cb0da7bf6cbb3c2":["b47e1512544568a22b82c96169d466fae8a4b79e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["845b760a99e5f369fcd0a5d723a87b8def6a3f56"]},"commit2Childs":{"845b760a99e5f369fcd0a5d723a87b8def6a3f56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3c469c8957ea01f0b79204fcdc3335ead0133d19":["4ce1418603d4661474b14c32f6c593dedadb1863"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3c469c8957ea01f0b79204fcdc3335ead0133d19","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4ce1418603d4661474b14c32f6c593dedadb1863":["b47e1512544568a22b82c96169d466fae8a4b79e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"b47e1512544568a22b82c96169d466fae8a4b79e":["407687e67faf6e1f02a211ca078d8e3eed631027","949847c0040cd70a68222d526cb0da7bf6cbb3c2"],"949847c0040cd70a68222d526cb0da7bf6cbb3c2":["845b760a99e5f369fcd0a5d723a87b8def6a3f56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}