{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","commits":[{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"/dev/null","sourceNew":"  public MockRAMDirectory newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    MockRAMDirectory dir = new MockRAMDirectory();\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = LuceneTestCaseJ4.newDirectoryImpl(TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":"  public MockRAMDirectory newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    MockRAMDirectory dir = new MockRAMDirectory();\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"deb4fe59e35ea6bac0ee825142d40a04846fe573","date":1282737351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = LuceneTestCaseJ4.newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":"  public MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = LuceneTestCaseJ4.newDirectoryImpl(TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c822aea0eb83535d40afe098470b47aff8d07fe","date":1282925700,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Dictionary instance. Use this when the test does not\n   * care about the specific Directory implementation (most tests).\n   * <p>\n   * The Directory is wrapped with {@link MockDirectoryWrapper}.\n   * By default this means it will be picky, such as ensuring that you\n   * properly close it and all open files in your test. It will emulate\n   * some features of Windows, such as not allowing open files to be\n   * overwritten.\n   */\n  public MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = LuceneTestCaseJ4.newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":"  public MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = LuceneTestCaseJ4.newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9","d19974432be9aed28ee7dca73bdf01d139e763a9","d19974432be9aed28ee7dca73bdf01d139e763a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Dictionary instance. Use this when the test does not\n   * care about the specific Directory implementation (most tests).\n   * <p>\n   * The Directory is wrapped with {@link MockDirectoryWrapper}.\n   * By default this means it will be picky, such as ensuring that you\n   * properly close it and all open files in your test. It will emulate\n   * some features of Windows, such as not allowing open files to be\n   * overwritten.\n   */\n  public MockDirectoryWrapper newDirectory() throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = LuceneTestCaseJ4.newDirectoryImpl(random, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Returns a new Dictionary instance. Use this when the test does not\n   * care about the specific Directory implementation (most tests).\n   * <p>\n   * The Directory is wrapped with {@link MockDirectoryWrapper}.\n   * By default this means it will be picky, such as ensuring that you\n   * properly close it and all open files in your test. It will emulate\n   * some features of Windows, such as not allowing open files to be\n   * overwritten.\n   */\n  public MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = LuceneTestCaseJ4.newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    StackTraceElement[] stack = new Exception().getStackTrace();\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, stack);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"/dev/null","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","sourceOld":"  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["53a31399f2471493d67b19a95c028a74e0113b6a"],"5c822aea0eb83535d40afe098470b47aff8d07fe":["deb4fe59e35ea6bac0ee825142d40a04846fe573"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["43b04c27924fe393e38e9f0986e32c634f261859","53a31399f2471493d67b19a95c028a74e0113b6a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"53a31399f2471493d67b19a95c028a74e0113b6a":["43b04c27924fe393e38e9f0986e32c634f261859"],"deb4fe59e35ea6bac0ee825142d40a04846fe573":["a05409176bd65129d67a785ee70e881e238a9aef"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["5c822aea0eb83535d40afe098470b47aff8d07fe"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"5c822aea0eb83535d40afe098470b47aff8d07fe":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"43b04c27924fe393e38e9f0986e32c634f261859":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","53a31399f2471493d67b19a95c028a74e0113b6a"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"53a31399f2471493d67b19a95c028a74e0113b6a":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"deb4fe59e35ea6bac0ee825142d40a04846fe573":["5c822aea0eb83535d40afe098470b47aff8d07fe"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a05409176bd65129d67a785ee70e881e238a9aef":["deb4fe59e35ea6bac0ee825142d40a04846fe573"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}