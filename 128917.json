{"path":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#registerListener(ListenerConfig).mjava","commits":[{"id":"85a757d77b8686d261b25acf542b0037bf65d8fa","date":1367436352,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#registerListener(ListenerConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#registerListener(ListenerConfig,CoreContainer).mjava","sourceNew":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<LogRecord>(cfg.size);\n    handler = new RecordHandler(this);\n    if(cfg.threshold != null) {\n      handler.setLevel(Level.parse(cfg.threshold));\n    }\n    else {\n      handler.setLevel(Level.WARNING);\n    }\n    \n    Logger log = LogManager.getLogManager().getLogger(\"\");\n    log.addHandler(handler);\n  }\n\n","sourceOld":"  @Override\n  public void registerListener(ListenerConfig cfg, CoreContainer container) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<LogRecord>(cfg.size);\n    handler = new RecordHandler(this);\n    if(cfg.threshold != null) {\n      handler.setLevel(Level.parse(cfg.threshold));\n    }\n    else {\n      handler.setLevel(Level.WARNING);\n    }\n    \n    Logger log = LogManager.getLogManager().getLogger(\"\");\n    log.addHandler(handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#registerListener(ListenerConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#registerListener(ListenerConfig).mjava","sourceNew":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<>(cfg.size);\n    handler = new RecordHandler(this);\n    if(cfg.threshold != null) {\n      handler.setLevel(Level.parse(cfg.threshold));\n    }\n    else {\n      handler.setLevel(Level.WARNING);\n    }\n    \n    Logger log = LogManager.getLogManager().getLogger(\"\");\n    log.addHandler(handler);\n  }\n\n","sourceOld":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<LogRecord>(cfg.size);\n    handler = new RecordHandler(this);\n    if(cfg.threshold != null) {\n      handler.setLevel(Level.parse(cfg.threshold));\n    }\n    else {\n      handler.setLevel(Level.WARNING);\n    }\n    \n    Logger log = LogManager.getLogManager().getLogger(\"\");\n    log.addHandler(handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["85a757d77b8686d261b25acf542b0037bf65d8fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a757d77b8686d261b25acf542b0037bf65d8fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a757d77b8686d261b25acf542b0037bf65d8fa"],"85a757d77b8686d261b25acf542b0037bf65d8fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}