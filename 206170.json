{"path":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","commits":[{"id":"4bb5e36693e1b5167f92325b87847a0d8bf100f5","date":1418983514,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    ConfigSolr config = ConfigSolr.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    ConfigSolr absConfig = ConfigSolr.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    ConfigSolr config = ConfigSolr.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    ConfigSolr absConfig = ConfigSolr.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    ConfigSolr config = ConfigSolr.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    ConfigSolr absConfig = ConfigSolr.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9dc6df6d3cec2cda16c96f408123470a6c069a29","date":1447321406,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.toPath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd7a2b4785d366164d3cd69f9948de6ff34d23a1","date":1500527874,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory);\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.toAbsolutePath().toString()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.toAbsolutePath().toString())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.toPath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d301cb76d81de80d07b44735622a04d49ed938eb","date":1500536382,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory);\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.toAbsolutePath().toString()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.toAbsolutePath().toString())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.toPath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory);\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.toAbsolutePath().toString()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.toAbsolutePath().toString())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.toPath());\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.getAbsolutePath()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.getAbsolutePath())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testRootDirectoryResolution().mjava","sourceNew":"  @Test\n  public void testRootDirectoryResolution() {\n    NodeConfig config = SolrXmlConfig.fromString(solrHomeDirectory, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.toAbsolutePath().toString()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(solrHomeDirectory, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.toAbsolutePath().toString())));\n  }\n\n","sourceOld":"  @Test\n  public void testRootDirectoryResolution() {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory);\n\n    NodeConfig config = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">relative</str></solr>\");\n    assertThat(config.getCoreRootDirectory().toString(), containsString(solrHomeDirectory.toAbsolutePath().toString()));\n\n    NodeConfig absConfig = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"coreRootDirectory\\\">/absolute</str></solr>\");\n    assertThat(absConfig.getCoreRootDirectory().toString(), not(containsString(solrHomeDirectory.toAbsolutePath().toString())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d301cb76d81de80d07b44735622a04d49ed938eb":["a626ec4d1c92e59fe390724d6220081047b03ce7","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4bb5e36693e1b5167f92325b87847a0d8bf100f5","e15199583d3635cb940942caed05132dd6c4c7c6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["d301cb76d81de80d07b44735622a04d49ed938eb"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["9dc6df6d3cec2cda16c96f408123470a6c069a29"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["a626ec4d1c92e59fe390724d6220081047b03ce7","d301cb76d81de80d07b44735622a04d49ed938eb"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"9dc6df6d3cec2cda16c96f408123470a6c069a29":["e15199583d3635cb940942caed05132dd6c4c7c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["4bb5e36693e1b5167f92325b87847a0d8bf100f5"],"4bb5e36693e1b5167f92325b87847a0d8bf100f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d301cb76d81de80d07b44735622a04d49ed938eb":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["d301cb76d81de80d07b44735622a04d49ed938eb","936cdd5882761db3b844afd6f84ab81cbb011a75","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4bb5e36693e1b5167f92325b87847a0d8bf100f5"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["d301cb76d81de80d07b44735622a04d49ed938eb"],"9dc6df6d3cec2cda16c96f408123470a6c069a29":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"4bb5e36693e1b5167f92325b87847a0d8bf100f5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9dc6df6d3cec2cda16c96f408123470a6c069a29"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}