{"path":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexOutput#writeBytes(byte[],int).mjava","commits":[{"id":"87fc6f159522f12e67225691468cbf3d11be8590","date":1136423057,"type":0,"author":"Andreas Vajda","isMerge":false,"pathNew":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexOutput#writeBytes(byte[],int).mjava","pathOld":"/dev/null","sourceNew":"    public void writeBytes(byte[] b, int len) throws IOException {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(directory);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(directory);\n            blockPos = 0;\n        }\n\n        if (len > 0) {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d7bd1340fdceda1dbe4ce3dbb1f47d6a8ef936a","date":1173998152,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexOutput#writeBytes(byte[],int,int).mjava","pathOld":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexOutput#writeBytes(byte[],int).mjava","sourceNew":"    public void writeBytes(byte[] b, int offset, int len) throws IOException {\n        int blockPos = (int) (position & BLOCK_MASK);\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(directory);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(directory);\n            blockPos = 0;\n        }\n\n        if (len > 0) {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","sourceOld":"    public void writeBytes(byte[] b, int len) throws IOException {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(directory);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(directory);\n            blockPos = 0;\n        }\n\n        if (len > 0) {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d7bd1340fdceda1dbe4ce3dbb1f47d6a8ef936a":["87fc6f159522f12e67225691468cbf3d11be8590"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87fc6f159522f12e67225691468cbf3d11be8590":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d7bd1340fdceda1dbe4ce3dbb1f47d6a8ef936a"]},"commit2Childs":{"0d7bd1340fdceda1dbe4ce3dbb1f47d6a8ef936a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87fc6f159522f12e67225691468cbf3d11be8590"],"87fc6f159522f12e67225691468cbf3d11be8590":["0d7bd1340fdceda1dbe4ce3dbb1f47d6a8ef936a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}