{"path":"src/java/org/apache/lucene/search/function/DocValues#compute().mjava","commits":[{"id":"3f74570911bfdb9f7b01948745dcd67c69676c0e","date":1181060975,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/DocValues#compute().mjava","pathOld":"/dev/null","sourceNew":"  // compute optional values\n  private void compute () {\n    if (computed) {\n      return;\n    }\n    minVal = Float.MAX_VALUE;\n    maxVal = 0;\n    float sum = 0;\n    for (int i=0; i<nVals; i++) {\n      float val = floatVal(i); \n      sum += val;\n      minVal = Math.min(minVal,val);\n      maxVal = Math.max(maxVal,val);\n    }\n    avgVal = sum / nVals;\n    computed = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b349dc32b64921c9a2525f14d5dd356e6c1c6a22"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e385df0c8e079b3d13c7ccb0b221b5145d48cfd2","date":1197497193,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/DocValues#compute().mjava","pathOld":"src/java/org/apache/lucene/search/function/DocValues#compute().mjava","sourceNew":"  // compute optional values\n  private void compute () {\n    if (computed) {\n      return;\n    }\n    minVal = Float.MAX_VALUE;\n    maxVal = 0;\n    float sum = 0;\n    int n = 0;\n    while (true) {\n      float val;\n      try {\n        val = floatVal(n);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        break;\n      }\n      sum += val;\n      minVal = Math.min(minVal,val);\n      maxVal = Math.max(maxVal,val);\n    }\n    avgVal = sum / n;\n    computed = true;\n  }\n\n","sourceOld":"  // compute optional values\n  private void compute () {\n    if (computed) {\n      return;\n    }\n    minVal = Float.MAX_VALUE;\n    maxVal = 0;\n    float sum = 0;\n    for (int i=0; i<nVals; i++) {\n      float val = floatVal(i); \n      sum += val;\n      minVal = Math.min(minVal,val);\n      maxVal = Math.max(maxVal,val);\n    }\n    avgVal = sum / nVals;\n    computed = true;\n  }\n\n","bugFix":null,"bugIntro":["b349dc32b64921c9a2525f14d5dd356e6c1c6a22"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b349dc32b64921c9a2525f14d5dd356e6c1c6a22","date":1245163758,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/DocValues#compute().mjava","pathOld":"src/java/org/apache/lucene/search/function/DocValues#compute().mjava","sourceNew":"  // compute optional values\n  private void compute() {\n    if (computed) {\n      return;\n    }\n    float sum = 0;\n    int n = 0;\n    while (true) {\n      float val;\n      try {\n        val = floatVal(n);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        break;\n      }\n      sum += val;\n      minVal = Float.isNaN(minVal) ? val : Math.min(minVal, val);\n      maxVal = Float.isNaN(maxVal) ? val : Math.max(maxVal, val);\n      ++n;\n    }\n\n    avgVal = n == 0 ? Float.NaN : sum / n;\n    computed = true;\n  }\n\n","sourceOld":"  // compute optional values\n  private void compute () {\n    if (computed) {\n      return;\n    }\n    minVal = Float.MAX_VALUE;\n    maxVal = 0;\n    float sum = 0;\n    int n = 0;\n    while (true) {\n      float val;\n      try {\n        val = floatVal(n);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        break;\n      }\n      sum += val;\n      minVal = Math.min(minVal,val);\n      maxVal = Math.max(maxVal,val);\n    }\n    avgVal = sum / n;\n    computed = true;\n  }\n\n","bugFix":["3f74570911bfdb9f7b01948745dcd67c69676c0e","e385df0c8e079b3d13c7ccb0b221b5145d48cfd2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/function/DocValues#compute().mjava","pathOld":"src/java/org/apache/lucene/search/function/DocValues#compute().mjava","sourceNew":"  // compute optional values\n  private void compute() {\n    if (computed) {\n      return;\n    }\n    float sum = 0;\n    int n = 0;\n    while (true) {\n      float val;\n      try {\n        val = floatVal(n);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        break;\n      }\n      sum += val;\n      minVal = Float.isNaN(minVal) ? val : Math.min(minVal, val);\n      maxVal = Float.isNaN(maxVal) ? val : Math.max(maxVal, val);\n      ++n;\n    }\n\n    avgVal = n == 0 ? Float.NaN : sum / n;\n    computed = true;\n  }\n\n","sourceOld":"  // compute optional values\n  private void compute() {\n    if (computed) {\n      return;\n    }\n    float sum = 0;\n    int n = 0;\n    while (true) {\n      float val;\n      try {\n        val = floatVal(n);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        break;\n      }\n      sum += val;\n      minVal = Float.isNaN(minVal) ? val : Math.min(minVal, val);\n      maxVal = Float.isNaN(maxVal) ? val : Math.max(maxVal, val);\n      ++n;\n    }\n\n    avgVal = n == 0 ? Float.NaN : sum / n;\n    computed = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b349dc32b64921c9a2525f14d5dd356e6c1c6a22":["e385df0c8e079b3d13c7ccb0b221b5145d48cfd2"],"e385df0c8e079b3d13c7ccb0b221b5145d48cfd2":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b349dc32b64921c9a2525f14d5dd356e6c1c6a22"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"b349dc32b64921c9a2525f14d5dd356e6c1c6a22":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e385df0c8e079b3d13c7ccb0b221b5145d48cfd2":["b349dc32b64921c9a2525f14d5dd356e6c1c6a22"],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["e385df0c8e079b3d13c7ccb0b221b5145d48cfd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}