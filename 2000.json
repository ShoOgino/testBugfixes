{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene47WordDelimiterFilter#Lucene47WordDelimiterFilter(TokenStream,byte[],int,CharArraySet).mjava","commits":[{"id":"c85fa43e6918808743daa7847ba0264373af687f","date":1395166336,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene47WordDelimiterFilter#Lucene47WordDelimiterFilter(TokenStream,byte[],int,CharArraySet).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#WordDelimiterFilter(TokenStream,byte[],int,CharArraySet).mjava","sourceNew":"  /**\n   * Creates a new WordDelimiterFilter\n   *\n   * @param in TokenStream to be filtered\n   * @param charTypeTable table containing character types\n   * @param configurationFlags Flags configuring the filter\n   * @param protWords If not null is the set of tokens to protect from being delimited\n   */\n  public Lucene47WordDelimiterFilter(TokenStream in, byte[] charTypeTable, int configurationFlags, CharArraySet protWords) {\n    super(in);\n    this.flags = configurationFlags;\n    this.protWords = protWords;\n    this.iterator = new WordDelimiterIterator(\n        charTypeTable, has(SPLIT_ON_CASE_CHANGE), has(SPLIT_ON_NUMERICS), has(STEM_ENGLISH_POSSESSIVE));\n  }\n\n","sourceOld":"  /**\n   * Creates a new WordDelimiterFilter\n   *\n   * @param in TokenStream to be filtered\n   * @param charTypeTable table containing character types\n   * @param configurationFlags Flags configuring the filter\n   * @param protWords If not null is the set of tokens to protect from being delimited\n   */\n  public WordDelimiterFilter(TokenStream in, byte[] charTypeTable, int configurationFlags, CharArraySet protWords) {\n    super(in);\n    this.flags = configurationFlags;\n    this.protWords = protWords;\n    this.iterator = new WordDelimiterIterator(\n        charTypeTable, has(SPLIT_ON_CASE_CHANGE), has(SPLIT_ON_NUMERICS), has(STEM_ENGLISH_POSSESSIVE));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene47WordDelimiterFilter#Lucene47WordDelimiterFilter(TokenStream,byte[],int,CharArraySet).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new WordDelimiterFilter\n   *\n   * @param in TokenStream to be filtered\n   * @param charTypeTable table containing character types\n   * @param configurationFlags Flags configuring the filter\n   * @param protWords If not null is the set of tokens to protect from being delimited\n   */\n  public Lucene47WordDelimiterFilter(TokenStream in, byte[] charTypeTable, int configurationFlags, CharArraySet protWords) {\n    super(in);\n    this.flags = configurationFlags;\n    this.protWords = protWords;\n    this.iterator = new WordDelimiterIterator(\n        charTypeTable, has(SPLIT_ON_CASE_CHANGE), has(SPLIT_ON_NUMERICS), has(STEM_ENGLISH_POSSESSIVE));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71387d8cb6923eb831b17a8b734608ba2e21c653":["c85fa43e6918808743daa7847ba0264373af687f"],"c85fa43e6918808743daa7847ba0264373af687f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c85fa43e6918808743daa7847ba0264373af687f"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c85fa43e6918808743daa7847ba0264373af687f":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}