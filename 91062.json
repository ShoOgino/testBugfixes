{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest.MockSTBlockReader#MockSTBlockReader(IndexDictionary.BrowserSupplier,List[MockSTBlockLine],Directory,FieldInfo,FieldInfos).mjava","commits":[{"id":"42f6185d883389450f593fb00103d2e89a0b8336","date":1577705030,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest.MockSTBlockReader#MockSTBlockReader(IndexDictionary.BrowserSupplier,List[MockSTBlockLine],Directory,FieldInfo,FieldInfos).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest.MockSTBlockReader#MockSTBlockReader(Supplier[IndexDictionary.Browser],List[MockSTBlockLine],Directory,FieldInfo,FieldInfos).mjava","sourceNew":"    MockSTBlockReader(IndexDictionary.BrowserSupplier supplier, List<MockSTBlockLine> lines, Directory directory, FieldInfo fieldInfo, FieldInfos fieldInfos) throws IOException {\n      super(supplier, directory.openInput(MOCK_BLOCK_OUTPUT_NAME, IOContext.DEFAULT),\n          getMockPostingReaderBase(), mockFieldMetadata(fieldInfo, getLastTermForField(lines, fieldInfo.name)), null, fieldInfos);\n      this.lines = lines;\n    }\n\n","sourceOld":"    MockSTBlockReader(Supplier<IndexDictionary.Browser> supplier, List<MockSTBlockLine> lines, Directory directory, FieldInfo fieldInfo, FieldInfos fieldInfos) throws IOException {\n      super(supplier, directory.openInput(MOCK_BLOCK_OUTPUT_NAME, IOContext.DEFAULT),\n          getMockPostingReaderBase(), mockFieldMetadata(fieldInfo, getLastTermForField(lines, fieldInfo.name)), null, fieldInfos);\n      this.lines = lines;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e478fa10594a2ef9d1ddf7d195020300453c4e","date":1577783287,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest.MockSTBlockReader#MockSTBlockReader(IndexDictionary.BrowserSupplier,List[MockSTBlockLine],Directory,FieldInfo,FieldInfos).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest.MockSTBlockReader#MockSTBlockReader(Supplier[IndexDictionary.Browser],List[MockSTBlockLine],Directory,FieldInfo,FieldInfos).mjava","sourceNew":"    MockSTBlockReader(IndexDictionary.BrowserSupplier supplier, List<MockSTBlockLine> lines, Directory directory, FieldInfo fieldInfo, FieldInfos fieldInfos) throws IOException {\n      super(supplier, directory.openInput(MOCK_BLOCK_OUTPUT_NAME, IOContext.DEFAULT),\n          getMockPostingReaderBase(), mockFieldMetadata(fieldInfo, getLastTermForField(lines, fieldInfo.name)), null, fieldInfos);\n      this.lines = lines;\n    }\n\n","sourceOld":"    MockSTBlockReader(Supplier<IndexDictionary.Browser> supplier, List<MockSTBlockLine> lines, Directory directory, FieldInfo fieldInfo, FieldInfos fieldInfos) throws IOException {\n      super(supplier, directory.openInput(MOCK_BLOCK_OUTPUT_NAME, IOContext.DEFAULT),\n          getMockPostingReaderBase(), mockFieldMetadata(fieldInfo, getLastTermForField(lines, fieldInfo.name)), null, fieldInfos);\n      this.lines = lines;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bf19e0585c61e03c645ac979e97c192529637d6","date":1591892388,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/TestSTBlockReader.MockSTBlockReader#MockSTBlockReader(IndexDictionary.BrowserSupplier,List[MockSTBlockLine],Directory,FieldInfo,FieldInfos).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest.MockSTBlockReader#MockSTBlockReader(IndexDictionary.BrowserSupplier,List[MockSTBlockLine],Directory,FieldInfo,FieldInfos).mjava","sourceNew":"    MockSTBlockReader(IndexDictionary.BrowserSupplier supplier, List<MockSTBlockLine> lines, Directory directory, FieldInfo fieldInfo, FieldInfos fieldInfos) throws IOException {\n      super(supplier, directory.openInput(MOCK_BLOCK_OUTPUT_NAME, IOContext.DEFAULT),\n          getMockPostingReaderBase(), mockFieldMetadata(fieldInfo, getLastTermForField(lines, fieldInfo.name)), null, fieldInfos);\n      this.lines = lines;\n    }\n\n","sourceOld":"    MockSTBlockReader(IndexDictionary.BrowserSupplier supplier, List<MockSTBlockLine> lines, Directory directory, FieldInfo fieldInfo, FieldInfos fieldInfos) throws IOException {\n      super(supplier, directory.openInput(MOCK_BLOCK_OUTPUT_NAME, IOContext.DEFAULT),\n          getMockPostingReaderBase(), mockFieldMetadata(fieldInfo, getLastTermForField(lines, fieldInfo.name)), null, fieldInfos);\n      this.lines = lines;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5bf19e0585c61e03c645ac979e97c192529637d6":["42f6185d883389450f593fb00103d2e89a0b8336"],"42f6185d883389450f593fb00103d2e89a0b8336":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62e478fa10594a2ef9d1ddf7d195020300453c4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42f6185d883389450f593fb00103d2e89a0b8336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5bf19e0585c61e03c645ac979e97c192529637d6"]},"commit2Childs":{"5bf19e0585c61e03c645ac979e97c192529637d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"42f6185d883389450f593fb00103d2e89a0b8336":["5bf19e0585c61e03c645ac979e97c192529637d6","62e478fa10594a2ef9d1ddf7d195020300453c4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42f6185d883389450f593fb00103d2e89a0b8336","62e478fa10594a2ef9d1ddf7d195020300453c4e"],"62e478fa10594a2ef9d1ddf7d195020300453c4e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e478fa10594a2ef9d1ddf7d195020300453c4e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}