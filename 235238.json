{"path":"backwards/src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,double,Directory).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,double,Directory).mjava","pathOld":"/dev/null","sourceNew":"  public void createRandomTerms(int nDocs, int nTerms, double power, Directory dir) throws Exception {\n    int[] freq = new int[nTerms];\n    terms = new Term[nTerms];\n    for (int i=0; i<nTerms; i++) {\n      int f = (nTerms+1)-i;  // make first terms less frequent\n      freq[i] = (int)Math.ceil(Math.pow(f,power));\n      terms[i] = new Term(\"f\",Character.toString((char)('A'+i)));\n    }\n\n    IndexWriter iw = new IndexWriter(dir,new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i=0; i<nDocs; i++) {\n      Document d = new Document();\n      for (int j=0; j<nTerms; j++) {\n        if (r.nextInt(freq[j]) == 0) {\n          d.add(new Field(\"f\", terms[j].text(), Field.Store.NO, Field.Index.NOT_ANALYZED));\n          //System.out.println(d);\n        }\n      }\n      iw.addDocument(d);\n    }\n    iw.optimize();\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,double,Directory).mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,double,Directory).mjava","sourceNew":"  public void createRandomTerms(int nDocs, int nTerms, double power, Directory dir) throws Exception {\n    int[] freq = new int[nTerms];\n    terms = new Term[nTerms];\n    for (int i=0; i<nTerms; i++) {\n      int f = (nTerms+1)-i;  // make first terms less frequent\n      freq[i] = (int)Math.ceil(Math.pow(f,power));\n      terms[i] = new Term(\"f\",Character.toString((char)('A'+i)));\n    }\n\n    IndexWriter iw = new IndexWriter(dir,new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i=0; i<nDocs; i++) {\n      Document d = new Document();\n      for (int j=0; j<nTerms; j++) {\n        if (r.nextInt(freq[j]) == 0) {\n          d.add(new Field(\"f\", terms[j].text(), Field.Store.NO, Field.Index.NOT_ANALYZED));\n          //System.out.println(d);\n        }\n      }\n      iw.addDocument(d);\n    }\n    iw.optimize();\n    iw.close();\n  }\n\n","sourceOld":"  public void createRandomTerms(int nDocs, int nTerms, double power, Directory dir) throws Exception {\n    int[] freq = new int[nTerms];\n    terms = new Term[nTerms];\n    for (int i=0; i<nTerms; i++) {\n      int f = (nTerms+1)-i;  // make first terms less frequent\n      freq[i] = (int)Math.ceil(Math.pow(f,power));\n      terms[i] = new Term(\"f\",Character.toString((char)('A'+i)));\n    }\n\n    IndexWriter iw = new IndexWriter(dir,new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i=0; i<nDocs; i++) {\n      Document d = new Document();\n      for (int j=0; j<nTerms; j++) {\n        if (r.nextInt(freq[j]) == 0) {\n          d.add(new Field(\"f\", terms[j].text(), Field.Store.NO, Field.Index.NOT_ANALYZED));\n          //System.out.println(d);\n        }\n      }\n      iw.addDocument(d);\n    }\n    iw.optimize();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}