{"path":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","commits":[{"id":"24a5da2a0d397ff29f3de8f6cf451d3412c2509a","date":1417276391,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"/dev/null","sourceNew":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader.getClusterProps())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"115923bc88e5b1dc4bef049b1ded8486723052ed","date":1463216796,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","sourceNew":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader)) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","sourceOld":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader.getClusterProps())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","sourceNew":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader)) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","sourceOld":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader.getClusterProps())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","sourceNew":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader)) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","sourceOld":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader.getClusterProps())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","sourceNew":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader)) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","sourceOld":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader.getClusterProps())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","sourceNew":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(dataProvider.getClusterStateProvider())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","sourceOld":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(zkStateReader)) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"20c968c14aace7cf49843bf2c1fafc7fd3845659","date":1533133859,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","sourceNew":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(cloudManager.getClusterStateProvider())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","sourceOld":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(dataProvider.getClusterStateProvider())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ReplicaMutator#setState(ClusterState,ZkNodeProps).mjava","sourceNew":"  /**\n   * Handles state updates\n   */\n  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    String collectionName = message.getStr(ZkStateReader.COLLECTION_PROP);\n    if (!checkCollectionKeyExistence(message)) return ZkStateWriter.NO_OP;\n    String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n    if (collectionName == null || sliceName == null) {\n      log.error(\"Invalid collection and slice {}\", message);\n      return ZkStateWriter.NO_OP;\n    }\n    DocCollection collection = clusterState.getCollectionOrNull(collectionName);\n    Slice slice = collection != null ? collection.getSlice(sliceName) : null;\n    if (slice == null) {\n      log.error(\"No such slice exists {}\", message);\n      return ZkStateWriter.NO_OP;\n    }\n\n    return updateState(clusterState, message);\n  }\n\n","sourceOld":"  public ZkWriteCommand setState(ClusterState clusterState, ZkNodeProps message) {\n    if (Overseer.isLegacy(cloudManager.getClusterStateProvider())) {\n      return updateState(clusterState, message);\n    } else {\n      return updateStateNew(clusterState, message);\n    }\n  }\n\n","bugFix":["20c968c14aace7cf49843bf2c1fafc7fd3845659","24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"115923bc88e5b1dc4bef049b1ded8486723052ed":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a","115923bc88e5b1dc4bef049b1ded8486723052ed"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["115923bc88e5b1dc4bef049b1ded8486723052ed","0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"115923bc88e5b1dc4bef049b1ded8486723052ed":["0ad30c6a479e764150a3316e57263319775f1df2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}