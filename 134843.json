{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","commits":[{"id":"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704","date":1371043069,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","pathOld":"/dev/null","sourceNew":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","sourceNew":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","sourceOld":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","sourceNew":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","sourceOld":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","sourceNew":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","sourceOld":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc","date":1465824262,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","sourceNew":"  public void testConversions() {\n    final char[] orig = TestUtil.randomUnicodeString(random(), 100).toCharArray();\n    final int[] buf = new int[orig.length];\n    final char[] restored = new char[buf.length];\n    final int o1 = TestUtil.nextInt(random(), 0, Math.min(5, orig.length));\n    final int o2 = TestUtil.nextInt(random(), 0, o1);\n    final int o3 = TestUtil.nextInt(random(), 0, o1);\n    final int codePointCount = CharacterUtils.toCodePoints(orig, o1, orig.length - o1, buf, o2);\n    final int charCount = CharacterUtils.toChars(buf, o2, codePointCount, restored, o3);\n    assertEquals(orig.length - o1, charCount);\n    assertArrayEquals(Arrays.copyOfRange(orig, o1, o1 + charCount), Arrays.copyOfRange(restored, o3, o3 + charCount));\n  }\n\n","sourceOld":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","date":1465913303,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","sourceNew":"  public void testConversions() {\n    final char[] orig = TestUtil.randomUnicodeString(random(), 100).toCharArray();\n    final int[] buf = new int[orig.length];\n    final char[] restored = new char[buf.length];\n    final int o1 = TestUtil.nextInt(random(), 0, Math.min(5, orig.length));\n    final int o2 = TestUtil.nextInt(random(), 0, o1);\n    final int o3 = TestUtil.nextInt(random(), 0, o1);\n    final int codePointCount = CharacterUtils.toCodePoints(orig, o1, orig.length - o1, buf, o2);\n    final int charCount = CharacterUtils.toChars(buf, o2, codePointCount, restored, o3);\n    assertEquals(orig.length - o1, charCount);\n    assertArrayEquals(Arrays.copyOfRange(orig, o1, o1 + charCount), Arrays.copyOfRange(restored, o3, o3 + charCount));\n  }\n\n","sourceOld":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","date":1465936684,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestCharacterUtils#testConversions().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","sourceNew":"  public void testConversions() {\n    final char[] orig = TestUtil.randomUnicodeString(random(), 100).toCharArray();\n    final int[] buf = new int[orig.length];\n    final char[] restored = new char[buf.length];\n    final int o1 = TestUtil.nextInt(random(), 0, Math.min(5, orig.length));\n    final int o2 = TestUtil.nextInt(random(), 0, o1);\n    final int o3 = TestUtil.nextInt(random(), 0, o1);\n    final int codePointCount = CharacterUtils.toCodePoints(orig, o1, orig.length - o1, buf, o2);\n    final int charCount = CharacterUtils.toChars(buf, o2, codePointCount, restored, o3);\n    assertEquals(orig.length - o1, charCount);\n    assertArrayEquals(Arrays.copyOfRange(orig, o1, o1 + charCount), Arrays.copyOfRange(restored, o3, o3 + charCount));\n  }\n\n","sourceOld":"  public void testConversions() {\n    final char[] orig = TestUtil.randomUnicodeString(random(), 100).toCharArray();\n    final int[] buf = new int[orig.length];\n    final char[] restored = new char[buf.length];\n    final int o1 = TestUtil.nextInt(random(), 0, Math.min(5, orig.length));\n    final int o2 = TestUtil.nextInt(random(), 0, o1);\n    final int o3 = TestUtil.nextInt(random(), 0, o1);\n    final int codePointCount = CharacterUtils.toCodePoints(orig, o1, orig.length - o1, buf, o2);\n    final int charCount = CharacterUtils.toChars(buf, o2, codePointCount, restored, o3);\n    assertEquals(orig.length - o1, charCount);\n    assertArrayEquals(Arrays.copyOfRange(orig, o1, o1 + charCount), Arrays.copyOfRange(restored, o3, o3 + charCount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testConversions().mjava","sourceNew":null,"sourceOld":"  public void testConversions() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    testConversions(java4);\n    testConversions(java5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["379db3ad24c4f0214f30a122265a6d6be003a99d","fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["379db3ad24c4f0214f30a122265a6d6be003a99d","b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}