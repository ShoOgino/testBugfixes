{"path":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateManyFormats().mjava","commits":[{"id":"2c843fa9bddf5f2c12667fc941acd33da03c62a3","date":1535566664,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateManyFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateFormats().mjava","sourceNew":"  public void testParseDateManyFormats() throws Exception {\n    String[] formatExamples = { \n        \"2010-01-15T00:00:00.000Z\",\n        \"2010-01-15T00:00:00,000Z\",\n        \"2010-01-15T00:00:00.000\",\n        \"2010-01-15T00:00:00,000\",\n        \"2010-01-15T00:00:00Z\",\n        \"2010-01-15T00:00:00\",\n        \"2010-01-15T00:00Z\",\n        \"2010-01-15T00:00\",\n        \"2010-01-15 00:00:00.000Z\",\n        \"2010-01-15 00:00:00,000Z\",\n        \"2010-01-15 00:00:00.000\",\n        \"2010-01-15 00:00:00,000\",\n        \"2010-01-15 00:00:00Z\",\n        \"2010-01-15 00:00:00\",\n        \"2010-01-15 00:00Z\",\n        \"2010-01-15 00:00\",\n        \"2010-01-15 12:00 AM\",\n        \"2010-01-15 12:00AM\",\n        \"2010-01-15\",\n        \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"Fri Jan 15 00:00:00 2010\",\n        \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"Friday, January 15, 2010\",\n        \"January 15, 2010\",\n        \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    Instant expectedInstant = Instant.parse(formatExamples[0]);\n\n    for (int i = 0 ; i < formatExamples.length ; ++i) {\n      String dateString = formatExamples[i];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-many-formats-no-run-processor\",\n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"index: \" + i + \" date '\" + dateString + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' mismatched milliseconds\",\n          expectedInstant, ((Date)d.getFieldValue(\"dateUTC_dt\")).toInstant());\n    }\n  }\n\n","sourceOld":"  public void testParseDateFormats() throws Exception {\n    String[] formatExamples = { \n        \"2010-01-15T00:00:00.000Z\",\n        \"2010-01-15T00:00:00,000Z\",\n        \"2010-01-15T00:00:00.000\",\n        \"2010-01-15T00:00:00,000\",\n        \"2010-01-15T00:00:00Z\",\n        \"2010-01-15T00:00:00\",\n        \"2010-01-15T00:00Z\",\n        \"2010-01-15T00:00\",\n        \"2010-01-15 00:00:00.000Z\",\n        \"2010-01-15 00:00:00,000Z\",\n        \"2010-01-15 00:00:00.000\",\n        \"2010-01-15 00:00:00,000\",\n        \"2010-01-15 00:00:00Z\",\n        \"2010-01-15 00:00:00\",\n        \"2010-01-15 00:00Z\",\n        \"2010-01-15 00:00\",\n        \"2010-01-15 12:00 AM\",\n        \"2010-01-15 12:00AM\",\n        \"2010-01-15\",\n        \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"Fri Jan 15 00:00:00 2010\",\n        \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"Friday, January 15, 2010\",\n        \"January 15, 2010\",\n        \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    Instant expectedInstant = Instant.parse(formatExamples[0]);\n\n    for (int i = 0 ; i < formatExamples.length ; ++i) {\n      String dateString = formatExamples[i];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-UTC-defaultTimeZone-no-run-processor\", \n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"index: \" + i + \" date '\" + dateString + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' mismatched milliseconds\",\n          expectedInstant, ((Date)d.getFieldValue(\"dateUTC_dt\")).toInstant());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f","date":1561505163,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateManyFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateManyFormats().mjava","sourceNew":"  public void testParseDateManyFormats() throws Exception {\n    String[] formatExamples = { \n        \"2010-01-15T00:00:00.000Z\",\n        \"2010-01-15T00:00:00,000Z\",\n        \"2010-01-15T00:00:00.000\",\n        \"2010-01-15T00:00:00,000\",\n        \"2010-01-15T00:00:00Z\",\n        \"2010-01-15T00:00:00\",\n        \"2010-01-15T00:00Z\",\n        \"2010-01-15T00:00\",\n        \"2010-01-15 00:00:00.000Z\",\n        \"2010-01-15 00:00:00,000Z\",\n        \"2010-01-15 00:00:00.000\",\n        \"2010-01-15 00:00:00,000\",\n        \"2010-01-15 00:00:00Z\",\n        \"2010-01-15 00:00:00\",\n        \"2010-01-15 00:00Z\",\n        \"2010-01-15 00:00\",\n        \"2010-01-15 12:00 AM\",\n        \"2010-01-15 12:00AM\",\n        \"2010-01-15\",\n        \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"Fri Jan 15 00:00:00 2010\",\n        \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"Friday, January 15, 2010\",\n        \"January 15, 2010\",\n        \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    Instant expectedInstant = Instant.parse(formatExamples[0]);\n\n    for (int i = 0 ; i < formatExamples.length ; ++i) {\n      String dateString = formatExamples[i];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-many-formats-no-run-processor\",\n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertThat(\"index: \" + i + \" date '\" + dateString + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\"), IS_DATE);\n      assertEquals(\"date '\" + dateString + \"' mismatched milliseconds\",\n          expectedInstant, ((Date)d.getFieldValue(\"dateUTC_dt\")).toInstant());\n    }\n  }\n\n","sourceOld":"  public void testParseDateManyFormats() throws Exception {\n    String[] formatExamples = { \n        \"2010-01-15T00:00:00.000Z\",\n        \"2010-01-15T00:00:00,000Z\",\n        \"2010-01-15T00:00:00.000\",\n        \"2010-01-15T00:00:00,000\",\n        \"2010-01-15T00:00:00Z\",\n        \"2010-01-15T00:00:00\",\n        \"2010-01-15T00:00Z\",\n        \"2010-01-15T00:00\",\n        \"2010-01-15 00:00:00.000Z\",\n        \"2010-01-15 00:00:00,000Z\",\n        \"2010-01-15 00:00:00.000\",\n        \"2010-01-15 00:00:00,000\",\n        \"2010-01-15 00:00:00Z\",\n        \"2010-01-15 00:00:00\",\n        \"2010-01-15 00:00Z\",\n        \"2010-01-15 00:00\",\n        \"2010-01-15 12:00 AM\",\n        \"2010-01-15 12:00AM\",\n        \"2010-01-15\",\n        \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"Fri Jan 15 00:00:00 2010\",\n        \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"Friday, January 15, 2010\",\n        \"January 15, 2010\",\n        \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    Instant expectedInstant = Instant.parse(formatExamples[0]);\n\n    for (int i = 0 ; i < formatExamples.length ; ++i) {\n      String dateString = formatExamples[i];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-many-formats-no-run-processor\",\n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"index: \" + i + \" date '\" + dateString + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' mismatched milliseconds\",\n          expectedInstant, ((Date)d.getFieldValue(\"dateUTC_dt\")).toInstant());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f":["2c843fa9bddf5f2c12667fc941acd33da03c62a3"],"2c843fa9bddf5f2c12667fc941acd33da03c62a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c843fa9bddf5f2c12667fc941acd33da03c62a3"],"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2c843fa9bddf5f2c12667fc941acd33da03c62a3":["695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}