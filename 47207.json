{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestMultipleIndexFields#assertOrdinalsExist(String,IndexReader).mjava","commits":[{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestMultipleIndexFields#assertOrdinalsExist(String,IndexReader).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertOrdinalsExist(String,IndexReader).mjava","sourceNew":"  private void assertOrdinalsExist(String field, IndexReader ir) throws IOException {\n    for (AtomicReaderContext context : ir.leaves()) {\n      AtomicReader r = context.reader();\n      if (r.getBinaryDocValues(field) != null) {\n        return; // not all segments must have this DocValues\n      }\n    }\n    fail(\"no ordinals found for \" + field);\n  }\n\n","sourceOld":"  private void assertOrdinalsExist(String field, IndexReader ir) throws IOException {\n    for (AtomicReaderContext context : ir.leaves()) {\n      AtomicReader r = context.reader();\n      if (r.getBinaryDocValues(field) != null) {\n        return; // not all segments must have this DocValues\n      }\n    }\n    fail(\"no ordinals found for \" + field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestMultipleIndexFields#assertOrdinalsExist(String,IndexReader).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestMultipleIndexFields#assertOrdinalsExist(String,IndexReader).mjava","sourceNew":"  private void assertOrdinalsExist(String field, IndexReader ir) throws IOException {\n    for (AtomicReaderContext context : ir.leaves()) {\n      AtomicReader r = context.reader();\n      if (r.getBinaryDocValues(field) != null) {\n        return; // not all segments must have this DocValues\n      }\n    }\n    fail(\"no ordinals found for \" + field);\n  }\n\n","sourceOld":"  private void assertOrdinalsExist(String field, IndexReader ir) throws IOException {\n    for (AtomicReaderContext context : ir.leaves()) {\n      AtomicReader r = context.reader();\n      if (r.getBinaryDocValues(field) != null) {\n        return; // not all segments must have this DocValues\n      }\n    }\n    fail(\"no ordinals found for \" + field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}