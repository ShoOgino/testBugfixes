{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#resetIndexDirectory(CoreDescriptor,ConfigSet).mjava","commits":[{"id":"b39b1b02e442aaf736cc87417e93552cbd8ef1da","date":1484786722,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#resetIndexDirectory(CoreDescriptor,ConfigSet).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Write a new index directory for the a SolrCore, but do so without loading it.\n   */\n  private void resetIndexDirectory(CoreDescriptor dcore, ConfigSet coreConfig) {\n    SolrConfig config = coreConfig.getSolrConfig();\n\n    String registryName = SolrMetricManager.getRegistryName(SolrInfoMBean.Group.core, dcore.getName());\n    DirectoryFactory df = DirectoryFactory.loadDirectoryFactory(config, this, registryName);\n    String dataDir = SolrCore.findDataDir(df, null, config, dcore);\n\n    String tmpIdxDirName = \"index.\" + new SimpleDateFormat(SnapShooter.DATE_FMT, Locale.ROOT).format(new Date());\n    SolrCore.modifyIndexProps(df, dataDir, config, tmpIdxDirName);\n\n    // Free the directory object that we had to create for this\n    Directory dir = null;\n    try {\n      dir = df.get(dataDir, DirContext.META_DATA, config.indexConfig.lockType);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    } finally {\n      try {\n        df.release(dir);\n        df.doneWithDirectory(dir);\n      } catch (IOException e) {\n        SolrException.log(log, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#resetIndexDirectory(CoreDescriptor,ConfigSet).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Write a new index directory for the a SolrCore, but do so without loading it.\n   */\n  private void resetIndexDirectory(CoreDescriptor dcore, ConfigSet coreConfig) {\n    SolrConfig config = coreConfig.getSolrConfig();\n\n    String registryName = SolrMetricManager.getRegistryName(SolrInfoMBean.Group.core, dcore.getName());\n    DirectoryFactory df = DirectoryFactory.loadDirectoryFactory(config, this, registryName);\n    String dataDir = SolrCore.findDataDir(df, null, config, dcore);\n\n    String tmpIdxDirName = \"index.\" + new SimpleDateFormat(SnapShooter.DATE_FMT, Locale.ROOT).format(new Date());\n    SolrCore.modifyIndexProps(df, dataDir, config, tmpIdxDirName);\n\n    // Free the directory object that we had to create for this\n    Directory dir = null;\n    try {\n      dir = df.get(dataDir, DirContext.META_DATA, config.indexConfig.lockType);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    } finally {\n      try {\n        df.release(dir);\n        df.doneWithDirectory(dir);\n      } catch (IOException e) {\n        SolrException.log(log, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#resetIndexDirectory(CoreDescriptor,ConfigSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#resetIndexDirectory(CoreDescriptor,ConfigSet).mjava","sourceNew":"  /**\n   * Write a new index directory for the a SolrCore, but do so without loading it.\n   */\n  private void resetIndexDirectory(CoreDescriptor dcore, ConfigSet coreConfig) {\n    SolrConfig config = coreConfig.getSolrConfig();\n\n    String registryName = SolrMetricManager.getRegistryName(SolrInfoBean.Group.core, dcore.getName());\n    DirectoryFactory df = DirectoryFactory.loadDirectoryFactory(config, this, registryName);\n    String dataDir = SolrCore.findDataDir(df, null, config, dcore);\n\n    String tmpIdxDirName = \"index.\" + new SimpleDateFormat(SnapShooter.DATE_FMT, Locale.ROOT).format(new Date());\n    SolrCore.modifyIndexProps(df, dataDir, config, tmpIdxDirName);\n\n    // Free the directory object that we had to create for this\n    Directory dir = null;\n    try {\n      dir = df.get(dataDir, DirContext.META_DATA, config.indexConfig.lockType);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    } finally {\n      try {\n        df.release(dir);\n        df.doneWithDirectory(dir);\n      } catch (IOException e) {\n        SolrException.log(log, e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Write a new index directory for the a SolrCore, but do so without loading it.\n   */\n  private void resetIndexDirectory(CoreDescriptor dcore, ConfigSet coreConfig) {\n    SolrConfig config = coreConfig.getSolrConfig();\n\n    String registryName = SolrMetricManager.getRegistryName(SolrInfoMBean.Group.core, dcore.getName());\n    DirectoryFactory df = DirectoryFactory.loadDirectoryFactory(config, this, registryName);\n    String dataDir = SolrCore.findDataDir(df, null, config, dcore);\n\n    String tmpIdxDirName = \"index.\" + new SimpleDateFormat(SnapShooter.DATE_FMT, Locale.ROOT).format(new Date());\n    SolrCore.modifyIndexProps(df, dataDir, config, tmpIdxDirName);\n\n    // Free the directory object that we had to create for this\n    Directory dir = null;\n    try {\n      dir = df.get(dataDir, DirContext.META_DATA, config.indexConfig.lockType);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    } finally {\n      try {\n        df.release(dir);\n        df.doneWithDirectory(dir);\n      } catch (IOException e) {\n        SolrException.log(log, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#resetIndexDirectory(CoreDescriptor,ConfigSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#resetIndexDirectory(CoreDescriptor,ConfigSet).mjava","sourceNew":"  /**\n   * Write a new index directory for the a SolrCore, but do so without loading it.\n   */\n  private void resetIndexDirectory(CoreDescriptor dcore, ConfigSet coreConfig) {\n    SolrConfig config = coreConfig.getSolrConfig();\n\n    String registryName = SolrMetricManager.getRegistryName(SolrInfoBean.Group.core, dcore.getName());\n    DirectoryFactory df = DirectoryFactory.loadDirectoryFactory(config, this, registryName);\n    String dataDir = SolrCore.findDataDir(df, null, config, dcore);\n\n    String tmpIdxDirName = \"index.\" + new SimpleDateFormat(SnapShooter.DATE_FMT, Locale.ROOT).format(new Date());\n    SolrCore.modifyIndexProps(df, dataDir, config, tmpIdxDirName);\n\n    // Free the directory object that we had to create for this\n    Directory dir = null;\n    try {\n      dir = df.get(dataDir, DirContext.META_DATA, config.indexConfig.lockType);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    } finally {\n      try {\n        df.release(dir);\n        df.doneWithDirectory(dir);\n      } catch (IOException e) {\n        SolrException.log(log, e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Write a new index directory for the a SolrCore, but do so without loading it.\n   */\n  private void resetIndexDirectory(CoreDescriptor dcore, ConfigSet coreConfig) {\n    SolrConfig config = coreConfig.getSolrConfig();\n\n    String registryName = SolrMetricManager.getRegistryName(SolrInfoMBean.Group.core, dcore.getName());\n    DirectoryFactory df = DirectoryFactory.loadDirectoryFactory(config, this, registryName);\n    String dataDir = SolrCore.findDataDir(df, null, config, dcore);\n\n    String tmpIdxDirName = \"index.\" + new SimpleDateFormat(SnapShooter.DATE_FMT, Locale.ROOT).format(new Date());\n    SolrCore.modifyIndexProps(df, dataDir, config, tmpIdxDirName);\n\n    // Free the directory object that we had to create for this\n    Directory dir = null;\n    try {\n      dir = df.get(dataDir, DirContext.META_DATA, config.indexConfig.lockType);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    } finally {\n      try {\n        df.release(dir);\n        df.doneWithDirectory(dir);\n      } catch (IOException e) {\n        SolrException.log(log, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["b39b1b02e442aaf736cc87417e93552cbd8ef1da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b39b1b02e442aaf736cc87417e93552cbd8ef1da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"816521ebaad5add9cb96bb88c577394e2938c40b":["b39b1b02e442aaf736cc87417e93552cbd8ef1da"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b39b1b02e442aaf736cc87417e93552cbd8ef1da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b39b1b02e442aaf736cc87417e93552cbd8ef1da","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"b39b1b02e442aaf736cc87417e93552cbd8ef1da":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}