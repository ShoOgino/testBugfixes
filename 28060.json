{"path":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#doTestSequence(CharSequence).mjava","commits":[{"id":"8ac870f1b2b56640544c830e5957b1ccd7812135","date":1357759883,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#doTestSequence(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestSequence(CharSequence c) {\n    \n    // slice\n    assertEquals(\"a\", c.subSequence(0, 1).toString());\n    // mid subsequence\n    assertEquals(\"b\", c.subSequence(1, 2).toString());\n    // end subsequence\n    assertEquals(\"bc\", c.subSequence(1, 3).toString());\n    // empty subsequence\n    assertEquals(\"\", c.subSequence(0, 0).toString());\n    \n    try {\n      c.subSequence(-1, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, -1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, 4);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(2, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#doTestSequence(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestSequence(CharSequence c) {\n    \n    // slice\n    assertEquals(\"a\", c.subSequence(0, 1).toString());\n    // mid subsequence\n    assertEquals(\"b\", c.subSequence(1, 2).toString());\n    // end subsequence\n    assertEquals(\"bc\", c.subSequence(1, 3).toString());\n    // empty subsequence\n    assertEquals(\"\", c.subSequence(0, 0).toString());\n    \n    try {\n      c.subSequence(-1, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, -1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, 4);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(2, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#doTestSequence(CharSequence).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#doTestSequence(CharSequence).mjava","sourceNew":"  private void doTestSequence(CharSequence c) {\n    \n    // slice\n    assertEquals(\"a\", c.subSequence(0, 1).toString());\n    // mid subsequence\n    assertEquals(\"b\", c.subSequence(1, 2).toString());\n    // end subsequence\n    assertEquals(\"bc\", c.subSequence(1, 3).toString());\n    // empty subsequence\n    assertEquals(\"\", c.subSequence(0, 0).toString());\n    \n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      c.subSequence(-1, 1);\n    });\n    \n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      c.subSequence(0, -1);\n    });\n    \n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      c.subSequence(0, 4);\n    });\n    \n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      c.subSequence(2, 1);\n    });\n  }\n\n","sourceOld":"  private void doTestSequence(CharSequence c) {\n    \n    // slice\n    assertEquals(\"a\", c.subSequence(0, 1).toString());\n    // mid subsequence\n    assertEquals(\"b\", c.subSequence(1, 2).toString());\n    // end subsequence\n    assertEquals(\"bc\", c.subSequence(1, 3).toString());\n    // empty subsequence\n    assertEquals(\"\", c.subSequence(0, 0).toString());\n    \n    try {\n      c.subSequence(-1, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, -1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, 4);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(2, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":["8ac870f1b2b56640544c830e5957b1ccd7812135"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["8ac870f1b2b56640544c830e5957b1ccd7812135"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8ac870f1b2b56640544c830e5957b1ccd7812135"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"8ac870f1b2b56640544c830e5957b1ccd7812135":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e6354dd7c71fe122926fc53d7d29f715b1283db","8ac870f1b2b56640544c830e5957b1ccd7812135"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"8ac870f1b2b56640544c830e5957b1ccd7812135":["05fe562aa248790944d43cdd478f512572835ba0","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}