{"path":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#clearWithinBlock(int,int,int).mjava","commits":[{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#clearWithinBlock(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void clearWithinBlock(int i4096, int from, int to) {\n    int firstLong = from >>> 6;\n    int lastLong = to >>> 6;\n\n    if (firstLong == lastLong) {\n      clearWithinLong(i4096, firstLong, ~mask(from, to));\n    } else {\n      assert firstLong < lastLong;\n      clearWithinLong(i4096, lastLong, ~mask(0, to));\n      for (int i = lastLong - 1; i >= firstLong + 1; --i) {\n        clearWithinLong(i4096, i, 0L);\n      }\n      clearWithinLong(i4096, firstLong, ~mask(from, 63));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b","date":1414400081,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#clearWithinBlock(int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#clearWithinBlock(int,int,int).mjava","sourceNew":"  private void clearWithinBlock(int i4096, int from, int to) {\n    int firstLong = from >>> 6;\n    int lastLong = to >>> 6;\n\n    if (firstLong == lastLong) {\n      and(i4096, firstLong, ~mask(from, to));\n    } else {\n      assert firstLong < lastLong;\n      and(i4096, lastLong, ~mask(0, to));\n      for (int i = lastLong - 1; i >= firstLong + 1; --i) {\n        and(i4096, i, 0L);\n      }\n      and(i4096, firstLong, ~mask(from, 63));\n    }\n  }\n\n","sourceOld":"  private void clearWithinBlock(int i4096, int from, int to) {\n    int firstLong = from >>> 6;\n    int lastLong = to >>> 6;\n\n    if (firstLong == lastLong) {\n      clearWithinLong(i4096, firstLong, ~mask(from, to));\n    } else {\n      assert firstLong < lastLong;\n      clearWithinLong(i4096, lastLong, ~mask(0, to));\n      for (int i = lastLong - 1; i >= firstLong + 1; --i) {\n        clearWithinLong(i4096, i, 0L);\n      }\n      clearWithinLong(i4096, firstLong, ~mask(from, 63));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b"]},"commit2Childs":{"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}