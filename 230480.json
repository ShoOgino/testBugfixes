{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","commits":[{"id":"035130b0c342f404c027af8c8870587c3741cb1e","date":1342898805,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a {@link Decoder}.\n   *\n   * @param format         the format used to store packed ints\n   * @param version        the compatibility version\n   * @param bitsPerValue   the number of bits per value\n   * @return a decoder\n   */\n  public static Decoder getDecoder(Format format, int version, int bitsPerValue) {\n    return BulkOperation.of(format, bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51a4c2476a0a1187d1b045d8a7eec795e1231bf6","date":1345464713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","sourceNew":"  /**\n   * Get a {@link Decoder}.\n   *\n   * @param format         the format used to store packed ints\n   * @param version        the compatibility version\n   * @param bitsPerValue   the number of bits per value\n   * @return a decoder\n   */\n  public static Decoder getDecoder(Format format, int version, int bitsPerValue) {\n    if (version != VERSION_START) {\n      throw new IllegalArgumentException(\"only VERSION_START is valid (got \" + version + \")\");\n    }\n    return BulkOperation.of(format, bitsPerValue);\n  }\n\n","sourceOld":"  /**\n   * Get a {@link Decoder}.\n   *\n   * @param format         the format used to store packed ints\n   * @param version        the compatibility version\n   * @param bitsPerValue   the number of bits per value\n   * @return a decoder\n   */\n  public static Decoder getDecoder(Format format, int version, int bitsPerValue) {\n    return BulkOperation.of(format, bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e099715aa0cb8da9a56320dd21c24f1ad6728b03","date":1345471998,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","sourceNew":"  /**\n   * Get a {@link Decoder}.\n   *\n   * @param format         the format used to store packed ints\n   * @param version        the compatibility version\n   * @param bitsPerValue   the number of bits per value\n   * @return a decoder\n   */\n  public static Decoder getDecoder(Format format, int version, int bitsPerValue) {\n    checkVersion(version);\n    return BulkOperation.of(format, bitsPerValue);\n  }\n\n","sourceOld":"  /**\n   * Get a {@link Decoder}.\n   *\n   * @param format         the format used to store packed ints\n   * @param version        the compatibility version\n   * @param bitsPerValue   the number of bits per value\n   * @return a decoder\n   */\n  public static Decoder getDecoder(Format format, int version, int bitsPerValue) {\n    if (version != VERSION_START) {\n      throw new IllegalArgumentException(\"only VERSION_START is valid (got \" + version + \")\");\n    }\n    return BulkOperation.of(format, bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a {@link Decoder}.\n   *\n   * @param format         the format used to store packed ints\n   * @param version        the compatibility version\n   * @param bitsPerValue   the number of bits per value\n   * @return a decoder\n   */\n  public static Decoder getDecoder(Format format, int version, int bitsPerValue) {\n    checkVersion(version);\n    return BulkOperation.of(format, bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getDecoder(Format,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a {@link Decoder}.\n   *\n   * @param format         the format used to store packed ints\n   * @param version        the compatibility version\n   * @param bitsPerValue   the number of bits per value\n   * @return a decoder\n   */\n  public static Decoder getDecoder(Format format, int version, int bitsPerValue) {\n    checkVersion(version);\n    return BulkOperation.of(format, bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e099715aa0cb8da9a56320dd21c24f1ad6728b03"],"035130b0c342f404c027af8c8870587c3741cb1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e099715aa0cb8da9a56320dd21c24f1ad6728b03":["51a4c2476a0a1187d1b045d8a7eec795e1231bf6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"51a4c2476a0a1187d1b045d8a7eec795e1231bf6":["035130b0c342f404c027af8c8870587c3741cb1e"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","035130b0c342f404c027af8c8870587c3741cb1e"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"035130b0c342f404c027af8c8870587c3741cb1e":["51a4c2476a0a1187d1b045d8a7eec795e1231bf6"],"e099715aa0cb8da9a56320dd21c24f1ad6728b03":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"51a4c2476a0a1187d1b045d8a7eec795e1231bf6":["e099715aa0cb8da9a56320dd21c24f1ad6728b03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}