{"path":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testBBoxQuery(double,double,double,double,Object).mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testBBoxQuery(double,double,double,double,Object).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testBBoxQuery(double,double,double,double,Object).mjava","sourceNew":"    @Override\n    public boolean testBBoxQuery(double minLat, double maxLat, double minLon, double maxLon, Object shape) {\n      Polygon p = (Polygon)shape;\n      Rectangle2D rectangle2D = Rectangle2D.create(new Rectangle(minLat, maxLat, minLon, maxLon));\n      Component2D.WithinRelation withinRelation = Component2D.WithinRelation.DISJOINT;\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(p);\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle decoded = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        if (queryRelation == QueryRelation.WITHIN) {\n          if (rectangle2D.containsTriangle(decoded.aX, decoded.aY, decoded.bX, decoded.bY, decoded.cX, decoded.cY) == false) {\n            return false;\n          }\n        } else if (queryRelation == QueryRelation.CONTAINS) {\n          Component2D.WithinRelation relation = rectangle2D.withinTriangle(decoded.aX, decoded.aY, decoded.ab, decoded.bX, decoded.bY, decoded.bc, decoded.cX, decoded.cY, decoded.ca);\n          if (relation == Component2D.WithinRelation.NOTWITHIN) {\n            return false;\n          } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n            withinRelation = Component2D.WithinRelation.CANDIDATE;\n          }\n        } else {\n          if (rectangle2D.intersectsTriangle(decoded.aX, decoded.aY, decoded.bX, decoded.bY, decoded.cX, decoded.cY) == true) {\n            return queryRelation == QueryRelation.INTERSECTS;\n          }\n        }\n      }\n      if (queryRelation == QueryRelation.CONTAINS) {\n        return withinRelation == Component2D.WithinRelation.CANDIDATE;\n      }\n      return queryRelation != QueryRelation.INTERSECTS;\n    }\n\n","sourceOld":"    @Override\n    public boolean testBBoxQuery(double minLat, double maxLat, double minLon, double maxLon, Object shape) {\n      Polygon p = (Polygon)shape;\n      Rectangle2D rectangle2D = Rectangle2D.create(new Rectangle(minLat, maxLat, minLon, maxLon));\n      Component2D.WithinRelation withinRelation = Component2D.WithinRelation.DISJOINT;\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(p);\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle decoded = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        if (queryRelation == QueryRelation.WITHIN) {\n          if (rectangle2D.containsTriangle(decoded.aX, decoded.aY, decoded.bX, decoded.bY, decoded.cX, decoded.cY) == false) {\n            return false;\n          }\n        } else if (queryRelation == QueryRelation.CONTAINS) {\n          Component2D.WithinRelation relation = rectangle2D.withinTriangle(decoded.aX, decoded.aY, decoded.ab, decoded.bX, decoded.bY, decoded.bc, decoded.cX, decoded.cY, decoded.ca);\n          if (relation == Component2D.WithinRelation.NOTWITHIN) {\n            return false;\n          } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n            withinRelation = Component2D.WithinRelation.CANDIDATE;\n          }\n        } else {\n          if (rectangle2D.intersectsTriangle(decoded.aX, decoded.aY, decoded.bX, decoded.bY, decoded.cX, decoded.cY) == true) {\n            return queryRelation == QueryRelation.INTERSECTS;\n          }\n        }\n      }\n      if (queryRelation == QueryRelation.CONTAINS) {\n        return withinRelation == Component2D.WithinRelation.CANDIDATE;\n      }\n      return queryRelation != QueryRelation.INTERSECTS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c42be8d779573d0c86ba775117e17360dbf5a6","date":1583217404,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testBBoxQuery(double,double,double,double,Object).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testBBoxQuery(double,double,double,double,Object).mjava","sourceNew":"    @Override\n    public boolean testBBoxQuery(double minLat, double maxLat, double minLon, double maxLon, Object shape) {\n      Component2D rectangle2D = LatLonGeometry.create(new Rectangle(minLat, maxLat, minLon, maxLon));\n      return testComponentQuery(rectangle2D, shape);\n    }\n\n","sourceOld":"    @Override\n    public boolean testBBoxQuery(double minLat, double maxLat, double minLon, double maxLon, Object shape) {\n      Polygon p = (Polygon)shape;\n      Rectangle2D rectangle2D = Rectangle2D.create(new Rectangle(minLat, maxLat, minLon, maxLon));\n      Component2D.WithinRelation withinRelation = Component2D.WithinRelation.DISJOINT;\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(p);\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle decoded = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        if (queryRelation == QueryRelation.WITHIN) {\n          if (rectangle2D.containsTriangle(decoded.aX, decoded.aY, decoded.bX, decoded.bY, decoded.cX, decoded.cY) == false) {\n            return false;\n          }\n        } else if (queryRelation == QueryRelation.CONTAINS) {\n          Component2D.WithinRelation relation = rectangle2D.withinTriangle(decoded.aX, decoded.aY, decoded.ab, decoded.bX, decoded.bY, decoded.bc, decoded.cX, decoded.cY, decoded.ca);\n          if (relation == Component2D.WithinRelation.NOTWITHIN) {\n            return false;\n          } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n            withinRelation = Component2D.WithinRelation.CANDIDATE;\n          }\n        } else {\n          if (rectangle2D.intersectsTriangle(decoded.aX, decoded.aY, decoded.bX, decoded.bY, decoded.cX, decoded.cY) == true) {\n            return queryRelation == QueryRelation.INTERSECTS;\n          }\n        }\n      }\n      if (queryRelation == QueryRelation.CONTAINS) {\n        return withinRelation == Component2D.WithinRelation.CANDIDATE;\n      }\n      return queryRelation != QueryRelation.INTERSECTS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56c42be8d779573d0c86ba775117e17360dbf5a6"]},"commit2Childs":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}