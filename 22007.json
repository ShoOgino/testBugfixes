{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer(Codec).mjava","commits":[{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer(Codec).mjava","pathOld":"/dev/null","sourceNew":"  // initialize the per-field DocValuesProducer\n  private DocValuesProducer initDocValuesProducer(Codec codec) throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = codec.docValuesFormat();\n\n    if (!si.hasFieldUpdates()) {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    } else {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"256a0e54e76f18e115a43e7fe793b54d4e9a3005","date":1412426514,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer(Codec).mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = si.info.getCodec().docValuesFormat();\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    }\n  }\n\n","sourceOld":"  // initialize the per-field DocValuesProducer\n  private DocValuesProducer initDocValuesProducer(Codec codec) throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = codec.docValuesFormat();\n\n    if (!si.hasFieldUpdates()) {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    } else {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer(Codec).mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = si.info.getCodec().docValuesFormat();\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    }\n  }\n\n","sourceOld":"  // initialize the per-field DocValuesProducer\n  private DocValuesProducer initDocValuesProducer(Codec codec) throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = codec.docValuesFormat();\n\n    if (!si.hasFieldUpdates()) {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    } else {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"9bb9a29a5e71a90295f175df8919802993142c9a":["22a2e66dfda83847e80095b8693c660742ab3e9c","256a0e54e76f18e115a43e7fe793b54d4e9a3005"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22a2e66dfda83847e80095b8693c660742ab3e9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["256a0e54e76f18e115a43e7fe793b54d4e9a3005","9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}