{"path":"lucene/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#add(BytesRef,TermStats,long).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#add(BytesRef,TermStats,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#add(BytesRef,TermStats,long).mjava","sourceNew":"    @Override\n    public void add(BytesRef text, TermStats stats, long termsFilePointer) throws IOException {\n      final int indexedTermLength = indexedTermPrefixLength(lastTerm, text);\n      //System.out.println(\"FGW: add text=\" + text.utf8ToString() + \" \" + text + \" fp=\" + termsFilePointer);\n\n      // write only the min prefix that shows the diff\n      // against prior term\n      out.writeBytes(text.bytes, text.offset, indexedTermLength);\n\n      if (termLengths.length == numIndexTerms) {\n        termLengths = ArrayUtil.grow(termLengths);\n      }\n      if (termsPointerDeltas.length == numIndexTerms) {\n        termsPointerDeltas = ArrayUtil.grow(termsPointerDeltas);\n      }\n\n      // save delta terms pointer\n      termsPointerDeltas[numIndexTerms] = (int) (termsFilePointer - lastTermsPointer);\n      lastTermsPointer = termsFilePointer;\n\n      // save term length (in bytes)\n      assert indexedTermLength <= Short.MAX_VALUE;\n      termLengths[numIndexTerms] = (short) indexedTermLength;\n      totTermLength += indexedTermLength;\n\n      lastTerm.copyBytes(text);\n      numIndexTerms++;\n    }\n\n","sourceOld":"    @Override\n    public void add(BytesRef text, TermStats stats, long termsFilePointer) throws IOException {\n      final int indexedTermLength = indexedTermPrefixLength(lastTerm, text);\n      //System.out.println(\"FGW: add text=\" + text.utf8ToString() + \" \" + text + \" fp=\" + termsFilePointer);\n\n      // write only the min prefix that shows the diff\n      // against prior term\n      out.writeBytes(text.bytes, text.offset, indexedTermLength);\n\n      if (termLengths.length == numIndexTerms) {\n        termLengths = ArrayUtil.grow(termLengths);\n      }\n      if (termsPointerDeltas.length == numIndexTerms) {\n        termsPointerDeltas = ArrayUtil.grow(termsPointerDeltas);\n      }\n\n      // save delta terms pointer\n      termsPointerDeltas[numIndexTerms] = (int) (termsFilePointer - lastTermsPointer);\n      lastTermsPointer = termsFilePointer;\n\n      // save term length (in bytes)\n      assert indexedTermLength <= Short.MAX_VALUE;\n      termLengths[numIndexTerms] = (short) indexedTermLength;\n      totTermLength += indexedTermLength;\n\n      lastTerm.copyBytes(text);\n      numIndexTerms++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#add(BytesRef,TermStats,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#add(BytesRef,TermStats,long).mjava","sourceNew":"    @Override\n    public void add(BytesRef text, TermStats stats, long termsFilePointer) throws IOException {\n      final int indexedTermLength = indexedTermPrefixLength(lastTerm, text);\n      //System.out.println(\"FGW: add text=\" + text.utf8ToString() + \" \" + text + \" fp=\" + termsFilePointer);\n\n      // write only the min prefix that shows the diff\n      // against prior term\n      out.writeBytes(text.bytes, text.offset, indexedTermLength);\n\n      if (termLengths.length == numIndexTerms) {\n        termLengths = ArrayUtil.grow(termLengths);\n      }\n      if (termsPointerDeltas.length == numIndexTerms) {\n        termsPointerDeltas = ArrayUtil.grow(termsPointerDeltas);\n      }\n\n      // save delta terms pointer\n      termsPointerDeltas[numIndexTerms] = (int) (termsFilePointer - lastTermsPointer);\n      lastTermsPointer = termsFilePointer;\n\n      // save term length (in bytes)\n      assert indexedTermLength <= Short.MAX_VALUE;\n      termLengths[numIndexTerms] = (short) indexedTermLength;\n      totTermLength += indexedTermLength;\n\n      lastTerm.copyBytes(text);\n      numIndexTerms++;\n    }\n\n","sourceOld":"    @Override\n    public void add(BytesRef text, TermStats stats, long termsFilePointer) throws IOException {\n      final int indexedTermLength = indexedTermPrefixLength(lastTerm, text);\n      //System.out.println(\"FGW: add text=\" + text.utf8ToString() + \" \" + text + \" fp=\" + termsFilePointer);\n\n      // write only the min prefix that shows the diff\n      // against prior term\n      out.writeBytes(text.bytes, text.offset, indexedTermLength);\n\n      if (termLengths.length == numIndexTerms) {\n        termLengths = ArrayUtil.grow(termLengths);\n      }\n      if (termsPointerDeltas.length == numIndexTerms) {\n        termsPointerDeltas = ArrayUtil.grow(termsPointerDeltas);\n      }\n\n      // save delta terms pointer\n      termsPointerDeltas[numIndexTerms] = (int) (termsFilePointer - lastTermsPointer);\n      lastTermsPointer = termsFilePointer;\n\n      // save term length (in bytes)\n      assert indexedTermLength <= Short.MAX_VALUE;\n      termLengths[numIndexTerms] = (short) indexedTermLength;\n      totTermLength += indexedTermLength;\n\n      lastTerm.copyBytes(text);\n      numIndexTerms++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}