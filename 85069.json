{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#rm(File...).mjava","commits":[{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#rm(File...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#rm(File...).mjava","sourceNew":"  /**\n   * Deletes one or more files or directories (and everything underneath it).\n   * \n   * @throws IOException if any of the given files (or their subhierarchy files in case\n   * of directories) cannot be removed.\n   */\n  public static void rm(File... locations) throws IOException {\n    LinkedHashMap<File,Throwable> unremoved = rm(new LinkedHashMap<File,Throwable>(), locations);\n    if (!unremoved.isEmpty()) {\n      StringBuilder b = new StringBuilder(\"Could not remove the following files (in the order of attempts):\\n\");\n      for (Map.Entry<File,Throwable> kv : unremoved.entrySet()) {\n        b.append(\"   \")\n         .append(kv.getKey().getAbsolutePath())\n         .append(\": \")\n         .append(kv.getValue())\n         .append(\"\\n\");\n      }\n      throw new IOException(b.toString());\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes one or more files or directories (and everything underneath it).\n   * \n   * @throws IOException if any of the given files (or their subhierarchy files in case\n   * of directories) cannot be removed.\n   */\n  public static void rm(File... locations) throws IOException {\n    LinkedHashSet<File> unremoved = rm(new LinkedHashSet<File>(), locations);\n    if (!unremoved.isEmpty()) {\n      StringBuilder b = new StringBuilder(\"Could not remove the following files (in the order of attempts):\\n\");\n      for (File f : unremoved) {\n        b.append(\"   \")\n         .append(f.getAbsolutePath())\n         .append(\"\\n\");\n      }\n      throw new IOException(b.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#rm(Path...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#rm(File...).mjava","sourceNew":"  /**\n   * Deletes one or more files or directories (and everything underneath it).\n   * \n   * @throws IOException if any of the given files (or their subhierarchy files in case\n   * of directories) cannot be removed.\n   */\n  public static void rm(Path... locations) throws IOException {\n    LinkedHashMap<Path,Throwable> unremoved = rm(new LinkedHashMap<Path,Throwable>(), locations);\n    if (!unremoved.isEmpty()) {\n      StringBuilder b = new StringBuilder(\"Could not remove the following files (in the order of attempts):\\n\");\n      for (Map.Entry<Path,Throwable> kv : unremoved.entrySet()) {\n        b.append(\"   \")\n         .append(kv.getKey().toAbsolutePath())\n         .append(\": \")\n         .append(kv.getValue())\n         .append(\"\\n\");\n      }\n      throw new IOException(b.toString());\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes one or more files or directories (and everything underneath it).\n   * \n   * @throws IOException if any of the given files (or their subhierarchy files in case\n   * of directories) cannot be removed.\n   */\n  public static void rm(File... locations) throws IOException {\n    LinkedHashMap<File,Throwable> unremoved = rm(new LinkedHashMap<File,Throwable>(), locations);\n    if (!unremoved.isEmpty()) {\n      StringBuilder b = new StringBuilder(\"Could not remove the following files (in the order of attempts):\\n\");\n      for (Map.Entry<File,Throwable> kv : unremoved.entrySet()) {\n        b.append(\"   \")\n         .append(kv.getKey().getAbsolutePath())\n         .append(\": \")\n         .append(kv.getValue())\n         .append(\"\\n\");\n      }\n      throw new IOException(b.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cbc3688252d4a8045d69a164236b2cf87b721f17":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}