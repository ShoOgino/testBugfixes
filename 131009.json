{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#writeBlock(int[],IndexOutput).mjava","commits":[{"id":"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","date":1342716838,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#writeBlock(int[],IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"  private void writeBlock(int[] buffer, IndexOutput out) throws IOException {\n    final int header = ForUtil.compress(buffer, encodedBuffer);\n    //System.out.println(\"    block has \" + numBytes + \" bytes\");\n    out.writeVInt(header);\n    out.writeBytes(encoded, ForUtil.getEncodedSize(header));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#writeBlock(int[],IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#writeBlock(int[],IndexOutput).mjava","sourceNew":"  private void writeBlock(int[] buffer, IndexOutput out) throws IOException {\n    final int header = ForUtil.compress(buffer, encodedBuffer);\n    out.writeVInt(header);\n    out.writeBytes(encoded, ForUtil.getEncodedSize(header));\n  }\n\n","sourceOld":"  private void writeBlock(int[] buffer, IndexOutput out) throws IOException {\n    final int header = ForUtil.compress(buffer, encodedBuffer);\n    //System.out.println(\"    block has \" + numBytes + \" bytes\");\n    out.writeVInt(header);\n    out.writeBytes(encoded, ForUtil.getEncodedSize(header));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#writeBlock(int[],IndexOutput).mjava","sourceNew":null,"sourceOld":"  private void writeBlock(int[] buffer, IndexOutput out) throws IOException {\n    final int header = ForUtil.compress(buffer, encodedBuffer);\n    out.writeVInt(header);\n    out.writeBytes(encoded, ForUtil.getEncodedSize(header));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8081d5018e8846bf4080f2809432c759996e749f":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["8081d5018e8846bf4080f2809432c759996e749f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["8081d5018e8846bf4080f2809432c759996e749f"],"8081d5018e8846bf4080f2809432c759996e749f":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}