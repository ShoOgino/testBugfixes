{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      dir.maybeThrowDeterministicException();\n    } finally {\n      delegate.close();\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.getRecomputedActualSizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n      dir.removeIndexOutput(this, name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      dir.maybeThrowDeterministicException();\n    } finally {\n      delegate.close();\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.getRecomputedActualSizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n      dir.removeIndexOutput(this, name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a","date":1419273748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try {\n      dir.maybeThrowDeterministicException();\n    } finally {\n      delegate.close();\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.getRecomputedActualSizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n      dir.removeIndexOutput(this, name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      dir.maybeThrowDeterministicException();\n    } finally {\n      delegate.close();\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.getRecomputedActualSizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n      dir.removeIndexOutput(this, name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c54115ac0b1e37ac80a357ba82f3f2f95c16753b","date":1419349516,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      assert delegate != null;\n      dir.maybeThrowDeterministicException();\n    } finally {\n      dir.removeIndexOutput(this, name);\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.getRecomputedActualSizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try {\n      dir.maybeThrowDeterministicException();\n    } finally {\n      delegate.close();\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.getRecomputedActualSizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n      dir.removeIndexOutput(this, name);\n    }\n  }\n\n","bugFix":["efb7a19703a037c29e30440260d393500febc1f4","435c7fca8d9d4e96fdc2b59f3392b08ef46725e7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      assert delegate != null;\n      dir.maybeThrowDeterministicException();\n    } finally {\n      dir.removeIndexOutput(this, name);\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.sizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      assert delegate != null;\n      dir.maybeThrowDeterministicException();\n    } finally {\n      dir.removeIndexOutput(this, name);\n      if (dir.trackDiskUsage) {\n        // Now compute actual disk usage & track the maxUsedSize\n        // in the MockDirectoryWrapper:\n        long size = dir.getRecomputedActualSizeInBytes();\n        if (size > dir.maxUsedSize) {\n          dir.maxUsedSize = size;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["c54115ac0b1e37ac80a357ba82f3f2f95c16753b"],"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c54115ac0b1e37ac80a357ba82f3f2f95c16753b":["f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"]},"commit2Childs":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a":["c54115ac0b1e37ac80a357ba82f3f2f95c16753b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c54115ac0b1e37ac80a357ba82f3f2f95c16753b":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}