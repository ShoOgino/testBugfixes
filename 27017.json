{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","sourceNew":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ChildrenArrays ca = tr.getChildrenArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.getOlderSiblingArray()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ChildrenArrays newca = tr.getChildrenArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    // After the refresh, things change:\n    tr.refresh();\n    ca = tr.getChildrenArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.getOlderSiblingArray().length);\n    assertEquals(5, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.getOlderSiblingArray()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ChildrenArrays ca = tr.getChildrenArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.getOlderSiblingArray()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ChildrenArrays newca = tr.getChildrenArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    // After the refresh, things change:\n    tr.refresh();\n    ca = tr.getChildrenArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.getOlderSiblingArray().length);\n    assertEquals(5, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.getOlderSiblingArray()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","sourceNew":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ChildrenArrays ca = tr.getChildrenArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.getOlderSiblingArray()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ChildrenArrays newca = tr.getChildrenArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getChildrenArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.getOlderSiblingArray().length);\n    assertEquals(5, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.getOlderSiblingArray()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ChildrenArrays ca = tr.getChildrenArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.getOlderSiblingArray()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ChildrenArrays newca = tr.getChildrenArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    // After the refresh, things change:\n    tr.refresh();\n    ca = tr.getChildrenArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.getOlderSiblingArray().length);\n    assertEquals(5, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.getOlderSiblingArray()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","sourceNew":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ParallelTaxonomyArrays ca = tr.getParallelTaxonomyArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.siblings()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ParallelTaxonomyArrays newca = tr.getParallelTaxonomyArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getParallelTaxonomyArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.siblings().length);\n    assertEquals(5, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.siblings()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ChildrenArrays ca = tr.getChildrenArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.getOlderSiblingArray()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ChildrenArrays newca = tr.getChildrenArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getChildrenArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.getOlderSiblingArray().length);\n    assertEquals(5, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.getOlderSiblingArray()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","sourceNew":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ParallelTaxonomyArrays ca = tr.getParallelTaxonomyArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.siblings()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ParallelTaxonomyArrays newca = tr.getParallelTaxonomyArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getParallelTaxonomyArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.siblings().length);\n    assertEquals(5, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.siblings()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ChildrenArrays ca = tr.getChildrenArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.getOlderSiblingArray()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ChildrenArrays newca = tr.getChildrenArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.getOlderSiblingArray().length);\n    assertEquals(3, ca.getYoungestChildArray().length);\n    // After the refresh, things change:\n    tr.refresh();\n    ca = tr.getChildrenArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.getOlderSiblingArray().length);\n    assertEquals(5, ca.getYoungestChildArray().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.getYoungestChildArray()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.getOlderSiblingArray()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","sourceNew":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new FacetLabel(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ParallelTaxonomyArrays ca = tr.getParallelTaxonomyArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.siblings()));\n    tw.addCategory(new FacetLabel(\"hi\", \"ho\"));\n    tw.addCategory(new FacetLabel(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ParallelTaxonomyArrays newca = tr.getParallelTaxonomyArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getParallelTaxonomyArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.siblings().length);\n    assertEquals(5, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.siblings()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ParallelTaxonomyArrays ca = tr.getParallelTaxonomyArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.siblings()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ParallelTaxonomyArrays newca = tr.getParallelTaxonomyArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getParallelTaxonomyArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.siblings().length);\n    assertEquals(5, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.siblings()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testChildrenArraysGrowth().mjava","sourceNew":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new FacetLabel(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ParallelTaxonomyArrays ca = tr.getParallelTaxonomyArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.siblings()));\n    tw.addCategory(new FacetLabel(\"hi\", \"ho\"));\n    tw.addCategory(new FacetLabel(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ParallelTaxonomyArrays newca = tr.getParallelTaxonomyArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getParallelTaxonomyArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.siblings().length);\n    assertEquals(5, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.siblings()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Test how getChildrenArrays() deals with the taxonomy's growth:\n   */\n  @Test\n  public void testChildrenArraysGrowth() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.addCategory(new CategoryPath(\"hi\", \"there\"));\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    ParallelTaxonomyArrays ca = tr.getParallelTaxonomyArrays();\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 1, 2, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1 }, ca.siblings()));\n    tw.addCategory(new CategoryPath(\"hi\", \"ho\"));\n    tw.addCategory(new CategoryPath(\"hello\"));\n    tw.commit();\n    // Before refresh, nothing changed..\n    ParallelTaxonomyArrays newca = tr.getParallelTaxonomyArrays();\n    assertSame(newca, ca); // we got exactly the same object\n    assertEquals(3, tr.getSize());\n    assertEquals(3, ca.siblings().length);\n    assertEquals(3, ca.children().length);\n    // After the refresh, things change:\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newtr);\n    tr.close();\n    tr = newtr;\n    ca = tr.getParallelTaxonomyArrays();\n    assertEquals(5, tr.getSize());\n    assertEquals(5, ca.siblings().length);\n    assertEquals(5, ca.children().length);\n    assertTrue(Arrays.equals(new int[] { 4, 3, -1, -1, -1 }, ca.children()));\n    assertTrue(Arrays.equals(new int[] { -1, -1, -1, 2, 1 }, ca.siblings()));\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["3d58d08788c3fd51172ba34474cca42499d6391b","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3d58d08788c3fd51172ba34474cca42499d6391b"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["407687e67faf6e1f02a211ca078d8e3eed631027","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["3d58d08788c3fd51172ba34474cca42499d6391b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}