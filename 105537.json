{"path":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#beforeClass().mjava","commits":[{"id":"8c146731a64debc22c115bbf11ee1a060aa7ea02","date":1457616596,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#beforeClass().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#beforeClass().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#beforeClass().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#beforeClass().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    NUM_DOCS = atLeast(500);\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp\");\n    }\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"sparse\", i, Field.Store.NO));\n      }\n\n      if (i%2 == 0) {\n        doc.add(new LegacyIntField(\"numInt\", i, Field.Store.NO));\n      }\n      writer.addDocument(doc);\n    }\n    IndexReader r = writer.getReader();\n    reader = SlowCompositeReaderWrapper.wrap(r);\n    TestUtil.checkReader(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["8c146731a64debc22c115bbf11ee1a060aa7ea02"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["8c146731a64debc22c115bbf11ee1a060aa7ea02","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83870855d82aba6819217abeff5a40779dbb28b4":["8c146731a64debc22c115bbf11ee1a060aa7ea02","0e121d43b5a10f2df530f406f935102656e9c4e8"],"8c146731a64debc22c115bbf11ee1a060aa7ea02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8c146731a64debc22c115bbf11ee1a060aa7ea02","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c146731a64debc22c115bbf11ee1a060aa7ea02"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"8c146731a64debc22c115bbf11ee1a060aa7ea02":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}