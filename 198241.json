{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","commits":[{"id":"c9a0deca56efc5191d6b3c41047fd538f3fae1d8","date":1198156049,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"/dev/null","sourceNew":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer());\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.TOKENIZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.TOKENIZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.TOKENIZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, false, new WhitespaceAnalyzer());\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9aba6db0f2adde620bb61f591ed18dcfee36ac","date":1201778618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.TOKENIZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.TOKENIZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.TOKENIZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer());\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.TOKENIZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.TOKENIZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.TOKENIZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, false, new WhitespaceAnalyzer());\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.TOKENIZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.TOKENIZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.TOKENIZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.TOKENIZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ae99f08f69aa3acba7cd75134e8447eb747559","date":1222344278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void xxxtestVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void xxxtestVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      writer.setMergeFactor(2);\n      writer.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4ae99f08f69aa3acba7cd75134e8447eb747559":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["09c482d1e63332617181729a225b215c452d8a79"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["c9a0deca56efc5191d6b3c41047fd538f3fae1d8"],"c9a0deca56efc5191d6b3c41047fd538f3fae1d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"c4ae99f08f69aa3acba7cd75134e8447eb747559":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"c9a0deca56efc5191d6b3c41047fd538f3fae1d8":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9a0deca56efc5191d6b3c41047fd538f3fae1d8"],"09c482d1e63332617181729a225b215c452d8a79":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}