{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermScorer#QueryTermScorer(WeightedTerm[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermScorer#QueryTermScorer(WeightedTerm[]).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermScorer#QueryTermScorer(WeightedTerm[]).mjava","sourceNew":"  public QueryTermScorer(WeightedTerm[] weightedTerms) {\n    termsToFind = new HashMap<String,WeightedTerm>();\n    for (int i = 0; i < weightedTerms.length; i++) {\n      WeightedTerm existingTerm = termsToFind\n          .get(weightedTerms[i].term);\n      if ((existingTerm == null)\n          || (existingTerm.weight < weightedTerms[i].weight)) {\n        // if a term is defined more than once, always use the highest scoring\n        // weight\n        termsToFind.put(weightedTerms[i].term, weightedTerms[i]);\n        maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());\n      }\n    }\n  }\n\n","sourceOld":"  public QueryTermScorer(WeightedTerm[] weightedTerms) {\n    termsToFind = new HashMap<String,WeightedTerm>();\n    for (int i = 0; i < weightedTerms.length; i++) {\n      WeightedTerm existingTerm = termsToFind\n          .get(weightedTerms[i].term);\n      if ((existingTerm == null)\n          || (existingTerm.weight < weightedTerms[i].weight)) {\n        // if a term is defined more than once, always use the highest scoring\n        // weight\n        termsToFind.put(weightedTerms[i].term, weightedTerms[i]);\n        maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermScorer#QueryTermScorer(WeightedTerm[]).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermScorer#QueryTermScorer(WeightedTerm[]).mjava","sourceNew":"  public QueryTermScorer(WeightedTerm[] weightedTerms) {\n    termsToFind = new HashMap<>();\n    for (int i = 0; i < weightedTerms.length; i++) {\n      WeightedTerm existingTerm = termsToFind\n          .get(weightedTerms[i].term);\n      if ((existingTerm == null)\n          || (existingTerm.weight < weightedTerms[i].weight)) {\n        // if a term is defined more than once, always use the highest scoring\n        // weight\n        termsToFind.put(weightedTerms[i].term, weightedTerms[i]);\n        maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());\n      }\n    }\n  }\n\n","sourceOld":"  public QueryTermScorer(WeightedTerm[] weightedTerms) {\n    termsToFind = new HashMap<String,WeightedTerm>();\n    for (int i = 0; i < weightedTerms.length; i++) {\n      WeightedTerm existingTerm = termsToFind\n          .get(weightedTerms[i].term);\n      if ((existingTerm == null)\n          || (existingTerm.weight < weightedTerms[i].weight)) {\n        // if a term is defined more than once, always use the highest scoring\n        // weight\n        termsToFind.put(weightedTerms[i].term, weightedTerms[i]);\n        maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}