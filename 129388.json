{"path":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","commits":[{"id":"b4e08e2b6886d78c91752d82ea2b436c4324cd55","date":1464786234,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"611f7ea4eee5babadf4129bfa5fbae964738cd7c","date":1464787051,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"026b7e389cd847f6590f8783e6f9f1c8d2b80fcd","date":1472647322,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9440b5b1eec7788a0edd10385e4d7a614d1024d7","date":1528992889,"type":5,"author":"user","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object],String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","sourceNew":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values, String key) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(key);\n      if (oldVal == null) {\n        values.put(key, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(key, l);\n      }\n    }\n\n","sourceOld":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","sourceNew":null,"sourceOld":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#addChildDoc2ParentDoc(Map[String,Object],Map[String,Object]).mjava","sourceNew":null,"sourceOld":"    private void addChildDoc2ParentDoc(Map<String, Object> record, Map<String, Object> values) {\n      record =  Utils.getDeepCopy(record, 2);\n      Object oldVal = values.get(null);\n      if (oldVal == null) {\n        values.put(null, record);\n      } else if (oldVal instanceof List) {\n        ((List) oldVal).add(record);\n      } else {\n        ArrayList l = new ArrayList();\n        l.add(oldVal);\n        l.add(record);\n        values.put(null, l);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"bc8f206328a706450934717bec7ccc22ad166fc0":["b4e08e2b6886d78c91752d82ea2b436c4324cd55","026b7e389cd847f6590f8783e6f9f1c8d2b80fcd"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"026b7e389cd847f6590f8783e6f9f1c8d2b80fcd":["b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b4e08e2b6886d78c91752d82ea2b436c4324cd55","026b7e389cd847f6590f8783e6f9f1c8d2b80fcd"],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","9440b5b1eec7788a0edd10385e4d7a614d1024d7"]},"commit2Childs":{"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["bc8f206328a706450934717bec7ccc22ad166fc0","026b7e389cd847f6590f8783e6f9f1c8d2b80fcd","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"bc8f206328a706450934717bec7ccc22ad166fc0":[],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"026b7e389cd847f6590f8783e6f9f1c8d2b80fcd":["bc8f206328a706450934717bec7ccc22ad166fc0","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e08e2b6886d78c91752d82ea2b436c4324cd55","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["9440b5b1eec7788a0edd10385e4d7a614d1024d7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["bc8f206328a706450934717bec7ccc22ad166fc0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}