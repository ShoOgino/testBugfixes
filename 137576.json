{"path":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","commits":[{"id":"404bbb5c1692276fefc358d0d4a9ccb74ed2518e","date":1451595423,"type":0,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean lineCrossesRect(double aX1, double aY1, double aX2, double aY2,\n                                         final double rMinX, final double rMinY, final double rMaxX, final double rMaxY) {\n    // short-circuit: if one point inside rect, other outside\n    if (pointInRect(aX1, aY1, rMinX, rMinY, rMaxX, rMaxY) ?\n        !pointInRect(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY) : pointInRect(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)) {\n      return true;\n    }\n\n    return lineCrossesLine(aX1, aY1, aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)\n        || lineCrossesLine(aX1, aY1, aX2, aY2, rMaxX, rMinY, rMinX, rMaxY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04995b00da1e08edb88b14c5a9789d741de5c51d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04995b00da1e08edb88b14c5a9789d741de5c51d","date":1453863716,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","sourceNew":"  private static boolean lineCrossesRect(double aX1, double aY1, double aX2, double aY2,\n                                         final double rMinX, final double rMinY, final double rMaxX, final double rMaxY) {\n    // short-circuit: if one point inside rect, other outside\n    if (pointInRectPrecise(aX1, aY1, rMinX, rMinY, rMaxX, rMaxY) ?\n        !pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY) : pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)) {\n      return true;\n    }\n\n    return lineCrossesLine(aX1, aY1, aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)\n        || lineCrossesLine(aX1, aY1, aX2, aY2, rMaxX, rMinY, rMinX, rMaxY);\n  }\n\n","sourceOld":"  private static boolean lineCrossesRect(double aX1, double aY1, double aX2, double aY2,\n                                         final double rMinX, final double rMinY, final double rMaxX, final double rMaxY) {\n    // short-circuit: if one point inside rect, other outside\n    if (pointInRect(aX1, aY1, rMinX, rMinY, rMaxX, rMaxY) ?\n        !pointInRect(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY) : pointInRect(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)) {\n      return true;\n    }\n\n    return lineCrossesLine(aX1, aY1, aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)\n        || lineCrossesLine(aX1, aY1, aX2, aY2, rMaxX, rMinY, rMinX, rMaxY);\n  }\n\n","bugFix":["404bbb5c1692276fefc358d0d4a9ccb74ed2518e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","sourceNew":"  private static boolean lineCrossesRect(double aX1, double aY1, double aX2, double aY2,\n                                         final double rMinX, final double rMinY, final double rMaxX, final double rMaxY) {\n    // short-circuit: if one point inside rect, other outside\n    if (pointInRectPrecise(aX1, aY1, rMinX, rMinY, rMaxX, rMaxY) ?\n        !pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY) : pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)) {\n      return true;\n    }\n\n    return lineCrossesLine(aX1, aY1, aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)\n        || lineCrossesLine(aX1, aY1, aX2, aY2, rMaxX, rMinY, rMinX, rMaxY);\n  }\n\n","sourceOld":"  private static boolean lineCrossesRect(double aX1, double aY1, double aX2, double aY2,\n                                         final double rMinX, final double rMinY, final double rMaxX, final double rMaxY) {\n    // short-circuit: if one point inside rect, other outside\n    if (pointInRectPrecise(aX1, aY1, rMinX, rMinY, rMaxX, rMaxY) ?\n        !pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY) : pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)) {\n      return true;\n    }\n\n    return lineCrossesLine(aX1, aY1, aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)\n        || lineCrossesLine(aX1, aY1, aX2, aY2, rMaxX, rMinY, rMinX, rMaxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#lineCrossesRect(double,double,double,double,double,double,double,double).mjava","sourceNew":"  private static boolean lineCrossesRect(double aX1, double aY1, double aX2, double aY2,\n                                         final double rMinX, final double rMinY, final double rMaxX, final double rMaxY) {\n    // short-circuit: if one point inside rect, other outside\n    if (pointInRectPrecise(aX1, aY1, rMinX, rMinY, rMaxX, rMaxY) ?\n        !pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY) : pointInRectPrecise(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)) {\n      return true;\n    }\n\n    return lineCrossesLine(aX1, aY1, aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)\n        || lineCrossesLine(aX1, aY1, aX2, aY2, rMaxX, rMinY, rMinX, rMaxY);\n  }\n\n","sourceOld":"  private static boolean lineCrossesRect(double aX1, double aY1, double aX2, double aY2,\n                                         final double rMinX, final double rMinY, final double rMaxX, final double rMaxY) {\n    // short-circuit: if one point inside rect, other outside\n    if (pointInRect(aX1, aY1, rMinX, rMinY, rMaxX, rMaxY) ?\n        !pointInRect(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY) : pointInRect(aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)) {\n      return true;\n    }\n\n    return lineCrossesLine(aX1, aY1, aX2, aY2, rMinX, rMinY, rMaxX, rMaxY)\n        || lineCrossesLine(aX1, aY1, aX2, aY2, rMaxX, rMinY, rMinX, rMaxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"404bbb5c1692276fefc358d0d4a9ccb74ed2518e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["404bbb5c1692276fefc358d0d4a9ccb74ed2518e","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["04995b00da1e08edb88b14c5a9789d741de5c51d"],"04995b00da1e08edb88b14c5a9789d741de5c51d":["404bbb5c1692276fefc358d0d4a9ccb74ed2518e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"404bbb5c1692276fefc358d0d4a9ccb74ed2518e":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","04995b00da1e08edb88b14c5a9789d741de5c51d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["404bbb5c1692276fefc358d0d4a9ccb74ed2518e"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04995b00da1e08edb88b14c5a9789d741de5c51d":["937923083e4d137932336fc80f3d78758ff698a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}