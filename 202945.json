{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#r_Normalize_post().mjava","commits":[{"id":"bb2a201e69f2f98d584c49edff74bbddd0172827","date":1540544025,"type":0,"author":"Ryadh Dahimene","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#r_Normalize_post().mjava","pathOld":"/dev/null","sourceNew":"    private boolean r_Normalize_post() {\n        int among_var;\n        // (, line 321\n        // do, line 323\n        int v_1 = cursor;\n        lab0: do {\n            // (, line 323\n            // backwards, line 325\n            limit_backward = cursor;\n            cursor = limit;\n            // (, line 325\n            // [, line 326\n            ket = cursor;\n            // substring, line 326\n            among_var = find_among_b(a_1, a_1.length);\n            if (among_var == 0)\n            {\n                break lab0;\n            }\n            // ], line 326\n            bra = cursor;\n            switch (among_var) {\n                case 0:\n                    break lab0;\n                case 1:\n                    // (, line 327\n                    // <-, line 327\n                    slice_from(\"\\u0621\");\n                    break;\n                case 2:\n                    // (, line 328\n                    // <-, line 328\n                    slice_from(\"\\u0621\");\n                    break;\n                case 3:\n                    // (, line 329\n                    // <-, line 329\n                    slice_from(\"\\u0621\");\n                    break;\n            }\n            cursor = limit_backward;\n        } while (false);\n        cursor = v_1;\n        // do, line 334\n        int v_2 = cursor;\n        lab1: do {\n            // loop, line 334\n            for (int v_3 = I_word_len; v_3 > 0; v_3--)\n            {\n                // (, line 334\n                // or, line 343\n                lab2: do {\n                    int v_4 = cursor;\n                    lab3: do {\n                        // (, line 335\n                        // [, line 337\n                        bra = cursor;\n                        // substring, line 337\n                        among_var = find_among(a_2, a_2.length);\n                        if (among_var == 0)\n                        {\n                            break lab3;\n                        }\n                        // ], line 337\n                        ket = cursor;\n                        switch (among_var) {\n                            case 0:\n                                break lab3;\n                            case 1:\n                                // (, line 338\n                                // <-, line 338\n                                slice_from(\"\\u0627\");\n                                break;\n                            case 2:\n                                // (, line 339\n                                // <-, line 339\n                                slice_from(\"\\u0648\");\n                                break;\n                            case 3:\n                                // (, line 340\n                                // <-, line 340\n                                slice_from(\"\\u064A\");\n                                break;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = v_4;\n                    // next, line 344\n                    if (cursor >= limit)\n                    {\n                        break lab1;\n                    }\n                    cursor++;\n                } while (false);\n            }\n        } while (false);\n        cursor = v_2;\n        return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#r_Normalize_post().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#r_Normalize_post().mjava","sourceNew":"private boolean r_Normalize_post() {\n  int among_var;\n  int v_1 = cursor;\n  lab0: {\n    limit_backward = cursor;\n    cursor = limit;\n    ket = cursor;\n    if (find_among_b(a_1) == 0)\n    {\n      break lab0;\n    }\n    bra = cursor;\n    slice_from(\"\\u0621\");\n    cursor = limit_backward;\n  }\n  cursor = v_1;\n  int v_2 = cursor;\n  lab1: {\n    while(true)\n    {\n      int v_3 = cursor;\n      lab2: {\n        lab3: {\n          int v_4 = cursor;\n          lab4: {\n            bra = cursor;\n            among_var = find_among(a_2);\n            if (among_var == 0)\n            {\n              break lab4;\n            }\n            ket = cursor;\n            switch (among_var) {\n              case 1:\n                slice_from(\"\\u0627\");\n                break;\n              case 2:\n                slice_from(\"\\u0648\");\n                break;\n              case 3:\n                slice_from(\"\\u064A\");\n                break;\n            }\n            break lab3;\n          }\n          cursor = v_4;\n          if (cursor >= limit)\n          {\n            break lab2;\n          }\n          cursor++;\n        }\n        continue;\n      }\n      cursor = v_3;\n      break;\n    }\n  }\n  cursor = v_2;\n  return true;\n}\n\n","sourceOld":"    private boolean r_Normalize_post() {\n        int among_var;\n        // (, line 321\n        // do, line 323\n        int v_1 = cursor;\n        lab0: do {\n            // (, line 323\n            // backwards, line 325\n            limit_backward = cursor;\n            cursor = limit;\n            // (, line 325\n            // [, line 326\n            ket = cursor;\n            // substring, line 326\n            among_var = find_among_b(a_1, a_1.length);\n            if (among_var == 0)\n            {\n                break lab0;\n            }\n            // ], line 326\n            bra = cursor;\n            switch (among_var) {\n                case 0:\n                    break lab0;\n                case 1:\n                    // (, line 327\n                    // <-, line 327\n                    slice_from(\"\\u0621\");\n                    break;\n                case 2:\n                    // (, line 328\n                    // <-, line 328\n                    slice_from(\"\\u0621\");\n                    break;\n                case 3:\n                    // (, line 329\n                    // <-, line 329\n                    slice_from(\"\\u0621\");\n                    break;\n            }\n            cursor = limit_backward;\n        } while (false);\n        cursor = v_1;\n        // do, line 334\n        int v_2 = cursor;\n        lab1: do {\n            // loop, line 334\n            for (int v_3 = I_word_len; v_3 > 0; v_3--)\n            {\n                // (, line 334\n                // or, line 343\n                lab2: do {\n                    int v_4 = cursor;\n                    lab3: do {\n                        // (, line 335\n                        // [, line 337\n                        bra = cursor;\n                        // substring, line 337\n                        among_var = find_among(a_2, a_2.length);\n                        if (among_var == 0)\n                        {\n                            break lab3;\n                        }\n                        // ], line 337\n                        ket = cursor;\n                        switch (among_var) {\n                            case 0:\n                                break lab3;\n                            case 1:\n                                // (, line 338\n                                // <-, line 338\n                                slice_from(\"\\u0627\");\n                                break;\n                            case 2:\n                                // (, line 339\n                                // <-, line 339\n                                slice_from(\"\\u0648\");\n                                break;\n                            case 3:\n                                // (, line 340\n                                // <-, line 340\n                                slice_from(\"\\u064A\");\n                                break;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = v_4;\n                    // next, line 344\n                    if (cursor >= limit)\n                    {\n                        break lab1;\n                    }\n                    cursor++;\n                } while (false);\n            }\n        } while (false);\n        cursor = v_2;\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb2a201e69f2f98d584c49edff74bbddd0172827":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["bb2a201e69f2f98d584c49edff74bbddd0172827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"bb2a201e69f2f98d584c49edff74bbddd0172827":["09479cd2de06c67a115b7346a8e5de8af4d62e81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb2a201e69f2f98d584c49edff74bbddd0172827"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}