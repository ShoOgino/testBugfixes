{"path":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","commits":[{"id":"aef2a94da918b657d107b616a643e1759db43b6a","date":1527706131,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","pathOld":"/dev/null","sourceNew":"  // Call only from assert!\n  boolean verifyDocCounts(CodecReader reader) {\n    int count = 0;\n    Bits liveDocs = getLiveDocs();\n    if (liveDocs != null) {\n      for(int docID = 0; docID < info.info.maxDoc(); docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n    assert numDocs() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() +\n        \" pendingDeletes=\" + toString() + \" count=\" + count;\n    assert reader.numDocs() == numDocs() : \"reader.numDocs() = \" + reader.numDocs() + \" numDocs() \" + numDocs();\n    assert reader.numDeletedDocs() <= info.info.maxDoc(): \"delCount=\" + reader.numDeletedDocs() + \" info.maxDoc=\" +\n        info.info.maxDoc() + \" rld.pendingDeleteCount=\" + numPendingDeletes() +\n        \" info.getDelCount()=\" + info.getDelCount();\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","sourceNew":"  // Call only from assert!\n  boolean verifyDocCounts(CodecReader reader) {\n    int count = 0;\n    Bits liveDocs = getLiveDocs();\n    if (liveDocs != null) {\n      for(int docID = 0; docID < info.info.maxDoc(); docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n    assert numDocs() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() +\n        \" info.getSoftDelCount()=\" + info.getSoftDelCount() +\n        \" pendingDeletes=\" + toString() + \" count=\" + count + \" numDocs: \" + numDocs();\n    assert reader.numDocs() == numDocs() : \"reader.numDocs() = \" + reader.numDocs() + \" numDocs() \" + numDocs();\n    assert reader.numDeletedDocs() <= info.info.maxDoc(): \"delCount=\" + reader.numDeletedDocs() + \" info.maxDoc=\" +\n        info.info.maxDoc() + \" rld.pendingDeleteCount=\" + numPendingDeletes() +\n        \" info.getDelCount()=\" + info.getDelCount();\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  boolean verifyDocCounts(CodecReader reader) {\n    int count = 0;\n    Bits liveDocs = getLiveDocs();\n    if (liveDocs != null) {\n      for(int docID = 0; docID < info.info.maxDoc(); docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n    assert numDocs() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() +\n        \" pendingDeletes=\" + toString() + \" count=\" + count;\n    assert reader.numDocs() == numDocs() : \"reader.numDocs() = \" + reader.numDocs() + \" numDocs() \" + numDocs();\n    assert reader.numDeletedDocs() <= info.info.maxDoc(): \"delCount=\" + reader.numDeletedDocs() + \" info.maxDoc=\" +\n        info.info.maxDoc() + \" rld.pendingDeleteCount=\" + numPendingDeletes() +\n        \" info.getDelCount()=\" + info.getDelCount();\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","sourceNew":"  // Call only from assert!\n  boolean verifyDocCounts(CodecReader reader) {\n    int count = 0;\n    Bits liveDocs = getLiveDocs();\n    if (liveDocs != null) {\n      for(int docID = 0; docID < info.info.maxDoc(); docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n    assert numDocs() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() +\n        \" info.getSoftDelCount()=\" + info.getSoftDelCount() +\n        \" pendingDeletes=\" + toString() + \" count=\" + count + \" numDocs: \" + numDocs();\n    assert reader.numDocs() == numDocs() : \"reader.numDocs() = \" + reader.numDocs() + \" numDocs() \" + numDocs();\n    assert reader.numDeletedDocs() <= info.info.maxDoc(): \"delCount=\" + reader.numDeletedDocs() + \" info.maxDoc=\" +\n        info.info.maxDoc() + \" rld.pendingDeleteCount=\" + numPendingDeletes() +\n        \" info.getDelCount()=\" + info.getDelCount();\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  boolean verifyDocCounts(CodecReader reader) {\n    int count = 0;\n    Bits liveDocs = getLiveDocs();\n    if (liveDocs != null) {\n      for(int docID = 0; docID < info.info.maxDoc(); docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n    assert numDocs() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() +\n        \" pendingDeletes=\" + toString() + \" count=\" + count;\n    assert reader.numDocs() == numDocs() : \"reader.numDocs() = \" + reader.numDocs() + \" numDocs() \" + numDocs();\n    assert reader.numDeletedDocs() <= info.info.maxDoc(): \"delCount=\" + reader.numDeletedDocs() + \" info.maxDoc=\" +\n        info.info.maxDoc() + \" rld.pendingDeleteCount=\" + numPendingDeletes() +\n        \" info.getDelCount()=\" + info.getDelCount();\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#verifyDocCounts(CodecReader).mjava","sourceNew":"  // Call only from assert!\n  boolean verifyDocCounts(CodecReader reader) {\n    int count = 0;\n    Bits liveDocs = getLiveDocs();\n    if (liveDocs != null) {\n      for(int docID = 0; docID < info.info.maxDoc(); docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n    assert numDocs() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() +\n        \" info.getSoftDelCount()=\" + info.getSoftDelCount() +\n        \" pendingDeletes=\" + toString() + \" count=\" + count + \" numDocs: \" + numDocs();\n    assert reader.numDocs() == numDocs() : \"reader.numDocs() = \" + reader.numDocs() + \" numDocs() \" + numDocs();\n    assert reader.numDeletedDocs() <= info.info.maxDoc(): \"delCount=\" + reader.numDeletedDocs() + \" info.maxDoc=\" +\n        info.info.maxDoc() + \" rld.pendingDeleteCount=\" + numPendingDeletes() +\n        \" info.getDelCount()=\" + info.getDelCount();\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  boolean verifyDocCounts(CodecReader reader) {\n    int count = 0;\n    Bits liveDocs = getLiveDocs();\n    if (liveDocs != null) {\n      for(int docID = 0; docID < info.info.maxDoc(); docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n    assert numDocs() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() +\n        \" pendingDeletes=\" + toString() + \" count=\" + count;\n    assert reader.numDocs() == numDocs() : \"reader.numDocs() = \" + reader.numDocs() + \" numDocs() \" + numDocs();\n    assert reader.numDeletedDocs() <= info.info.maxDoc(): \"delCount=\" + reader.numDeletedDocs() + \" info.maxDoc=\" +\n        info.info.maxDoc() + \" rld.pendingDeleteCount=\" + numPendingDeletes() +\n        \" info.getDelCount()=\" + info.getDelCount();\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["aef2a94da918b657d107b616a643e1759db43b6a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["aef2a94da918b657d107b616a643e1759db43b6a"],"aef2a94da918b657d107b616a643e1759db43b6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f592209545c71895260367152601e9200399776d":["aef2a94da918b657d107b616a643e1759db43b6a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aef2a94da918b657d107b616a643e1759db43b6a"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aef2a94da918b657d107b616a643e1759db43b6a":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}