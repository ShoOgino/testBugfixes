{"path":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#createCollection().mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#createCollection().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#createCollection().mjava","sourceNew":"    private void createCollection() {\n      try {\n        final CollectionAdminResponse response = CollectionAdminRequest.createCollection(collectionName,configName,1,1)\n                .process(solrClient);\n        if (response.getStatus() != 0) {\n          addFailure(new RuntimeException(\"failed to create collection \" + collectionName));\n        }\n      } catch (Exception e) {\n        addFailure(e);\n      }\n      \n    }\n\n","sourceOld":"    private void createCollection() {\n      try {\n        final CollectionAdminResponse response = CollectionAdminRequest.createCollection(collectionName,configName,1,1)\n                .process(solrClient);\n        if (response.getStatus() != 0) {\n          addFailure(new RuntimeException(\"failed to create collection \" + collectionName));\n        }\n      } catch (Exception e) {\n        addFailure(e);\n      }\n      \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#createCollection().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#createCollection().mjava","sourceNew":"    private void createCollection() {\n      try {\n        final CollectionAdminResponse response = CollectionAdminRequest.createCollection(collectionName,configName,1,1)\n                .process(solrClient);\n        if (response.getStatus() != 0) {\n          addFailure(new RuntimeException(\"failed to create collection \" + collectionName));\n        }\n      } catch (Exception e) {\n        addFailure(e);\n      }\n      \n    }\n\n","sourceOld":"    private void createCollection() {\n      try {\n        final CollectionAdminResponse response = CollectionAdminRequest.createCollection(collectionName,configName,1,1)\n                .process(solrClient);\n        if (response.getStatus() != 0) {\n          addFailure(new RuntimeException(\"failed to create collection \" + collectionName));\n        }\n      } catch (Exception e) {\n        addFailure(e);\n      }\n      \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}