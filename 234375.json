{"path":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext).mjava","commits":[{"id":"c8323d210478d76a02372693d254b69aac614689","date":1295877066,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param reader The {@link org.apache.lucene.index.IndexReader} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(IndexReader reader) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param reader The {@link org.apache.lucene.index.IndexReader} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(IndexReader reader) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext).mjava","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context, Bits acceptDocs) throws IOException;\n\n","sourceOld":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["c8323d210478d76a02372693d254b69aac614689"],"c8323d210478d76a02372693d254b69aac614689":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8323d210478d76a02372693d254b69aac614689"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6620df8541b174097b1133a4fc370adb2e570524"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8323d210478d76a02372693d254b69aac614689"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8323d210478d76a02372693d254b69aac614689":["6620df8541b174097b1133a4fc370adb2e570524","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8323d210478d76a02372693d254b69aac614689","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}