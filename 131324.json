{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","commits":[{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,SimpleSpatialFieldInfo,DistanceCalculator).mjava","sourceNew":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new CachedDistanceValueSource(point, calc, p);\n  }\n\n","sourceOld":"  public ValueSource makeValueSource(SpatialArgs args, SimpleSpatialFieldInfo fieldInfo, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( fieldInfo.getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( fieldInfo.getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, fieldInfo.getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(fieldInfo.getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new CachedDistanceValueSource(point, calc, p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","pathOld":"/dev/null","sourceNew":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new CachedDistanceValueSource(point, calc, p);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3b03639f1b220125a390cee0e3ae4e79c78f371","date":1343105132,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","sourceNew":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new ShapeFieldCacheDistanceValueSource(point, calc, p);\n  }\n\n","sourceOld":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new CachedDistanceValueSource(point, calc, p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","date":1343203827,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","sourceNew":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new ShapeFieldCacheDistanceValueSource(point, calc, p);\n  }\n\n","sourceOld":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new CachedDistanceValueSource(point, calc, p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","sourceNew":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new ShapeFieldCacheDistanceValueSource(point, calc, p);\n  }\n\n","sourceOld":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new CachedDistanceValueSource(point, calc, p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","sourceNew":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new ShapeFieldCacheDistanceValueSource(point, calc, p);\n  }\n\n","sourceOld":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new CachedDistanceValueSource(point, calc, p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28bce66b0b769a7827b1f4df30b3f50a2ed6c355","date":1347720564,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeDistanceValueSource(Point).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#makeValueSource(SpatialArgs,DistanceCalculator).mjava","sourceNew":"  @Override\n  public ValueSource makeDistanceValueSource(Point queryPoint) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n\n    return new ShapeFieldCacheDistanceValueSource(ctx, p, queryPoint);\n  }\n\n","sourceOld":"  public ValueSource makeValueSource(SpatialArgs args, DistanceCalculator calc) {\n    PointPrefixTreeFieldCacheProvider p = provider.get( getFieldName() );\n    if( p == null ) {\n      synchronized (this) {//double checked locking idiom is okay since provider is threadsafe\n        p = provider.get( getFieldName() );\n        if (p == null) {\n          p = new PointPrefixTreeFieldCacheProvider(grid, getFieldName(), defaultFieldValuesArrayLen);\n          provider.put(getFieldName(),p);\n        }\n      }\n    }\n    Point point = args.getShape().getCenter();\n    return new ShapeFieldCacheDistanceValueSource(point, calc, p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["0415a016b37e58a017fed0a91234f733ab359971","d3b03639f1b220125a390cee0e3ae4e79c78f371"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0415a016b37e58a017fed0a91234f733ab359971"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d3b03639f1b220125a390cee0e3ae4e79c78f371"],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":["0415a016b37e58a017fed0a91234f733ab359971","d3b03639f1b220125a390cee0e3ae4e79c78f371"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["d3b03639f1b220125a390cee0e3ae4e79c78f371"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"d3b03639f1b220125a390cee0e3ae4e79c78f371":["0415a016b37e58a017fed0a91234f733ab359971"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","d3b03639f1b220125a390cee0e3ae4e79c78f371"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0415a016b37e58a017fed0a91234f733ab359971","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":[],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3b03639f1b220125a390cee0e3ae4e79c78f371":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}