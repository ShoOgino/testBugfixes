{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/QueryDecomposer#decompose(Query).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/QueryDecomposer#decompose(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Split a query up into individual parts that can be indexed and run separately\n   *\n   * @param q the query\n   * @return a collection of subqueries\n   */\n  public Set<Query> decompose(Query q) {\n\n    if (q instanceof BooleanQuery)\n      return decomposeBoolean((BooleanQuery) q);\n\n    if (q instanceof DisjunctionMaxQuery) {\n      Set<Query> subqueries = new HashSet<>();\n      for (Query subq : ((DisjunctionMaxQuery) q).getDisjuncts()) {\n        subqueries.addAll(decompose(subq));\n      }\n      return subqueries;\n    }\n\n    if (q instanceof BoostQuery) {\n      return decomposeBoostQuery((BoostQuery) q);\n    }\n\n    return Collections.singleton(q);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}