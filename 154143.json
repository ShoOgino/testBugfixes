{"path":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","sourceNew":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random.nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","sourceOld":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random.nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","sourceNew":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random.nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","sourceOld":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random.nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","sourceNew":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random.nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","sourceOld":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random.nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","sourceNew":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random().nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","sourceOld":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random.nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d7d3943904804560937e6239effeebda0f920e4","date":1573762904,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#fillCache(SolrCache,int,int).mjava","sourceNew":null,"sourceOld":"  void fillCache(SolrCache sc, int cacheSize, int maxKey) {\n    for (int i=0; i<cacheSize; i++) {\n      Integer kv = random().nextInt(maxKey);\n      sc.put(kv,kv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"4d7d3943904804560937e6239effeebda0f920e4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d7d3943904804560937e6239effeebda0f920e4"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"4d7d3943904804560937e6239effeebda0f920e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["4d7d3943904804560937e6239effeebda0f920e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}