{"path":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","commits":[{"id":"7ef9afbd23e483ed1a80ed787f1640b353275980","date":1426166980,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue( q instanceof ConstantScoreQuery);\n    assertEquals(3.0, q.getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue( q instanceof ConstantScoreQuery );\n    assertEquals(-3.0, q.getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue( q instanceof ConstantScoreQuery);\n    assertEquals(3.0, q.getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue( q instanceof ConstantScoreQuery );\n    assertEquals(-3.0, q.getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue( q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue( q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue( q instanceof ConstantScoreQuery);\n    assertEquals(3.0, q.getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue( q instanceof ConstantScoreQuery );\n    assertEquals(-3.0, q.getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":["7d959d418bddfa46d8eea54f0d8b855165586838"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d959d418bddfa46d8eea54f0d8b855165586838","date":1453938797,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue( q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue( q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue( q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue( q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc5ee54a993d26579e3fe1f8f2a696b46b61c48f","date":1470751445,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bca25eefa1f2205e2b0ef713701dc3a0fecd702","date":1470810578,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", \"lucene\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", \"lucene\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb","date":1512565563,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testCSQ().mjava","sourceNew":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCSQ() throws Exception {\n    SolrQueryRequest req = req();\n\n    QParser qParser = QParser.getParser(\"text:x^=3\", req);\n    Query q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    qParser = QParser.getParser(\"(text:x text:y)^=-3\", req);\n    q = qParser.getQuery();\n    assertTrue(q instanceof BoostQuery);\n    assertTrue(((BoostQuery) q).getQuery() instanceof ConstantScoreQuery);\n    assertEquals(-3.0, ((BoostQuery) q).getBoost(), 0.0f);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["7d959d418bddfa46d8eea54f0d8b855165586838","cc5ee54a993d26579e3fe1f8f2a696b46b61c48f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7ef9afbd23e483ed1a80ed787f1640b353275980"],"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["2dfdf766e55e943d942055d7de53c7ad6bc45283","7d959d418bddfa46d8eea54f0d8b855165586838"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["7ef9afbd23e483ed1a80ed787f1640b353275980"],"cc5ee54a993d26579e3fe1f8f2a696b46b61c48f":["7d959d418bddfa46d8eea54f0d8b855165586838"],"7d959d418bddfa46d8eea54f0d8b855165586838":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"7ef9afbd23e483ed1a80ed787f1640b353275980":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7d959d418bddfa46d8eea54f0d8b855165586838","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["7d959d418bddfa46d8eea54f0d8b855165586838","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb"]},"commit2Childs":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7ef9afbd23e483ed1a80ed787f1640b353275980"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","7d959d418bddfa46d8eea54f0d8b855165586838"],"cc5ee54a993d26579e3fe1f8f2a696b46b61c48f":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"7d959d418bddfa46d8eea54f0d8b855165586838":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cc5ee54a993d26579e3fe1f8f2a696b46b61c48f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"7ef9afbd23e483ed1a80ed787f1640b353275980":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1e6acbaae7af722f17204ceccf0f7db5753eccf3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}