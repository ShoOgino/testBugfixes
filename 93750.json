{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      StoredDocument doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      StoredDocument doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      StoredDocument doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      StoredDocument doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      StoredDocument doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["c26f00b574427b55127e869b935845554afde1fa","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"1d028314cced5858683a1bb4741423d0f934257b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1d028314cced5858683a1bb4741423d0f934257b","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}