{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/GDataIndexer#createGdataIndexer(IndexSchema,Directory,boolean).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/GDataIndexer#createGdataIndexer(IndexSchema,Directory,boolean).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/GDataIndexer#createGdataIndexer(IndexSchema,Directory,boolean).mjava","sourceNew":"    /**\n     * This factory method creates a new GDataIndexer using a instance of\n     * {@link IndexTask}\n     * \n     * @param config -\n     *            the config to be used to configure the indexer\n     * @param dir -\n     *            the directory to index to\n     * @param create -\n     *            <code>true</code> to create a new index, <code>false</code>\n     *            to use the existing one.\n     * @return - a new GDataIndexer instance\n     * @throws IOException -\n     *             if an IOException occurs while initializing the indexer\n     */\n    public static synchronized GDataIndexer createGdataIndexer(\n            final IndexSchema config, Directory dir, boolean create)\n            throws IOException {\n        GDataIndexer retVal = new GDataIndexer(config, dir, create);\n        retVal.setIndexTask(new IndexTask(retVal, retVal.futurQueue));\n        retVal.init();\n        return retVal;\n    }\n\n","sourceOld":"    /**\n     * This factory method creates a new GDataIndexer using a instance of\n     * {@link IndexTask}\n     * \n     * @param config -\n     *            the config to be used to configure the indexer\n     * @param dir -\n     *            the directory to index to\n     * @param create -\n     *            <code>true</code> to create a new index, <code>false</code>\n     *            to use the existing one.\n     * @return - a new GDataIndexer instance\n     * @throws IOException -\n     *             if an IOException occurs while initializing the indexer\n     */\n    public static synchronized GDataIndexer createGdataIndexer(\n            final IndexSchema config, Directory dir, boolean create)\n            throws IOException {\n        GDataIndexer retVal = new GDataIndexer(config, dir, create);\n        retVal.setIndexTask(new IndexTask(retVal, retVal.futurQueue));\n        retVal.init();\n        return retVal;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/GDataIndexer#createGdataIndexer(IndexSchema,Directory,boolean).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/GDataIndexer#createGdataIndexer(IndexSchema,Directory,boolean).mjava","sourceNew":"    /**\n     * This factory method creates a new GDataIndexer using a instance of\n     * {@link IndexTask}\n     * \n     * @param config -\n     *            the config to be used to configure the indexer\n     * @param dir -\n     *            the directory to index to\n     * @param create -\n     *            <code>true</code> to create a new index, <code>false</code>\n     *            to use the existing one.\n     * @return - a new GDataIndexer instance\n     * @throws IOException -\n     *             if an IOException occurs while initializing the indexer\n     */\n    public static synchronized GDataIndexer createGdataIndexer(\n            final IndexSchema config, Directory dir, boolean create)\n            throws IOException {\n        GDataIndexer retVal = new GDataIndexer(config, dir, create);\n        retVal.setIndexTask(new IndexTask(retVal, retVal.futurQueue));\n        retVal.init();\n        return retVal;\n    }\n\n","sourceOld":"    /**\n     * This factory method creates a new GDataIndexer using a instance of\n     * {@link IndexTask}\n     * \n     * @param config -\n     *            the config to be used to configure the indexer\n     * @param dir -\n     *            the directory to index to\n     * @param create -\n     *            <code>true</code> to create a new index, <code>false</code>\n     *            to use the existing one.\n     * @return - a new GDataIndexer instance\n     * @throws IOException -\n     *             if an IOException occurs while initializing the indexer\n     */\n    public static synchronized GDataIndexer createGdataIndexer(\n            final IndexSchema config, Directory dir, boolean create)\n            throws IOException {\n        GDataIndexer retVal = new GDataIndexer(config, dir, create);\n        retVal.setIndexTask(new IndexTask(retVal, retVal.futurQueue));\n        retVal.init();\n        return retVal;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}