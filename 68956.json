{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","sourceNew":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue().doubleValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","sourceOld":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c1b1de9662417cd0392887688b066cc4ae8a83","date":1514901412,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","sourceNew":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue().floatValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","sourceOld":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue().doubleValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/LinearModel#explain(LeafReaderContext,int,float,List[Explanation]).mjava","sourceNew":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue().floatValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","sourceOld":"  @Override\n  public Explanation explain(LeafReaderContext context, int doc,\n      float finalScore, List<Explanation> featureExplanations) {\n    final List<Explanation> details = new ArrayList<>();\n    int index = 0;\n\n    for (final Explanation featureExplain : featureExplanations) {\n      final List<Explanation> featureDetails = new ArrayList<>();\n      featureDetails.add(Explanation.match(featureToWeight[index],\n          \"weight on feature\"));\n      featureDetails.add(featureExplain);\n\n      details.add(Explanation.match(featureExplain.getValue().doubleValue()\n          * featureToWeight[index], \"prod of:\", featureDetails));\n      index++;\n    }\n\n    return Explanation.match(finalScore, toString()\n        + \" model applied to features, sum of:\", details);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","38c1b1de9662417cd0392887688b066cc4ae8a83"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c1b1de9662417cd0392887688b066cc4ae8a83":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["b94236357aaa22b76c10629851fe4e376e0cea82","38c1b1de9662417cd0392887688b066cc4ae8a83"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"38c1b1de9662417cd0392887688b066cc4ae8a83":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}