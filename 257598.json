{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#visit(Cell).mjava","commits":[{"id":"8259c159da2de2e8528524fb76b244b46cbded59","date":1364478249,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#visit(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#visit(Node).mjava","sourceNew":"    /**\n     * Visit an indexed cell returned from\n     * {@link #findSubCellsToVisit(org.apache.lucene.spatial.prefix.tree.Cell)}.\n     *\n     * @param cell An intersecting cell.\n     * @return true to descend to more levels. It is an error to return true\n     * if cell.level == detailLevel\n     */\n    protected abstract boolean visit(Cell cell) throws IOException;\n\n","sourceOld":"    /**\n     * Visit an indexed cell returned from\n     * {@link #findSubCellsToVisit(org.apache.lucene.spatial.prefix.tree.Node)}.\n     *\n     * @param cell An intersecting cell.\n     * @return true to descend to more levels. It is an error to return true\n     * if cell.level == detailLevel\n     */\n    protected abstract boolean visit(Node cell) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55594c8c43c6898b2092b0f1a1310df52521a44a","date":1421338017,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#visit(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#visit(Cell).mjava","sourceNew":"    /**\n     * Visit an indexed non-leaf cell returned from\n     * {@link #findSubCellsToVisit(org.apache.lucene.spatial.prefix.tree.Cell)}\n     * that is also found in the index.\n     * It will also be called by the default implementation of\n     * {@link #visitScanned(org.apache.lucene.spatial.prefix.tree.Cell)} for\n     * cells at the bottom detail level.\n     *\n     * @param cell An intersecting cell; not a leaf.\n     * @return true to descend to more levels. It is an error to return true\n     * if cell.level == detailLevel\n     */\n    protected abstract boolean visit(Cell cell) throws IOException;\n\n","sourceOld":"    /**\n     * Visit an indexed cell returned from\n     * {@link #findSubCellsToVisit(org.apache.lucene.spatial.prefix.tree.Cell)}.\n     *\n     * @param cell An intersecting cell.\n     * @return true to descend to more levels. It is an error to return true\n     * if cell.level == detailLevel\n     */\n    protected abstract boolean visit(Cell cell) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0","date":1426015524,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#visit(Cell).mjava","sourceNew":null,"sourceOld":"    /**\n     * Visit an indexed non-leaf cell returned from\n     * {@link #findSubCellsToVisit(org.apache.lucene.spatial.prefix.tree.Cell)}\n     * that is also found in the index.\n     * It will also be called by the default implementation of\n     * {@link #visitScanned(org.apache.lucene.spatial.prefix.tree.Cell)} for\n     * cells at the bottom detail level.\n     *\n     * @param cell An intersecting cell; not a leaf.\n     * @return true to descend to more levels. It is an error to return true\n     * if cell.level == detailLevel\n     */\n    protected abstract boolean visit(Cell cell) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#visit(Cell).mjava","sourceNew":null,"sourceOld":"    /**\n     * Visit an indexed non-leaf cell returned from\n     * {@link #findSubCellsToVisit(org.apache.lucene.spatial.prefix.tree.Cell)}\n     * that is also found in the index.\n     * It will also be called by the default implementation of\n     * {@link #visitScanned(org.apache.lucene.spatial.prefix.tree.Cell)} for\n     * cells at the bottom detail level.\n     *\n     * @param cell An intersecting cell; not a leaf.\n     * @return true to descend to more levels. It is an error to return true\n     * if cell.level == detailLevel\n     */\n    protected abstract boolean visit(Cell cell) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["55594c8c43c6898b2092b0f1a1310df52521a44a","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["55594c8c43c6898b2092b0f1a1310df52521a44a"],"55594c8c43c6898b2092b0f1a1310df52521a44a":["8259c159da2de2e8528524fb76b244b46cbded59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"8259c159da2de2e8528524fb76b244b46cbded59":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8259c159da2de2e8528524fb76b244b46cbded59"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55594c8c43c6898b2092b0f1a1310df52521a44a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"8259c159da2de2e8528524fb76b244b46cbded59":["55594c8c43c6898b2092b0f1a1310df52521a44a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}