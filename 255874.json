{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor#addStats(SimpleOrderedMap[Object],int,int).mjava","commits":[{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor#addStats(SimpleOrderedMap[Object],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor[FacetField]#addStats(SimpleOrderedMap[Object],int,int).mjava","sourceNew":"  // overrides but with different signature!\n  private void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","sourceOld":"  // overrides but with different signature!\n  void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor#addStats(SimpleOrderedMap[Object],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor[FacetField]#addStats(SimpleOrderedMap[Object],int,int).mjava","sourceNew":"  // overrides but with different signature!\n  private void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","sourceOld":"  // overrides but with different signature!\n  void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor#addStats(SimpleOrderedMap[Object],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor[FacetField]#addStats(SimpleOrderedMap[Object],int,int).mjava","sourceNew":"  // overrides but with different signature!\n  private void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","sourceOld":"  // overrides but with different signature!\n  void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor#addStats(SimpleOrderedMap[Object],int,int).mjava","pathOld":"/dev/null","sourceNew":"  // overrides but with different signature!\n  private void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c841e27891873cab110ebeb89f124a8ec470176","date":1586527220,"type":5,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor#addStats(SimpleOrderedMap[Object],long,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor#addStats(SimpleOrderedMap[Object],int,int).mjava","sourceNew":"  // overrides but with different signature!\n  private void addStats(SimpleOrderedMap<Object> target, long count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","sourceOld":"  // overrides but with different signature!\n  private void addStats(SimpleOrderedMap<Object> target, int count, int slotNum) throws IOException {\n    target.add(\"count\", count);\n    if (count > 0 || freq.processEmpty) {\n      for (SlotAcc acc : accs) {\n        acc.setValues(target, slotNum);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1c841e27891873cab110ebeb89f124a8ec470176":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79759974460bc59933cd169acc94f5c6b16368d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c841e27891873cab110ebeb89f124a8ec470176"]},"commit2Childs":{"1c841e27891873cab110ebeb89f124a8ec470176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["1c841e27891873cab110ebeb89f124a8ec470176","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}