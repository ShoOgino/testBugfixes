{"path":"lucene/core/src/java/org/apache/lucene/search/MultiCollector.MultiLeafCollector#collect(int).mjava","commits":[{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector.MultiLeafCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      for (LeafCollector c : collectors) {\n        c.collect(doc);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector.MultiLeafCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      for (LeafCollector c : collectors) {\n        c.collect(doc);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a6737f45b7f17c3b7802101ea3949a4f52a84e7","date":1441368824,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector.MultiLeafCollector#collect(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiCollector.MultiLeafCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      final LeafCollector[] collectors = this.collectors;\n      int numCollectors = this.numCollectors;\n      for (int i = 0; i < numCollectors; ) {\n        final LeafCollector collector = collectors[i];\n        try {\n          collector.collect(doc);\n          ++i;\n        } catch (CollectionTerminatedException e) {\n          removeCollector(i);\n          numCollectors = this.numCollectors;\n          if (numCollectors == 0) {\n            throw new CollectionTerminatedException();\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      for (LeafCollector c : collectors) {\n        c.collect(doc);\n      }\n    }\n\n","bugFix":["ae73da626f97850c922c42736f808d0378e165f0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"063dae9421f2da2fe272aee10b891f49d21538bd","date":1592500789,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector.MultiLeafCollector#collect(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiCollector.MultiLeafCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      for (int i = 0; i < collectors.length; i++) {\n        final LeafCollector collector = collectors[i];\n        if (collector != null) {\n          try {\n            collector.collect(doc);\n          } catch (CollectionTerminatedException e) {\n            collectors[i] = null;\n            if (allCollectorsTerminated()) {\n              throw new CollectionTerminatedException();\n            }\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      final LeafCollector[] collectors = this.collectors;\n      int numCollectors = this.numCollectors;\n      for (int i = 0; i < numCollectors; ) {\n        final LeafCollector collector = collectors[i];\n        try {\n          collector.collect(doc);\n          ++i;\n        } catch (CollectionTerminatedException e) {\n          removeCollector(i);\n          numCollectors = this.numCollectors;\n          if (numCollectors == 0) {\n            throw new CollectionTerminatedException();\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"063dae9421f2da2fe272aee10b891f49d21538bd":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["063dae9421f2da2fe272aee10b891f49d21538bd"],"2a6737f45b7f17c3b7802101ea3949a4f52a84e7":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"063dae9421f2da2fe272aee10b891f49d21538bd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"2a6737f45b7f17c3b7802101ea3949a4f52a84e7":["063dae9421f2da2fe272aee10b891f49d21538bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}