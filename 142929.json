{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","commits":[{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","sourceOld":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":5,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#missingDefaultTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","sourceOld":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}