{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","commits":[{"id":"c42a37c6ad0772ece32e03ba62d852fe7d83e4b9","date":1427401094,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"/dev/null","sourceNew":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create();\n    request.setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"/dev/null","sourceNew":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create();\n    request.setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182acd29cf4cb1644a02b8517f3a5b867c0d7cce","date":1432665213,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create()\n            .setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create();\n    request.setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP,\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\",\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create()\n            .setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","bugFix":null,"bugIntro":["65025db55f4b3f7bb20cdce46dbab549ed97c005"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP,\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\",\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create()\n            .setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP,\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\",\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create()\n            .setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP,\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\",\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    final CollectionAdminRequest.Create request = new CollectionAdminRequest.Create()\n            .setCollectionName(\"collection\");\n    assertContainsParams(request.getParams(), ACTION, NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65025db55f4b3f7bb20cdce46dbab549ed97c005","date":1529405025,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP, ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP,\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\",\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","bugFix":["ac97ea104d893f16aab430d9904473bc1f233f3c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP, ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP,\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\",\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/CollectionAdminRequestRequiredParamsTest#testCreateCollection().mjava","sourceNew":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP, ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","sourceOld":"  public void testCreateCollection() {\n    // shortest form\n    assertContainsParams(CollectionAdminRequest.createCollection(\"foo\", null, 1, 1).getParams(),\n                         ACTION, NAME, ZkStateReader.NUM_SHARDS_PROP,\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n    // shortest form w/ \"explicitly\" choosing \"implicit\" router\n    assertContainsParams(CollectionAdminRequest.createCollectionWithImplicitRouter(\"foo\", null, \"bar\", 1).getParams(),\n                         ACTION, NAME, \"shards\", \"router.name\",\n                         \"replicationFactor\", ZkStateReader.NRT_REPLICAS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c42a37c6ad0772ece32e03ba62d852fe7d83e4b9"],"65025db55f4b3f7bb20cdce46dbab549ed97c005":["3217321f3e1d7922898c6c633d17acfa840d6875"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["3217321f3e1d7922898c6c633d17acfa840d6875","65025db55f4b3f7bb20cdce46dbab549ed97c005"],"c42a37c6ad0772ece32e03ba62d852fe7d83e4b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3217321f3e1d7922898c6c633d17acfa840d6875":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce","ac97ea104d893f16aab430d9904473bc1f233f3c"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["c42a37c6ad0772ece32e03ba62d852fe7d83e4b9"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce","3217321f3e1d7922898c6c633d17acfa840d6875"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65025db55f4b3f7bb20cdce46dbab549ed97c005"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["3217321f3e1d7922898c6c633d17acfa840d6875","65025db55f4b3f7bb20cdce46dbab549ed97c005"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"65025db55f4b3f7bb20cdce46dbab549ed97c005":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c42a37c6ad0772ece32e03ba62d852fe7d83e4b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c42a37c6ad0772ece32e03ba62d852fe7d83e4b9"],"3217321f3e1d7922898c6c633d17acfa840d6875":["65025db55f4b3f7bb20cdce46dbab549ed97c005","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["e9017cf144952056066919f1ebc7897ff9bd71b1","ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}