{"path":"solr/core/src/java/org/apache/solr/util/tracing/HttpServletCarrier#HttpServletCarrier(HttpServletRequest).mjava","commits":[{"id":"cbaf96cfda5422c42955ce34344f0e01839894ea","date":1559675051,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/tracing/HttpServletCarrier#HttpServletCarrier(HttpServletRequest).mjava","pathOld":"/dev/null","sourceNew":"  public HttpServletCarrier(HttpServletRequest request) {\n    this.it = new Iterator<>() {\n\n      Enumeration<String> headerNameIt = request.getHeaderNames();\n      String headerName = null;\n      Enumeration<String> headerValue = null;\n\n      @Override\n      public boolean hasNext() {\n        if (headerValue != null && headerValue.hasMoreElements()) {\n          return true;\n        }\n\n        return headerNameIt.hasMoreElements();\n      }\n\n      @Override\n      public Map.Entry<String, String> next() {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n\n        if (headerValue == null || !headerValue.hasMoreElements()) {\n          headerName = headerNameIt.nextElement();\n          headerValue = request.getHeaders(headerName);\n        }\n\n        String key = headerName;\n        String val = headerValue.nextElement();\n\n        return new Map.Entry<>() {\n          @Override\n          public String getKey() {\n            return key;\n          }\n\n          @Override\n          public String getValue() {\n            return val;\n          }\n\n          @Override\n          public String setValue(String value) {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4eb740d5e889ebb7c0ca73d9d0e78b8dce70287","date":1559745305,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/tracing/HttpServletCarrier#HttpServletCarrier(HttpServletRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/tracing/HttpServletCarrier#HttpServletCarrier(HttpServletRequest).mjava","sourceNew":"  public HttpServletCarrier(HttpServletRequest request) {\n    this.it = new Iterator<Map.Entry<String, String>>() {\n\n      Enumeration<String> headerNameIt = request.getHeaderNames();\n      String headerName = null;\n      Enumeration<String> headerValue = null;\n\n      @Override\n      public boolean hasNext() {\n        if (headerValue != null && headerValue.hasMoreElements()) {\n          return true;\n        }\n\n        return headerNameIt.hasMoreElements();\n      }\n\n      @Override\n      public Map.Entry<String, String> next() {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n\n        if (headerValue == null || !headerValue.hasMoreElements()) {\n          headerName = headerNameIt.nextElement();\n          headerValue = request.getHeaders(headerName);\n        }\n\n        String key = headerName;\n        String val = headerValue.nextElement();\n\n        return new Map.Entry<String, String>() {\n          @Override\n          public String getKey() {\n            return key;\n          }\n\n          @Override\n          public String getValue() {\n            return val;\n          }\n\n          @Override\n          public String setValue(String value) {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public HttpServletCarrier(HttpServletRequest request) {\n    this.it = new Iterator<>() {\n\n      Enumeration<String> headerNameIt = request.getHeaderNames();\n      String headerName = null;\n      Enumeration<String> headerValue = null;\n\n      @Override\n      public boolean hasNext() {\n        if (headerValue != null && headerValue.hasMoreElements()) {\n          return true;\n        }\n\n        return headerNameIt.hasMoreElements();\n      }\n\n      @Override\n      public Map.Entry<String, String> next() {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n\n        if (headerValue == null || !headerValue.hasMoreElements()) {\n          headerName = headerNameIt.nextElement();\n          headerValue = request.getHeaders(headerName);\n        }\n\n        String key = headerName;\n        String val = headerValue.nextElement();\n\n        return new Map.Entry<>() {\n          @Override\n          public String getKey() {\n            return key;\n          }\n\n          @Override\n          public String getValue() {\n            return val;\n          }\n\n          @Override\n          public String setValue(String value) {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74b921b432cbd898958518556a2d447661d667c3","date":1559819497,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/tracing/HttpServletCarrier#HttpServletCarrier(HttpServletRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/tracing/HttpServletCarrier#HttpServletCarrier(HttpServletRequest).mjava","sourceNew":"  public HttpServletCarrier(HttpServletRequest request) {\n    this.it = new Iterator<>() {\n\n      Enumeration<String> headerNameIt = request.getHeaderNames();\n      String headerName = null;\n      Enumeration<String> headerValue = null;\n\n      @Override\n      public boolean hasNext() {\n        if (headerValue != null && headerValue.hasMoreElements()) {\n          return true;\n        }\n\n        return headerNameIt.hasMoreElements();\n      }\n\n      @Override\n      public Map.Entry<String, String> next() {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n\n        if (headerValue == null || !headerValue.hasMoreElements()) {\n          headerName = headerNameIt.nextElement();\n          headerValue = request.getHeaders(headerName);\n        }\n\n        String key = headerName;\n        String val = headerValue.nextElement();\n\n        return new Map.Entry<>() {\n          @Override\n          public String getKey() {\n            return key;\n          }\n\n          @Override\n          public String getValue() {\n            return val;\n          }\n\n          @Override\n          public String setValue(String value) {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public HttpServletCarrier(HttpServletRequest request) {\n    this.it = new Iterator<Map.Entry<String, String>>() {\n\n      Enumeration<String> headerNameIt = request.getHeaderNames();\n      String headerName = null;\n      Enumeration<String> headerValue = null;\n\n      @Override\n      public boolean hasNext() {\n        if (headerValue != null && headerValue.hasMoreElements()) {\n          return true;\n        }\n\n        return headerNameIt.hasMoreElements();\n      }\n\n      @Override\n      public Map.Entry<String, String> next() {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n\n        if (headerValue == null || !headerValue.hasMoreElements()) {\n          headerName = headerNameIt.nextElement();\n          headerValue = request.getHeaders(headerName);\n        }\n\n        String key = headerName;\n        String val = headerValue.nextElement();\n\n        return new Map.Entry<String, String>() {\n          @Override\n          public String getKey() {\n            return key;\n          }\n\n          @Override\n          public String getValue() {\n            return val;\n          }\n\n          @Override\n          public String setValue(String value) {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cbaf96cfda5422c42955ce34344f0e01839894ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4eb740d5e889ebb7c0ca73d9d0e78b8dce70287":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74b921b432cbd898958518556a2d447661d667c3":["f4eb740d5e889ebb7c0ca73d9d0e78b8dce70287"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74b921b432cbd898958518556a2d447661d667c3"]},"commit2Childs":{"cbaf96cfda5422c42955ce34344f0e01839894ea":["f4eb740d5e889ebb7c0ca73d9d0e78b8dce70287"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"f4eb740d5e889ebb7c0ca73d9d0e78b8dce70287":["74b921b432cbd898958518556a2d447661d667c3"],"74b921b432cbd898958518556a2d447661d667c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}