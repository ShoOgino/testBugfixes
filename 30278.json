{"path":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","sourceNew":"    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","sourceOld":"    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","sourceOld":"    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"360d15dc189fb48153cb62234f7d20819e4e292e","date":1263562938,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["360d15dc189fb48153cb62234f7d20819e4e292e"],"360d15dc189fb48153cb62234f7d20819e4e292e":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["360d15dc189fb48153cb62234f7d20819e4e292e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"360d15dc189fb48153cb62234f7d20819e4e292e":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}