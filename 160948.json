{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","sourceNew":"  /**\n   * getOrdinal() returns the ordinal of the category given as a path.\n   * The ordinal is the category's serial number, an integer which starts\n   * with 0 and grows as more categories are added (note that once a category\n   * is added, it can never be deleted).\n   * <P>\n   * If the given category wasn't found in the taxonomy, INVALID_ORDINAL is\n   * returned.\n   */\n  public int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","sourceOld":"  /**\n   * getOrdinal() returns the ordinal of the category given as a path.\n   * The ordinal is the category's serial number, an integer which starts\n   * with 0 and grows as more categories are added (note that once a category\n   * is added, it can never be deleted).\n   * <P>\n   * If the given category wasn't found in the taxonomy, INVALID_ORDINAL is\n   * returned.\n   */\n  public int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","sourceNew":"  /**\n   * Returns the ordinal of the category given as a path. The ordinal is the\n   * category's serial number, an integer which starts with 0 and grows as more\n   * categories are added (note that once a category is added, it can never be\n   * deleted).\n   * \n   * @return the category's ordinal or {@link #INVALID_ORDINAL} if the category\n   *         wasn't foun.\n   */\n  public abstract int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","sourceOld":"  /**\n   * getOrdinal() returns the ordinal of the category given as a path.\n   * The ordinal is the category's serial number, an integer which starts\n   * with 0 and grows as more categories are added (note that once a category\n   * is added, it can never be deleted).\n   * <P>\n   * If the given category wasn't found in the taxonomy, INVALID_ORDINAL is\n   * returned.\n   */\n  public int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","sourceNew":"  /**\n   * Returns the ordinal of the category given as a path. The ordinal is the\n   * category's serial number, an integer which starts with 0 and grows as more\n   * categories are added (note that once a category is added, it can never be\n   * deleted).\n   * \n   * @return the category's ordinal or {@link #INVALID_ORDINAL} if the category\n   *         wasn't foun.\n   */\n  public abstract int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","sourceOld":"  /**\n   * getOrdinal() returns the ordinal of the category given as a path.\n   * The ordinal is the category's serial number, an integer which starts\n   * with 0 and grows as more categories are added (note that once a category\n   * is added, it can never be deleted).\n   * <P>\n   * If the given category wasn't found in the taxonomy, INVALID_ORDINAL is\n   * returned.\n   */\n  public int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(FacetLabel).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","sourceNew":"  /**\n   * Returns the ordinal of the category given as a path. The ordinal is the\n   * category's serial number, an integer which starts with 0 and grows as more\n   * categories are added (note that once a category is added, it can never be\n   * deleted).\n   * \n   * @return the category's ordinal or {@link #INVALID_ORDINAL} if the category\n   *         wasn't foun.\n   */\n  public abstract int getOrdinal(FacetLabel categoryPath) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the ordinal of the category given as a path. The ordinal is the\n   * category's serial number, an integer which starts with 0 and grows as more\n   * categories are added (note that once a category is added, it can never be\n   * deleted).\n   * \n   * @return the category's ordinal or {@link #INVALID_ORDINAL} if the category\n   *         wasn't foun.\n   */\n  public abstract int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getOrdinal(CategoryPath).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the ordinal of the category given as a path. The ordinal is the\n   * category's serial number, an integer which starts with 0 and grows as more\n   * categories are added (note that once a category is added, it can never be\n   * deleted).\n   * \n   * @return the category's ordinal or {@link #INVALID_ORDINAL} if the category\n   *         wasn't foun.\n   */\n  public abstract int getOrdinal(CategoryPath categoryPath) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}