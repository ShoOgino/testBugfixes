{"path":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","commits":[{"id":"b4cd50ad7936c0f3a0851313b4e0ab861c7a6b17","date":1277233255,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","pathOld":"/dev/null","sourceNew":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = (DocSet)filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","pathOld":"/dev/null","sourceNew":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = (DocSet)filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","date":1286157263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = (DocSet)filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = (DocSet)filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f20bb72b0dfa147c6f1fcd7693102c63a2714eae","date":1303767270,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":null,"sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0663cc678850ea2c51151f9fd217342ea35b8568","date":1303828523,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","pathOld":"/dev/null","sourceNew":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21486a8058ee8d7503c7d7a5e55b6c3a218d0942","date":1303841712,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":null,"sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a405e749df166cf8c456ac9381f77f6c99a6270","date":1303842176,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","pathOld":"/dev/null","sourceNew":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8f944ac3fe3f9d40d825177507fb381d2b106b3","date":1303868525,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":null,"sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d5df8e07c035d62d982894b439322da40e0938","date":1303923139,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":null,"sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":null,"sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getPositiveDocSet(Query,DocsEnumState).mjava","sourceNew":null,"sourceOld":"  // only handle positive (non negative) queries\n  DocSet getPositiveDocSet(Query q, DocsEnumState deState) throws IOException {\n    DocSet answer;\n    if (filterCache != null) {\n      answer = filterCache.get(q);\n      if (answer!=null) return answer;\n    }\n    answer = getDocSetNC(q,null,deState);\n    if (filterCache != null) filterCache.put(q,answer);\n    return answer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d":["b4cd50ad7936c0f3a0851313b4e0ab861c7a6b17"],"b4cd50ad7936c0f3a0851313b4e0ab861c7a6b17":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d5df8e07c035d62d982894b439322da40e0938":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"7a405e749df166cf8c456ac9381f77f6c99a6270":["21486a8058ee8d7503c7d7a5e55b6c3a218d0942"],"f20bb72b0dfa147c6f1fcd7693102c63a2714eae":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"0663cc678850ea2c51151f9fd217342ea35b8568":["f20bb72b0dfa147c6f1fcd7693102c63a2714eae"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b4cd50ad7936c0f3a0851313b4e0ab861c7a6b17"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"f8f944ac3fe3f9d40d825177507fb381d2b106b3":["7a405e749df166cf8c456ac9381f77f6c99a6270"],"a3776dccca01c11e7046323cfad46a3b4a471233":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"21486a8058ee8d7503c7d7a5e55b6c3a218d0942":["0663cc678850ea2c51151f9fd217342ea35b8568"]},"commit2Childs":{"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d":["f20bb72b0dfa147c6f1fcd7693102c63a2714eae","135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a3776dccca01c11e7046323cfad46a3b4a471233"],"b4cd50ad7936c0f3a0851313b4e0ab861c7a6b17":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","5f4e87790277826a2aea119328600dfb07761f32"],"d4d5df8e07c035d62d982894b439322da40e0938":[],"7a405e749df166cf8c456ac9381f77f6c99a6270":["f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"f20bb72b0dfa147c6f1fcd7693102c63a2714eae":["0663cc678850ea2c51151f9fd217342ea35b8568"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"0663cc678850ea2c51151f9fd217342ea35b8568":["21486a8058ee8d7503c7d7a5e55b6c3a218d0942"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d4d5df8e07c035d62d982894b439322da40e0938"],"f8f944ac3fe3f9d40d825177507fb381d2b106b3":["d4d5df8e07c035d62d982894b439322da40e0938","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4cd50ad7936c0f3a0851313b4e0ab861c7a6b17","5f4e87790277826a2aea119328600dfb07761f32"],"21486a8058ee8d7503c7d7a5e55b6c3a218d0942":["7a405e749df166cf8c456ac9381f77f6c99a6270"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d4d5df8e07c035d62d982894b439322da40e0938","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}