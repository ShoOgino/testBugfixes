{"path":"backwards/src/test/org/apache/lucene/index/TestIndexWriterMerging#verifyIndex(Directory,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexWriterMerging#verifyIndex(Directory,int).mjava","pathOld":"/dev/null","sourceNew":"  private boolean verifyIndex(Directory directory, int startAt) throws IOException\n  {\n    boolean fail = false;\n    IndexReader reader = IndexReader.open(directory, true);\n\n    int max = reader.maxDoc();\n    for (int i = 0; i < max; i++)\n    {\n      Document temp = reader.document(i);\n      //System.out.println(\"doc \"+i+\"=\"+temp.getField(\"count\").stringValue());\n      //compare the index doc number to the value that it should be\n      if (!temp.getField(\"count\").stringValue().equals((i + startAt) + \"\"))\n      {\n        fail = true;\n        System.out.println(\"Document \" + (i + startAt) + \" is returning document \" + temp.getField(\"count\").stringValue());\n      }\n    }\n    reader.close();\n    return fail;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterMerging#verifyIndex(Directory,int).mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexWriterMerging#verifyIndex(Directory,int).mjava","sourceNew":"  private boolean verifyIndex(Directory directory, int startAt) throws IOException\n  {\n    boolean fail = false;\n    IndexReader reader = IndexReader.open(directory, true);\n\n    int max = reader.maxDoc();\n    for (int i = 0; i < max; i++)\n    {\n      Document temp = reader.document(i);\n      //System.out.println(\"doc \"+i+\"=\"+temp.getField(\"count\").stringValue());\n      //compare the index doc number to the value that it should be\n      if (!temp.getField(\"count\").stringValue().equals((i + startAt) + \"\"))\n      {\n        fail = true;\n        System.out.println(\"Document \" + (i + startAt) + \" is returning document \" + temp.getField(\"count\").stringValue());\n      }\n    }\n    reader.close();\n    return fail;\n  }\n\n","sourceOld":"  private boolean verifyIndex(Directory directory, int startAt) throws IOException\n  {\n    boolean fail = false;\n    IndexReader reader = IndexReader.open(directory, true);\n\n    int max = reader.maxDoc();\n    for (int i = 0; i < max; i++)\n    {\n      Document temp = reader.document(i);\n      //System.out.println(\"doc \"+i+\"=\"+temp.getField(\"count\").stringValue());\n      //compare the index doc number to the value that it should be\n      if (!temp.getField(\"count\").stringValue().equals((i + startAt) + \"\"))\n      {\n        fail = true;\n        System.out.println(\"Document \" + (i + startAt) + \" is returning document \" + temp.getField(\"count\").stringValue());\n      }\n    }\n    reader.close();\n    return fail;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}