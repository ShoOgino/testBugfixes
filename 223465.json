{"path":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/hack/MiniMRCluster#MiniMRCluster(int,int,int,String,int,String[],String[],UserGroupInformation,JobConf,int,Clock).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/hack/MiniMRCluster#MiniMRCluster(int,int,int,String,int,String[],String[],UserGroupInformation,JobConf,int,Clock).mjava","pathOld":"solr/contrib/solr-mr/src/test/org/apache/solr/hadoop/hack/MiniMRCluster#MiniMRCluster(int,int,int,String,int,String[],String[],UserGroupInformation,JobConf,int,Clock).mjava","sourceNew":"  public MiniMRCluster(int jobTrackerPort, int taskTrackerPort,\n      int numTaskTrackers, String namenode, int numDir, String[] racks,\n      String[] hosts, UserGroupInformation ugi, JobConf conf,\n      int numTrackerToExclude, Clock clock) throws Exception {\n    if (conf == null) conf = new JobConf();\n    FileSystem.setDefaultUri(conf, namenode);\n    String identifier = this.getClass().getSimpleName() + \"_\"\n        + Integer.toString(LuceneTestCase.random().nextInt(Integer.MAX_VALUE));\n    mrClientCluster = MiniMRClientClusterFactory.create(this.getClass(),\n        identifier, numTaskTrackers, conf, new File(conf.get(\"testWorkDir\")));\n  }\n\n","sourceOld":"  public MiniMRCluster(int jobTrackerPort, int taskTrackerPort,\n      int numTaskTrackers, String namenode, int numDir, String[] racks,\n      String[] hosts, UserGroupInformation ugi, JobConf conf,\n      int numTrackerToExclude, Clock clock) throws Exception {\n    if (conf == null) conf = new JobConf();\n    FileSystem.setDefaultUri(conf, namenode);\n    String identifier = this.getClass().getSimpleName() + \"_\"\n        + Integer.toString(LuceneTestCase.random().nextInt(Integer.MAX_VALUE));\n    mrClientCluster = MiniMRClientClusterFactory.create(this.getClass(),\n        identifier, numTaskTrackers, conf, new File(conf.get(\"testWorkDir\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/hack/MiniMRCluster#MiniMRCluster(int,int,int,String,int,String[],String[],UserGroupInformation,JobConf,int,Clock).mjava","pathOld":"/dev/null","sourceNew":"  public MiniMRCluster(int jobTrackerPort, int taskTrackerPort,\n      int numTaskTrackers, String namenode, int numDir, String[] racks,\n      String[] hosts, UserGroupInformation ugi, JobConf conf,\n      int numTrackerToExclude, Clock clock) throws Exception {\n    if (conf == null) conf = new JobConf();\n    FileSystem.setDefaultUri(conf, namenode);\n    String identifier = this.getClass().getSimpleName() + \"_\"\n        + Integer.toString(LuceneTestCase.random().nextInt(Integer.MAX_VALUE));\n    mrClientCluster = MiniMRClientClusterFactory.create(this.getClass(),\n        identifier, numTaskTrackers, conf, new File(conf.get(\"testWorkDir\")));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":4,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/hack/MiniMRCluster#MiniMRCluster(int,int,int,String,int,String[],String[],UserGroupInformation,JobConf,int,Clock).mjava","sourceNew":null,"sourceOld":"  public MiniMRCluster(int jobTrackerPort, int taskTrackerPort,\n      int numTaskTrackers, String namenode, int numDir, String[] racks,\n      String[] hosts, UserGroupInformation ugi, JobConf conf,\n      int numTrackerToExclude, Clock clock) throws Exception {\n    if (conf == null) conf = new JobConf();\n    FileSystem.setDefaultUri(conf, namenode);\n    String identifier = this.getClass().getSimpleName() + \"_\"\n        + Integer.toString(LuceneTestCase.random().nextInt(Integer.MAX_VALUE));\n    mrClientCluster = MiniMRClientClusterFactory.create(this.getClass(),\n        identifier, numTaskTrackers, conf, new File(conf.get(\"testWorkDir\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bcf9886c8ff537aafde14de48ebf744f5673f08b"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}