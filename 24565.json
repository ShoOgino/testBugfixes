{"path":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","sourceNew":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the name already exists, then it is updated to\n   * the new value and boost.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","sourceOld":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the name already exists, then it is updated to\n   * the new value and boost.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","sourceNew":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the name already exists, then it is updated to\n   * the new value and boost.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","sourceOld":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the name already exists, then it is updated to\n   * the new value and boost.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","sourceNew":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the name already exists, then it is updated to\n   * the new value and boost.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","sourceOld":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the name already exists, then it is updated to\n   * the new value and boost.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"974ef146a791a4fadf1226b30089cd7ad7d2983f","date":1347388725,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","sourceNew":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the\n   * name already exists, then the given value is appended to the value of that\n   * field, with the new boost. If the value is a collection, then each of its\n   * values will be added to the field.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","sourceOld":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the name already exists, then it is updated to\n   * the new value and boost.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","bugFix":["add4190e9a92c1419e63a47fca89646356bead0d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcede1b4eab17943b211f8bf2c39965619153b7d","date":1359206377,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","sourceNew":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the\n   * name already exists, then the given value is appended to the value of that\n   * field, with the new boost. If the value is a collection, then each of its\n   * values will be added to the field.\n   *\n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","sourceOld":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the\n   * name already exists, then the given value is appended to the value of that\n   * field, with the new boost. If the value is a collection, then each of its\n   * values will be added to the field.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","sourceNew":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the\n   * name already exists, then the given value is appended to the value of that\n   * field, with the new boost. If the value is a collection, then each of its\n   * values will be added to the field.\n   *\n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","sourceOld":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the\n   * name already exists, then the given value is appended to the value of that\n   * field, with the new boost. If the value is a collection, then each of its\n   * values will be added to the field.\n   *\n   * @param name Name of the field to add\n   * @param value Value of the field\n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Adds a field with the given name, value and boost.  If a field with the\n   * name already exists, then the given value is appended to the value of that\n   * field, with the new boost. If the value is a collection, then each of its\n   * values will be added to the field.\n   *\n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   * @param boost Boost value for the field\n   */\n  public void addField(String name, Object value, float boost ) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value, boost);\n    }\n    else {\n      field.addValue( value, boost );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcede1b4eab17943b211f8bf2c39965619153b7d":["974ef146a791a4fadf1226b30089cd7ad7d2983f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["974ef146a791a4fadf1226b30089cd7ad7d2983f","fcede1b4eab17943b211f8bf2c39965619153b7d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"974ef146a791a4fadf1226b30089cd7ad7d2983f":["c26f00b574427b55127e869b935845554afde1fa"],"acd9883560fd89e6448b2b447302fe543040cd4f":["fcede1b4eab17943b211f8bf2c39965619153b7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"fcede1b4eab17943b211f8bf2c39965619153b7d":["dd45d4a2ee01a1932d33eec42f5272c2402da679","acd9883560fd89e6448b2b447302fe543040cd4f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["974ef146a791a4fadf1226b30089cd7ad7d2983f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"974ef146a791a4fadf1226b30089cd7ad7d2983f":["fcede1b4eab17943b211f8bf2c39965619153b7d","dd45d4a2ee01a1932d33eec42f5272c2402da679"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd45d4a2ee01a1932d33eec42f5272c2402da679","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}