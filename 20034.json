{"path":"modules/spatial/strategy/src/test/org/apache/lucene/spatial/base/distance/TestDistances#testNormLon().mjava","commits":[{"id":"c2047ba81272a0c4edeb11b1c7810ee23ba73502","date":1329808655,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/strategy/src/test/org/apache/lucene/spatial/base/distance/TestDistances#testNormLon().mjava","pathOld":"modules/spatial-TEMP/src/test/org/apache/lucene/spatial/base/distance/TestDistances#testNormLon().mjava","sourceNew":"  @Test\n  public void testNormLon() {\n    double[][] lons = new double[][] {\n        {1.23,1.23},//1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen\n        {-180,-180},{180,-180},{0,0}, {-190,170},\n        {-180-360,-180},{-180-720,-180},{180+360,-180},{180+720,-180}};\n    for (double[] pair : lons) {\n      assertEquals(\"input \"+pair[0],pair[1],ctx.normX(pair[0]),0);\n    }\n    for(int i = -1000; i < 1000; i += random.nextInt(10)*10) {\n      double d = ctx.normX(i);\n      assertTrue(i + \" \" + d, d >= -180 && d < 180);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNormLon() {\n    double[][] lons = new double[][] {\n        {1.23,1.23},//1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen\n        {-180,-180},{180,-180},{0,0}, {-190,170},\n        {-180-360,-180},{-180-720,-180},{180+360,-180},{180+720,-180}};\n    for (double[] pair : lons) {\n      assertEquals(\"input \"+pair[0],pair[1],ctx.normX(pair[0]),0);\n    }\n    for(int i = -1000; i < 1000; i += random.nextInt(10)*10) {\n      double d = ctx.normX(i);\n      assertTrue(i + \" \" + d, d >= -180 && d < 180);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f1f1ac95d9e689fc66dc6bcc5c7ab19fe9fc37a","date":1330032413,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/base/src/test/org/apache/lucene/spatial/base/distance/TestDistances#testNormLon().mjava","pathOld":"modules/spatial/strategy/src/test/org/apache/lucene/spatial/base/distance/TestDistances#testNormLon().mjava","sourceNew":"  @Test\n  public void testNormLon() {\n    double[][] lons = new double[][] {\n        {1.23,1.23},//1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen\n        {-180,-180},{180,-180},{0,0}, {-190,170},\n        {-180-360,-180},{-180-720,-180},{180+360,-180},{180+720,-180}};\n    for (double[] pair : lons) {\n      Assert.assertEquals(\"input \" + pair[0], pair[1], ctx.normX(pair[0]), 0);\n    }\n    for(int i = -1000; i < 1000; i += LuceneTestCase.random.nextInt(10)*10) {\n      double d = ctx.normX(i);\n      Assert.assertTrue(i + \" \" + d, d >= -180 && d < 180);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNormLon() {\n    double[][] lons = new double[][] {\n        {1.23,1.23},//1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen\n        {-180,-180},{180,-180},{0,0}, {-190,170},\n        {-180-360,-180},{-180-720,-180},{180+360,-180},{180+720,-180}};\n    for (double[] pair : lons) {\n      assertEquals(\"input \"+pair[0],pair[1],ctx.normX(pair[0]),0);\n    }\n    for(int i = -1000; i < 1000; i += random.nextInt(10)*10) {\n      double d = ctx.normX(i);\n      assertTrue(i + \" \" + d, d >= -180 && d < 180);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4f1f1ac95d9e689fc66dc6bcc5c7ab19fe9fc37a":["c2047ba81272a0c4edeb11b1c7810ee23ba73502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["4f1f1ac95d9e689fc66dc6bcc5c7ab19fe9fc37a"],"4f1f1ac95d9e689fc66dc6bcc5c7ab19fe9fc37a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2047ba81272a0c4edeb11b1c7810ee23ba73502","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4f1f1ac95d9e689fc66dc6bcc5c7ab19fe9fc37a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}