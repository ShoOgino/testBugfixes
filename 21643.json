{"path":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter,MergeTrigger).mjava","commits":[{"id":"d2178aefcd4690bd53785e9673e2c918cdb64165","date":1587583605,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter,MergeTrigger).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter,MergeTrigger,boolean).mjava","sourceNew":"    @Override\n    public void merge(IndexWriter writer, MergeTrigger trigger) throws IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString());\n        }\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(IndexWriter writer, MergeTrigger trigger, boolean newMergesFound) throws IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString());\n        }\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89697e7abc9807639c384eecf5a2a6eef1080426","date":1587733375,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(MergeSource,MergeTrigger).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter,MergeTrigger).mjava","sourceNew":"    @Override\n    public void merge(MergeSource mergeSource, MergeTrigger trigger) throws IOException {\n      OneMerge merge = null;\n      while ((merge = mergeSource.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString());\n        }\n        mergeSource.merge(merge);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(IndexWriter writer, MergeTrigger trigger) throws IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString());\n        }\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89697e7abc9807639c384eecf5a2a6eef1080426":["d2178aefcd4690bd53785e9673e2c918cdb64165"],"d2178aefcd4690bd53785e9673e2c918cdb64165":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89697e7abc9807639c384eecf5a2a6eef1080426"]},"commit2Childs":{"89697e7abc9807639c384eecf5a2a6eef1080426":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2178aefcd4690bd53785e9673e2c918cdb64165":["89697e7abc9807639c384eecf5a2a6eef1080426"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2178aefcd4690bd53785e9673e2c918cdb64165"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}