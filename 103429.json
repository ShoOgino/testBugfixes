{"path":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader#binarySearch(long,long,long).mjava","commits":[{"id":"70a4487b07c49a1861c05720e04624826ecbe9fa","date":1580924108,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader#binarySearch(long,long,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return the index of a key if it exists, or its insertion point otherwise\n   * like {@link Arrays#binarySearch(long[], int, int, long)}.\n   *\n   * @see Arrays#binarySearch(long[], int, int, long)\n   */\n  public long binarySearch(long fromIndex, long toIndex, long key) {\n    if (fromIndex < 0 || fromIndex > toIndex) {\n      throw new IllegalArgumentException(\"fromIndex=\" + fromIndex + \",toIndex=\" + toIndex);\n    }\n    long lo = fromIndex;\n    long hi = toIndex - 1;\n\n    while (lo <= hi) {\n      final long mid = (lo + hi) >>> 1;\n      // Try to run as many iterations of the binary search as possible without\n      // hitting the direct readers, since they might hit a page fault.\n      final long[] bounds = getBounds(mid);\n      if (bounds[1] < key) {\n        lo = mid + 1;\n      } else if (bounds[0] > key) {\n        hi = mid - 1;\n      } else {\n        final long midVal = get(mid);\n        if (midVal < key) {\n          lo = mid + 1;\n        } else if (midVal > key) {\n          hi = mid - 1;\n        } else {\n          return mid;\n        }\n      }\n    }\n\n    return -1 - lo;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70a4487b07c49a1861c05720e04624826ecbe9fa"]},"commit2Childs":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70a4487b07c49a1861c05720e04624826ecbe9fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}