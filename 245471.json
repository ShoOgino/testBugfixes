{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilderLight#addSuffix(State,CharSequence,int).mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilderLight#addSuffix(State,CharSequence,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add a suffix of <code>current</code> starting at <code>fromIndex</code>\n   * (inclusive) to state <code>state</code>.\n   */\n  private void addSuffix(State state, CharSequence current, int fromIndex) {\n    final int len = current.length();\n    while (fromIndex < len) {\n      int cp = Character.codePointAt(current, fromIndex);\n      state = state.newState(cp);\n      fromIndex += Character.charCount(cp);\n    }\n    state.is_final = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder#addSuffix(State,CharSequence,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilderLight#addSuffix(State,CharSequence,int).mjava","sourceNew":"  /**\n   * Add a suffix of <code>current</code> starting at <code>fromIndex</code>\n   * (inclusive) to state <code>state</code>.\n   */\n  private void addSuffix(State state, CharSequence current, int fromIndex) {\n    final int len = current.length();\n    while (fromIndex < len) {\n      int cp = Character.codePointAt(current, fromIndex);\n      state = state.newState(cp);\n      fromIndex += Character.charCount(cp);\n    }\n    state.is_final = true;\n  }\n\n","sourceOld":"  /**\n   * Add a suffix of <code>current</code> starting at <code>fromIndex</code>\n   * (inclusive) to state <code>state</code>.\n   */\n  private void addSuffix(State state, CharSequence current, int fromIndex) {\n    final int len = current.length();\n    while (fromIndex < len) {\n      int cp = Character.codePointAt(current, fromIndex);\n      state = state.newState(cp);\n      fromIndex += Character.charCount(cp);\n    }\n    state.is_final = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}