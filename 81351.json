{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#getAllDims(int).mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#getAllDims(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacets#getAllDims(int).mjava","sourceNew":"  @Override\n  public List<FacetResult> getAllDims(int topN) throws IOException {\n    int ord = children[TaxonomyReader.ROOT_ORDINAL];\n    List<FacetResult> results = new ArrayList<FacetResult>();\n    while (ord != TaxonomyReader.INVALID_ORDINAL) {\n      String dim = taxoReader.getPath(ord).components[0];\n      FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n      if (dimConfig.indexFieldName.equals(indexFieldName)) {\n        FacetResult result = getTopChildren(topN, dim);\n        if (result != null) {\n          results.add(result);\n        }\n      }\n      ord = siblings[ord];\n    }\n\n    // Sort by highest value, tie break by dim:\n    Collections.sort(results, BY_VALUE_THEN_DIM);\n    return results;\n  }\n\n","sourceOld":"  @Override\n  public List<FacetResult> getAllDims(int topN) throws IOException {\n    int ord = children[TaxonomyReader.ROOT_ORDINAL];\n    List<FacetResult> results = new ArrayList<FacetResult>();\n    while (ord != TaxonomyReader.INVALID_ORDINAL) {\n      String dim = taxoReader.getPath(ord).components[0];\n      FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n      if (dimConfig.indexFieldName.equals(indexFieldName)) {\n        FacetResult result = getTopChildren(topN, dim);\n        if (result != null) {\n          results.add(result);\n        }\n      }\n      ord = siblings[ord];\n    }\n\n    // Sort by highest value, tie break by value:\n    Collections.sort(results,\n                     new Comparator<FacetResult>() {\n                       @Override\n                       public int compare(FacetResult a, FacetResult b) {\n                         if (a.value.doubleValue() > b.value.doubleValue()) {\n                           return -1;\n                         } else if (b.value.doubleValue() > a.value.doubleValue()) {\n                           return 1;\n                         } else {\n                           return a.dim.compareTo(b.dim);\n                         }\n                       }\n                     });\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#getAllDims(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<FacetResult> getAllDims(int topN) throws IOException {\n    int ord = children[TaxonomyReader.ROOT_ORDINAL];\n    List<FacetResult> results = new ArrayList<FacetResult>();\n    while (ord != TaxonomyReader.INVALID_ORDINAL) {\n      String dim = taxoReader.getPath(ord).components[0];\n      FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n      if (dimConfig.indexFieldName.equals(indexFieldName)) {\n        FacetResult result = getTopChildren(topN, dim);\n        if (result != null) {\n          results.add(result);\n        }\n      }\n      ord = siblings[ord];\n    }\n\n    // Sort by highest value, tie break by dim:\n    Collections.sort(results, BY_VALUE_THEN_DIM);\n    return results;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#getAllDims(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#getAllDims(int).mjava","sourceNew":"  @Override\n  public List<FacetResult> getAllDims(int topN) throws IOException {\n    int ord = children[TaxonomyReader.ROOT_ORDINAL];\n    List<FacetResult> results = new ArrayList<>();\n    while (ord != TaxonomyReader.INVALID_ORDINAL) {\n      String dim = taxoReader.getPath(ord).components[0];\n      FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n      if (dimConfig.indexFieldName.equals(indexFieldName)) {\n        FacetResult result = getTopChildren(topN, dim);\n        if (result != null) {\n          results.add(result);\n        }\n      }\n      ord = siblings[ord];\n    }\n\n    // Sort by highest value, tie break by dim:\n    Collections.sort(results, BY_VALUE_THEN_DIM);\n    return results;\n  }\n\n","sourceOld":"  @Override\n  public List<FacetResult> getAllDims(int topN) throws IOException {\n    int ord = children[TaxonomyReader.ROOT_ORDINAL];\n    List<FacetResult> results = new ArrayList<FacetResult>();\n    while (ord != TaxonomyReader.INVALID_ORDINAL) {\n      String dim = taxoReader.getPath(ord).components[0];\n      FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n      if (dimConfig.indexFieldName.equals(indexFieldName)) {\n        FacetResult result = getTopChildren(topN, dim);\n        if (result != null) {\n          results.add(result);\n        }\n      }\n      ord = siblings[ord];\n    }\n\n    // Sort by highest value, tie break by dim:\n    Collections.sort(results, BY_VALUE_THEN_DIM);\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7","date":1509555533,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#getAllDims(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#getAllDims(int).mjava","sourceNew":"  @Override\n  public List<FacetResult> getAllDims(int topN) throws IOException {\n    int[] children = getChildren();\n    int[] siblings = getSiblings();\n    int ord = children[TaxonomyReader.ROOT_ORDINAL];\n    List<FacetResult> results = new ArrayList<>();\n    while (ord != TaxonomyReader.INVALID_ORDINAL) {\n      String dim = taxoReader.getPath(ord).components[0];\n      FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n      if (dimConfig.indexFieldName.equals(indexFieldName)) {\n        FacetResult result = getTopChildren(topN, dim);\n        if (result != null) {\n          results.add(result);\n        }\n      }\n      ord = siblings[ord];\n    }\n\n    // Sort by highest value, tie break by dim:\n    Collections.sort(results, BY_VALUE_THEN_DIM);\n    return results;\n  }\n\n","sourceOld":"  @Override\n  public List<FacetResult> getAllDims(int topN) throws IOException {\n    int ord = children[TaxonomyReader.ROOT_ORDINAL];\n    List<FacetResult> results = new ArrayList<>();\n    while (ord != TaxonomyReader.INVALID_ORDINAL) {\n      String dim = taxoReader.getPath(ord).components[0];\n      FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n      if (dimConfig.indexFieldName.equals(indexFieldName)) {\n        FacetResult result = getTopChildren(topN, dim);\n        if (result != null) {\n          results.add(result);\n        }\n      }\n      ord = siblings[ord];\n    }\n\n    // Sort by highest value, tie break by dim:\n    Collections.sort(results, BY_VALUE_THEN_DIM);\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["10b1c9af2d877ca8d718a359a4e5b285fe33b6f7"],"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["10b1c9af2d877ca8d718a359a4e5b285fe33b6f7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}