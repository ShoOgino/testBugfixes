{"path":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        Random random = newRandom();\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        Random random = newRandom();\n        MockRAMDirectory rd1 = new MockRAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        MockRAMDirectory rd2 = new MockRAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        Random random = newRandom();\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        Random random = newRandom();\n        rd1 = newDirectory(random);\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory(random);\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        Random random = newRandom();\n        MockRAMDirectory rd1 = new MockRAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        MockRAMDirectory rd2 = new MockRAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        Random random = newRandom();\n        rd1 = newDirectory(random);\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory(random);\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n\n        RAMDirectory rd1 = new RAMDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(new Field(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        RAMDirectory rd2 = new RAMDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(new Field(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(new Field(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(new Field(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", Store.YES,\n            Index.ANALYZED));\n        doc.add(newField(\"field4\", \"\", Store.NO, Index.ANALYZED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", Store.NO, Index.ANALYZED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\",\n            Store.YES, Index.ANALYZED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1);\n        this.ir2 = IndexReader.open(rd2);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1);\n        this.ir2 = IndexReader.open(rd2);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1);\n        this.ir2 = IndexReader.open(rd2);\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1, true);\n        this.ir2 = IndexReader.open(rd2, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","date":1327858596,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1));\n        this.ir2 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2));\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1);\n        this.ir2 = IndexReader.open(rd2);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1));\n        this.ir2 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2));\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = IndexReader.open(rd1);\n        this.ir2 = IndexReader.open(rd2);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelTermEnum#setUp().mjava","sourceNew":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1));\n        this.ir2 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2));\n    }\n\n","sourceOld":"    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        Document doc;\n        rd1 = newDirectory();\n        IndexWriter iw1 = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field1\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field2\", \"the quick brown fox jumps\", TextField.TYPE_STORED));\n        doc.add(newField(\"field4\", \"\", TextField.TYPE_UNSTORED));\n        iw1.addDocument(doc);\n\n        iw1.close();\n        rd2 = newDirectory();\n        IndexWriter iw2 = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n        doc = new Document();\n        doc.add(newField(\"field0\", \"\", TextField.TYPE_UNSTORED));\n        doc.add(newField(\"field1\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        doc.add(newField(\"field3\", \"the fox jumps over the lazy dog\", TextField.TYPE_STORED));\n        iw2.addDocument(doc);\n\n        iw2.close();\n\n        this.ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1));\n        this.ir2 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["1509f151d7692d84fae414b2b799ac06ba60fcb4","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["43b04c27924fe393e38e9f0986e32c634f261859","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["43b04c27924fe393e38e9f0986e32c634f261859"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["43b04c27924fe393e38e9f0986e32c634f261859","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["1509f151d7692d84fae414b2b799ac06ba60fcb4","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"43b04c27924fe393e38e9f0986e32c634f261859":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}