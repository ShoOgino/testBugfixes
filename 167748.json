{"path":"src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","commits":[{"id":"f5da033ca17e193329c76dcd2795af4df340d34c","date":1204212664,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"/dev/null","sourceNew":"    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","sourceOld":"    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f5da033ca17e193329c76dcd2795af4df340d34c"],"f5da033ca17e193329c76dcd2795af4df340d34c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f5da033ca17e193329c76dcd2795af4df340d34c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f5da033ca17e193329c76dcd2795af4df340d34c":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}