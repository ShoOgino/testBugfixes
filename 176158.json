{"path":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32e7c2a80dad193a76a03ec46b878969d469ff6c","date":1323722006,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues latDV = lat.getValues(context, readerContext);\n    final FunctionValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new FunctionValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues latDV = lat.getValues(context, readerContext);\n    final FunctionValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new FunctionValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues latDV = lat.getValues(context, readerContext);\n    final DocValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new DocValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3859e567816d5987602f2a7ae2469fcdf17f745e","date":1329895924,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues latDV = lat.getValues(context, readerContext);\n    final FunctionValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new FunctionValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeohashUtils.encodeLatLon(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues latDV = lat.getValues(context, readerContext);\n    final FunctionValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new FunctionValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues latDV = lat.getValues(context, readerContext);\n    final FunctionValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new FunctionValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeohashUtils.encodeLatLon(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues latDV = lat.getValues(context, readerContext);\n    final FunctionValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new FunctionValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeoHashUtils.encode(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues latDV = lat.getValues(context, readerContext);\n    final FunctionValues lonDV = lon.getValues(context, readerContext);\n\n\n    return new FunctionValues() {\n\n      @Override\n      public String strVal(int doc) {\n        return GeohashUtils.encodeLatLon(latDV.doubleVal(doc), lonDV.doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(latDV.toString(doc)).append(',').append(lonDV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["c26f00b574427b55127e869b935845554afde1fa"],"e47768b261c28e7e6032060e8331475c81057953":["d638301ad1cfcae567b681b893bc8781f0ee48a5","3859e567816d5987602f2a7ae2469fcdf17f745e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e47768b261c28e7e6032060e8331475c81057953"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["c26f00b574427b55127e869b935845554afde1fa","32e7c2a80dad193a76a03ec46b878969d469ff6c"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["32e7c2a80dad193a76a03ec46b878969d469ff6c","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"e47768b261c28e7e6032060e8331475c81057953":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["e47768b261c28e7e6032060e8331475c81057953"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["e47768b261c28e7e6032060e8331475c81057953","3859e567816d5987602f2a7ae2469fcdf17f745e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}