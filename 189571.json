{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","commits":[{"id":"fe52ff382a90016f1f6f34f2a026c4749eebb1b8","date":1541503646,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","pathOld":"/dev/null","sourceNew":"  public void testUnresolvedSuggestion() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n//    System.out.println(Utils.writeJson(suggestions, new StringWriter(), true).toString());\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved-violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58e890cd5653ae8550bc6088d739f4eaaf950aff","date":1547036285,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","sourceNew":"  public void testUnresolvedSuggestion() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved-violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n  }\n\n","sourceOld":"  public void testUnresolvedSuggestion() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n//    System.out.println(Utils.writeJson(suggestions, new StringWriter(), true).toString());\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved-violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4","date":1558992012,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","sourceNew":"  public void testUnresolvedSuggestion() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved_violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n  }\n\n","sourceOld":"  public void testUnresolvedSuggestion() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved-violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","sourceNew":"  public void testUnresolvedSuggestion() {\n    @SuppressWarnings({\"unchecked\"})\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    @SuppressWarnings({\"unchecked\"})\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved_violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n  }\n\n","sourceOld":"  public void testUnresolvedSuggestion() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved_violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testUnresolvedSuggestion().mjava","sourceNew":null,"sourceOld":"  public void testUnresolvedSuggestion() {\n    @SuppressWarnings({\"unchecked\"})\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testUnresolvedSuggestion.json\");\n\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    @SuppressWarnings({\"unchecked\"})\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"))\n        , cloudManagerFromDiagnostics);\n    for (Suggester.SuggestionInfo suggestion : suggestions) {\n      assertEquals(\"unresolved_violation\", suggestion._get(\"type\", null));\n      assertEquals(\"1.0\", suggestion._getStr(\"violation/violation/delta\", null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4"],"58e890cd5653ae8550bc6088d739f4eaaf950aff":["fe52ff382a90016f1f6f34f2a026c4749eebb1b8"],"3f504512a03d978990cbff30db0522b354e846db":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe52ff382a90016f1f6f34f2a026c4749eebb1b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["3f504512a03d978990cbff30db0522b354e846db"],"58e890cd5653ae8550bc6088d739f4eaaf950aff":["fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe52ff382a90016f1f6f34f2a026c4749eebb1b8"],"fe52ff382a90016f1f6f34f2a026c4749eebb1b8":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}