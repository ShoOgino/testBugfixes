{"path":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","commits":[{"id":"95ae76773bf2b95987d5f9c8f566ab3738953fb4","date":1301758351,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SeekStatus seek(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seek(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          term = null;\n          return null;\n        }\n        ord++;\n      }\n\n      setTerm();\n      return term == null ? SeekStatus.END : SeekStatus.FOUND;\n      //System.out.println(\"  return term=\" + term.utf8ToString());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SeekStatus seek(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seek(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          term = null;\n          return null;\n        }\n        ord++;\n      }\n\n      setTerm();\n      return term == null ? SeekStatus.END : SeekStatus.FOUND;\n      //System.out.println(\"  return term=\" + term.utf8ToString());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SeekStatus seek(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seek(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          term = null;\n          return null;\n        }\n        ord++;\n      }\n\n      setTerm();\n      return term == null ? SeekStatus.END : SeekStatus.FOUND;\n      //System.out.println(\"  return term=\" + term.utf8ToString());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SeekStatus seek(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seek(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          term = null;\n          return null;\n        }\n        ord++;\n      }\n\n      setTerm();\n      return term == null ? SeekStatus.END : SeekStatus.FOUND;\n      //System.out.println(\"  return term=\" + term.utf8ToString());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9cc9d77712aba3662f24632df7539ab75e3667","date":1309095238,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seekExact(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","sourceNew":"    @Override\n    public void seekExact(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord + \" ii=\" + indexInterval);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seekCeil(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          assert false;\n          return;\n        }\n        ord++;\n      }\n\n      setTerm();\n      assert term != null;\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seek(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seek(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          term = null;\n          return null;\n        }\n        ord++;\n      }\n\n      setTerm();\n      return term == null ? SeekStatus.END : SeekStatus.FOUND;\n      //System.out.println(\"  return term=\" + term.utf8ToString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seekExact(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","sourceNew":"    @Override\n    public void seekExact(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord + \" ii=\" + indexInterval);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seekCeil(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          assert false;\n          return;\n        }\n        ord++;\n      }\n\n      setTerm();\n      assert term != null;\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seek(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seek(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          term = null;\n          return null;\n        }\n        ord++;\n      }\n\n      setTerm();\n      return term == null ? SeekStatus.END : SeekStatus.FOUND;\n      //System.out.println(\"  return term=\" + term.utf8ToString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds.OrdWrappedTermsEnum#seek(long).mjava","sourceNew":null,"sourceOld":"    @Override\n    public SeekStatus seek(long targetOrd) throws IOException {\n      int delta = (int) (targetOrd - ordBase - ord);\n      //System.out.println(\"  seek(ord) targetOrd=\" + targetOrd + \" delta=\" + delta + \" ord=\" + ord);\n      if (delta < 0 || delta > indexInterval) {\n        final int idx = (int) (targetOrd >>> indexIntervalBits);\n        final BytesRef base = indexedTermsArray[idx];\n        //System.out.println(\"  do seek term=\" + base.utf8ToString());\n        ord = idx << indexIntervalBits;\n        delta = (int) (targetOrd - ord);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seek(base, true);\n        assert seekStatus == TermsEnum.SeekStatus.FOUND;\n      } else {\n        //System.out.println(\"seek w/in block\");\n      }\n\n      while (--delta >= 0) {\n        BytesRef br = termsEnum.next();\n        if (br == null) {\n          term = null;\n          return null;\n        }\n        ord++;\n      }\n\n      setTerm();\n      return term == null ? SeekStatus.END : SeekStatus.FOUND;\n      //System.out.println(\"  return term=\" + term.utf8ToString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"2553b00f699380c64959ccb27991289aae87be2e":["a3776dccca01c11e7046323cfad46a3b4a471233","fd9cc9d77712aba3662f24632df7539ab75e3667"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["95ae76773bf2b95987d5f9c8f566ab3738953fb4","fd9cc9d77712aba3662f24632df7539ab75e3667"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd9cc9d77712aba3662f24632df7539ab75e3667"]},"commit2Childs":{"a3776dccca01c11e7046323cfad46a3b4a471233":["2553b00f699380c64959ccb27991289aae87be2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","95ae76773bf2b95987d5f9c8f566ab3738953fb4","45669a651c970812a680841b97a77cce06af559f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"2553b00f699380c64959ccb27991289aae87be2e":[],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","fd9cc9d77712aba3662f24632df7539ab75e3667","d083e83f225b11e5fdd900e83d26ddb385b6955c","45669a651c970812a680841b97a77cce06af559f"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}