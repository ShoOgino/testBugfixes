{"path":"src/java/org/apache/lucene/index/IndexFileDeleter#deleteSegments(Vector,HashSet).mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter#deleteSegments(Vector,HashSet).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Delete these segments, as long as they are not listed\n   * in protectedSegments.  If they are, then, instead, add\n   * them to the pending set.\n  */\n     \n  public final void deleteSegments(Vector segments, HashSet protectedSegments) throws IOException {\n\n    deleteFiles();                                // try to delete files that we couldn't before\n\n    for (int i = 0; i < segments.size(); i++) {\n      SegmentReader reader = (SegmentReader)segments.elementAt(i);\n      if (reader.directory() == this.directory) {\n        if (protectedSegments.contains(reader.getSegmentName())) {\n          addPendingFiles(reader.files()); // record these for deletion on commit\n        } else {\n          deleteFiles(reader.files()); // try to delete our files\n        }\n      }  else {\n        deleteFiles(reader.files(), reader.directory()); // delete other files\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65fde38a949fadb9cf6008bc632c72c2ada2393d","date":1170531935,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter#deleteSegments(Vector,HashSet).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter#deleteSegments(Vector,HashSet).mjava","sourceNew":"  /**\n   * Delete these segments, as long as they are not listed\n   * in protectedSegments.  If they are, then, instead, add\n   * them to the pending set.\n  */\n     \n  void deleteSegments(Vector segments, HashSet protectedSegments) throws IOException {\n\n    deleteFiles();                                // try to delete files that we couldn't before\n\n    for (int i = 0; i < segments.size(); i++) {\n      SegmentReader reader = (SegmentReader)segments.elementAt(i);\n      if (reader.directory() == this.directory) {\n        if (protectedSegments.contains(reader.getSegmentName())) {\n          addPendingFiles(reader.files()); // record these for deletion on commit\n        } else {\n          deleteFiles(reader.files()); // try to delete our files\n        }\n      }  else {\n        deleteFiles(reader.files(), reader.directory()); // delete other files\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Delete these segments, as long as they are not listed\n   * in protectedSegments.  If they are, then, instead, add\n   * them to the pending set.\n  */\n     \n  public final void deleteSegments(Vector segments, HashSet protectedSegments) throws IOException {\n\n    deleteFiles();                                // try to delete files that we couldn't before\n\n    for (int i = 0; i < segments.size(); i++) {\n      SegmentReader reader = (SegmentReader)segments.elementAt(i);\n      if (reader.directory() == this.directory) {\n        if (protectedSegments.contains(reader.getSegmentName())) {\n          addPendingFiles(reader.files()); // record these for deletion on commit\n        } else {\n          deleteFiles(reader.files()); // try to delete our files\n        }\n      }  else {\n        deleteFiles(reader.files(), reader.directory()); // delete other files\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter#deleteSegments(Vector,HashSet).mjava","sourceNew":null,"sourceOld":"  /**\n   * Delete these segments, as long as they are not listed\n   * in protectedSegments.  If they are, then, instead, add\n   * them to the pending set.\n  */\n     \n  void deleteSegments(Vector segments, HashSet protectedSegments) throws IOException {\n\n    deleteFiles();                                // try to delete files that we couldn't before\n\n    for (int i = 0; i < segments.size(); i++) {\n      SegmentReader reader = (SegmentReader)segments.elementAt(i);\n      if (reader.directory() == this.directory) {\n        if (protectedSegments.contains(reader.getSegmentName())) {\n          addPendingFiles(reader.files()); // record these for deletion on commit\n        } else {\n          deleteFiles(reader.files()); // try to delete our files\n        }\n      }  else {\n        deleteFiles(reader.files(), reader.directory()); // delete other files\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65fde38a949fadb9cf6008bc632c72c2ada2393d":["eeefd99c477417e5c7c574228461ebafe92469d4"],"8b6187898fc4413ccd18229711786550a280383c":["65fde38a949fadb9cf6008bc632c72c2ada2393d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b6187898fc4413ccd18229711786550a280383c"]},"commit2Childs":{"eeefd99c477417e5c7c574228461ebafe92469d4":["65fde38a949fadb9cf6008bc632c72c2ada2393d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"65fde38a949fadb9cf6008bc632c72c2ada2393d":["8b6187898fc4413ccd18229711786550a280383c"],"8b6187898fc4413ccd18229711786550a280383c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}