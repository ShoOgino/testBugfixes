{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#rangeStats(Object,int,String,String,boolean,boolean).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#rangeStats(Object,int,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private SimpleOrderedMap<Object> rangeStats(Object label, int mincount, String low, String high, boolean iLow, boolean iHigh) throws IOException {\n    SimpleOrderedMap<Object> bucket = new SimpleOrderedMap<>();\n\n    // typically the start value of the range, but null for before/after/between\n    if (label != null) {\n      bucket.add(\"val\", label);\n    }\n\n    Query rangeQ = sf.getType().getRangeQuery(null, sf, low, high, iLow, iHigh);\n    fillBucket(bucket, rangeQ);\n\n    return bucket;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#rangeStats(Object,int,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private SimpleOrderedMap<Object> rangeStats(Object label, int mincount, String low, String high, boolean iLow, boolean iHigh) throws IOException {\n    SimpleOrderedMap<Object> bucket = new SimpleOrderedMap<>();\n\n    // typically the start value of the range, but null for before/after/between\n    if (label != null) {\n      bucket.add(\"val\", label);\n    }\n\n    Query rangeQ = sf.getType().getRangeQuery(null, sf, low, high, iLow, iHigh);\n    fillBucket(bucket, rangeQ);\n\n    return bucket;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"330e80d31a51e837b9cc906035e114377c0501dc","date":1429994103,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#rangeStats(Range,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#rangeStats(Object,int,String,String,boolean,boolean).mjava","sourceNew":"  private  SimpleOrderedMap<Object> rangeStats(Range range, boolean special ) throws IOException {\n    SimpleOrderedMap<Object> bucket = new SimpleOrderedMap<>();\n\n    // typically the start value of the range, but null for before/after/between\n    if (!special) {\n      bucket.add(\"val\", range.label);\n    }\n\n    Query rangeQ = sf.getType().getRangeQuery(null, sf, range.low == null ? null : calc.formatValue(range.low), range.high==null ? null : calc.formatValue(range.high), range.includeLower, range.includeUpper);\n    fillBucket(bucket, rangeQ);\n\n    return bucket;\n  }\n\n","sourceOld":"  private SimpleOrderedMap<Object> rangeStats(Object label, int mincount, String low, String high, boolean iLow, boolean iHigh) throws IOException {\n    SimpleOrderedMap<Object> bucket = new SimpleOrderedMap<>();\n\n    // typically the start value of the range, but null for before/after/between\n    if (label != null) {\n      bucket.add(\"val\", label);\n    }\n\n    Query rangeQ = sf.getType().getRangeQuery(null, sf, low, high, iLow, iHigh);\n    fillBucket(bucket, rangeQ);\n\n    return bucket;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"330e80d31a51e837b9cc906035e114377c0501dc":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["330e80d31a51e837b9cc906035e114377c0501dc"]},"commit2Childs":{"330e80d31a51e837b9cc906035e114377c0501dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["330e80d31a51e837b9cc906035e114377c0501dc","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}