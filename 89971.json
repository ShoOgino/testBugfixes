{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","commits":[{"id":"3106630d90d0d9e238f170a5cb83cd1dee5ddd72","date":1343657007,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testCaseInsensitive().mjava","sourceNew":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"articles\", \"frenchArticles.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.init(args);\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"articles\", \"frenchArticles.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.init(args);\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"articles\", \"frenchArticles.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.init(args);\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"articles\", \"frenchArticles.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.init(args);\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","sourceNew":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"Elision\",\n        \"articles\", \"frenchArticles.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"articles\", \"frenchArticles.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.init(args);\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testCaseInsensitive().mjava","sourceNew":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    TokenStream stream = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    ((Tokenizer)stream).setReader(reader);\n    stream = tokenFilterFactory(\"Elision\",\n        \"articles\", \"frenchArticles.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test setting ignoreCase=true\n   */\n  public void testCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"L'avion\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"Elision\",\n        \"articles\", \"frenchArticles.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"3106630d90d0d9e238f170a5cb83cd1dee5ddd72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"3106630d90d0d9e238f170a5cb83cd1dee5ddd72":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}