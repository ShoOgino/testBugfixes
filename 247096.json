{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","commits":[{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.term = term;\n      this.state = state;\n    }\n\n","sourceOld":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.term = term;\n      this.state = state;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.term = term;\n      this.state = state;\n    }\n\n","sourceOld":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.term = term;\n      this.state = state;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f838187609fee3a1afa5f162f93c796046242c84","date":1406216791,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n    }\n\n","sourceOld":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.term = term;\n      this.state = state;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState,PrefixTerm).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state, PrefixTerm prefixTerm) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n      this.prefixTerm = prefixTerm;\n    }\n\n","sourceOld":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState,PrefixTerm).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state, PrefixTerm prefixTerm) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n      this.prefixTerm = prefixTerm;\n    }\n\n","sourceOld":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25b8a027ba57951e63075a2ae9647c5c4a8c5c5f","date":1466407389,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState,PrefixTerm).mjava","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n    }\n\n","sourceOld":"    public PendingTerm(BytesRef term, BlockTermState state, PrefixTerm prefixTerm) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n      this.prefixTerm = prefixTerm;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aaba221b22442bdf0ef28770c25fe259dfb3f55","date":1466496193,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState,PrefixTerm).mjava","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n    }\n\n","sourceOld":"    public PendingTerm(BytesRef term, BlockTermState state, PrefixTerm prefixTerm) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n      this.prefixTerm = prefixTerm;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.PendingTerm#PendingTerm(BytesRef,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"    public PendingTerm(BytesRef term, BlockTermState state) {\n      super(true);\n      this.termBytes = new byte[term.length];\n      System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);\n      this.state = state;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["3e8715d826e588419327562287d5d6a8040d63d6","25b8a027ba57951e63075a2ae9647c5c4a8c5c5f"],"25b8a027ba57951e63075a2ae9647c5c4a8c5c5f":["3e8715d826e588419327562287d5d6a8040d63d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["f838187609fee3a1afa5f162f93c796046242c84","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["f838187609fee3a1afa5f162f93c796046242c84"],"f838187609fee3a1afa5f162f93c796046242c84":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3e8715d826e588419327562287d5d6a8040d63d6","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"]},"commit2Childs":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["f838187609fee3a1afa5f162f93c796046242c84"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"25b8a027ba57951e63075a2ae9647c5c4a8c5c5f":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d637064d608752565d4f9f41b2497dfdfdde50e","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3e8715d826e588419327562287d5d6a8040d63d6":["6aaba221b22442bdf0ef28770c25fe259dfb3f55","25b8a027ba57951e63075a2ae9647c5c4a8c5c5f","d2638f781be724518ff6c2263d14a48cf6e68017","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f838187609fee3a1afa5f162f93c796046242c84":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}