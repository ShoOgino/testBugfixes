{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos(SegmentInfoPerCommit).mjava","commits":[{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos(SegmentInfoPerCommit).mjava","pathOld":"/dev/null","sourceNew":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos(SegmentInfoPerCommit si) {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = si.getDocValuesGen(fi.number);\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos(SegmentInfoPerCommit).mjava","sourceNew":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos(SegmentInfoPerCommit si) {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","sourceOld":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos(SegmentInfoPerCommit si) {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = si.getDocValuesGen(fi.number);\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f13fb377f9b5df46af44bf90a2e507a884f2c30","date":1380476222,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos(SegmentInfoPerCommit).mjava","sourceNew":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos() {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","sourceOld":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos(SegmentInfoPerCommit si) {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8435160e9702b19398118ddf76b61c846612b6a4":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"2f13fb377f9b5df46af44bf90a2e507a884f2c30":["8435160e9702b19398118ddf76b61c846612b6a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f13fb377f9b5df46af44bf90a2e507a884f2c30"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["8435160e9702b19398118ddf76b61c846612b6a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"8435160e9702b19398118ddf76b61c846612b6a4":["2f13fb377f9b5df46af44bf90a2e507a884f2c30"],"2f13fb377f9b5df46af44bf90a2e507a884f2c30":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}