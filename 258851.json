{"path":"lucene/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(IndexOutput).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(IndexOutput).mjava","pathOld":"src/java/org/apache/lucene/store/RAMOutputStream#writeTo(IndexOutput).mjava","sourceNew":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(IndexOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","sourceOld":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(IndexOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(IndexOutput).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(IndexOutput).mjava","sourceNew":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(IndexOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","sourceOld":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(IndexOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}