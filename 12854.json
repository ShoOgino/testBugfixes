{"path":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","commits":[{"id":"108e81824177a1a9f2507addadb8894e1cdf9afc","date":1280934266,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SingleIntIndexInput.Index#read(IndexInput,boolean).mjava","sourceNew":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SingleIntIndexInput.Index#read(IndexInput,boolean).mjava","sourceNew":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","sourceNew":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","sourceNew":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["108e81824177a1a9f2507addadb8894e1cdf9afc","b1add9ddc0005b07550d4350720aac22dc9886b3"],"108e81824177a1a9f2507addadb8894e1cdf9afc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["108e81824177a1a9f2507addadb8894e1cdf9afc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","108e81824177a1a9f2507addadb8894e1cdf9afc"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1add9ddc0005b07550d4350720aac22dc9886b3"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"108e81824177a1a9f2507addadb8894e1cdf9afc":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["108e81824177a1a9f2507addadb8894e1cdf9afc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}