{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String).mjava","commits":[{"id":"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264","date":1499421663,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This will update the include file (e.g. solr.in.sh / solr.in.cmd) with the authentication parameters.\n     * @param includeFile The include file\n     * @param basicAuthConfFile  If basicAuth, the path of the file containing credentials. If not, null.\n     * @param kerberosConfig If kerberos, the config string containing startup parameters. If not, null.\n     */\n    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile, String kerberosConfig) throws IOException {\n      assert !(basicAuthConfFile != null && kerberosConfig != null); // only one of the two needs to be populated\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      \n      if (basicAuthConfFile != null) { // for basicAuth\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        }\n      } else { // for kerberos\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=kerberos\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"kerberos\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"\" + kerberosConfig + \"\\\"\");\n        }        \n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      if (basicAuthConfFile != null) {\n        System.out.println(\"Written out credentials file: \" + basicAuthConfFile);\n      }\n      System.out.println(\"Updated Solr include file: \" + includeFile.getAbsolutePath());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9a989a32a073c55e3aef6f807a3474184bbcf49","date":1499930209,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This will update the include file (e.g. solr.in.sh / solr.in.cmd) with the authentication parameters.\n     * @param includeFile The include file\n     * @param basicAuthConfFile  If basicAuth, the path of the file containing credentials. If not, null.\n     * @param kerberosConfig If kerberos, the config string containing startup parameters. If not, null.\n     */\n    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile, String kerberosConfig) throws IOException {\n      assert !(basicAuthConfFile != null && kerberosConfig != null); // only one of the two needs to be populated\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      \n      if (basicAuthConfFile != null) { // for basicAuth\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        }\n      } else { // for kerberos\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=kerberos\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"kerberos\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"\" + kerberosConfig + \"\\\"\");\n        }        \n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      if (basicAuthConfFile != null) {\n        System.out.println(\"Written out credentials file: \" + basicAuthConfFile);\n      }\n      System.out.println(\"Updated Solr include file: \" + includeFile.getAbsolutePath());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb569fd721c41eafc2a2d788499a7df490c7f1a5","date":1499930871,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This will update the include file (e.g. solr.in.sh / solr.in.cmd) with the authentication parameters.\n     * @param includeFile The include file\n     * @param basicAuthConfFile  If basicAuth, the path of the file containing credentials. If not, null.\n     * @param kerberosConfig If kerberos, the config string containing startup parameters. If not, null.\n     */\n    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile, String kerberosConfig) throws IOException {\n      assert !(basicAuthConfFile != null && kerberosConfig != null); // only one of the two needs to be populated\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      \n      if (basicAuthConfFile != null) { // for basicAuth\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        }\n      } else { // for kerberos\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=kerberos\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"kerberos\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"\" + kerberosConfig + \"\\\"\");\n        }        \n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      if (basicAuthConfFile != null) {\n        System.out.println(\"Written out credentials file: \" + basicAuthConfFile);\n      }\n      System.out.println(\"Updated Solr include file: \" + includeFile.getAbsolutePath());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String,CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String).mjava","sourceNew":"    /**\n     * This will update the include file (e.g. solr.in.sh / solr.in.cmd) with the authentication parameters.\n     * @param includeFile The include file\n     * @param basicAuthConfFile  If basicAuth, the path of the file containing credentials. If not, null.\n     * @param kerberosConfig If kerberos, the config string containing startup parameters. If not, null.\n     */\n    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile, String kerberosConfig, CommandLine cli) throws IOException {\n      assert !(basicAuthConfFile != null && kerberosConfig != null); // only one of the two needs to be populated\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      \n      if (basicAuthConfFile != null) { // for basicAuth\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        }\n      } else { // for kerberos\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=kerberos\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"kerberos\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"\" + kerberosConfig + \"\\\"\");\n        }        \n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      if (basicAuthConfFile != null) {\n        echoIfVerbose(\"Written out credentials file: \" + basicAuthConfFile, cli);\n      }\n      echoIfVerbose(\"Updated Solr include file: \" + includeFile.getAbsolutePath(), cli);\n    }\n\n","sourceOld":"    /**\n     * This will update the include file (e.g. solr.in.sh / solr.in.cmd) with the authentication parameters.\n     * @param includeFile The include file\n     * @param basicAuthConfFile  If basicAuth, the path of the file containing credentials. If not, null.\n     * @param kerberosConfig If kerberos, the config string containing startup parameters. If not, null.\n     */\n    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile, String kerberosConfig) throws IOException {\n      assert !(basicAuthConfFile != null && kerberosConfig != null); // only one of the two needs to be populated\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      \n      if (basicAuthConfFile != null) { // for basicAuth\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        }\n      } else { // for kerberos\n        if (SystemUtils.IS_OS_WINDOWS) {\n          includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n          includeFileLines.add(\"set SOLR_AUTH_TYPE=kerberos\");\n          includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n        } else {\n          includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n          includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"kerberos\\\"\");\n          includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"\" + kerberosConfig + \"\\\"\");\n        }        \n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      if (basicAuthConfFile != null) {\n        System.out.println(\"Written out credentials file: \" + basicAuthConfFile);\n      }\n      System.out.println(\"Updated Solr include file: \" + includeFile.getAbsolutePath());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["fb569fd721c41eafc2a2d788499a7df490c7f1a5","6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb569fd721c41eafc2a2d788499a7df490c7f1a5","6e12ffe0fc2f16d13edb8f82cd33da7cbedda264","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","f9a989a32a073c55e3aef6f807a3474184bbcf49","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["fb569fd721c41eafc2a2d788499a7df490c7f1a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}