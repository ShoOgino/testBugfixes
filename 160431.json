{"path":"lucene/misc/src/java/org/apache/lucene/misc/GetTermInfo#getTermInfo(Directory,String,BytesRef).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/GetTermInfo#getTermInfo(Directory,String,BytesRef).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/GetTermInfo#getTermInfo(Directory,String,BytesRef).mjava","sourceNew":"  public static void getTermInfo(Directory dir, String field, BytesRef termtext) throws Exception {\n    IndexReader reader = IndexReader.open(dir);\n    long totalTF = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    System.out.printf(\"%s:%s \\t totalTF = %,d \\t doc freq = %,d \\n\",\n         field, termtext.utf8ToString(), totalTF, reader.docFreq(field, termtext)); \n  }\n\n","sourceOld":"  public static void getTermInfo(Directory dir, String field, BytesRef termtext) throws Exception {\n    IndexReader reader = IndexReader.open(dir);\n    long totalTF = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    System.out.printf(\"%s:%s \\t totalTF = %,d \\t doc freq = %,d \\n\",\n         field, termtext.utf8ToString(), totalTF, reader.docFreq(field, termtext)); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/GetTermInfo#getTermInfo(Directory,String,BytesRef).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/GetTermInfo#getTermInfo(Directory,String,BytesRef).mjava","sourceNew":"  public static void getTermInfo(Directory dir, String field, BytesRef termtext) throws Exception {\n    IndexReader reader = DirectoryReader.open(dir);\n    long totalTF = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    System.out.printf(\"%s:%s \\t totalTF = %,d \\t doc freq = %,d \\n\",\n         field, termtext.utf8ToString(), totalTF, reader.docFreq(field, termtext)); \n  }\n\n","sourceOld":"  public static void getTermInfo(Directory dir, String field, BytesRef termtext) throws Exception {\n    IndexReader reader = IndexReader.open(dir);\n    long totalTF = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    System.out.printf(\"%s:%s \\t totalTF = %,d \\t doc freq = %,d \\n\",\n         field, termtext.utf8ToString(), totalTF, reader.docFreq(field, termtext)); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a0e3c1c21aac8ecf75706605133012833585c7","date":1347535263,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/GetTermInfo#getTermInfo(Directory,Term).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/GetTermInfo#getTermInfo(Directory,String,BytesRef).mjava","sourceNew":"  public static void getTermInfo(Directory dir, Term term) throws Exception {\n    IndexReader reader = DirectoryReader.open(dir);\n    long totalTF = HighFreqTerms.getTotalTermFreq(reader, term);\n    System.out.printf(\"%s:%s \\t totalTF = %,d \\t doc freq = %,d \\n\",\n         term.field(), term.text(), totalTF, reader.docFreq(term)); \n  }\n\n","sourceOld":"  public static void getTermInfo(Directory dir, String field, BytesRef termtext) throws Exception {\n    IndexReader reader = DirectoryReader.open(dir);\n    long totalTF = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    System.out.printf(\"%s:%s \\t totalTF = %,d \\t doc freq = %,d \\n\",\n         field, termtext.utf8ToString(), totalTF, reader.docFreq(field, termtext)); \n  }\n\n","bugFix":null,"bugIntro":["f0aae73ca2eeb899108e9fe36611ddf5a83ec790"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6a0e3c1c21aac8ecf75706605133012833585c7":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6a0e3c1c21aac8ecf75706605133012833585c7"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b6a0e3c1c21aac8ecf75706605133012833585c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b6a0e3c1c21aac8ecf75706605133012833585c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}