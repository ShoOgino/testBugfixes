{"path":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testFieldNonExistent().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testFieldNonExistent().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testFieldNonExistent().mjava","sourceNew":"  public void testFieldNonExistent() throws IOException {\n    try {\n      indexReader = DirectoryReader.open(store);\n\n      ld = new LuceneDictionary(indexReader, \"nonexistent_field\");\n      it = ld.getWordsIterator();\n\n      assertNull(\"More elements than expected\", spare = it.next());\n    } finally {\n      if  (indexReader != null) { indexReader.close(); }\n    }\n  }\n\n","sourceOld":"  public void testFieldNonExistent() throws IOException {\n    try {\n      indexReader = DirectoryReader.open(store);\n\n      ld = new LuceneDictionary(indexReader, \"nonexistent_field\");\n      it = ld.getWordsIterator();\n\n      assertNull(\"More elements than expected\", spare = it.next());\n    } finally {\n      if  (indexReader != null) { indexReader.close(); }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testFieldNonExistent().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testFieldNonExistent().mjava","sourceNew":"  public void testFieldNonExistent() throws IOException {\n    try {\n      indexReader = DirectoryReader.open(store);\n\n      ld = new LuceneDictionary(indexReader, \"nonexistent_field\");\n      it = ld.getEntryIterator();\n\n      assertNull(\"More elements than expected\", spare = it.next());\n    } finally {\n      if  (indexReader != null) { indexReader.close(); }\n    }\n  }\n\n","sourceOld":"  public void testFieldNonExistent() throws IOException {\n    try {\n      indexReader = DirectoryReader.open(store);\n\n      ld = new LuceneDictionary(indexReader, \"nonexistent_field\");\n      it = ld.getWordsIterator();\n\n      assertNull(\"More elements than expected\", spare = it.next());\n    } finally {\n      if  (indexReader != null) { indexReader.close(); }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a645276cbaf5dc96a42fd473b9019bde352996c8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a645276cbaf5dc96a42fd473b9019bde352996c8"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}