{"path":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testMixedSoftDeletesAndHardDeletes().mjava","commits":[{"id":"b3f926ac330be2198e6be3ace82e76b8c3a3b2c8","date":1535113998,"type":0,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testMixedSoftDeletesAndHardDeletes().mjava","pathOld":"/dev/null","sourceNew":"  public void testMixedSoftDeletesAndHardDeletes() throws Exception {\n    Directory dir = newDirectory();\n    String softDeletesField = \"soft-deletes\";\n    IndexWriterConfig config = newIndexWriterConfig()\n        .setMaxBufferedDocs(2 + random().nextInt(50)).setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH)\n        .setSoftDeletesField(softDeletesField)\n        .setMergePolicy(new SoftDeletesRetentionMergePolicy(softDeletesField, MatchAllDocsQuery::new, newMergePolicy()));\n    IndexWriter writer = new IndexWriter(dir, config);\n    int numDocs = 10 + random().nextInt(100);\n    Set<String> liveDocs = new HashSet<>();\n    for (int i = 0; i < numDocs; i++) {\n      String id = Integer.toString(i);\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", id, Field.Store.YES));\n      writer.addDocument(doc);\n      liveDocs.add(id);\n    }\n    for (int i = 0; i < numDocs; i++) {\n      if (random().nextBoolean()) {\n        String id = Integer.toString(i);\n        if (random().nextBoolean() && liveDocs.contains(id)) {\n          doUpdate(new Term(\"id\", id), writer, new NumericDocValuesField(softDeletesField, 1));\n        } else {\n          Document doc = new Document();\n          doc.add(new StringField(\"id\", \"v\" + id, Field.Store.YES));\n          writer.softUpdateDocument(new Term(\"id\", id), doc, new NumericDocValuesField(softDeletesField, 1));\n          liveDocs.add(\"v\" + id);\n        }\n      }\n      if (random().nextBoolean() && liveDocs.isEmpty() == false) {\n        String delId = RandomPicks.randomFrom(random(), liveDocs);\n        if (random().nextBoolean()) {\n          doDelete(new Term(\"id\", delId), writer);\n        } else {\n          writer.deleteDocuments(new Term(\"id\", delId));\n        }\n        liveDocs.remove(delId);\n      }\n    }\n    try (DirectoryReader unwrapped = writer.getReader()) {\n      DirectoryReader reader = new IncludeSoftDeletesWrapper(unwrapped);\n      assertEquals(liveDocs.size(), reader.numDocs());\n    }\n    writer.commit();\n    IOUtils.close(writer, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3f926ac330be2198e6be3ace82e76b8c3a3b2c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b3f926ac330be2198e6be3ace82e76b8c3a3b2c8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3f926ac330be2198e6be3ace82e76b8c3a3b2c8"],"b3f926ac330be2198e6be3ace82e76b8c3a3b2c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}