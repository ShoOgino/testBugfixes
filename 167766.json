{"path":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","commits":[{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","pathOld":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      });\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","pathOld":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      });\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","pathOld":"/dev/null","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      });\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache#testInfoStream().mjava","sourceNew":null,"sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.LEGACY_DOUBLE_PARSER);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return LegacyNumericUtils.filterPrefixCodedLongs(terms.iterator());\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) LegacyNumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      });\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"d211216c83f01894810543d1c107160a9ae3650b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0e121d43b5a10f2df530f406f935102656e9c4e8","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"83870855d82aba6819217abeff5a40779dbb28b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","83870855d82aba6819217abeff5a40779dbb28b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d211216c83f01894810543d1c107160a9ae3650b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d211216c83f01894810543d1c107160a9ae3650b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}