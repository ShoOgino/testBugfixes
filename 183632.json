{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#Lucene40PostingsReader(Directory,SegmentInfo,IOContext,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#Lucene40PostingsReader(Directory,SegmentInfo,IOContext,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#Lucene40PostingsReader(Directory,SegmentInfo,IOContext,String).mjava","sourceNew":"  public Lucene40PostingsReader(Directory dir, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.FREQ_EXTENSION),\n                           ioContext);\n    // this.segment = segmentInfo.name;\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.PROX_EXTENSION),\n                               ioContext);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","sourceOld":"  public Lucene40PostingsReader(Directory dir, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.FREQ_EXTENSION),\n                           ioContext);\n    // this.segment = segmentInfo.name;\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.PROX_EXTENSION),\n                               ioContext);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc97c61094c5498702b29cc2e8309beac50c23dc","date":1337293692,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#Lucene40PostingsReader(Directory,FieldInfos,SegmentInfo,IOContext,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#Lucene40PostingsReader(Directory,SegmentInfo,IOContext,String).mjava","sourceNew":"  public Lucene40PostingsReader(Directory dir, FieldInfos fieldInfos, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.FREQ_EXTENSION),\n                           ioContext);\n    // this.segment = segmentInfo.name;\n    if (fieldInfos.hasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.PROX_EXTENSION),\n                               ioContext);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","sourceOld":"  public Lucene40PostingsReader(Directory dir, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.FREQ_EXTENSION),\n                           ioContext);\n    // this.segment = segmentInfo.name;\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.PROX_EXTENSION),\n                               ioContext);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["dd5dd283c3d9f22e186699bf823c9d1e67f49152","dd5dd283c3d9f22e186699bf823c9d1e67f49152"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#Lucene40PostingsReader(Directory,FieldInfos,SegmentInfo,IOContext,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#Lucene40PostingsReader(Directory,SegmentInfo,IOContext,String).mjava","sourceNew":"  public Lucene40PostingsReader(Directory dir, FieldInfos fieldInfos, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.FREQ_EXTENSION),\n                           ioContext);\n    // TODO: hasProx should (somehow!) become codec private,\n    // but it's tricky because 1) FIS.hasProx is global (it\n    // could be all fields that have prox are written by a\n    // different codec), 2) the field may have had prox in\n    // the past but all docs w/ that field were deleted.\n    // Really we'd need to init prxOut lazily on write, and\n    // then somewhere record that we actually wrote it so we\n    // know whether to open on read:\n    if (fieldInfos.hasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.PROX_EXTENSION),\n                               ioContext);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","sourceOld":"  public Lucene40PostingsReader(Directory dir, SegmentInfo segmentInfo, IOContext ioContext, String segmentSuffix) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.FREQ_EXTENSION),\n                           ioContext);\n    // this.segment = segmentInfo.name;\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.PROX_EXTENSION),\n                               ioContext);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","dc97c61094c5498702b29cc2e8309beac50c23dc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dc97c61094c5498702b29cc2e8309beac50c23dc":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","dc97c61094c5498702b29cc2e8309beac50c23dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"dc97c61094c5498702b29cc2e8309beac50c23dc":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}