{"path":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<String>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<String>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<String>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<String>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<String>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<String>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<String>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get( \"name\" );\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24afe17ee9b62806cc187a12e64464b32d6d40f5","date":1489486414,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    NamedList<String> props = new SimpleOrderedMap<>();\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      String property = getSecuredPropertyValue(name);\n      props.add( name, property);\n    }\n    else {\n      Enumeration<?> enumeration = System.getProperties().propertyNames();\n      while(enumeration.hasMoreElements()){\n        name = (String) enumeration.nextElement();\n        props.add(name, getSecuredPropertyValue(name));\n      }\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84c8c7a47fe3b0d8d374144fbcbb1088fd191148","date":1489651910,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    NamedList<String> props = new SimpleOrderedMap<>();\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      String property = getSecuredPropertyValue(name);\n      props.add( name, property);\n    }\n    else {\n      Enumeration<?> enumeration = System.getProperties().propertyNames();\n      while(enumeration.hasMoreElements()){\n        name = (String) enumeration.nextElement();\n        props.add(name, getSecuredPropertyValue(name));\n      }\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    NamedList<String> props = new SimpleOrderedMap<>();\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      String property = getSecuredPropertyValue(name);\n      props.add( name, property);\n    }\n    else {\n      Enumeration<?> enumeration = System.getProperties().propertyNames();\n      while(enumeration.hasMoreElements()){\n        name = (String) enumeration.nextElement();\n        props.add(name, getSecuredPropertyValue(name));\n      }\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {\n    Object props = null;\n    String name = req.getParams().get(NAME);\n    if( name != null ) {\n      NamedList<String> p = new SimpleOrderedMap<>();\n      p.add( name, System.getProperty(name) );\n      props = p;\n    }\n    else {\n      props = System.getProperties();\n    }\n    rsp.add( \"system.properties\", props );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84c8c7a47fe3b0d8d374144fbcbb1088fd191148":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","1390137e395d2f07f9ba5b8c43d293befe84d563"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"24afe17ee9b62806cc187a12e64464b32d6d40f5":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"ab68488225b6a6c357dda72ed11dedca9914a192":["1390137e395d2f07f9ba5b8c43d293befe84d563","84c8c7a47fe3b0d8d374144fbcbb1088fd191148"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24afe17ee9b62806cc187a12e64464b32d6d40f5"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1390137e395d2f07f9ba5b8c43d293befe84d563","d2638f781be724518ff6c2263d14a48cf6e68017"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"84c8c7a47fe3b0d8d374144fbcbb1088fd191148":["ab68488225b6a6c357dda72ed11dedca9914a192"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["84c8c7a47fe3b0d8d374144fbcbb1088fd191148","d2638f781be724518ff6c2263d14a48cf6e68017","24afe17ee9b62806cc187a12e64464b32d6d40f5","ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"24afe17ee9b62806cc187a12e64464b32d6d40f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","a258fbb26824fd104ed795e5d9033d2d040049ee","ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}