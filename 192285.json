{"path":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","commits":[{"id":"8f1ea787bab5bdb5e72685e55424898da05509b6","date":1370289750,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","pathOld":"/dev/null","sourceNew":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id, int n) throws Exception {\n    index(\"id\", id, \"n_ti\", n);\n\n    int idx = getHashRangeIdx(router, ranges, docCounts, id);\n    if (idx != -1)  {\n      docCounts[idx]++;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1816753738ff1f27f11b38030e83c0ded050b7a4","date":1380106089,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","sourceNew":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id, int n) throws Exception {\n    index(\"id\", id, \"n_ti\", n);\n\n    int idx = getHashRangeIdx(router, ranges, id);\n    if (idx != -1)  {\n      docCounts[idx]++;\n    }\n  }\n\n","sourceOld":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id, int n) throws Exception {\n    index(\"id\", id, \"n_ti\", n);\n\n    int idx = getHashRangeIdx(router, ranges, docCounts, id);\n    if (idx != -1)  {\n      docCounts[idx]++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","sourceNew":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id, int n) throws Exception {\n    index(\"id\", id, \"n_ti\", n);\n\n    int idx = getHashRangeIdx(router, ranges, id);\n    if (idx != -1)  {\n      docCounts[idx]++;\n    }\n  }\n\n","sourceOld":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id, int n) throws Exception {\n    index(\"id\", id, \"n_ti\", n);\n\n    int idx = getHashRangeIdx(router, ranges, id);\n    if (idx != -1)  {\n      docCounts[idx]++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String,int).mjava","sourceNew":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id, int n) throws Exception {\n    index(\"id\", id, \"n_ti\", n);\n\n    int idx = getHashRangeIdx(router, ranges, id);\n    if (idx != -1)  {\n      docCounts[idx]++;\n    }\n  }\n\n","sourceOld":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id, int n) throws Exception {\n    index(\"id\", id, \"n_ti\", n);\n\n    int idx = getHashRangeIdx(router, ranges, id);\n    if (idx != -1)  {\n      docCounts[idx]++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1816753738ff1f27f11b38030e83c0ded050b7a4":["8f1ea787bab5bdb5e72685e55424898da05509b6"],"b94236357aaa22b76c10629851fe4e376e0cea82":["1816753738ff1f27f11b38030e83c0ded050b7a4","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"8f1ea787bab5bdb5e72685e55424898da05509b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"1816753738ff1f27f11b38030e83c0ded050b7a4":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8f1ea787bab5bdb5e72685e55424898da05509b6":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f1ea787bab5bdb5e72685e55424898da05509b6"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}