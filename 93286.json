{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.TokenStreamConcurrent#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.TokenStreamConcurrent#incrementToken().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.TokenStreamConcurrent#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      this.i++;\n      if (this.i >= this.tokens.length) {\n        return false;\n      }\n      clearAttributes();\n      termAttribute.setTermBuffer(this.tokens[i].term(), 0, this.tokens[i]\n          .term().length());\n      offsetAttribute.setOffset(this.tokens[i].startOffset(), this.tokens[i]\n          .endOffset());\n      positionIncrementAttribute.setPositionIncrement(this.tokens[i]\n          .getPositionIncrement());\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      this.i++;\n      if (this.i >= this.tokens.length) {\n        return false;\n      }\n      clearAttributes();\n      termAttribute.setTermBuffer(this.tokens[i].term(), 0, this.tokens[i]\n          .term().length());\n      offsetAttribute.setOffset(this.tokens[i].startOffset(), this.tokens[i]\n          .endOffset());\n      positionIncrementAttribute.setPositionIncrement(this.tokens[i]\n          .getPositionIncrement());\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.TokenStreamConcurrent#incrementToken().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.TokenStreamConcurrent#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      this.i++;\n      if (this.i >= this.tokens.length) {\n        return false;\n      }\n      clearAttributes();\n      termAttribute.setEmpty().append(this.tokens[i]);\n      offsetAttribute.setOffset(this.tokens[i].startOffset(), this.tokens[i]\n          .endOffset());\n      positionIncrementAttribute.setPositionIncrement(this.tokens[i]\n          .getPositionIncrement());\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      this.i++;\n      if (this.i >= this.tokens.length) {\n        return false;\n      }\n      clearAttributes();\n      termAttribute.setTermBuffer(this.tokens[i].term(), 0, this.tokens[i]\n          .term().length());\n      offsetAttribute.setOffset(this.tokens[i].startOffset(), this.tokens[i]\n          .endOffset());\n      positionIncrementAttribute.setPositionIncrement(this.tokens[i]\n          .getPositionIncrement());\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.TokenStreamConcurrent#incrementToken().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.TokenStreamConcurrent#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      this.i++;\n      if (this.i >= this.tokens.length) {\n        return false;\n      }\n      clearAttributes();\n      termAttribute.setEmpty().append(this.tokens[i]);\n      offsetAttribute.setOffset(this.tokens[i].startOffset(), this.tokens[i]\n          .endOffset());\n      positionIncrementAttribute.setPositionIncrement(this.tokens[i]\n          .getPositionIncrement());\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      this.i++;\n      if (this.i >= this.tokens.length) {\n        return false;\n      }\n      clearAttributes();\n      termAttribute.setEmpty().append(this.tokens[i]);\n      offsetAttribute.setOffset(this.tokens[i].startOffset(), this.tokens[i]\n          .endOffset());\n      positionIncrementAttribute.setPositionIncrement(this.tokens[i]\n          .getPositionIncrement());\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}