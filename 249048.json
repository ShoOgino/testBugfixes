{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","sourceNew":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    TermAttribute termAtt = filter.getAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.term());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","sourceOld":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    TermAttribute termAtt = filter.getAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.term());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","sourceNew":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.toString());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","sourceOld":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    TermAttribute termAtt = filter.getAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.term());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","sourceNew":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.toString());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","sourceOld":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.toString());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}