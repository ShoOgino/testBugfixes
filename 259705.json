{"path":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#buildCommaSepParams(Random,String,Collection[String]).mjava","commits":[{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#buildCommaSepParams(Random,String,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given an ordered list of values to include in a (key) param, randomly groups them (ie: comma seperated) \n   * into actual param key=values which are returned as a new SolrParams instance\n   */\n  private static SolrParams buildCommaSepParams(final Random rand, final String key, Collection<String> values) {\n    ModifiableSolrParams result = new ModifiableSolrParams();\n    List<String> copy = new ArrayList<>(values);\n    while (! copy.isEmpty()) {\n      List<String> slice = copy.subList(0, random().nextInt(1 + copy.size()));\n      result.add(key,String.join(\",\",slice));\n      slice.clear();\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#buildCommaSepParams(Random,String,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given an ordered list of values to include in a (key) param, randomly groups them (ie: comma seperated) \n   * into actual param key=values which are returned as a new SolrParams instance\n   */\n  private static SolrParams buildCommaSepParams(final Random rand, final String key, Collection<String> values) {\n    ModifiableSolrParams result = new ModifiableSolrParams();\n    List<String> copy = new ArrayList<>(values);\n    while (! copy.isEmpty()) {\n      List<String> slice = copy.subList(0, random().nextInt(1 + copy.size()));\n      result.add(key,String.join(\",\",slice));\n      slice.clear();\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18e7cf5eab4be20c96aa36554daa39b53f43cf6e","date":1490632275,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#buildCommaSepParams(Random,String,Collection[String]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#buildCommaSepParams(Random,String,Collection[String]).mjava","sourceNew":"  /**\n   * Given an ordered list of values to include in a (key) param, randomly groups them (ie: comma separated) \n   * into actual param key=values which are returned as a new SolrParams instance\n   */\n  private static SolrParams buildCommaSepParams(final Random rand, final String key, Collection<String> values) {\n    ModifiableSolrParams result = new ModifiableSolrParams();\n    List<String> copy = new ArrayList<>(values);\n    while (! copy.isEmpty()) {\n      List<String> slice = copy.subList(0, random().nextInt(1 + copy.size()));\n      result.add(key,String.join(\",\",slice));\n      slice.clear();\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Given an ordered list of values to include in a (key) param, randomly groups them (ie: comma seperated) \n   * into actual param key=values which are returned as a new SolrParams instance\n   */\n  private static SolrParams buildCommaSepParams(final Random rand, final String key, Collection<String> values) {\n    ModifiableSolrParams result = new ModifiableSolrParams();\n    List<String> copy = new ArrayList<>(values);\n    while (! copy.isEmpty()) {\n      List<String> slice = copy.subList(0, random().nextInt(1 + copy.size()));\n      result.add(key,String.join(\",\",slice));\n      slice.clear();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"febf4fa8feff6bbc932c1b388cbd758a3e6697f7","date":1490873944,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#buildCommaSepParams(Random,String,Collection[String]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#buildCommaSepParams(Random,String,Collection[String]).mjava","sourceNew":"  /**\n   * Given an ordered list of values to include in a (key) param, randomly groups them (ie: comma separated) \n   * into actual param key=values which are returned as a new SolrParams instance\n   */\n  private static SolrParams buildCommaSepParams(final Random rand, final String key, Collection<String> values) {\n    ModifiableSolrParams result = new ModifiableSolrParams();\n    List<String> copy = new ArrayList<>(values);\n    while (! copy.isEmpty()) {\n      List<String> slice = copy.subList(0, random().nextInt(1 + copy.size()));\n      result.add(key,String.join(\",\",slice));\n      slice.clear();\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Given an ordered list of values to include in a (key) param, randomly groups them (ie: comma seperated) \n   * into actual param key=values which are returned as a new SolrParams instance\n   */\n  private static SolrParams buildCommaSepParams(final Random rand, final String key, Collection<String> values) {\n    ModifiableSolrParams result = new ModifiableSolrParams();\n    List<String> copy = new ArrayList<>(values);\n    while (! copy.isEmpty()) {\n      List<String> slice = copy.subList(0, random().nextInt(1 + copy.size()));\n      result.add(key,String.join(\",\",slice));\n      slice.clear();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"febf4fa8feff6bbc932c1b388cbd758a3e6697f7":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"18e7cf5eab4be20c96aa36554daa39b53f43cf6e":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"136796946c32863f11b97ebec6b4091cdfe3a20b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","136796946c32863f11b97ebec6b4091cdfe3a20b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["18e7cf5eab4be20c96aa36554daa39b53f43cf6e"]},"commit2Childs":{"febf4fa8feff6bbc932c1b388cbd758a3e6697f7":[],"18e7cf5eab4be20c96aa36554daa39b53f43cf6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["136796946c32863f11b97ebec6b4091cdfe3a20b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["febf4fa8feff6bbc932c1b388cbd758a3e6697f7","18e7cf5eab4be20c96aa36554daa39b53f43cf6e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["febf4fa8feff6bbc932c1b388cbd758a3e6697f7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}