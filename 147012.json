{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","commits":[{"id":"0cdf9cc6702d60334a616bd7db3ae91501d1dce7","date":1405858112,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","pathOld":"/dev/null","sourceNew":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29a93e7fb303505e4a719e87f378d9a45db981d0","date":1412167802,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  private void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexReader#seekDir(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  private void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/VariableGapTermsIndexReader#seekDir(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  private void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#seekDir(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0cdf9cc6702d60334a616bd7db3ae91501d1dce7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["0cdf9cc6702d60334a616bd7db3ae91501d1dce7","29a93e7fb303505e4a719e87f378d9a45db981d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29a93e7fb303505e4a719e87f378d9a45db981d0":["0cdf9cc6702d60334a616bd7db3ae91501d1dce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"0cdf9cc6702d60334a616bd7db3ae91501d1dce7":["9bb9a29a5e71a90295f175df8919802993142c9a","29a93e7fb303505e4a719e87f378d9a45db981d0"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cdf9cc6702d60334a616bd7db3ae91501d1dce7"],"29a93e7fb303505e4a719e87f378d9a45db981d0":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}