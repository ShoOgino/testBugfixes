{"path":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","commits":[{"id":"cf92f74d86d705bff782354cbe1cafe702ea09b4","date":1101076434,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","pathOld":"/dev/null","sourceNew":"  public void testBadSegment() {\n    try {\n      dir = new RAMDirectory();\n      IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n      \n      Document document = new Document();\n      document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n          Field.TermVector.YES));    // throws exception, works with Field.TermVector.NO\n      ir.addDocument(document);\n      \n      ir.close();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4fba3d73d75eec25932b7fdd0daaaa7dc0f72a2","date":1101116244,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   *\n   */\n  public void testBadSegment() {\n    try {\n      dir = new RAMDirectory();\n      IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n      \n      Document document = new Document();\n      document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n          Field.TermVector.YES));\n      ir.addDocument(document);\n      ir.close();\n      dir.close();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }\n\n","sourceOld":"  public void testBadSegment() {\n    try {\n      dir = new RAMDirectory();\n      IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n      \n      Document document = new Document();\n      document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n          Field.TermVector.YES));    // throws exception, works with Field.TermVector.NO\n      ir.addDocument(document);\n      \n      ir.close();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1229e4509cad6bf268c0fe18199b63a72216c66b","date":1120256033,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    dir = new RAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   *\n   */\n  public void testBadSegment() {\n    try {\n      dir = new RAMDirectory();\n      IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n      \n      Document document = new Document();\n      document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n          Field.TermVector.YES));\n      ir.addDocument(document);\n      ir.close();\n      dir.close();\n    } catch (Exception e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11764865fb318bf86302eab36bdf9cd00c50c110","date":1190109214,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    dir = new RAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11764865fb318bf86302eab36bdf9cd00c50c110":["1229e4509cad6bf268c0fe18199b63a72216c66b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4fba3d73d75eec25932b7fdd0daaaa7dc0f72a2":["cf92f74d86d705bff782354cbe1cafe702ea09b4"],"1229e4509cad6bf268c0fe18199b63a72216c66b":["a4fba3d73d75eec25932b7fdd0daaaa7dc0f72a2"],"cf92f74d86d705bff782354cbe1cafe702ea09b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11764865fb318bf86302eab36bdf9cd00c50c110"]},"commit2Childs":{"11764865fb318bf86302eab36bdf9cd00c50c110":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf92f74d86d705bff782354cbe1cafe702ea09b4"],"a4fba3d73d75eec25932b7fdd0daaaa7dc0f72a2":["1229e4509cad6bf268c0fe18199b63a72216c66b"],"1229e4509cad6bf268c0fe18199b63a72216c66b":["11764865fb318bf86302eab36bdf9cd00c50c110"],"cf92f74d86d705bff782354cbe1cafe702ea09b4":["a4fba3d73d75eec25932b7fdd0daaaa7dc0f72a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}