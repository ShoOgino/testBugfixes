{"path":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","commits":[{"id":"be875c478b2c2388441e3d19726f9fb754a3397a","date":1231406922,"type":0,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void testNorms(IndexReader r) throws IOException {\n    byte[] norms;\n    norms = r.norms(\"foo\");\n    assertNotNull(norms);\n    assertEquals(0, norms.length);\n    norms = new byte[10];\n    Arrays.fill(norms, (byte)10);\n    r.norms(\"foo\", norms, 10);\n    for (byte b : norms) {\n      assertEquals((byte)10, b);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20a9b2ec0ed5b7e0156b6707e34eb285cb86eb7a","date":1240951127,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","sourceNew":"  private void testNorms(IndexReader r) throws IOException {\n    byte[] norms;\n    norms = r.norms(\"foo\");\n    if (!r.getDisableFakeNorms()) {\n      assertNotNull(norms);\n      assertEquals(0, norms.length);\n      norms = new byte[10];\n      Arrays.fill(norms, (byte)10);\n      r.norms(\"foo\", norms, 10);\n      for (byte b : norms) {\n        assertEquals((byte)10, b);\n      }\n    }\n  }\n\n","sourceOld":"  private void testNorms(IndexReader r) throws IOException {\n    byte[] norms;\n    norms = r.norms(\"foo\");\n    assertNotNull(norms);\n    assertEquals(0, norms.length);\n    norms = new byte[10];\n    Arrays.fill(norms, (byte)10);\n    r.norms(\"foo\", norms, 10);\n    for (byte b : norms) {\n      assertEquals((byte)10, b);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","sourceNew":"  private void testNorms(IndexReader r) throws IOException {\n    byte[] norms;\n    norms = r.norms(\"foo\");\n    if (norms != null) {\n      assertEquals(0, norms.length);\n      norms = new byte[10];\n      Arrays.fill(norms, (byte)10);\n      r.norms(\"foo\", norms, 10);\n      for (byte b : norms) {\n        assertEquals((byte)10, b);\n      }\n    }\n  }\n\n","sourceOld":"  private void testNorms(IndexReader r) throws IOException {\n    byte[] norms;\n    norms = r.norms(\"foo\");\n    if (!r.getDisableFakeNorms()) {\n      assertNotNull(norms);\n      assertEquals(0, norms.length);\n      norms = new byte[10];\n      Arrays.fill(norms, (byte)10);\n      r.norms(\"foo\", norms, 10);\n      for (byte b : norms) {\n        assertEquals((byte)10, b);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms(IndexReader).mjava","sourceNew":"  private void testNorms(IndexReader r) throws IOException {\n    byte[] norms;\n    norms = r.norms(\"foo\");\n    if (norms != null) {\n      assertEquals(0, norms.length);\n      norms = new byte[10];\n      Arrays.fill(norms, (byte)10);\n      r.norms(\"foo\", norms, 10);\n      for (byte b : norms) {\n        assertEquals((byte)10, b);\n      }\n    }\n  }\n\n","sourceOld":"  private void testNorms(IndexReader r) throws IOException {\n    byte[] norms;\n    norms = r.norms(\"foo\");\n    if (norms != null) {\n      assertEquals(0, norms.length);\n      norms = new byte[10];\n      Arrays.fill(norms, (byte)10);\n      r.norms(\"foo\", norms, 10);\n      for (byte b : norms) {\n        assertEquals((byte)10, b);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"20a9b2ec0ed5b7e0156b6707e34eb285cb86eb7a":["be875c478b2c2388441e3d19726f9fb754a3397a"],"be875c478b2c2388441e3d19726f9fb754a3397a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["20a9b2ec0ed5b7e0156b6707e34eb285cb86eb7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"]},"commit2Childs":{"20a9b2ec0ed5b7e0156b6707e34eb285cb86eb7a":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"be875c478b2c2388441e3d19726f9fb754a3397a":["20a9b2ec0ed5b7e0156b6707e34eb285cb86eb7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be875c478b2c2388441e3d19726f9fb754a3397a"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}