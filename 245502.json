{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsReader.FieldReader.SegmentTermsEnum.Frame#scanToFloorFrame(BytesRef).mjava","commits":[{"id":"0a570bec4aec8585a4eea44849bfb2bc264208c4","date":1371308653,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsReader.FieldReader.SegmentTermsEnum.Frame#scanToFloorFrame(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"        // TODO: make this array'd so we can do bin search?\n        // likely not worth it?  need to measure how many\n        // floor blocks we \"typically\" get\n        public void scanToFloorFrame(BytesRef target) {\n\n          if (!isFloor || target.length <= prefix) {\n            // if (DEBUG) {\n            //   System.out.println(\"    scanToFloorFrame skip: isFloor=\" + isFloor + \" target.length=\" + target.length + \" vs prefix=\" + prefix);\n            // }\n            return;\n          }\n\n          final int targetLabel = target.bytes[target.offset + prefix] & 0xFF;\n\n          // if (DEBUG) {\n          //   System.out.println(\"    scanToFloorFrame fpOrig=\" + fpOrig + \" targetLabel=\" + toHex(targetLabel) + \" vs nextFloorLabel=\" + toHex(nextFloorLabel) + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n          // }\n\n          if (targetLabel < nextFloorLabel) {\n            // if (DEBUG) {\n            //   System.out.println(\"      already on correct block\");\n            // }\n            return;\n          }\n\n          assert numFollowFloorBlocks != 0;\n\n          long newFP = fpOrig;\n          while (true) {\n            final long code = floorDataReader.readVLong();\n            newFP = fpOrig + (code >>> 1);\n            hasTerms = (code & 1) != 0;\n            // if (DEBUG) {\n            //   System.out.println(\"      label=\" + toHex(nextFloorLabel) + \" fp=\" + newFP + \" hasTerms?=\" + hasTerms + \" numFollowFloor=\" + numFollowFloorBlocks);\n            // }\n            \n            isLastInFloor = numFollowFloorBlocks == 1;\n            numFollowFloorBlocks--;\n\n            if (isLastInFloor) {\n              nextFloorLabel = 256;\n              // if (DEBUG) {\n              //   System.out.println(\"        stop!  last block nextFloorLabel=\" + toHex(nextFloorLabel));\n              // }\n              break;\n            } else {\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n              if (targetLabel < nextFloorLabel) {\n                // if (DEBUG) {\n                //   System.out.println(\"        stop!  nextFloorLabel=\" + toHex(nextFloorLabel));\n                // }\n                break;\n              }\n            }\n          }\n\n          if (newFP != fp) {\n            // Force re-load of the block:\n            // if (DEBUG) {\n            //   System.out.println(\"      force switch to fp=\" + newFP + \" oldFP=\" + fp);\n            // }\n            nextEnt = -1;\n            fp = newFP;\n          } else {\n            // if (DEBUG) {\n            //   System.out.println(\"      stay on same fp=\" + newFP);\n            // }\n          }\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d01ed6d1df51191983f4dd157aedf5f4650e2b3","date":1376572546,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#scanToFloorFrame(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsReader.FieldReader.SegmentTermsEnum.Frame#scanToFloorFrame(BytesRef).mjava","sourceNew":"        // TODO: make this array'd so we can do bin search?\n        // likely not worth it?  need to measure how many\n        // floor blocks we \"typically\" get\n        public void scanToFloorFrame(BytesRef target) {\n\n          if (!isFloor || target.length <= prefix) {\n            // if (DEBUG) {\n            //   System.out.println(\"    scanToFloorFrame skip: isFloor=\" + isFloor + \" target.length=\" + target.length + \" vs prefix=\" + prefix);\n            // }\n            return;\n          }\n\n          final int targetLabel = target.bytes[target.offset + prefix] & 0xFF;\n\n          // if (DEBUG) {\n          //   System.out.println(\"    scanToFloorFrame fpOrig=\" + fpOrig + \" targetLabel=\" + toHex(targetLabel) + \" vs nextFloorLabel=\" + toHex(nextFloorLabel) + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n          // }\n\n          if (targetLabel < nextFloorLabel) {\n            // if (DEBUG) {\n            //   System.out.println(\"      already on correct block\");\n            // }\n            return;\n          }\n\n          assert numFollowFloorBlocks != 0;\n\n          long newFP = fpOrig;\n          while (true) {\n            final long code = floorDataReader.readVLong();\n            newFP = fpOrig + (code >>> 1);\n            hasTerms = (code & 1) != 0;\n            // if (DEBUG) {\n            //   System.out.println(\"      label=\" + toHex(nextFloorLabel) + \" fp=\" + newFP + \" hasTerms?=\" + hasTerms + \" numFollowFloor=\" + numFollowFloorBlocks);\n            // }\n            \n            isLastInFloor = numFollowFloorBlocks == 1;\n            numFollowFloorBlocks--;\n\n            if (isLastInFloor) {\n              nextFloorLabel = 256;\n              // if (DEBUG) {\n              //   System.out.println(\"        stop!  last block nextFloorLabel=\" + toHex(nextFloorLabel));\n              // }\n              break;\n            } else {\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n              if (targetLabel < nextFloorLabel) {\n                // if (DEBUG) {\n                //   System.out.println(\"        stop!  nextFloorLabel=\" + toHex(nextFloorLabel));\n                // }\n                break;\n              }\n            }\n          }\n\n          if (newFP != fp) {\n            // Force re-load of the block:\n            // if (DEBUG) {\n            //   System.out.println(\"      force switch to fp=\" + newFP + \" oldFP=\" + fp);\n            // }\n            nextEnt = -1;\n            fp = newFP;\n          } else {\n            // if (DEBUG) {\n            //   System.out.println(\"      stay on same fp=\" + newFP);\n            // }\n          }\n        }\n\n","sourceOld":"        // TODO: make this array'd so we can do bin search?\n        // likely not worth it?  need to measure how many\n        // floor blocks we \"typically\" get\n        public void scanToFloorFrame(BytesRef target) {\n\n          if (!isFloor || target.length <= prefix) {\n            // if (DEBUG) {\n            //   System.out.println(\"    scanToFloorFrame skip: isFloor=\" + isFloor + \" target.length=\" + target.length + \" vs prefix=\" + prefix);\n            // }\n            return;\n          }\n\n          final int targetLabel = target.bytes[target.offset + prefix] & 0xFF;\n\n          // if (DEBUG) {\n          //   System.out.println(\"    scanToFloorFrame fpOrig=\" + fpOrig + \" targetLabel=\" + toHex(targetLabel) + \" vs nextFloorLabel=\" + toHex(nextFloorLabel) + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n          // }\n\n          if (targetLabel < nextFloorLabel) {\n            // if (DEBUG) {\n            //   System.out.println(\"      already on correct block\");\n            // }\n            return;\n          }\n\n          assert numFollowFloorBlocks != 0;\n\n          long newFP = fpOrig;\n          while (true) {\n            final long code = floorDataReader.readVLong();\n            newFP = fpOrig + (code >>> 1);\n            hasTerms = (code & 1) != 0;\n            // if (DEBUG) {\n            //   System.out.println(\"      label=\" + toHex(nextFloorLabel) + \" fp=\" + newFP + \" hasTerms?=\" + hasTerms + \" numFollowFloor=\" + numFollowFloorBlocks);\n            // }\n            \n            isLastInFloor = numFollowFloorBlocks == 1;\n            numFollowFloorBlocks--;\n\n            if (isLastInFloor) {\n              nextFloorLabel = 256;\n              // if (DEBUG) {\n              //   System.out.println(\"        stop!  last block nextFloorLabel=\" + toHex(nextFloorLabel));\n              // }\n              break;\n            } else {\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n              if (targetLabel < nextFloorLabel) {\n                // if (DEBUG) {\n                //   System.out.println(\"        stop!  nextFloorLabel=\" + toHex(nextFloorLabel));\n                // }\n                break;\n              }\n            }\n          }\n\n          if (newFP != fp) {\n            // Force re-load of the block:\n            // if (DEBUG) {\n            //   System.out.println(\"      force switch to fp=\" + newFP + \" oldFP=\" + fp);\n            // }\n            nextEnt = -1;\n            fp = newFP;\n          } else {\n            // if (DEBUG) {\n            //   System.out.println(\"      stay on same fp=\" + newFP);\n            // }\n          }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["0a570bec4aec8585a4eea44849bfb2bc264208c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a570bec4aec8585a4eea44849bfb2bc264208c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}