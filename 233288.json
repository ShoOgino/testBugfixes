{"path":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"faff74992839549208db29d95b9ad4a1d3846c79","date":1385672428,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":"  static Comparator<ShardDoc> comparatorScore() {\n    return new Comparator<ShardDoc>() {\n      @Override\n      public final int compare(final ShardDoc o1, final ShardDoc o2) {\n        final float f1 = o1.score;\n        final float f2 = o2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#comparatorScore(String).mjava","sourceNew":null,"sourceOld":"  static Comparator comparatorScore(final String fieldName) {\n    return new Comparator() {\n      @Override\n      public final int compare(final Object o1, final Object o2) {\n        ShardDoc e1 = (ShardDoc) o1;\n        ShardDoc e2 = (ShardDoc) o2;\n\n        final float f1 = e1.score;\n        final float f2 = e2.score;\n        if (f1 < f2)\n          return -1;\n        if (f1 > f2)\n          return 1;\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["7530de27b87b961b51f01bd1299b7004d46e8823","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["19275ba31e621f6da1b83bf13af75233876fd3d4","faff74992839549208db29d95b9ad4a1d3846c79"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"faff74992839549208db29d95b9ad4a1d3846c79":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["faff74992839549208db29d95b9ad4a1d3846c79"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","74f45af4339b0daf7a95c820ab88c1aea74fbce0","faff74992839549208db29d95b9ad4a1d3846c79"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"faff74992839549208db29d95b9ad4a1d3846c79":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}