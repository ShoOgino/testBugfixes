{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CategoryPathUtils#hashCodeOfSerialized(CharBlockArray,int).mjava","commits":[{"id":"5cad50ed6659649a0edef71b8cf56280b0bdadd7","date":1385496862,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CategoryPathUtils#hashCodeOfSerialized(CharBlockArray,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/cl2o/CategoryPathUtils#hashCodeOfSerialized(CharBlockArray,int).mjava","sourceNew":"  /**\n   * Calculates a hash function of a path that was serialized with\n   * {@link #serialize(FacetLabel, CharBlockArray)}.\n   */\n  public static int hashCodeOfSerialized(CharBlockArray charBlockArray, int offset) {\n    int length = charBlockArray.charAt(offset++);\n    if (length == 0) {\n      return 0;\n    }\n    \n    int hash = length;\n    for (int i = 0; i < length; i++) {\n      int len = charBlockArray.charAt(offset++);\n      hash = hash * 31 + charBlockArray.subSequence(offset, offset + len).hashCode();\n      offset += len;\n    }\n    return hash;\n  }\n\n","sourceOld":"  /**\n   * Calculates a hash function of a path that was serialized with\n   * {@link #serialize(FacetLabel, CharBlockArray)}.\n   */\n  public static int hashCodeOfSerialized(CharBlockArray charBlockArray, int offset) {\n    int length = charBlockArray.charAt(offset++);\n    if (length == 0) {\n      return 0;\n    }\n    \n    int hash = length;\n    for (int i = 0; i < length; i++) {\n      int len = charBlockArray.charAt(offset++);\n      hash = hash * 31 + charBlockArray.subSequence(offset, offset + len).hashCode();\n      offset += len;\n    }\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CategoryPathUtils#hashCodeOfSerialized(CharBlockArray,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calculates a hash function of a path that was serialized with\n   * {@link #serialize(FacetLabel, CharBlockArray)}.\n   */\n  public static int hashCodeOfSerialized(CharBlockArray charBlockArray, int offset) {\n    int length = charBlockArray.charAt(offset++);\n    if (length == 0) {\n      return 0;\n    }\n    \n    int hash = length;\n    for (int i = 0; i < length; i++) {\n      int len = charBlockArray.charAt(offset++);\n      hash = hash * 31 + charBlockArray.subSequence(offset, offset + len).hashCode();\n      offset += len;\n    }\n    return hash;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ae0982c0457fa3cfe0cda93a327c573fbe6f874","date":1507039114,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CategoryPathUtils#hashCodeOfSerialized(CharBlockArray,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Calculates a hash function of a path that was serialized with\n   * {@link #serialize(FacetLabel, CharBlockArray)}.\n   */\n  public static int hashCodeOfSerialized(CharBlockArray charBlockArray, int offset) {\n    int length = charBlockArray.charAt(offset++);\n    if (length == 0) {\n      return 0;\n    }\n    \n    int hash = length;\n    for (int i = 0; i < length; i++) {\n      int len = charBlockArray.charAt(offset++);\n      hash = hash * 31 + charBlockArray.subSequence(offset, offset + len).hashCode();\n      offset += len;\n    }\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ae0982c0457fa3cfe0cda93a327c573fbe6f874":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cad50ed6659649a0edef71b8cf56280b0bdadd7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5cad50ed6659649a0edef71b8cf56280b0bdadd7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ae0982c0457fa3cfe0cda93a327c573fbe6f874"]},"commit2Childs":{"2ae0982c0457fa3cfe0cda93a327c573fbe6f874":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5cad50ed6659649a0edef71b8cf56280b0bdadd7","3cc728b07df73b197e6d940d27f9b08b63918f13"],"5cad50ed6659649a0edef71b8cf56280b0bdadd7":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["2ae0982c0457fa3cfe0cda93a327c573fbe6f874"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}