{"path":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","commits":[{"id":"220acde8206f5221383e3777429a4fb84bed289f","date":1339892825,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   * or {@link org.apache.solr.schema.IndexSchema#getDefaultSearchFieldName()}.\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws ParseException {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new ParseException(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","sourceNew":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   * or {@link org.apache.solr.schema.IndexSchema#getDefaultSearchFieldName()}.\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","sourceOld":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   * or {@link org.apache.solr.schema.IndexSchema#getDefaultSearchFieldName()}.\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws ParseException {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new ParseException(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","sourceNew":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   * or {@link org.apache.solr.schema.IndexSchema#getDefaultSearchFieldName()}.\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","sourceOld":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   * or {@link org.apache.solr.schema.IndexSchema#getDefaultSearchFieldName()}.\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws ParseException {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new ParseException(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d057970b5f9fcaabc49d2f54c59a5d2a09da1769","date":1495200448,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","sourceNew":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = solrParams.get(CommonParams.DF);\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\" nor \"+CommonParams.DF +\" are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","sourceOld":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   * or {@link org.apache.solr.schema.IndexSchema#getDefaultSearchFieldName()}.\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parseQueryFields(IndexSchema,SolrParams).mjava","sourceNew":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = solrParams.get(CommonParams.DF);\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\" nor \"+CommonParams.DF +\" are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","sourceOld":"  /**\n   * Uses {@link SolrPluginUtils#parseFieldBoosts(String)} with the 'qf' parameter. Falls back to the 'df' parameter\n   * or {@link org.apache.solr.schema.IndexSchema#getDefaultSearchFieldName()}.\n   */\n  public static Map<String, Float> parseQueryFields(final IndexSchema indexSchema, final SolrParams solrParams)\n      throws SyntaxError {\n    Map<String, Float> queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (queryFields.isEmpty()) {\n      String df = QueryParsing.getDefaultField(indexSchema, solrParams.get(CommonParams.DF));\n      if (df == null) {\n        throw new SyntaxError(\"Neither \"+DisMaxParams.QF+\", \"+CommonParams.DF +\", nor the default search field are present.\");\n      }\n      queryFields.put(df, 1.0f);\n    }\n    return queryFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"220acde8206f5221383e3777429a4fb84bed289f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["3cdb67100dc016748799a77218aa409478372d79","d057970b5f9fcaabc49d2f54c59a5d2a09da1769"],"3cdb67100dc016748799a77218aa409478372d79":["220acde8206f5221383e3777429a4fb84bed289f"],"d057970b5f9fcaabc49d2f54c59a5d2a09da1769":["3cdb67100dc016748799a77218aa409478372d79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["220acde8206f5221383e3777429a4fb84bed289f","3cdb67100dc016748799a77218aa409478372d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d057970b5f9fcaabc49d2f54c59a5d2a09da1769"]},"commit2Childs":{"220acde8206f5221383e3777429a4fb84bed289f":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"3cdb67100dc016748799a77218aa409478372d79":["e9017cf144952056066919f1ebc7897ff9bd71b1","d057970b5f9fcaabc49d2f54c59a5d2a09da1769","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["220acde8206f5221383e3777429a4fb84bed289f"],"d057970b5f9fcaabc49d2f54c59a5d2a09da1769":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}