{"path":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   */ \n  public abstract Collection getIndexedFieldNames(boolean storedTermVector);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","sourceNew":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getIndexedFieldNames (Field.TermVector tvSpec)}\n   */ \n  public abstract Collection getIndexedFieldNames(boolean storedTermVector);\n\n","sourceOld":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   */ \n  public abstract Collection getIndexedFieldNames(boolean storedTermVector);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff50927e6f97d31716780383046a7ac26a55cad1","date":1097053556,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","sourceNew":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getIndexedFieldNames (Field.TermVector tvSpec)}\n   */ \n  public Collection getIndexedFieldNames(boolean storedTermVector){\n    if(storedTermVector){\n      Set fieldSet = new HashSet();\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.YES));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_OFFSETS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS_OFFSETS));\n      return fieldSet;\n    }\n    else\n      return getIndexedFieldNames(Field.TermVector.NO);\n  }\n\n","sourceOld":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getIndexedFieldNames (Field.TermVector tvSpec)}\n   */ \n  public abstract Collection getIndexedFieldNames(boolean storedTermVector);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c687c6cd32bfdceab8fd653a483592265774d97","date":1104356145,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","sourceNew":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getFieldNames (IndexReader.FieldOption fldOption)}\n   */ \n  public Collection getIndexedFieldNames(boolean storedTermVector){\n    if(storedTermVector){\n      Set fieldSet = new HashSet();\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.YES));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_OFFSETS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS_OFFSETS));\n      return fieldSet;\n    }\n    else\n      return getIndexedFieldNames(Field.TermVector.NO);\n  }\n\n","sourceOld":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getIndexedFieldNames (Field.TermVector tvSpec)}\n   */ \n  public Collection getIndexedFieldNames(boolean storedTermVector){\n    if(storedTermVector){\n      Set fieldSet = new HashSet();\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.YES));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_OFFSETS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS_OFFSETS));\n      return fieldSet;\n    }\n    else\n      return getIndexedFieldNames(Field.TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a73aeb55b62ead403e0136272b225f2083dfef5","date":1104866701,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","sourceNew":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getFieldNames(IndexReader.FieldOption)}\n   */ \n  public Collection getIndexedFieldNames(boolean storedTermVector){\n    if(storedTermVector){\n      Set fieldSet = new HashSet();\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.YES));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_OFFSETS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS_OFFSETS));\n      return fieldSet;\n    }\n    else\n      return getIndexedFieldNames(Field.TermVector.NO);\n  }\n\n","sourceOld":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getFieldNames (IndexReader.FieldOption fldOption)}\n   */ \n  public Collection getIndexedFieldNames(boolean storedTermVector){\n    if(storedTermVector){\n      Set fieldSet = new HashSet();\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.YES));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_OFFSETS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS_OFFSETS));\n      return fieldSet;\n    }\n    else\n      return getIndexedFieldNames(Field.TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexReader#getIndexedFieldNames(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * \n   * @param storedTermVector if true, returns only Indexed fields that have term vector info, \n   *                        else only indexed fields without term vector info \n   * @return Collection of Strings indicating the names of the fields\n   * \n   * @deprecated  Replaced by {@link #getFieldNames(IndexReader.FieldOption)}\n   */ \n  public Collection getIndexedFieldNames(boolean storedTermVector){\n    if(storedTermVector){\n      Set fieldSet = new HashSet();\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.YES));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_OFFSETS));\n      fieldSet.addAll(getIndexedFieldNames(Field.TermVector.WITH_POSITIONS_OFFSETS));\n      return fieldSet;\n    }\n    else\n      return getIndexedFieldNames(Field.TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a73aeb55b62ead403e0136272b225f2083dfef5":["7c687c6cd32bfdceab8fd653a483592265774d97"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["8a73aeb55b62ead403e0136272b225f2083dfef5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff50927e6f97d31716780383046a7ac26a55cad1":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"7c687c6cd32bfdceab8fd653a483592265774d97":["ff50927e6f97d31716780383046a7ac26a55cad1"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"8a73aeb55b62ead403e0136272b225f2083dfef5":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"ff50927e6f97d31716780383046a7ac26a55cad1":["7c687c6cd32bfdceab8fd653a483592265774d97"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["ff50927e6f97d31716780383046a7ac26a55cad1"],"7c687c6cd32bfdceab8fd653a483592265774d97":["8a73aeb55b62ead403e0136272b225f2083dfef5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}