{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.shutdown();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.shutdown();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.shutdown();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.shutdown();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.shutdown();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.shutdown();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.shutdown();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.shutdown();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    DirectoryReader r1 = DirectoryReader.open(dir2);\n    TestUtil.addIndexesSlowly(writer, r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = DirectoryReader.open(dir2);\n    writer.addIndexes(r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","9ce667c6d3400b22523701c549c0d35e26da8b46"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe39f1a106531207c028defebbc9eb5bb489ac50","date":1592513789,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n\n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    DirectoryReader r1 = DirectoryReader.open(dir2);\n    TestUtil.addIndexesSlowly(writer, r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    DirectoryReader r1 = DirectoryReader.open(dir2);\n    TestUtil.addIndexesSlowly(writer, r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1182fe36fb5df768dc2da53f6d5338cbc07268ae","date":1592861749,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    DirectoryReader r1 = DirectoryReader.open(dir2);\n    TestUtil.addIndexesSlowly(writer, r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n\n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    DirectoryReader r1 = DirectoryReader.open(dir2);\n    TestUtil.addIndexesSlowly(writer, r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n\n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    DirectoryReader r1 = DirectoryReader.open(dir2);\n    TestUtil.addIndexesSlowly(writer, r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                .setMaxBufferedDocs(2));\n    Document doc = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    \n    doc.add(newField(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", customType));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer2.addDocument(doc);\n    writer2.close();\n\n    DirectoryReader r1 = DirectoryReader.open(dir2);\n    TestUtil.addIndexesSlowly(writer, r1, r1);\n    writer.close();\n\n    IndexReader r3 = DirectoryReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"]},"commit2Childs":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}