{"path":"solr/core/src/test/org/apache/solr/cloud/MigrateRouteKeyTest#testMissingSplitKey().mjava","commits":[{"id":"d244faa5fcbf7803803d0cc0a9a79f1f3bcbbc49","date":1532672633,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MigrateRouteKeyTest#testMissingSplitKey().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMissingSplitKey() throws Exception  {\n    String sourceCollection = \"testMissingSplitKey-source\";\n    CollectionAdminRequest.createCollection(sourceCollection, \"conf\", 1, 1)\n        .process(cluster.getSolrClient());\n    String targetCollection = \"testMissingSplitKey-target\";\n    CollectionAdminRequest.createCollection(targetCollection, \"conf\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    HttpSolrClient.RemoteSolrException remoteSolrException = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        \"Expected an exception in case split.key is not specified\", () -> {\n          CollectionAdminRequest.migrateData(sourceCollection, targetCollection, \"\")\n              .setForwardTimeout(45)\n              .process(cluster.getSolrClient());\n        });\n    assertTrue(remoteSolrException.getMessage().contains(\"split.key cannot be null or empty\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MigrateRouteKeyTest#testMissingSplitKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MigrateRouteKeyTest#testMissingSplitKey().mjava","sourceNew":"  @Test\n  public void testMissingSplitKey() throws Exception  {\n    String sourceCollection = \"testMissingSplitKey-source\";\n    CollectionAdminRequest.createCollection(sourceCollection, \"conf\", 1, 1)\n        .process(cluster.getSolrClient());\n    String targetCollection = \"testMissingSplitKey-target\";\n    CollectionAdminRequest.createCollection(targetCollection, \"conf\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    BaseHttpSolrClient.RemoteSolrException remoteSolrException = expectThrows(BaseHttpSolrClient.RemoteSolrException.class,\n        \"Expected an exception in case split.key is not specified\", () -> {\n          CollectionAdminRequest.migrateData(sourceCollection, targetCollection, \"\")\n              .setForwardTimeout(45)\n              .process(cluster.getSolrClient());\n        });\n    assertTrue(remoteSolrException.getMessage().contains(\"split.key cannot be null or empty\"));\n  }\n\n","sourceOld":"  @Test\n  public void testMissingSplitKey() throws Exception  {\n    String sourceCollection = \"testMissingSplitKey-source\";\n    CollectionAdminRequest.createCollection(sourceCollection, \"conf\", 1, 1)\n        .process(cluster.getSolrClient());\n    String targetCollection = \"testMissingSplitKey-target\";\n    CollectionAdminRequest.createCollection(targetCollection, \"conf\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    HttpSolrClient.RemoteSolrException remoteSolrException = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        \"Expected an exception in case split.key is not specified\", () -> {\n          CollectionAdminRequest.migrateData(sourceCollection, targetCollection, \"\")\n              .setForwardTimeout(45)\n              .process(cluster.getSolrClient());\n        });\n    assertTrue(remoteSolrException.getMessage().contains(\"split.key cannot be null or empty\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d244faa5fcbf7803803d0cc0a9a79f1f3bcbbc49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db96734b79e26d948b59f68bd4564c4836a71acf":["d244faa5fcbf7803803d0cc0a9a79f1f3bcbbc49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db96734b79e26d948b59f68bd4564c4836a71acf"]},"commit2Childs":{"d244faa5fcbf7803803d0cc0a9a79f1f3bcbbc49":["db96734b79e26d948b59f68bd4564c4836a71acf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d244faa5fcbf7803803d0cc0a9a79f1f3bcbbc49"],"db96734b79e26d948b59f68bd4564c4836a71acf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}