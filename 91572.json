{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#advanceShallow(int).mjava","commits":[{"id":"523cc6563c99a55527ef7993efc5413c6648852d","date":1518704038,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#advanceShallow(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int advanceShallow(int target) throws IOException {\n    assert target >= lastShallowTarget : \"called on decreasing targets: target = \" + target + \" < last target = \" + lastShallowTarget;\n    assert target >= docID() : \"target = \" + target + \" < docID = \" + docID();\n    int upTo = in.advanceShallow(target);\n    assert upTo >= target : \"upTo = \" + upTo + \" < target = \" + target;\n    lastShallowTarget = target;\n    state = target != doc ? IteratorState.SHALLOW_ADVANCING : state;\n    return upTo;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ca059a1802d561df3c5d3abac663d4e6284f33a","date":1526486059,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#advanceShallow(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#advanceShallow(int).mjava","sourceNew":"  @Override\n  public int advanceShallow(int target) throws IOException {\n    assert scoreMode.needsScores();\n    assert target >= lastShallowTarget : \"called on decreasing targets: target = \" + target + \" < last target = \" + lastShallowTarget;\n    assert target >= docID() : \"target = \" + target + \" < docID = \" + docID();\n    int upTo = in.advanceShallow(target);\n    assert upTo >= target : \"upTo = \" + upTo + \" < target = \" + target;\n    lastShallowTarget = target;\n    state = target != doc ? IteratorState.SHALLOW_ADVANCING : state;\n    return upTo;\n  }\n\n","sourceOld":"  @Override\n  public int advanceShallow(int target) throws IOException {\n    assert target >= lastShallowTarget : \"called on decreasing targets: target = \" + target + \" < last target = \" + lastShallowTarget;\n    assert target >= docID() : \"target = \" + target + \" < docID = \" + docID();\n    int upTo = in.advanceShallow(target);\n    assert upTo >= target : \"upTo = \" + upTo + \" < target = \" + target;\n    lastShallowTarget = target;\n    state = target != doc ? IteratorState.SHALLOW_ADVANCING : state;\n    return upTo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ca059a1802d561df3c5d3abac663d4e6284f33a":["523cc6563c99a55527ef7993efc5413c6648852d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"523cc6563c99a55527ef7993efc5413c6648852d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ca059a1802d561df3c5d3abac663d4e6284f33a"]},"commit2Childs":{"9ca059a1802d561df3c5d3abac663d4e6284f33a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["523cc6563c99a55527ef7993efc5413c6648852d"],"523cc6563c99a55527ef7993efc5413c6648852d":["9ca059a1802d561df3c5d3abac663d4e6284f33a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}