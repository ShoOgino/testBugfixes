{"path":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","commits":[{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new NullPointerException(\"Unknown directory \" + dir);\n    }\n    File dirFile = new File(val.path);\n    FileUtils.deleteDirectory(dirFile);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["882410878160f2dadf6bede08bda2593b87c4b82"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new NullPointerException(\"Unknown directory \" + dir);\n    }\n    File dirFile = new File(val.path);\n    FileUtils.deleteDirectory(dirFile);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"882410878160f2dadf6bede08bda2593b87c4b82","date":1355338140,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new IllegalArgumentException(\"Unknown directory \" + dir);\n    }\n    File dirFile = new File(val.path);\n    FileUtils.deleteDirectory(dirFile);\n  }\n\n","sourceOld":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new NullPointerException(\"Unknown directory \" + dir);\n    }\n    File dirFile = new File(val.path);\n    FileUtils.deleteDirectory(dirFile);\n  }\n\n","bugFix":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new IllegalArgumentException(\"Unknown directory \" + dir);\n    }\n    File dirFile = new File(val.path);\n    FileUtils.deleteDirectory(dirFile);\n  }\n\n","sourceOld":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new NullPointerException(\"Unknown directory \" + dir);\n    }\n    File dirFile = new File(val.path);\n    FileUtils.deleteDirectory(dirFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b97a32ef0f7ada102673c4b42228da75f324b52b","date":1362975614,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new IllegalArgumentException(\"Unknown directory \" + dir);\n    }\n    if (val.path != null) {\n      File dirFile = new File(val.path);\n      FileUtils.deleteDirectory(dirFile);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new IllegalArgumentException(\"Unknown directory \" + dir);\n    }\n    File dirFile = new File(val.path);\n    FileUtils.deleteDirectory(dirFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03f42a4ca67b6d61a3fde1ebf9f998aa23bc8202","date":1363460539,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val;\n    synchronized (this) {\n      val = byDirectoryCache.get(dir);\n    }\n    if (val == null) {\n      throw new IllegalArgumentException(\"Unknown directory \" + dir);\n    }\n    if (val.path != null) {\n      File dirFile = new File(val.path);\n      FileUtils.deleteDirectory(dirFile);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val = byDirectoryCache.get(dir);\n    if (val == null) {\n      throw new IllegalArgumentException(\"Unknown directory \" + dir);\n    }\n    if (val.path != null) {\n      File dirFile = new File(val.path);\n      FileUtils.deleteDirectory(dirFile);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47672449aafbeb4308705f66b6b577836a5571d4","date":1363536675,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    synchronized (this) {\n      CacheValue val = byDirectoryCache.get(dir);\n      if (val == null) {\n        throw new IllegalArgumentException(\"Unknown directory \" + dir);\n      }\n      \n      File dirFile = new File(val.path);\n      FileUtils.deleteDirectory(dirFile);\n\n    }\n  }\n\n","sourceOld":"  @Override\n  public void remove(Directory dir) throws IOException {\n    CacheValue val;\n    synchronized (this) {\n      val = byDirectoryCache.get(dir);\n    }\n    if (val == null) {\n      throw new IllegalArgumentException(\"Unknown directory \" + dir);\n    }\n    if (val.path != null) {\n      File dirFile = new File(val.path);\n      FileUtils.deleteDirectory(dirFile);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4dcfb92697fbd03e488cf9e5155514e3270d0fc3","date":1363541819,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#remove(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#remove(Directory).mjava","sourceNew":"  @Override\n  public void remove(Directory dir) throws IOException {\n    synchronized (this) {\n      CacheValue val = byDirectoryCache.get(dir);\n      if (val == null) {\n        throw new IllegalArgumentException(\"Unknown directory \" + dir);\n      }\n      val.deleteOnClose = true;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void remove(Directory dir) throws IOException {\n    synchronized (this) {\n      CacheValue val = byDirectoryCache.get(dir);\n      if (val == null) {\n        throw new IllegalArgumentException(\"Unknown directory \" + dir);\n      }\n      \n      File dirFile = new File(val.path);\n      FileUtils.deleteDirectory(dirFile);\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["d9405f486872f1e416304dfe389741f4ee2f8a4d","882410878160f2dadf6bede08bda2593b87c4b82"],"47672449aafbeb4308705f66b6b577836a5571d4":["03f42a4ca67b6d61a3fde1ebf9f998aa23bc8202"],"b97a32ef0f7ada102673c4b42228da75f324b52b":["882410878160f2dadf6bede08bda2593b87c4b82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"03f42a4ca67b6d61a3fde1ebf9f998aa23bc8202":["b97a32ef0f7ada102673c4b42228da75f324b52b"],"4dcfb92697fbd03e488cf9e5155514e3270d0fc3":["47672449aafbeb4308705f66b6b577836a5571d4"],"882410878160f2dadf6bede08bda2593b87c4b82":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4dcfb92697fbd03e488cf9e5155514e3270d0fc3"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"47672449aafbeb4308705f66b6b577836a5571d4":["4dcfb92697fbd03e488cf9e5155514e3270d0fc3"],"b97a32ef0f7ada102673c4b42228da75f324b52b":["03f42a4ca67b6d61a3fde1ebf9f998aa23bc8202"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"03f42a4ca67b6d61a3fde1ebf9f998aa23bc8202":["47672449aafbeb4308705f66b6b577836a5571d4"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","882410878160f2dadf6bede08bda2593b87c4b82","f2126b84bd093fa3d921582a109a0ee578c28126"],"882410878160f2dadf6bede08bda2593b87c4b82":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b97a32ef0f7ada102673c4b42228da75f324b52b"],"4dcfb92697fbd03e488cf9e5155514e3270d0fc3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}