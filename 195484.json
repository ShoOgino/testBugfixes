{"path":"lucene/queries/src/java/org/apache/lucene/queries/intervals/MinimumShouldMatchIntervalsSource.MinimumShouldMatchIntervalIterator#reset().mjava","commits":[{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/MinimumShouldMatchIntervalsSource.MinimumShouldMatchIntervalIterator#reset().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MinimumShouldMatchIntervalsSource.MinimumShouldMatchIntervalIterator#reset().mjava","sourceNew":"    private void reset() throws IOException {\n      this.proximityQueue.clear();\n      this.backgroundQueue.clear();\n      // First we populate the background queue\n      for (DisiWrapper dw = disiQueue.topList(); dw != null; dw = dw.next) {\n        if (dw.intervals.nextInterval() != NO_MORE_INTERVALS) {\n          this.backgroundQueue.add(dw.intervals);\n        }\n      }\n      // Then we pop the first minShouldMatch entries and add them to the proximity queue\n      this.queueEnd = -1;\n      for (int i = 0; i < minShouldMatch; i++) {\n        IntervalIterator it = this.backgroundQueue.pop();\n        if (it == null) {\n          break;\n        }\n        this.proximityQueue.add(it);\n        updateRightExtreme(it);\n      }\n      start = end = -1;\n    }\n\n","sourceOld":"    private void reset() throws IOException {\n      this.proximityQueue.clear();\n      this.backgroundQueue.clear();\n      // First we populate the background queue\n      for (DisiWrapper dw = disiQueue.topList(); dw != null; dw = dw.next) {\n        if (dw.intervals.nextInterval() != NO_MORE_INTERVALS) {\n          this.backgroundQueue.add(dw.intervals);\n        }\n      }\n      // Then we pop the first minShouldMatch entries and add them to the proximity queue\n      this.queueEnd = -1;\n      for (int i = 0; i < minShouldMatch; i++) {\n        IntervalIterator it = this.backgroundQueue.pop();\n        if (it == null) {\n          break;\n        }\n        this.proximityQueue.add(it);\n        updateRightExtreme(it);\n      }\n      start = end = -1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}