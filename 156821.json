{"path":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.RelatednessFacet#RelatednessFacet(String,String,Map[String,Object]).mjava","commits":[{"id":"c5ec3c464e62e57df598ba20e010313bf6d5d7b4","date":1589998565,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.RelatednessFacet#RelatednessFacet(String,String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    public RelatednessFacet(final String foreQ, final String backQ,\n                            final Map<String,Object> options) {\n      assert null != options;\n      \n      final String f = null == foreQ ? \"$fore\" : \"{!v='\"+foreQ+\"'}\";\n      final String b = null == backQ ? \"$back\" : \"{!v='\"+backQ+\"'}\";\n\n      jsonData.putAll(options);\n      \n      // we don't allow these to be overridden by options, so set them now...\n      jsonData.put(\"type\", \"func\");\n      jsonData.put(\"func\", \"relatedness(\"+f+\",\"+b+\")\");\n      \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":3,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.RelatednessFacet#RelatednessFacet(String,String,Map[String,Object]).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.RelatednessFacet#RelatednessFacet(String,String,Map[String,Object]).mjava","sourceNew":"    public RelatednessFacet(final String foreQ, final String backQ,\n                            final Map<String,Object> options) {\n      assert null != options;\n      \n      final String f = null == foreQ ? \"$fore\" : \"{!v='\"+foreQ+\"'}\";\n      final String b = null == backQ ? \"$back\" : \"{!v='\"+backQ+\"'}\";\n\n      jsonData.putAll(options);\n      \n      // we don't allow these to be overridden by options, so set them now...\n      jsonData.put(\"type\", \"func\");\n      jsonData.put(\"func\", \"relatedness(\"+f+\",\"+b+\")\");\n      jsonData.put(\"${sweep_key:xxx}\",\"${sweep_val:yyy}\");\n    }\n\n","sourceOld":"    public RelatednessFacet(final String foreQ, final String backQ,\n                            final Map<String,Object> options) {\n      assert null != options;\n      \n      final String f = null == foreQ ? \"$fore\" : \"{!v='\"+foreQ+\"'}\";\n      final String b = null == backQ ? \"$back\" : \"{!v='\"+backQ+\"'}\";\n\n      jsonData.putAll(options);\n      \n      // we don't allow these to be overridden by options, so set them now...\n      jsonData.put(\"type\", \"func\");\n      jsonData.put(\"func\", \"relatedness(\"+f+\",\"+b+\")\");\n      \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}