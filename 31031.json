{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setAnalyzer().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setAnalyzer().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setAnalyzer().mjava","sourceNew":"  private void setAnalyzer() throws Exception {\n    Analyzer wrappedAnalyzer = null;\n    if (null == analyzerClassName || 0 == analyzerClassName.length()) {\n      analyzerClassName = \"org.apache.lucene.analysis.standard.StandardAnalyzer\";\n    } \n    if (-1 == analyzerClassName.indexOf(\".\")) {\n      String coreClassName = \"org.apache.lucene.analysis.core.\" + analyzerClassName;\n      try {\n        // If there is no package, first attempt to instantiate a core analyzer\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(coreClassName);\n        analyzerClassName = coreClassName;\n      } catch (ClassNotFoundException e) {\n        // If this is not a core analyzer, try the base analysis package \n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n      }\n    } else {    \n      if (analyzerClassName.startsWith(\"standard.\")) {\n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n      }\n      wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n    }\n    \n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        wrappedAnalyzer,\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        maxShingleSize,\n        ShingleFilter.TOKEN_SEPARATOR,\n        outputUnigrams,\n        false);\n    getRunData().setAnalyzer(analyzer);\n  }\n\n","sourceOld":"  private void setAnalyzer() throws Exception {\n    Analyzer wrappedAnalyzer = null;\n    if (null == analyzerClassName || 0 == analyzerClassName.length()) {\n      analyzerClassName = \"org.apache.lucene.analysis.standard.StandardAnalyzer\";\n    } \n    if (-1 == analyzerClassName.indexOf(\".\")) {\n      String coreClassName = \"org.apache.lucene.analysis.core.\" + analyzerClassName;\n      try {\n        // If there is no package, first attempt to instantiate a core analyzer\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(coreClassName);\n        analyzerClassName = coreClassName;\n      } catch (ClassNotFoundException e) {\n        // If this is not a core analyzer, try the base analysis package \n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n      }\n    } else {    \n      if (analyzerClassName.startsWith(\"standard.\")) {\n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n      }\n      wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n    }\n    \n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        wrappedAnalyzer,\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        maxShingleSize,\n        ShingleFilter.TOKEN_SEPARATOR,\n        outputUnigrams,\n        false);\n    getRunData().setAnalyzer(analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bb889a868ab9d608bde8136f42ed7234a3a927b","date":1359393528,"type":4,"author":"Steven Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setAnalyzer().mjava","sourceNew":null,"sourceOld":"  private void setAnalyzer() throws Exception {\n    Analyzer wrappedAnalyzer = null;\n    if (null == analyzerClassName || 0 == analyzerClassName.length()) {\n      analyzerClassName = \"org.apache.lucene.analysis.standard.StandardAnalyzer\";\n    } \n    if (-1 == analyzerClassName.indexOf(\".\")) {\n      String coreClassName = \"org.apache.lucene.analysis.core.\" + analyzerClassName;\n      try {\n        // If there is no package, first attempt to instantiate a core analyzer\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(coreClassName);\n        analyzerClassName = coreClassName;\n      } catch (ClassNotFoundException e) {\n        // If this is not a core analyzer, try the base analysis package \n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n      }\n    } else {    \n      if (analyzerClassName.startsWith(\"standard.\")) {\n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n      }\n      wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n    }\n    \n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        wrappedAnalyzer,\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        maxShingleSize,\n        ShingleFilter.TOKEN_SEPARATOR,\n        outputUnigrams,\n        false);\n    getRunData().setAnalyzer(analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":4,"author":"Adrien Grand","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setAnalyzer().mjava","sourceNew":null,"sourceOld":"  private void setAnalyzer() throws Exception {\n    Analyzer wrappedAnalyzer = null;\n    if (null == analyzerClassName || 0 == analyzerClassName.length()) {\n      analyzerClassName = \"org.apache.lucene.analysis.standard.StandardAnalyzer\";\n    } \n    if (-1 == analyzerClassName.indexOf(\".\")) {\n      String coreClassName = \"org.apache.lucene.analysis.core.\" + analyzerClassName;\n      try {\n        // If there is no package, first attempt to instantiate a core analyzer\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(coreClassName);\n        analyzerClassName = coreClassName;\n      } catch (ClassNotFoundException e) {\n        // If this is not a core analyzer, try the base analysis package \n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n        wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n      }\n    } else {    \n      if (analyzerClassName.startsWith(\"standard.\")) {\n        analyzerClassName = \"org.apache.lucene.analysis.\" + analyzerClassName;\n      }\n      wrappedAnalyzer = NewAnalyzerTask.createAnalyzer(analyzerClassName);\n    }\n    \n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        wrappedAnalyzer,\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        maxShingleSize,\n        ShingleFilter.TOKEN_SEPARATOR,\n        outputUnigrams,\n        false);\n    getRunData().setAnalyzer(analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7bb889a868ab9d608bde8136f42ed7234a3a927b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"de522d9303bd67c8473a269a1319125d1f3700e0":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7bb889a868ab9d608bde8136f42ed7234a3a927b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7bb889a868ab9d608bde8136f42ed7234a3a927b"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["7bb889a868ab9d608bde8136f42ed7234a3a927b","de522d9303bd67c8473a269a1319125d1f3700e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7bb889a868ab9d608bde8136f42ed7234a3a927b":["de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}