{"path":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","commits":[{"id":"39d51e9acac1e629cffe47855e85dc6dedc4754d","date":1305711497,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","sourceOld":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"/dev/null","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"/dev/null","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","sourceOld":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":["83ede60c0b5bb96ad193414bbd663193b56689b3","83ede60c0b5bb96ad193414bbd663193b56689b3","83ede60c0b5bb96ad193414bbd663193b56689b3","83ede60c0b5bb96ad193414bbd663193b56689b3"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39d51e9acac1e629cffe47855e85dc6dedc4754d"],"39d51e9acac1e629cffe47855e85dc6dedc4754d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"39d51e9acac1e629cffe47855e85dc6dedc4754d":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","39d51e9acac1e629cffe47855e85dc6dedc4754d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}