{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random.nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.type() == Type.BYTES_VAR_SORTED || values.type() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random.nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.type() == Type.BYTES_VAR_SORTED || values.type() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd0f953fbccd59aa346f280fe7e30a698f5ecb04","date":1331511349,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random.nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random.nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.type() == Type.BYTES_VAR_SORTED || values.type() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random.nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random.nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.type() == Type.BYTES_VAR_SORTED || values.type() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random().nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random.nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","date":1352213037,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random().nextInt(5)) {\n    case 3:\n      return values.loadSource();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random().nextInt(5)) {\n    case 3:\n      return values.load();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"841532e4eb1e16e53a6f7a438ec2079ff981b192","date":1358288582,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random().nextInt(5)) {\n    case 3:\n      return values.loadSource();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getSource(DocValues).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private Source getSource(DocValues values) throws IOException {\n    // getSource uses cache internally\n    switch(random().nextInt(5)) {\n    case 3:\n      return values.loadSource();\n    case 2:\n      return values.getDirectSource();\n    case 1:\n      if(values.getType() == Type.BYTES_VAR_SORTED || values.getType() == Type.BYTES_FIXED_SORTED) {\n        return values.getSource().asSortedSource();\n      }\n    default:\n      return values.getSource();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","cd0f953fbccd59aa346f280fe7e30a698f5ecb04"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","841532e4eb1e16e53a6f7a438ec2079ff981b192"],"cd0f953fbccd59aa346f280fe7e30a698f5ecb04":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"841532e4eb1e16e53a6f7a438ec2079ff981b192":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["cd0f953fbccd59aa346f280fe7e30a698f5ecb04"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd0f953fbccd59aa346f280fe7e30a698f5ecb04":["38e3b736c7ca086d61b7dbb841c905ee115490da","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd0f953fbccd59aa346f280fe7e30a698f5ecb04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"841532e4eb1e16e53a6f7a438ec2079ff981b192":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["d4d69c535930b5cce125cff868d40f6373dc27d4","841532e4eb1e16e53a6f7a438ec2079ff981b192"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}