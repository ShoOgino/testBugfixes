{"path":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","commits":[{"id":"0638cded77f278f667f33442bd4a132d484068d1","date":1286833084,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(MockTokenizer.WHITESPACE, true, true));\n    Document doc = new Document();\n    doc.add(new Field(\"haspayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(MockTokenizer.WHITESPACE, true, false));\n    doc = new Document();\n    doc.add(new Field(\"nopayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(MockTokenizer.WHITESPACE, true, true));\n    Document doc = new Document();\n    doc.add(new Field(\"haspayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(MockTokenizer.WHITESPACE, true, false));\n    doc = new Document();\n    doc.add(new Field(\"nopayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(MockTokenizer.WHITESPACE, true, true));\n    Document doc = new Document();\n    doc.add(new Field(\"haspayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(MockTokenizer.WHITESPACE, true, false));\n    doc = new Document();\n    doc.add(new Field(\"nopayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(MockTokenizer.WHITESPACE, true, true));\n    Document doc = new Document();\n    doc.add(new Field(\"haspayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(MockTokenizer.WHITESPACE, true, false));\n    doc = new Document();\n    doc.add(new Field(\"nopayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(MockTokenizer.WHITESPACE, true, true));\n    Document doc = new Document();\n    doc.add(new Field(\"haspayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(MockTokenizer.WHITESPACE, true, false));\n    doc = new Document();\n    doc.add(new Field(\"nopayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(MockTokenizer.WHITESPACE, true, true));\n    Document doc = new Document();\n    doc.add(new Field(\"haspayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(MockTokenizer.WHITESPACE, true, false));\n    doc = new Document();\n    doc.add(new Field(\"nopayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    _TestUtil.checkIndex(dir);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", TextField.TYPE_STORED, \"here we go\"));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", TextField.TYPE_STORED, \"here we go\"));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", TextField.TYPE_STORED, \"here we go\"));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", TextField.TYPE_STORED, \"here we go\"));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["0638cded77f278f667f33442bd4a132d484068d1","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0638cded77f278f667f33442bd4a132d484068d1"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["0638cded77f278f667f33442bd4a132d484068d1"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a3776dccca01c11e7046323cfad46a3b4a471233","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"a3776dccca01c11e7046323cfad46a3b4a471233":["0638cded77f278f667f33442bd4a132d484068d1","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"0638cded77f278f667f33442bd4a132d484068d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["79c2cb24929f2649a8875fb629086171f914d5ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","0638cded77f278f667f33442bd4a132d484068d1"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"0638cded77f278f667f33442bd4a132d484068d1":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["962d04139994fce5193143ef35615499a9a96d78","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}