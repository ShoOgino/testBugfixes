{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_e_ending().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_e_ending().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/DutchStemmer#r_e_ending().mjava","sourceNew":"        private boolean r_e_ending() {\n            int v_1;\n            // (, line 94\n            // unset e_found, line 95\n            B_e_found = false;\n            // [, line 96\n            ket = cursor;\n            // literal, line 96\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 96\n            bra = cursor;\n            // call R1, line 96\n            if (!r_R1())\n            {\n                return false;\n            }\n            // test, line 96\n            v_1 = limit - cursor;\n            if (!(out_grouping_b(g_v, 97, 232)))\n            {\n                return false;\n            }\n            cursor = limit - v_1;\n            // delete, line 96\n            slice_del();\n            // set e_found, line 97\n            B_e_found = true;\n            // call undouble, line 98\n            if (!r_undouble())\n            {\n                return false;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_e_ending() {\n            int v_1;\n            // (, line 94\n            // unset e_found, line 95\n            B_e_found = false;\n            // [, line 96\n            ket = cursor;\n            // literal, line 96\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 96\n            bra = cursor;\n            // call R1, line 96\n            if (!r_R1())\n            {\n                return false;\n            }\n            // test, line 96\n            v_1 = limit - cursor;\n            if (!(out_grouping_b(g_v, 97, 232)))\n            {\n                return false;\n            }\n            cursor = limit - v_1;\n            // delete, line 96\n            slice_del();\n            // set e_found, line 97\n            B_e_found = true;\n            // call undouble, line 98\n            if (!r_undouble())\n            {\n                return false;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_e_ending().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_e_ending().mjava","sourceNew":"        private boolean r_e_ending() {\n            int v_1;\n            // (, line 94\n            // unset e_found, line 95\n            B_e_found = false;\n            // [, line 96\n            ket = cursor;\n            // literal, line 96\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 96\n            bra = cursor;\n            // call R1, line 96\n            if (!r_R1())\n            {\n                return false;\n            }\n            // test, line 96\n            v_1 = limit - cursor;\n            if (!(out_grouping_b(g_v, 97, 232)))\n            {\n                return false;\n            }\n            cursor = limit - v_1;\n            // delete, line 96\n            slice_del();\n            // set e_found, line 97\n            B_e_found = true;\n            // call undouble, line 98\n            if (!r_undouble())\n            {\n                return false;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_e_ending() {\n            int v_1;\n            // (, line 94\n            // unset e_found, line 95\n            B_e_found = false;\n            // [, line 96\n            ket = cursor;\n            // literal, line 96\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 96\n            bra = cursor;\n            // call R1, line 96\n            if (!r_R1())\n            {\n                return false;\n            }\n            // test, line 96\n            v_1 = limit - cursor;\n            if (!(out_grouping_b(g_v, 97, 232)))\n            {\n                return false;\n            }\n            cursor = limit - v_1;\n            // delete, line 96\n            slice_del();\n            // set e_found, line 97\n            B_e_found = true;\n            // call undouble, line 98\n            if (!r_undouble())\n            {\n                return false;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}