{"path":"solr/core/src/java/org/apache/solr/cluster/SolrCollection#getCustomProperty(String).mjava","commits":[{"id":"f5d9700b23e8e9b11b845fcecef89dbdf21373d9","date":1600294231,"type":0,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cluster/SolrCollection#getCustomProperty(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>Returns the value of a custom property name set on the {@link SolrCollection} or {@code null} when no such\n   * property was set. Properties are set through the Collection API. See for example {@code COLLECTIONPROP} in the Solr reference guide.\n   *\n   * <p><b>{@link PlacementPlugin} related note:</b></p>\n   * <p>Using custom properties in conjunction with ad hoc {@link PlacementPlugin} code allows customizing placement\n   * decisions per collection.\n   *\n   * <p>For example if a collection is to be placed only on nodes using SSD storage and not rotating disks, it can be\n   * identified as such using some custom property (collection property could for example be called \"driveType\" and have\n   * value \"ssd\" in that case), and the placement plugin (implementing {@link PlacementPlugin}) would then\n   * {@link AttributeFetcher#requestNodeSystemProperty(String)} for that property from all nodes and only place replicas\n   * of this collection on {@link Node}'s for which\n   * {@link AttributeValues#getDiskType(Node)} is non empty and equal to {@link org.apache.solr.cluster.placement.AttributeFetcher.DiskHardwareType#SSD}.\n   */\n  String getCustomProperty(String customPropertyName);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65352f844eb9e9a677ec4eb2abced4404f08181d","date":1600297608,"type":0,"author":"noblepaul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cluster/SolrCollection#getCustomProperty(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>Returns the value of a custom property name set on the {@link SolrCollection} or {@code null} when no such\n   * property was set. Properties are set through the Collection API. See for example {@code COLLECTIONPROP} in the Solr reference guide.\n   *\n   * <p><b>{@link PlacementPlugin} related note:</b></p>\n   * <p>Using custom properties in conjunction with ad hoc {@link PlacementPlugin} code allows customizing placement\n   * decisions per collection.\n   *\n   * <p>For example if a collection is to be placed only on nodes using SSD storage and not rotating disks, it can be\n   * identified as such using some custom property (collection property could for example be called \"driveType\" and have\n   * value \"ssd\" in that case), and the placement plugin (implementing {@link PlacementPlugin}) would then\n   * {@link AttributeFetcher#requestNodeSystemProperty(String)} for that property from all nodes and only place replicas\n   * of this collection on {@link Node}'s for which\n   * {@link AttributeValues#getDiskType(Node)} is non empty and equal to {@link org.apache.solr.cluster.placement.AttributeFetcher.DiskHardwareType#SSD}.\n   */\n  String getCustomProperty(String customPropertyName);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5d9700b23e8e9b11b845fcecef89dbdf21373d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65352f844eb9e9a677ec4eb2abced4404f08181d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5d9700b23e8e9b11b845fcecef89dbdf21373d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65352f844eb9e9a677ec4eb2abced4404f08181d"]},"commit2Childs":{"f5d9700b23e8e9b11b845fcecef89dbdf21373d9":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f5d9700b23e8e9b11b845fcecef89dbdf21373d9","65352f844eb9e9a677ec4eb2abced4404f08181d"],"65352f844eb9e9a677ec4eb2abced4404f08181d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}