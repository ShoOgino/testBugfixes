{"path":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Scorer#freq().mjava","sourceNew":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public float freq() throws IOException {\n    throw new UnsupportedOperationException(this + \" does not implement freq()\");\n  }\n\n","sourceOld":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public float freq() throws IOException {\n    throw new UnsupportedOperationException(this + \" does not implement freq()\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","date":1342645458,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","sourceNew":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public abstract float freq() throws IOException;\n\n","sourceOld":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public float freq() throws IOException {\n    throw new UnsupportedOperationException(this + \" does not implement freq()\");\n  }\n\n","bugFix":["e4946500259641951dbd7f8a61956bf14bef3f60"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","sourceNew":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public abstract float freq() throws IOException;\n\n","sourceOld":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public float freq() throws IOException {\n    throw new UnsupportedOperationException(this + \" does not implement freq()\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","sourceNew":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public abstract float freq() throws IOException;\n\n","sourceOld":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public float freq() throws IOException {\n    throw new UnsupportedOperationException(this + \" does not implement freq()\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a9119f665d52b16e936bb48c5b836609aadbc5","date":1351605383,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","sourceNew":null,"sourceOld":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public abstract float freq() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"757496f10c991c553a874f78fb06c3f0dc110dff","date":1351616733,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","sourceNew":null,"sourceOld":"  /** Returns number of matches for the current document.\n   *  This returns a float (not int) because\n   *  SloppyPhraseScorer discounts its freq according to how\n   *  \"sloppy\" the match was.\n   *\n   * @lucene.experimental */\n  public abstract float freq() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"449f2318aa7f06ce3bce9031e402201231cb781e","date":1424530966,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the freq of this Scorer on the current document */\n  public abstract int freq() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc14da055888b63b4f8c922d0e1579f3cb315ad7","date":1510744456,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#freq().mjava","sourceNew":null,"sourceOld":"  /** Returns the freq of this Scorer on the current document */\n  public abstract int freq() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"449f2318aa7f06ce3bce9031e402201231cb781e":["757496f10c991c553a874f78fb06c3f0dc110dff"],"aba371508186796cc6151d8223a5b4e16d02e26e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["449f2318aa7f06ce3bce9031e402201231cb781e"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"757496f10c991c553a874f78fb06c3f0dc110dff":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","05a9119f665d52b16e936bb48c5b836609aadbc5"],"05a9119f665d52b16e936bb48c5b836609aadbc5":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"]},"commit2Childs":{"449f2318aa7f06ce3bce9031e402201231cb781e":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","757496f10c991c553a874f78fb06c3f0dc110dff","05a9119f665d52b16e936bb48c5b836609aadbc5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["aba371508186796cc6151d8223a5b4e16d02e26e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"757496f10c991c553a874f78fb06c3f0dc110dff":["449f2318aa7f06ce3bce9031e402201231cb781e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05a9119f665d52b16e936bb48c5b836609aadbc5":["757496f10c991c553a874f78fb06c3f0dc110dff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}