{"path":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#electionQueueInBadState(List[String],Slice,Replica).mjava","commits":[{"id":"73fd358e8ec697393d56617f4d9cedaca74dca14","date":1547954439,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#electionQueueInBadState(List[String],Slice,Replica).mjava","pathOld":"/dev/null","sourceNew":"  // Check that the election queue has some members! There really should be two or more for this to make any sense,\n  // if there's only one we can't change anything.\n  private boolean electionQueueInBadState(List<String> electionNodes, Slice slice, Replica replica) {\n    if (electionNodes.size() < 2) { // if there's only one node in the queue, should already be leader and we shouldn't be here anyway.\n      log.warn(\"Rebalancing leaders and slice {} has less than two elements in the leader \" +\n          \"election queue, but replica {} doesn't think it's the leader.\", slice.getName(), replica.getName());\n      return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#electionQueueInBadState(List[String],Slice,Replica).mjava","pathOld":"/dev/null","sourceNew":"  // Check that the election queue has some members! There really should be two or more for this to make any sense,\n  // if there's only one we can't change anything.\n  private boolean electionQueueInBadState(List<String> electionNodes, Slice slice, Replica replica) {\n    if (electionNodes.size() < 2) { // if there's only one node in the queue, should already be leader and we shouldn't be here anyway.\n      log.warn(\"Rebalancing leaders and slice {} has less than two elements in the leader \" +\n          \"election queue, but replica {} doesn't think it's the leader.\", slice.getName(), replica.getName());\n      return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#electionQueueInBadState(List[String],Slice,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#electionQueueInBadState(List[String],Slice,Replica).mjava","sourceNew":"  // Check that the election queue has some members! There really should be two or more for this to make any sense,\n  // if there's only one we can't change anything.\n  private boolean electionQueueInBadState(List<String> electionNodes, Slice slice, Replica replica) {\n    if (electionNodes.size() < 2) { // if there's only one node in the queue, should already be leader and we shouldn't be here anyway.\n      log.warn(\"Rebalancing leaders and slice {} has less than two elements in the leader election queue, but replica {} doesn't think it's the leader.\"\n          , slice.getName(), replica.getName());\n      return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  // Check that the election queue has some members! There really should be two or more for this to make any sense,\n  // if there's only one we can't change anything.\n  private boolean electionQueueInBadState(List<String> electionNodes, Slice slice, Replica replica) {\n    if (electionNodes.size() < 2) { // if there's only one node in the queue, should already be leader and we shouldn't be here anyway.\n      log.warn(\"Rebalancing leaders and slice {} has less than two elements in the leader \" +\n          \"election queue, but replica {} doesn't think it's the leader.\", slice.getName(), replica.getName());\n      return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73fd358e8ec697393d56617f4d9cedaca74dca14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["73fd358e8ec697393d56617f4d9cedaca74dca14"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","73fd358e8ec697393d56617f4d9cedaca74dca14"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","575e66bd4b2349209027f6801184da7fc3cba13f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}