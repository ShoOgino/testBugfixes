{"path":"solr/solrj/src/java/org/apache/solr/cluster/api/SimpleMap#abortableForEachKey(Function[String,Boolean]).mjava","commits":[{"id":"359d18ba6ce25de0fd8e499a12a05f02fd97187b","date":1597122314,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cluster/api/SimpleMap#abortableForEachKey(Function[String,Boolean]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * iterate through all keys but abort in between if required\n   *  The default impl is suboptimal. Proper implementations must do it more efficiently\n   * @param fun Consume each key and return a boolean to signal whether to proceed or not. If true , continue. If false stop\n   * */\n  default void abortableForEachKey(Function<String, Boolean> fun) {\n    abortableForEach((key, t) -> fun.apply(key));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"359d18ba6ce25de0fd8e499a12a05f02fd97187b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["359d18ba6ce25de0fd8e499a12a05f02fd97187b"]},"commit2Childs":{"359d18ba6ce25de0fd8e499a12a05f02fd97187b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["359d18ba6ce25de0fd8e499a12a05f02fd97187b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}