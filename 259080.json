{"path":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#writeInt(int,int).mjava","commits":[{"id":"87e78f3c129251e74ecc2ff73a32de0f27cf09d5","date":1358006150,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#writeInt(int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Writes an int at the absolute position without\n   *  changing the current pointer. */\n  public void writeInt(int pos, int value) {\n    int blockIndex = pos >> blockBits;\n    int upto = pos & blockMask;\n    byte[] block = blocks.get(blockIndex);\n    int shift = 24;\n    for(int i=0;i<4;i++) {\n      block[upto++] = (byte) (value >> shift);\n      shift -= 8;\n      if (upto == blockSize) {\n        upto = 0;\n        blockIndex++;\n        block = blocks.get(blockIndex);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","date":1358188277,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#writeInt(long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#writeInt(int,int).mjava","sourceNew":"  /** Writes an int at the absolute position without\n   *  changing the current pointer. */\n  public void writeInt(long pos, int value) {\n    int blockIndex = (int) (pos >> blockBits);\n    int upto = (int) (pos & blockMask);\n    byte[] block = blocks.get(blockIndex);\n    int shift = 24;\n    for(int i=0;i<4;i++) {\n      block[upto++] = (byte) (value >> shift);\n      shift -= 8;\n      if (upto == blockSize) {\n        upto = 0;\n        blockIndex++;\n        block = blocks.get(blockIndex);\n      }\n    }\n  }\n\n","sourceOld":"  /** Writes an int at the absolute position without\n   *  changing the current pointer. */\n  public void writeInt(int pos, int value) {\n    int blockIndex = pos >> blockBits;\n    int upto = pos & blockMask;\n    byte[] block = blocks.get(blockIndex);\n    int shift = 24;\n    for(int i=0;i<4;i++) {\n      block[upto++] = (byte) (value >> shift);\n      shift -= 8;\n      if (upto == blockSize) {\n        upto = 0;\n        blockIndex++;\n        block = blocks.get(blockIndex);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"]},"commit2Childs":{"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}