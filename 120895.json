{"path":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation5#decode(LongBuffer,LongBuffer,int).mjava","commits":[{"id":"035130b0c342f404c027af8c8870587c3741cb1e","date":1342898805,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation5#decode(LongBuffer,LongBuffer,int).mjava","pathOld":"/dev/null","sourceNew":"    public void decode(LongBuffer blocks, LongBuffer values, int iterations) {\n      assert blocks.position() + iterations * blocks() <= blocks.limit();\n      assert values.position() + iterations * values() <= values.limit();\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks.get();\n        values.put(block & 31L);\n        values.put((block >>> 5) & 31L);\n        values.put((block >>> 10) & 31L);\n        values.put((block >>> 15) & 31L);\n        values.put((block >>> 20) & 31L);\n        values.put((block >>> 25) & 31L);\n        values.put((block >>> 30) & 31L);\n        values.put((block >>> 35) & 31L);\n        values.put((block >>> 40) & 31L);\n        values.put((block >>> 45) & 31L);\n        values.put((block >>> 50) & 31L);\n        values.put(block >>> 55);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e3359210474c12c0b79e6400450313e3d7ef2bb","date":1344347790,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation5#decode(LongBuffer,LongBuffer,int).mjava","sourceNew":null,"sourceOld":"    public void decode(LongBuffer blocks, LongBuffer values, int iterations) {\n      assert blocks.position() + iterations * blocks() <= blocks.limit();\n      assert values.position() + iterations * values() <= values.limit();\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks.get();\n        values.put(block & 31L);\n        values.put((block >>> 5) & 31L);\n        values.put((block >>> 10) & 31L);\n        values.put((block >>> 15) & 31L);\n        values.put((block >>> 20) & 31L);\n        values.put((block >>> 25) & 31L);\n        values.put((block >>> 30) & 31L);\n        values.put((block >>> 35) & 31L);\n        values.put((block >>> 40) & 31L);\n        values.put((block >>> 45) & 31L);\n        values.put((block >>> 50) & 31L);\n        values.put(block >>> 55);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["035130b0c342f404c027af8c8870587c3741cb1e"],"035130b0c342f404c027af8c8870587c3741cb1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["035130b0c342f404c027af8c8870587c3741cb1e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":[],"035130b0c342f404c027af8c8870587c3741cb1e":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0e3359210474c12c0b79e6400450313e3d7ef2bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}