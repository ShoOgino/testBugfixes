{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","sourceOld":"  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","date":1346106609,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","sourceOld":"  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","sourceOld":"  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    this.readerContext = context;\n    FunctionValues values = groupBy.getValues(vsContext, context);\n    filler = values.getValueFiller();\n    mval = filler.getValue();\n\n    for (GroupHead groupHead : groups.values()) {\n      for (int i = 0; i < groupHead.comparators.length; i++) {\n        groupHead.comparators[i] = groupHead.comparators[i].setNextReader(context);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["b89678825b68eccaf09e6ab71675fc0b0af1e099","99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0","05a14b2611ead08655a2b2bdc61632eb31316e57"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","05a14b2611ead08655a2b2bdc61632eb31316e57"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}