{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","commits":[{"id":"cc3d73ce4049cb1520abaaae57fe8267639bda1d","date":1470181330,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    try {\n      String invalidIpAddress = \"-127.-128\";\n      solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n      fail(\"Expected RemoteSolrException\");\n    }\n    catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    try {\n      String invalidIpAddress = \"-127.-128\";\n      solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n      fail(\"Expected RemoteSolrException\");\n    }\n    catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    try {\n      String invalidIpAddress = \"-127.-128\";\n      solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n      fail(\"Expected RemoteSolrException\");\n    }\n    catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92f789dbd1886e4b468e61b0def88b29a3f55228","date":1533844010,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          String invalidIpAddress = \"-127.-128\";\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","sourceOld":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    try {\n      String invalidIpAddress = \"-127.-128\";\n      solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n      fail(\"Expected RemoteSolrException\");\n    }\n    catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc78b7d15e7b8627fa6d1b946da3a39f0225508d","date":1576086705,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          String invalidIpAddress = DEAD_HOST_2;\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","sourceOld":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          String invalidIpAddress = \"-127.-128\";\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e614eceb81b081076e753ed62268c93c8a2a28e","date":1576119727,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", DEAD_HOST_2));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","sourceOld":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          String invalidIpAddress = DEAD_HOST_2;\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", DEAD_HOST_2));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","sourceOld":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          String invalidIpAddress = \"-127.-128\";\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", invalidIpAddress));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#testProxyInvalidRemote().mjava","sourceNew":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    BaseHttpSolrClient.RemoteSolrException e = expectThrows(BaseHttpSolrClient.RemoteSolrException.class,\n        () -> {\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", DEAD_HOST_2));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","sourceOld":"  @Test\n  public void testProxyInvalidRemote() throws Exception {\n    HttpSolrClient.RemoteSolrException e = expectThrows(HttpSolrClient.RemoteSolrException.class,\n        () -> {\n          solrClient.request(getProxyRequest(\"localHostAnyGroup\",\"bar\", \"[ff01::114]\", DEAD_HOST_2));\n    });\n    assertTrue(e.getMessage().contains(getExpectedHostExMsg(\"localHostAnyGroup\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["92f789dbd1886e4b468e61b0def88b29a3f55228","7e614eceb81b081076e753ed62268c93c8a2a28e"],"7e614eceb81b081076e753ed62268c93c8a2a28e":["bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92f789dbd1886e4b468e61b0def88b29a3f55228":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"db96734b79e26d948b59f68bd4564c4836a71acf":["7e614eceb81b081076e753ed62268c93c8a2a28e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db96734b79e26d948b59f68bd4564c4836a71acf"],"bc78b7d15e7b8627fa6d1b946da3a39f0225508d":["92f789dbd1886e4b468e61b0def88b29a3f55228"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"7e614eceb81b081076e753ed62268c93c8a2a28e":["df724d84dab24a0cc54bec95a8680867adc7f171","db96734b79e26d948b59f68bd4564c4836a71acf"],"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["92f789dbd1886e4b468e61b0def88b29a3f55228","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"92f789dbd1886e4b468e61b0def88b29a3f55228":["df724d84dab24a0cc54bec95a8680867adc7f171","bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"db96734b79e26d948b59f68bd4564c4836a71acf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"bc78b7d15e7b8627fa6d1b946da3a39f0225508d":["7e614eceb81b081076e753ed62268c93c8a2a28e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}