{"path":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","commits":[{"id":"755faee94413f220e729a0b60122d6b24f7a2468","date":1391011756,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, Document doc) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        doc.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        doc.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        doc.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        addedIndexedFields.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be9dc9e17c1046a542423f69130abddef886f16","date":1530129441,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, Document doc) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        doc.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        doc.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n\n        FacetsConfig.DimConfig ft = getDimConfig(facetField.dim);        \n        if (ft.requireDimensionDrillDown) {\n          doc.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, Document doc) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        doc.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        doc.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        doc.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, Document doc) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        doc.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        doc.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n\n        FacetsConfig.DimConfig ft = getDimConfig(facetField.dim);        \n        if (ft.requireDimensionDrillDown) {\n          doc.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, Document doc) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        doc.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        doc.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        doc.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],Document).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, Document doc) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        doc.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        doc.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n\n        FacetsConfig.DimConfig ft = getDimConfig(facetField.dim);        \n        if (ft.requireDimensionDrillDown) {\n          doc.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, Document doc) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        doc.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        doc.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        doc.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["755faee94413f220e729a0b60122d6b24f7a2468","8be9dc9e17c1046a542423f69130abddef886f16"],"8be9dc9e17c1046a542423f69130abddef886f16":["755faee94413f220e729a0b60122d6b24f7a2468"],"755faee94413f220e729a0b60122d6b24f7a2468":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be9dc9e17c1046a542423f69130abddef886f16"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["755faee94413f220e729a0b60122d6b24f7a2468","8be9dc9e17c1046a542423f69130abddef886f16"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"8be9dc9e17c1046a542423f69130abddef886f16":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"755faee94413f220e729a0b60122d6b24f7a2468":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8be9dc9e17c1046a542423f69130abddef886f16","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["755faee94413f220e729a0b60122d6b24f7a2468"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}