{"path":"solr/core/src/java/org/apache/solr/schema/SchemaManager#applyAddField(CommandOperation).mjava","commits":[{"id":"cb9af919a17be70cfc512901fc70f1beaf840ca1","date":1413208885,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#applyAddField(CommandOperation).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#applyAddField(Operation).mjava","sourceNew":"  private boolean applyAddField( CommandOperation op) {\n    String name = op.getStr(NAME);\n    String type = op.getStr(TYPE);\n    if(op.hasError())\n      return false;\n    FieldType ft = managedIndexSchema.getFieldTypeByName(type);\n    if(ft==null){\n      op.addError(\"No such field type '\"+type+\"'\");\n      return  false;\n    }\n    try {\n      if(ADD_DYNAMIC_FIELD.equals(op.name)){\n        managedIndexSchema = managedIndexSchema.addDynamicFields(\n            singletonList(SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,false);\n      } else {\n        managedIndexSchema = managedIndexSchema.addFields(\n            singletonList( SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,\n            false);\n      }\n    } catch (Exception e) {\n      op.addError(getErrorStr(e));\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean applyAddField( Operation op) {\n    String name = op.getStr(NAME);\n    String type = op.getStr(TYPE);\n    if(op.hasError())\n      return false;\n    FieldType ft = managedIndexSchema.getFieldTypeByName(type);\n    if(ft==null){\n      op.addError(\"No such field type '\"+type+\"'\");\n      return  false;\n    }\n    try {\n      if(ADD_DYNAMIC_FIELD.equals(op.name)){\n        managedIndexSchema = managedIndexSchema.addDynamicFields(\n            singletonList(SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,false);\n      } else {\n        managedIndexSchema = managedIndexSchema.addFields(\n            singletonList( SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,\n            false);\n      }\n    } catch (Exception e) {\n      op.addError(getErrorStr(e));\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#applyAddField(CommandOperation).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#applyAddField(Operation).mjava","sourceNew":"  private boolean applyAddField( CommandOperation op) {\n    String name = op.getStr(NAME);\n    String type = op.getStr(TYPE);\n    if(op.hasError())\n      return false;\n    FieldType ft = managedIndexSchema.getFieldTypeByName(type);\n    if(ft==null){\n      op.addError(\"No such field type '\"+type+\"'\");\n      return  false;\n    }\n    try {\n      if(ADD_DYNAMIC_FIELD.equals(op.name)){\n        managedIndexSchema = managedIndexSchema.addDynamicFields(\n            singletonList(SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,false);\n      } else {\n        managedIndexSchema = managedIndexSchema.addFields(\n            singletonList( SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,\n            false);\n      }\n    } catch (Exception e) {\n      op.addError(getErrorStr(e));\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean applyAddField( Operation op) {\n    String name = op.getStr(NAME);\n    String type = op.getStr(TYPE);\n    if(op.hasError())\n      return false;\n    FieldType ft = managedIndexSchema.getFieldTypeByName(type);\n    if(ft==null){\n      op.addError(\"No such field type '\"+type+\"'\");\n      return  false;\n    }\n    try {\n      if(ADD_DYNAMIC_FIELD.equals(op.name)){\n        managedIndexSchema = managedIndexSchema.addDynamicFields(\n            singletonList(SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,false);\n      } else {\n        managedIndexSchema = managedIndexSchema.addFields(\n            singletonList( SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,\n            false);\n      }\n    } catch (Exception e) {\n      op.addError(getErrorStr(e));\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeeea2295d6355a29e259130a5c48ace73022d7c","date":1426569216,"type":4,"author":"Steven Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#applyAddField(CommandOperation).mjava","sourceNew":null,"sourceOld":"  private boolean applyAddField( CommandOperation op) {\n    String name = op.getStr(NAME);\n    String type = op.getStr(TYPE);\n    if(op.hasError())\n      return false;\n    FieldType ft = managedIndexSchema.getFieldTypeByName(type);\n    if(ft==null){\n      op.addError(\"No such field type '\"+type+\"'\");\n      return  false;\n    }\n    try {\n      if(ADD_DYNAMIC_FIELD.equals(op.name)){\n        managedIndexSchema = managedIndexSchema.addDynamicFields(\n            singletonList(SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,false);\n      } else {\n        managedIndexSchema = managedIndexSchema.addFields(\n            singletonList( SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,\n            false);\n      }\n    } catch (Exception e) {\n      op.addError(getErrorStr(e));\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#applyAddField(CommandOperation).mjava","sourceNew":null,"sourceOld":"  private boolean applyAddField( CommandOperation op) {\n    String name = op.getStr(NAME);\n    String type = op.getStr(TYPE);\n    if(op.hasError())\n      return false;\n    FieldType ft = managedIndexSchema.getFieldTypeByName(type);\n    if(ft==null){\n      op.addError(\"No such field type '\"+type+\"'\");\n      return  false;\n    }\n    try {\n      if(ADD_DYNAMIC_FIELD.equals(op.name)){\n        managedIndexSchema = managedIndexSchema.addDynamicFields(\n            singletonList(SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,false);\n      } else {\n        managedIndexSchema = managedIndexSchema.addFields(\n            singletonList( SchemaField.create(name, ft, op.getValuesExcluding(NAME, TYPE))),\n            EMPTY_MAP,\n            false);\n      }\n    } catch (Exception e) {\n      op.addError(getErrorStr(e));\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cb9af919a17be70cfc512901fc70f1beaf840ca1","eeeea2295d6355a29e259130a5c48ace73022d7c"],"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cb9af919a17be70cfc512901fc70f1beaf840ca1"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["cb9af919a17be70cfc512901fc70f1beaf840ca1"],"cb9af919a17be70cfc512901fc70f1beaf840ca1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeeea2295d6355a29e259130a5c48ace73022d7c"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"55980207f1977bd1463465de1659b821347e2fa8":[],"eeeea2295d6355a29e259130a5c48ace73022d7c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb9af919a17be70cfc512901fc70f1beaf840ca1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","55980207f1977bd1463465de1659b821347e2fa8","eeeea2295d6355a29e259130a5c48ace73022d7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55980207f1977bd1463465de1659b821347e2fa8","cb9af919a17be70cfc512901fc70f1beaf840ca1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}