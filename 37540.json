{"path":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","commits":[{"id":"3af8c90c5e965a1a8011e827ab59de734c7dfb79","date":1368108782,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"/dev/null","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              true,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer, true);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              true,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              true,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer, true);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b516a692d03225c8f0e81a13ceed2dc32bb457d","date":1453411951,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              true,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"427bf5b96e9aacef8f01879bc1b93c3619c43439","date":1464134313,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    TrackingIndexWriter mgrWriter = new TrackingIndexWriter(writer);\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = mgrWriter.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = mgrWriter.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aef2a94da918b657d107b616a643e1759db43b6a","date":1527706131,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n\n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n    \n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTryDelete#testTryDeleteDocument().mjava","sourceNew":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits.value);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n\n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits.value);\n  }\n\n","sourceOld":"  public void testTryDeleteDocument ()\n    throws IOException\n  {\n    Directory directory = createIndex();\n\n    IndexWriter writer = getWriter(directory);\n\n    ReferenceManager<IndexSearcher> mgr = new SearcherManager(writer,\n                                                              new SearcherFactory());\n\n    IndexSearcher searcher = mgr.acquire();\n\n    TopDocs topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")),\n                                      100);\n    assertEquals(1, topDocs.totalHits);\n\n    long result;\n    if (random().nextBoolean()) {\n      IndexReader r = DirectoryReader.open(writer);\n      result = writer.tryDeleteDocument(r, 0);\n      r.close();\n    } else {\n      result = writer.tryDeleteDocument(searcher.getIndexReader(), 0);\n    }\n\n    // The tryDeleteDocument should have succeeded:\n    assertTrue(result != -1);\n\n    assertTrue(writer.hasDeletions());\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    assertTrue(writer.hasDeletions());\n\n    mgr.maybeRefresh();\n\n    searcher = mgr.acquire();\n\n    topDocs = searcher.search(new TermQuery(new Term(\"foo\", \"0\")), 100);\n\n    assertEquals(0, topDocs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["3af8c90c5e965a1a8011e827ab59de734c7dfb79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["2a1862266772deb28cdcb7d996b64d2177022687"],"3af8c90c5e965a1a8011e827ab59de734c7dfb79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6483e4260c08168709c02238ae083a51519a28dd":["7b516a692d03225c8f0e81a13ceed2dc32bb457d","427bf5b96e9aacef8f01879bc1b93c3619c43439"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["aef2a94da918b657d107b616a643e1759db43b6a"],"191128ac5b85671b1671e2c857437694283b6ebf":["7b516a692d03225c8f0e81a13ceed2dc32bb457d","6483e4260c08168709c02238ae083a51519a28dd"],"aef2a94da918b657d107b616a643e1759db43b6a":["191128ac5b85671b1671e2c857437694283b6ebf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7b516a692d03225c8f0e81a13ceed2dc32bb457d","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"427bf5b96e9aacef8f01879bc1b93c3619c43439":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3af8c90c5e965a1a8011e827ab59de734c7dfb79"],"3af8c90c5e965a1a8011e827ab59de734c7dfb79":["2a1862266772deb28cdcb7d996b64d2177022687"],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","427bf5b96e9aacef8f01879bc1b93c3619c43439"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"191128ac5b85671b1671e2c857437694283b6ebf":["aef2a94da918b657d107b616a643e1759db43b6a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"aef2a94da918b657d107b616a643e1759db43b6a":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"427bf5b96e9aacef8f01879bc1b93c3619c43439":["6483e4260c08168709c02238ae083a51519a28dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}