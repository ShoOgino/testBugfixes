{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OverlaySingleDocTermsLeafReader#terms(String).mjava","commits":[{"id":"795822cce6616d4035b5a4bdbb6c113ea2f715ba","date":1535599765,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OverlaySingleDocTermsLeafReader#terms(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    if (!in2Field.equals(field)) {\n      return in.terms(field);\n    }\n\n    // Shifts leafReader in2 with only doc ID 0 to a target doc ID\n    final Terms terms = in2.terms(field);\n    if (terms == null) {\n      return null;\n    }\n    if (in2TargetDocId == 0) { // no doc ID remapping to do\n      return terms;\n    }\n    return new FilterTerms(terms) {\n      @Override\n      public TermsEnum iterator() throws IOException {\n        return filterTermsEnum(super.iterator());\n      }\n\n      @Override\n      public TermsEnum intersect(CompiledAutomaton compiled, BytesRef startTerm) throws IOException {\n        return filterTermsEnum(super.intersect(compiled, startTerm));\n      }\n\n      private TermsEnum filterTermsEnum(TermsEnum termsEnum) throws IOException {\n        return new FilterTermsEnum(termsEnum) {\n          @Override\n          public PostingsEnum postings(PostingsEnum reuse, int flags) throws IOException {\n            //TODO 'reuse' will always fail to reuse unless we unwrap it\n            return new FilterPostingsEnum(super.postings(reuse, flags)) {\n              @Override\n              public int nextDoc() throws IOException {\n                final int doc = super.nextDoc();\n                return doc == 0 ? in2TargetDocId : doc;\n              }\n\n              @Override\n              public int advance(int target) throws IOException {\n                return slowAdvance(target);\n              }\n\n              @Override\n              public int docID() {\n                final int doc = super.docID();\n                return doc == 0 ? in2TargetDocId : doc;\n              }\n            };\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}