{"path":"src/java/org/apache/solr/update/DirectUpdateHandler2#mergeIndexes(MergeIndexesCommand).mjava","commits":[{"id":"61da3ca2ecb2710b1cc3080ea9d08114b9365cca","date":1243484201,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler2#mergeIndexes(MergeIndexesCommand).mjava","pathOld":"/dev/null","sourceNew":"  public int mergeIndexes(MergeIndexesCommand cmd) throws IOException {\n    mergeIndexesCommands.incrementAndGet();\n    int rc = -1;\n\n    iwCommit.lock();\n    try {\n      log.info(\"start \" + cmd);\n\n      Directory[] dirs = cmd.dirs;\n      if (dirs != null && dirs.length > 0) {\n        openWriter();\n        writer.addIndexesNoOptimize(dirs);\n        rc = 1;\n      } else {\n        rc = 0;\n      }\n      log.info(\"end_mergeIndexes\");\n    } finally {\n      iwCommit.unlock();\n    }\n\n    if (rc == 1 && tracker.timeUpperBound > 0) {\n      tracker.scheduleCommitWithin(tracker.timeUpperBound);\n    }\n\n    return rc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2#mergeIndexes(MergeIndexesCommand).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler2#mergeIndexes(MergeIndexesCommand).mjava","sourceNew":"  public int mergeIndexes(MergeIndexesCommand cmd) throws IOException {\n    mergeIndexesCommands.incrementAndGet();\n    int rc = -1;\n\n    iwCommit.lock();\n    try {\n      log.info(\"start \" + cmd);\n\n      Directory[] dirs = cmd.dirs;\n      if (dirs != null && dirs.length > 0) {\n        openWriter();\n        writer.addIndexesNoOptimize(dirs);\n        rc = 1;\n      } else {\n        rc = 0;\n      }\n      log.info(\"end_mergeIndexes\");\n    } finally {\n      iwCommit.unlock();\n    }\n\n    if (rc == 1 && tracker.timeUpperBound > 0) {\n      tracker.scheduleCommitWithin(tracker.timeUpperBound);\n    }\n\n    return rc;\n  }\n\n","sourceOld":"  public int mergeIndexes(MergeIndexesCommand cmd) throws IOException {\n    mergeIndexesCommands.incrementAndGet();\n    int rc = -1;\n\n    iwCommit.lock();\n    try {\n      log.info(\"start \" + cmd);\n\n      Directory[] dirs = cmd.dirs;\n      if (dirs != null && dirs.length > 0) {\n        openWriter();\n        writer.addIndexesNoOptimize(dirs);\n        rc = 1;\n      } else {\n        rc = 0;\n      }\n      log.info(\"end_mergeIndexes\");\n    } finally {\n      iwCommit.unlock();\n    }\n\n    if (rc == 1 && tracker.timeUpperBound > 0) {\n      tracker.scheduleCommitWithin(tracker.timeUpperBound);\n    }\n\n    return rc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"61da3ca2ecb2710b1cc3080ea9d08114b9365cca":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["61da3ca2ecb2710b1cc3080ea9d08114b9365cca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["61da3ca2ecb2710b1cc3080ea9d08114b9365cca"],"61da3ca2ecb2710b1cc3080ea9d08114b9365cca":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}