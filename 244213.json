{"path":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.shutdown();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.shutdown();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.shutdown();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.shutdown();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new ClassicSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new ClassicSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new ClassicSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new ClassicSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new ClassicSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new ClassicSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new ClassicSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new BM25Similarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new ClassicSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new ClassicSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new ClassicSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new BM25Similarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new ClassicSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = DirectoryReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new ClassicSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a1862266772deb28cdcb7d996b64d2177022687","615370d2b876c3435773b5174df2e2242ad7981a"],"2a1862266772deb28cdcb7d996b64d2177022687":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"615370d2b876c3435773b5174df2e2242ad7981a":["2a1862266772deb28cdcb7d996b64d2177022687"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"2a1862266772deb28cdcb7d996b64d2177022687":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}