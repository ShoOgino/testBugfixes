{"path":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","commits":[{"id":"6bd4a7478aca8c3880512b730b28bf3239340635","date":1326554224,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"/dev/null","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = ReaderUtil.leaves(reader.getTopReaderContext());\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader.document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76ea4531bf2fa6dd07ba0b7fb4bb86881bbe5f62","date":1327853020,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = ReaderUtil.leaves(reader.getTopReaderContext());\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = ReaderUtil.leaves(reader.getTopReaderContext());\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader.document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = ReaderUtil.leaves(reader.getTopReaderContext());\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = ReaderUtil.leaves(reader.getTopReaderContext());\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader.document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8","date":1328775259,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = ReaderUtil.leaves(reader.getTopReaderContext());\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bd4a7478aca8c3880512b730b28bf3239340635":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8"],"76ea4531bf2fa6dd07ba0b7fb4bb86881bbe5f62":["6bd4a7478aca8c3880512b730b28bf3239340635"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["6bd4a7478aca8c3880512b730b28bf3239340635","76ea4531bf2fa6dd07ba0b7fb4bb86881bbe5f62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"6bd4a7478aca8c3880512b730b28bf3239340635":["76ea4531bf2fa6dd07ba0b7fb4bb86881bbe5f62","5cab9a86bd67202d20b6adc463008c8e982b070a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"76ea4531bf2fa6dd07ba0b7fb4bb86881bbe5f62":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bd4a7478aca8c3880512b730b28bf3239340635"],"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}