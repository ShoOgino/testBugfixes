{"path":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe8474c4e5a03f0ca187f99c062af83e092717f3","date":1269253267,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7375bc69c270e1e62c08c5091793a3e9dce937f","date":1275471695,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182cfc5b92d5da17fd74fc41c8091ed157d80ff4","date":1290263949,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = DEFAULT_CODEC_PROVIDER;\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL;\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047784e704fe141e0ff36affac8a7cb6c7bbec","date":1295352100,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    maxFieldLength = UNLIMITED_FIELD_LENGTH;\n    similarity = Similarity.getDefault();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19b281157bd1e723dc9a712b6058506090cf2a8a","date":1304007734,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool(DEFAULT_MAX_THREAD_STATES);\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed58545b60d7aa369597f02f68f1d1c9c04be47a","date":1305377120,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new TieredMergePolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link Analyzer}. {@link Version} is\n   * a placeholder for future changes. The default settings are relevant to 3.1\n   * and before. In the future, if different settings will apply to different\n   * versions, they will be documented here.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriter.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    mergePolicy = new LogByteSizeMergePolicy();\n    maxThreadStates = DEFAULT_MAX_THREAD_STATES;\n    readerPooling = DEFAULT_READER_POOLING;\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6d61bb4c680a738a817636a2a4e2a16c8375a4c","date":1311702666,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codec = Codec.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codecProvider = CodecProvider.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codec = Codec.getDefault();\n    infoStream = InfoStream.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codec = Codec.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarity = IndexSearcher.getDefaultSimilarity();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codec = Codec.getDefault();\n    infoStream = InfoStream.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarityProvider = IndexSearcher.getDefaultSimilarityProvider();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codec = Codec.getDefault();\n    infoStream = InfoStream.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#IndexWriterConfig(Version,Analyzer).mjava","sourceNew":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarity = IndexSearcher.getDefaultSimilarity();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codec = Codec.getDefault();\n    infoStream = InfoStream.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that with defaults that match the specified\n   * {@link Version} as well as the default {@link\n   * Analyzer}. If matchVersion is >= {@link\n   * Version#LUCENE_32}, {@link TieredMergePolicy} is used\n   * for merging; else {@link LogByteSizeMergePolicy}.\n   * Note that {@link TieredMergePolicy} is free to select\n   * non-contiguous merges, which means docIDs may not\n   * remain montonic over time.  If this is a problem you\n   * should switch to {@link LogByteSizeMergePolicy} or\n   * {@link LogDocMergePolicy}.\n   */\n  public IndexWriterConfig(Version matchVersion, Analyzer analyzer) {\n    this.matchVersion = matchVersion;\n    this.analyzer = analyzer;\n    delPolicy = new KeepOnlyLastCommitDeletionPolicy();\n    commit = null;\n    openMode = OpenMode.CREATE_OR_APPEND;\n    similarity = IndexSearcher.getDefaultSimilarity();\n    termIndexInterval = DEFAULT_TERM_INDEX_INTERVAL; // TODO: this should be private to the codec, not settable here\n    mergeScheduler = new ConcurrentMergeScheduler();\n    writeLockTimeout = WRITE_LOCK_TIMEOUT;\n    maxBufferedDeleteTerms = DEFAULT_MAX_BUFFERED_DELETE_TERMS;\n    ramBufferSizeMB = DEFAULT_RAM_BUFFER_SIZE_MB;\n    maxBufferedDocs = DEFAULT_MAX_BUFFERED_DOCS;\n    indexingChain = DocumentsWriterPerThread.defaultIndexingChain;\n    mergedSegmentWarmer = null;\n    codec = Codec.getDefault();\n    infoStream = InfoStream.getDefault();\n    if (matchVersion.onOrAfter(Version.LUCENE_32)) {\n      mergePolicy = new TieredMergePolicy();\n    } else {\n      mergePolicy = new LogByteSizeMergePolicy();\n    }\n    flushPolicy = new FlushByRamOrCountsPolicy();\n    readerPooling = DEFAULT_READER_POOLING;\n    indexerThreadPool = new ThreadAffinityDocumentsWriterThreadPool();\n    readerTermsIndexDivisor = DEFAULT_READER_TERMS_INDEX_DIVISOR;\n    perThreadHardLimitMB = DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"c7375bc69c270e1e62c08c5091793a3e9dce937f":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["fe8474c4e5a03f0ca187f99c062af83e092717f3"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["06584e6e98d592b34e1329b384182f368d2025e8"],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["c7375bc69c270e1e62c08c5091793a3e9dce937f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6c18273ea5b3974d2f30117f46f1ae416c28f727","182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["e79a6d080bdd5b2a8f56342cf571b5476de04180","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["56da903869515527852ee21ea7ef7bfe414cd40d"],"ed58545b60d7aa369597f02f68f1d1c9c04be47a":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"c6d61bb4c680a738a817636a2a4e2a16c8375a4c":["ed58545b60d7aa369597f02f68f1d1c9c04be47a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19b281157bd1e723dc9a712b6058506090cf2a8a":["45669a651c970812a680841b97a77cce06af559f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"70ad682703b8585f5d0a637efec044d57ec05efb":["3bb13258feba31ab676502787ab2e1779f129b7a","56da903869515527852ee21ea7ef7bfe414cd40d"],"fe8474c4e5a03f0ca187f99c062af83e092717f3":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["c7375bc69c270e1e62c08c5091793a3e9dce937f"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"06584e6e98d592b34e1329b384182f368d2025e8":["7b91922b55d15444d554721b352861d028eb8278"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["01e5948db9a07144112d2f08f28ca2e3cd880348","19b281157bd1e723dc9a712b6058506090cf2a8a"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"7b91922b55d15444d554721b352861d028eb8278":["c6d61bb4c680a738a817636a2a4e2a16c8375a4c"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","ed58545b60d7aa369597f02f68f1d1c9c04be47a"],"56da903869515527852ee21ea7ef7bfe414cd40d":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"a3776dccca01c11e7046323cfad46a3b4a471233":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","ed58545b60d7aa369597f02f68f1d1c9c04be47a"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"45669a651c970812a680841b97a77cce06af559f":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175","01e5948db9a07144112d2f08f28ca2e3cd880348"],"3bb13258feba31ab676502787ab2e1779f129b7a":["c7375bc69c270e1e62c08c5091793a3e9dce937f","182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7375bc69c270e1e62c08c5091793a3e9dce937f":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4","6c18273ea5b3974d2f30117f46f1ae416c28f727","3bb13258feba31ab676502787ab2e1779f129b7a"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["c7375bc69c270e1e62c08c5091793a3e9dce937f"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d","3bb13258feba31ab676502787ab2e1779f129b7a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","45669a651c970812a680841b97a77cce06af559f"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","01e5948db9a07144112d2f08f28ca2e3cd880348","29ef99d61cda9641b6250bf9567329a6e65f901d","a3776dccca01c11e7046323cfad46a3b4a471233"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["45669a651c970812a680841b97a77cce06af559f"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"ed58545b60d7aa369597f02f68f1d1c9c04be47a":["c6d61bb4c680a738a817636a2a4e2a16c8375a4c","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"c6d61bb4c680a738a817636a2a4e2a16c8375a4c":["7b91922b55d15444d554721b352861d028eb8278"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"19b281157bd1e723dc9a712b6058506090cf2a8a":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"fe8474c4e5a03f0ca187f99c062af83e092717f3":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["fe8474c4e5a03f0ca187f99c062af83e092717f3"],"06584e6e98d592b34e1329b384182f368d2025e8":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["ed58545b60d7aa369597f02f68f1d1c9c04be47a","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"7b91922b55d15444d554721b352861d028eb8278":["06584e6e98d592b34e1329b384182f368d2025e8"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["c2047784e704fe141e0ff36affac8a7cb6c7bbec","70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"45669a651c970812a680841b97a77cce06af559f":["19b281157bd1e723dc9a712b6058506090cf2a8a"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"3bb13258feba31ab676502787ab2e1779f129b7a":["70ad682703b8585f5d0a637efec044d57ec05efb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}