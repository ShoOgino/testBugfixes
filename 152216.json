{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","sourceNew":"  private static BooleanClause.Occur getModifierValue(QueryNode node)\n      throws QueryNodeException {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","sourceOld":"  private static BooleanClause.Occur getModifierValue(QueryNode node)\n      throws QueryNodeException {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","sourceNew":"  private static BooleanClause.Occur getModifierValue(QueryNode node) {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","sourceOld":"  private static BooleanClause.Occur getModifierValue(QueryNode node)\n      throws QueryNodeException {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","bugFix":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","sourceNew":"  private static BooleanClause.Occur getModifierValue(QueryNode node) {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","sourceOld":"  private static BooleanClause.Occur getModifierValue(QueryNode node)\n      throws QueryNodeException {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","sourceNew":null,"sourceOld":"  private static BooleanClause.Occur getModifierValue(QueryNode node) {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardBooleanQueryNodeBuilder#getModifierValue(QueryNode).mjava","sourceNew":null,"sourceOld":"  private static BooleanClause.Occur getModifierValue(QueryNode node) {\n\n    if (node instanceof ModifierQueryNode) {\n      ModifierQueryNode mNode = ((ModifierQueryNode) node);\n      Modifier modifier = mNode.getModifier();\n\n      if (Modifier.MOD_NONE.equals(modifier)) {\n        return BooleanClause.Occur.SHOULD;\n\n      } else if (Modifier.MOD_NOT.equals(modifier)) {\n        return BooleanClause.Occur.MUST_NOT;\n\n      } else {\n        return BooleanClause.Occur.MUST;\n      }\n    }\n\n    return BooleanClause.Occur.SHOULD;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8a0e442f7b61f811680273b25da95994a724466":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}