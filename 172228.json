{"path":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len The number of documents to return\n   * @param max The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len The number of documents to return\n   * @param max The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len The number of documents to return\n   * @param max The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len The number of documents to return\n   * @param max The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len The number of documents to return\n   * @param max The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len The number of documents to return\n   * @param max The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738f7d06920ae25ab2884f4efd80c42e95d6271","date":1312707753,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len The number of documents to return\n   * @param max The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":null,"bugIntro":["d423443db06bfcac81733aafcce04ee491880cc7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d423443db06bfcac81733aafcce04ee491880cc7","date":1477501011,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len &lt; 0 or if offset + len &gt; 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  public static int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":["9c7cdfe5a1ea9db97faa404b251fa644faa73597","3738f7d06920ae25ab2884f4efd80c42e95d6271"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#getMax(int,int,int).mjava","sourceNew":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len &lt; 0 or if offset + len &gt; 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  public static int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","sourceOld":"  /**\n   * Returns offset + len if len equals zero or higher. Otherwise returns max.\n   *\n   * @param offset The offset\n   * @param len    The number of documents to return\n   * @param max    The number of document to return if len < 0 or if offset + len < 0\n   * @return offset + len if len equals zero or higher. Otherwise returns max\n   */\n  int getMax(int offset, int len, int max) {\n    int v = len < 0 ? max : offset + len;\n    if (v < 0 || v > max) v = max;\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3738f7d06920ae25ab2884f4efd80c42e95d6271":["c26f00b574427b55127e869b935845554afde1fa"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3738f7d06920ae25ab2884f4efd80c42e95d6271","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["19275ba31e621f6da1b83bf13af75233876fd3d4","d423443db06bfcac81733aafcce04ee491880cc7"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d423443db06bfcac81733aafcce04ee491880cc7":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d423443db06bfcac81733aafcce04ee491880cc7"]},"commit2Childs":{"3738f7d06920ae25ab2884f4efd80c42e95d6271":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","d423443db06bfcac81733aafcce04ee491880cc7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d423443db06bfcac81733aafcce04ee491880cc7":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}