{"path":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testTooBigPosition().mjava","commits":[{"id":"35fb92999b9df7df2ce2b35b83a044cbede61f45","date":1429037650,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testTooBigPosition().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testTooBigPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 1:\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(2);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    // This should overflow max:\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    try {\n      iw.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    // Document should not be visible:\n    IndexReader r = DirectoryReader.open(iw, true);\n    assertEquals(0, r.numDocs());\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testTooBigPosition().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testTooBigPosition().mjava","sourceNew":"  public void testTooBigPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 1:\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(2);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    // This should overflow max:\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    try {\n      iw.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    // Document should not be visible:\n    IndexReader r = DirectoryReader.open(iw);\n    assertEquals(0, r.numDocs());\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTooBigPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 1:\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(2);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    // This should overflow max:\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    try {\n      iw.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    // Document should not be visible:\n    IndexReader r = DirectoryReader.open(iw, true);\n    assertEquals(0, r.numDocs());\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testTooBigPosition().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testTooBigPosition().mjava","sourceNew":"  public void testTooBigPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 1:\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(2);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    // This should overflow max:\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    expectThrows(IllegalArgumentException.class, () -> {\n      iw.addDocument(doc);\n    });\n\n    // Document should not be visible:\n    IndexReader r = DirectoryReader.open(iw);\n    assertEquals(0, r.numDocs());\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTooBigPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 1:\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(2);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    // This should overflow max:\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    try {\n      iw.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    // Document should not be visible:\n    IndexReader r = DirectoryReader.open(iw);\n    assertEquals(0, r.numDocs());\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["05fe562aa248790944d43cdd478f512572835ba0"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["2a1862266772deb28cdcb7d996b64d2177022687"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}