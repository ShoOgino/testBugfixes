{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","commits":[{"id":"c5c99ad021f3da085fcb66220598a8f91dc5e453","date":1462242046,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"/dev/null","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n      IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["19f02bb04467ed179738a398a7da80bbbe161c16","7c0c76f8855bd391c39890131d8dbd56c3fdcef0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c7a21395bae9e2f61aeb639f47aaca771c426ed","date":1462255690,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"/dev/null","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n      IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"/dev/null","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n      IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e2345fb81b6c1c7faefa550ee5eaafadc54486","date":1469730189,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      if (commitName != null) {\n        SolrSnapshotMetaDataManager snapshotMgr = solrCore.getSnapshotMetaDataManager();\n        Optional<IndexCommit> commit = snapshotMgr.getIndexCommitByName(commitName);\n        if(commit.isPresent()) {\n          return createSnapshot(commit.get());\n        }\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to find an index commit with name \" + commitName +\n            \" for core \" + solrCore.getName());\n      } else {\n        //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n        IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n        IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n        deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n        try {\n          return createSnapshot(indexCommit);\n        } finally {\n          deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n        }\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":"  public NamedList createSnapshot() throws Exception {\n    IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n      IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":["7c0c76f8855bd391c39890131d8dbd56c3fdcef0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      if (commitName != null) {\n        SolrSnapshotMetaDataManager snapshotMgr = solrCore.getSnapshotMetaDataManager();\n        Optional<IndexCommit> commit = snapshotMgr.getIndexCommitByName(commitName);\n        if(commit.isPresent()) {\n          return createSnapshot(commit.get());\n        }\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to find an index commit with name \" + commitName +\n            \" for core \" + solrCore.getName());\n      } else {\n        //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n        IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n        IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n        deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n        try {\n          return createSnapshot(indexCommit);\n        } finally {\n          deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n        }\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":"  public NamedList createSnapshot() throws Exception {\n    IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n      IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      if (commitName != null) {\n        SolrSnapshotMetaDataManager snapshotMgr = solrCore.getSnapshotMetaDataManager();\n        Optional<IndexCommit> commit = snapshotMgr.getIndexCommitByName(commitName);\n        if(commit.isPresent()) {\n          return createSnapshot(commit.get());\n        }\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to find an index commit with name \" + commitName +\n            \" for core \" + solrCore.getName());\n      } else {\n        //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n        IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n        IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n        deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n        try {\n          return createSnapshot(indexCommit);\n        } finally {\n          deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n        }\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":"  public NamedList createSnapshot() throws Exception {\n    IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n      IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c0c76f8855bd391c39890131d8dbd56c3fdcef0","date":1512185429,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    IndexCommit indexCommit;\n    if (commitName != null) {\n      indexCommit = getIndexCommitFromName();\n      return createSnapshot(indexCommit);\n    } else {\n      indexCommit = getIndexCommit();\n      IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    }\n  }\n\n","sourceOld":"  public NamedList createSnapshot() throws Exception {\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      if (commitName != null) {\n        SolrSnapshotMetaDataManager snapshotMgr = solrCore.getSnapshotMetaDataManager();\n        Optional<IndexCommit> commit = snapshotMgr.getIndexCommitByName(commitName);\n        if(commit.isPresent()) {\n          return createSnapshot(commit.get());\n        }\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to find an index commit with name \" + commitName +\n            \" for core \" + solrCore.getName());\n      } else {\n        //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n        IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n        IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n        deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n        try {\n          return createSnapshot(indexCommit);\n        } finally {\n          deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n        }\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","bugFix":["91e2345fb81b6c1c7faefa550ee5eaafadc54486","c5c99ad021f3da085fcb66220598a8f91dc5e453"],"bugIntro":["19f02bb04467ed179738a398a7da80bbbe161c16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"670400747be2d99524159f3806d449ecfb0c2389","date":1512293281,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    IndexCommit indexCommit;\n    if (commitName != null) {\n      indexCommit = getIndexCommitFromName();\n      return createSnapshot(indexCommit);\n    } else {\n      indexCommit = getIndexCommit();\n      IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    }\n  }\n\n","sourceOld":"  public NamedList createSnapshot() throws Exception {\n    RefCounted<SolrIndexSearcher> searcher = solrCore.getSearcher();\n    try {\n      if (commitName != null) {\n        SolrSnapshotMetaDataManager snapshotMgr = solrCore.getSnapshotMetaDataManager();\n        Optional<IndexCommit> commit = snapshotMgr.getIndexCommitByName(commitName);\n        if(commit.isPresent()) {\n          return createSnapshot(commit.get());\n        }\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to find an index commit with name \" + commitName +\n            \" for core \" + solrCore.getName());\n      } else {\n        //TODO should we try solrCore.getDeletionPolicy().getLatestCommit() first?\n        IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n        IndexCommit indexCommit = searcher.get().getIndexReader().getIndexCommit();\n        deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n        try {\n          return createSnapshot(indexCommit);\n        } finally {\n          deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n        }\n      }\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19f02bb04467ed179738a398a7da80bbbe161c16","date":1573660732,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","sourceNew":"  public NamedList createSnapshot() throws Exception {\n    final IndexCommit indexCommit = getAndSaveIndexCommit();\n    try {\n      return createSnapshot(indexCommit);\n    } finally {\n      solrCore.getDeletionPolicy().releaseCommitPoint(indexCommit.getGeneration());\n    }\n  }\n\n","sourceOld":"  public NamedList createSnapshot() throws Exception {\n    IndexCommit indexCommit;\n    if (commitName != null) {\n      indexCommit = getIndexCommitFromName();\n      return createSnapshot(indexCommit);\n    } else {\n      indexCommit = getIndexCommit();\n      IndexDeletionPolicyWrapper deletionPolicy = solrCore.getDeletionPolicy();\n      deletionPolicy.saveCommitPoint(indexCommit.getGeneration());\n      try {\n        return createSnapshot(indexCommit);\n      } finally {\n        deletionPolicy.releaseCommitPoint(indexCommit.getGeneration());\n      }\n    }\n  }\n\n","bugFix":["7c0c76f8855bd391c39890131d8dbd56c3fdcef0","c5c99ad021f3da085fcb66220598a8f91dc5e453"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5","date":1591384964,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapshot().mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  public NamedList createSnapshot() throws Exception {\n    final IndexCommit indexCommit = getAndSaveIndexCommit();\n    try {\n      return createSnapshot(indexCommit);\n    } finally {\n      solrCore.getDeletionPolicy().releaseCommitPoint(indexCommit.getGeneration());\n    }\n  }\n\n","sourceOld":"  public NamedList createSnapshot() throws Exception {\n    final IndexCommit indexCommit = getAndSaveIndexCommit();\n    try {\n      return createSnapshot(indexCommit);\n    } finally {\n      solrCore.getDeletionPolicy().releaseCommitPoint(indexCommit.getGeneration());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5c99ad021f3da085fcb66220598a8f91dc5e453":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19f02bb04467ed179738a398a7da80bbbe161c16":["670400747be2d99524159f3806d449ecfb0c2389"],"1c7a21395bae9e2f61aeb639f47aaca771c426ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5c99ad021f3da085fcb66220598a8f91dc5e453"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["19f02bb04467ed179738a398a7da80bbbe161c16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c0c76f8855bd391c39890131d8dbd56c3fdcef0":["91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"670400747be2d99524159f3806d449ecfb0c2389":["91e2345fb81b6c1c7faefa550ee5eaafadc54486","7c0c76f8855bd391c39890131d8dbd56c3fdcef0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["1c7a21395bae9e2f61aeb639f47aaca771c426ed","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"91e2345fb81b6c1c7faefa550ee5eaafadc54486":["1c7a21395bae9e2f61aeb639f47aaca771c426ed"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c7a21395bae9e2f61aeb639f47aaca771c426ed"]},"commit2Childs":{"c5c99ad021f3da085fcb66220598a8f91dc5e453":["1c7a21395bae9e2f61aeb639f47aaca771c426ed"],"19f02bb04467ed179738a398a7da80bbbe161c16":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"1c7a21395bae9e2f61aeb639f47aaca771c426ed":["3b013574eedcdbac35dc7e35b0ee616ffc38895d","91e2345fb81b6c1c7faefa550ee5eaafadc54486","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5c99ad021f3da085fcb66220598a8f91dc5e453","1c7a21395bae9e2f61aeb639f47aaca771c426ed","55b50463286869f584cf849d1587a0fcd54d1dfa"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c0c76f8855bd391c39890131d8dbd56c3fdcef0":["670400747be2d99524159f3806d449ecfb0c2389"],"670400747be2d99524159f3806d449ecfb0c2389":["19f02bb04467ed179738a398a7da80bbbe161c16"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"91e2345fb81b6c1c7faefa550ee5eaafadc54486":["7c0c76f8855bd391c39890131d8dbd56c3fdcef0","670400747be2d99524159f3806d449ecfb0c2389","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}