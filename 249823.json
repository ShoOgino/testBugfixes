{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],int,int).mjava","commits":[{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":1,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","sourceNew":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n  }\n\n","sourceOld":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end, boolean singleValuePerDoc) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2344a1c769566d8c85cffcacc5e55153fa54b86","date":1550661298,"type":5,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(byte[],int,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],int,int).mjava","sourceNew":"  public HeapPointReader(byte[] block, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.block = block;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    this.pointValue = new HeapPointValue(block, packedBytesLength);\n  }\n\n","sourceOld":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2344a1c769566d8c85cffcacc5e55153fa54b86":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2344a1c769566d8c85cffcacc5e55153fa54b86"]},"commit2Childs":{"c2344a1c769566d8c85cffcacc5e55153fa54b86":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}