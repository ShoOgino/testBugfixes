{"path":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(long,long).mjava","commits":[{"id":"64aaeb7d6606aeec15dd381453d66caedda7888b","date":1327669445,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(long docFreq, long numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(long docFreq, long numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(long docFreq, long numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(long,long).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(long docFreq, long numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(long docFreq, long numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","64aaeb7d6606aeec15dd381453d66caedda7888b"],"64aaeb7d6606aeec15dd381453d66caedda7888b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["64aaeb7d6606aeec15dd381453d66caedda7888b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","64aaeb7d6606aeec15dd381453d66caedda7888b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"64aaeb7d6606aeec15dd381453d66caedda7888b":["78a55f24d9b493c2a1cecf79f1d78279062b545b","3a119bbc8703c10faa329ec201c654b3a35a1e3e","fd92b8bcc88e969302510acf77bd6970da3994c4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78a55f24d9b493c2a1cecf79f1d78279062b545b","64aaeb7d6606aeec15dd381453d66caedda7888b","fd92b8bcc88e969302510acf77bd6970da3994c4"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}