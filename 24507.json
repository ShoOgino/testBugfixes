{"path":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermEnum#skipTo(Term).mjava","commits":[{"id":"e7a005111928c661ab5d236ed6a3a079b438d2cf","date":1205411670,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermEnum#skipTo(Term).mjava","pathOld":"/dev/null","sourceNew":"  public boolean skipTo(Term target) throws IOException {\n\n    // this method is not known to be used by anything\n    // in lucene for many years now, so there is\n    // very to gain by optimizing this method more,\n\n    InstantiatedTerm term = reader.getIndex().findTerm(target);\n    if (term != null) {\n      this.term = term;\n      nextTermIndex = term.getTermIndex() + 1;\n      return true;\n    } else {\n      int pos = Arrays.binarySearch(reader.getIndex().getOrderedTerms(), target, InstantiatedTerm.termComparator);\n      if (pos < 0) {\n        pos = -1 - pos;\n      }\n\n      if (pos > reader.getIndex().getOrderedTerms().length) {\n        return false;\n      }\n      this.term = reader.getIndex().getOrderedTerms()[pos];\n      nextTermIndex = pos + 1;\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d876a75552ee4c2e2f959a50e2bfa0144f5dd74","date":1224347393,"type":3,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermEnum#skipTo(Term).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermEnum#skipTo(Term).mjava","sourceNew":"  public boolean skipTo(Term target) throws IOException {\n\n    // this method is not known to be used by anything\n    // in lucene for many years now, so there is\n    // very to gain by optimizing this method more,\n\n    if (reader.getIndex().getOrderedTerms().length == 0) {\n      return false;\n    }\n\n    InstantiatedTerm term = reader.getIndex().findTerm(target);\n    if (term != null) {\n      this.term = term;\n      nextTermIndex = term.getTermIndex() + 1;\n      return true;\n    } else {\n      int pos = Arrays.binarySearch(reader.getIndex().getOrderedTerms(), target, InstantiatedTerm.termComparator);\n      if (pos < 0) {\n        pos = -1 - pos;\n      }\n\n      if (pos > reader.getIndex().getOrderedTerms().length) {\n        return false;\n      }\n      this.term = reader.getIndex().getOrderedTerms()[pos];\n      nextTermIndex = pos + 1;\n      return true;\n    }\n  }\n\n","sourceOld":"  public boolean skipTo(Term target) throws IOException {\n\n    // this method is not known to be used by anything\n    // in lucene for many years now, so there is\n    // very to gain by optimizing this method more,\n\n    InstantiatedTerm term = reader.getIndex().findTerm(target);\n    if (term != null) {\n      this.term = term;\n      nextTermIndex = term.getTermIndex() + 1;\n      return true;\n    } else {\n      int pos = Arrays.binarySearch(reader.getIndex().getOrderedTerms(), target, InstantiatedTerm.termComparator);\n      if (pos < 0) {\n        pos = -1 - pos;\n      }\n\n      if (pos > reader.getIndex().getOrderedTerms().length) {\n        return false;\n      }\n      this.term = reader.getIndex().getOrderedTerms()[pos];\n      nextTermIndex = pos + 1;\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermEnum#skipTo(Term).mjava","sourceNew":null,"sourceOld":"  public boolean skipTo(Term target) throws IOException {\n\n    // this method is not known to be used by anything\n    // in lucene for many years now, so there is\n    // very to gain by optimizing this method more,\n\n    if (reader.getIndex().getOrderedTerms().length == 0) {\n      return false;\n    }\n\n    InstantiatedTerm term = reader.getIndex().findTerm(target);\n    if (term != null) {\n      this.term = term;\n      nextTermIndex = term.getTermIndex() + 1;\n      return true;\n    } else {\n      int pos = Arrays.binarySearch(reader.getIndex().getOrderedTerms(), target, InstantiatedTerm.termComparator);\n      if (pos < 0) {\n        pos = -1 - pos;\n      }\n\n      if (pos > reader.getIndex().getOrderedTerms().length) {\n        return false;\n      }\n      this.term = reader.getIndex().getOrderedTerms()[pos];\n      nextTermIndex = pos + 1;\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d876a75552ee4c2e2f959a50e2bfa0144f5dd74":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["9d876a75552ee4c2e2f959a50e2bfa0144f5dd74"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"]},"commit2Childs":{"9d876a75552ee4c2e2f959a50e2bfa0144f5dd74":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["9d876a75552ee4c2e2f959a50e2bfa0144f5dd74"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}