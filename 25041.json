{"path":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","commits":[{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrQueryParser#analyzeIfMultitermTermText(String,String,FieldType).mjava","sourceNew":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    return out;\n  }\n\n","sourceOld":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    // System.out.println(\"INPUT=\"+part + \" OUTPUT=\"+out);\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","pathOld":"/dev/null","sourceNew":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ebd748c27c397d7a0310bf98d57110e777d24381","date":1363369216,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","sourceNew":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n\n    if (part == null || ! (fieldType instanceof TextField) || ((TextField)fieldType).getMultiTermAnalyzer() == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    return out;\n  }\n\n","sourceOld":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n    if (part == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    return out;\n  }\n\n","bugFix":["f15795b2193a8dd132f374975d4243687bee9351"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b6d39099fdb84d195208fae92dd8feca29d77366","date":1578667620,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","sourceNew":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n\n    if (part == null || ! (fieldType instanceof TextField) || ((TextField)fieldType).getMultiTermAnalyzer() == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    BytesRef out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer());\n    return out == null ? part : out.utf8ToString();\n  }\n\n","sourceOld":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n\n    if (part == null || ! (fieldType instanceof TextField) || ((TextField)fieldType).getMultiTermAnalyzer() == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    return out;\n  }\n\n","bugFix":["f15795b2193a8dd132f374975d4243687bee9351"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac","date":1578901035,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#analyzeIfMultitermTermText(String,String,FieldType).mjava","sourceNew":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n\n    if (part == null || ! (fieldType instanceof TextField) || ((TextField)fieldType).getMultiTermAnalyzer() == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    BytesRef out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer());\n    return out == null ? part : out.utf8ToString();\n  }\n\n","sourceOld":"  protected String analyzeIfMultitermTermText(String field, String part, FieldType fieldType) {\n\n    if (part == null || ! (fieldType instanceof TextField) || ((TextField)fieldType).getMultiTermAnalyzer() == null) return part;\n\n    SchemaField sf = schema.getFieldOrNull((field));\n    if (sf == null || ! (fieldType instanceof TextField)) return part;\n    String out = TextField.analyzeMultiTerm(field, part, ((TextField)fieldType).getMultiTermAnalyzer()).utf8ToString();\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac":["ebd748c27c397d7a0310bf98d57110e777d24381","b6d39099fdb84d195208fae92dd8feca29d77366"],"b6d39099fdb84d195208fae92dd8feca29d77366":["ebd748c27c397d7a0310bf98d57110e777d24381"],"3cdb67100dc016748799a77218aa409478372d79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb67100dc016748799a77218aa409478372d79"],"ebd748c27c397d7a0310bf98d57110e777d24381":["3cdb67100dc016748799a77218aa409478372d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6d39099fdb84d195208fae92dd8feca29d77366"]},"commit2Childs":{"94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac":[],"b6d39099fdb84d195208fae92dd8feca29d77366":["94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb67100dc016748799a77218aa409478372d79":["407687e67faf6e1f02a211ca078d8e3eed631027","ebd748c27c397d7a0310bf98d57110e777d24381"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"ebd748c27c397d7a0310bf98d57110e777d24381":["94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac","b6d39099fdb84d195208fae92dd8feca29d77366"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}