{"path":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud.FlValidator#addFlParams(Collection[FlValidator],ModifiableSolrParams).mjava","commits":[{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud.FlValidator#addFlParams(Collection[FlValidator],ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"    /** Given a list of FlValidators, adds one or more fl params that corrispond to the entire set */\n    public static void addFlParams(final Collection<FlValidator> validators, final ModifiableSolrParams params) {\n      final List<String> fls = new ArrayList<>(validators.size());\n      for (FlValidator v : validators) {\n        fls.add(v.getFlParam());\n      }\n      params.add(buildCommaSepParams(random(), \"fl\", fls));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3237bc9583fd899fcf68bae4cc834095f5c911bf","date":1470710919,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud.FlValidator#addParams(Collection[FlValidator],ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud.FlValidator#addFlParams(Collection[FlValidator],ModifiableSolrParams).mjava","sourceNew":"    /** \n     * Given a list of FlValidators, adds one or more fl params that corrispond to the entire set, \n     * as well as any other special case top level params required by the validators.\n     */\n    public static void addParams(final Collection<FlValidator> validators, final ModifiableSolrParams params) {\n      final List<String> fls = new ArrayList<>(validators.size());\n      for (FlValidator v : validators) {\n        params.add(v.getExtraRequestParams());\n        fls.add(v.getFlParam());\n      }\n      params.add(buildCommaSepParams(random(), \"fl\", fls));\n    }\n\n","sourceOld":"    /** Given a list of FlValidators, adds one or more fl params that corrispond to the entire set */\n    public static void addFlParams(final Collection<FlValidator> validators, final ModifiableSolrParams params) {\n      final List<String> fls = new ArrayList<>(validators.size());\n      for (FlValidator v : validators) {\n        fls.add(v.getFlParam());\n      }\n      params.add(buildCommaSepParams(random(), \"fl\", fls));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bca25eefa1f2205e2b0ef713701dc3a0fecd702","date":1470810578,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud.FlValidator#addParams(Collection[FlValidator],ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud.FlValidator#addFlParams(Collection[FlValidator],ModifiableSolrParams).mjava","sourceNew":"    /** \n     * Given a list of FlValidators, adds one or more fl params that corrispond to the entire set, \n     * as well as any other special case top level params required by the validators.\n     */\n    public static void addParams(final Collection<FlValidator> validators, final ModifiableSolrParams params) {\n      final List<String> fls = new ArrayList<>(validators.size());\n      for (FlValidator v : validators) {\n        params.add(v.getExtraRequestParams());\n        fls.add(v.getFlParam());\n      }\n      params.add(buildCommaSepParams(random(), \"fl\", fls));\n    }\n\n","sourceOld":"    /** Given a list of FlValidators, adds one or more fl params that corrispond to the entire set */\n    public static void addFlParams(final Collection<FlValidator> validators, final ModifiableSolrParams params) {\n      final List<String> fls = new ArrayList<>(validators.size());\n      for (FlValidator v : validators) {\n        fls.add(v.getFlParam());\n      }\n      params.add(buildCommaSepParams(random(), \"fl\", fls));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud.FlValidator#addFlParams(Collection[FlValidator],ModifiableSolrParams).mjava","sourceNew":null,"sourceOld":"    /** Given a list of FlValidators, adds one or more fl params that corrispond to the entire set */\n    public static void addFlParams(final Collection<FlValidator> validators, final ModifiableSolrParams params) {\n      final List<String> fls = new ArrayList<>(validators.size());\n      for (FlValidator v : validators) {\n        fls.add(v.getFlParam());\n      }\n      params.add(buildCommaSepParams(random(), \"fl\", fls));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["136796946c32863f11b97ebec6b4091cdfe3a20b","3237bc9583fd899fcf68bae4cc834095f5c911bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"136796946c32863f11b97ebec6b4091cdfe3a20b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["136796946c32863f11b97ebec6b4091cdfe3a20b","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"3237bc9583fd899fcf68bae4cc834095f5c911bf":["136796946c32863f11b97ebec6b4091cdfe3a20b"]},"commit2Childs":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702","3b013574eedcdbac35dc7e35b0ee616ffc38895d","3237bc9583fd899fcf68bae4cc834095f5c911bf"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"3237bc9583fd899fcf68bae4cc834095f5c911bf":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}