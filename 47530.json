{"path":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"46837a66f3a374cd892b57ef2985399c8a788597","date":1251835833,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords, false);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords, false);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"016a88a4677e2ec19a9ad30696fa17c4ec605794","date":1255029696,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(false,result, stopWords, false);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords, false);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords, false);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(false,result, stopWords, false);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords, false);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords, false);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords, false);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords, false);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords, false);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new SentenceTokenizer(reader);\n    result = new WordTokenFilter(result);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords, false);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ba1116b3450a9c1642c89445d131b37344055245"],"016a88a4677e2ec19a9ad30696fa17c4ec605794":["46837a66f3a374cd892b57ef2985399c8a788597"],"46837a66f3a374cd892b57ef2985399c8a788597":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"ba1116b3450a9c1642c89445d131b37344055245":["016a88a4677e2ec19a9ad30696fa17c4ec605794"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["46837a66f3a374cd892b57ef2985399c8a788597"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"016a88a4677e2ec19a9ad30696fa17c4ec605794":["ba1116b3450a9c1642c89445d131b37344055245"],"46837a66f3a374cd892b57ef2985399c8a788597":["016a88a4677e2ec19a9ad30696fa17c4ec605794"],"ba1116b3450a9c1642c89445d131b37344055245":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}