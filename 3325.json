{"path":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#train(LeafReader,String[],String,Analyzer,Query).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#train(LeafReader,String[],String,Analyzer,Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void train(LeafReader leafReader, String[] textFieldNames, String classFieldName, Analyzer analyzer, Query query) throws IOException {\n    this.textFieldNames = textFieldNames;\n    this.classFieldName = classFieldName;\n    mlt = new MoreLikeThis(leafReader);\n    mlt.setAnalyzer(analyzer);\n    mlt.setFieldNames(textFieldNames);\n    indexSearcher = new IndexSearcher(leafReader);\n    if (minDocsFreq > 0) {\n      mlt.setMinDocFreq(minDocsFreq);\n    }\n    if (minTermFreq > 0) {\n      mlt.setMinTermFreq(minTermFreq);\n    }\n    this.query = query;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"360ff513ddb24a30ffa2111a3ef0f91038803100","date":1430403123,"type":5,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(LeafReader,Analyzer,Query,int,int,int,String,String...).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#train(LeafReader,String[],String,Analyzer,Query).mjava","sourceNew":"  public KNearestNeighborClassifier(LeafReader leafReader, Analyzer analyzer, Query query, int k, int minDocsFreq,\n                                    int minTermFreq, String classFieldName, String... textFieldNames) {\n    this.textFieldNames = textFieldNames;\n    this.classFieldName = classFieldName;\n    this.mlt = new MoreLikeThis(leafReader);\n    this.mlt.setAnalyzer(analyzer);\n    this.mlt.setFieldNames(textFieldNames);\n    this.indexSearcher = new IndexSearcher(leafReader);\n    if (minDocsFreq > 0) {\n      mlt.setMinDocFreq(minDocsFreq);\n    }\n    if (minTermFreq > 0) {\n      mlt.setMinTermFreq(minTermFreq);\n    }\n    this.query = query;\n    this.k = k;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void train(LeafReader leafReader, String[] textFieldNames, String classFieldName, Analyzer analyzer, Query query) throws IOException {\n    this.textFieldNames = textFieldNames;\n    this.classFieldName = classFieldName;\n    mlt = new MoreLikeThis(leafReader);\n    mlt.setAnalyzer(analyzer);\n    mlt.setFieldNames(textFieldNames);\n    indexSearcher = new IndexSearcher(leafReader);\n    if (minDocsFreq > 0) {\n      mlt.setMinDocFreq(minDocsFreq);\n    }\n    if (minTermFreq > 0) {\n      mlt.setMinTermFreq(minTermFreq);\n    }\n    this.query = query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["360ff513ddb24a30ffa2111a3ef0f91038803100"],"360ff513ddb24a30ffa2111a3ef0f91038803100":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["360ff513ddb24a30ffa2111a3ef0f91038803100"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"360ff513ddb24a30ffa2111a3ef0f91038803100":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}