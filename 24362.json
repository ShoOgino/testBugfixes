{"path":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(),\n        true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new MockAnalyzer(),\n        true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(),\n        true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new MockAnalyzer(),\n        true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new MockAnalyzer(),\n        true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bbd254c1506df5299c4df8c148262c7bd6301e","date":1279913113,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new MockRAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    directory = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new MockRAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    directory = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n    Document doc = new Document();\n    doc.add(new Field(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    Document doc = new Document();\n    doc.add(newField(FN,\n        \"the quick brown fox jumps over the lazy ??? dog 493432 49344\",\n        TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["c084e47df29de3330311d69dabf515ceaa989512","15bbd254c1506df5299c4df8c148262c7bd6301e"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["c084e47df29de3330311d69dabf515ceaa989512"],"d572389229127c297dd1fa5ce4758e1cec41e799":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"5f4e87790277826a2aea119328600dfb07761f32":["d572389229127c297dd1fa5ce4758e1cec41e799","c084e47df29de3330311d69dabf515ceaa989512"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","132903c28af3aa6f67284b78de91c0f0a99488c2"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"c084e47df29de3330311d69dabf515ceaa989512":["d572389229127c297dd1fa5ce4758e1cec41e799"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["132903c28af3aa6f67284b78de91c0f0a99488c2","790e1fde4caa765b3faaad3fbcd25c6973450336"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"d572389229127c297dd1fa5ce4758e1cec41e799":["5f4e87790277826a2aea119328600dfb07761f32","c084e47df29de3330311d69dabf515ceaa989512"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["d572389229127c297dd1fa5ce4758e1cec41e799"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","29ef99d61cda9641b6250bf9567329a6e65f901d"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["29ef99d61cda9641b6250bf9567329a6e65f901d","1509f151d7692d84fae414b2b799ac06ba60fcb4","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c084e47df29de3330311d69dabf515ceaa989512":["4b103252dee6afa1b6d7a622c773d178788eb85a","15bbd254c1506df5299c4df8c148262c7bd6301e","5f4e87790277826a2aea119328600dfb07761f32"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}