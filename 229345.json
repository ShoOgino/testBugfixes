{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/InsertFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/InsertFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/InsertFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        super.processRequest(request, response);\n        if (this.authenticated) {\n            AdminService service = null;\n            try {\n                ServerBaseFeed feed = createFeedFromRequest(request);\n                GDataAccount account = createRequestedAccount(request);\n\n                GDataServerRegistry registry = GDataServerRegistry\n                        .getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(\n                        ServiceFactory.class, ComponentType.SERVICEFACTORY);\n                if (serviceFactory == null) {\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\n                            \"required component is not available\");\n                    throw new FeedHandlerException(\n                            \"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.createFeed(feed, account);\n            } catch (ServiceException e) {\n                setError(GDataResponse.SERVER_ERROR,\n                        \"can not create feed\");\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n\n            }catch (ParseException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n\n        }\n        sendResponse(response);\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        super.processRequest(request, response);\n        if (this.authenticated) {\n            AdminService service = null;\n            try {\n                ServerBaseFeed feed = createFeedFromRequest(request);\n                GDataAccount account = createRequestedAccount(request);\n\n                GDataServerRegistry registry = GDataServerRegistry\n                        .getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(\n                        ServiceFactory.class, ComponentType.SERVICEFACTORY);\n                if (serviceFactory == null) {\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\n                            \"required component is not available\");\n                    throw new FeedHandlerException(\n                            \"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.createFeed(feed, account);\n            } catch (ServiceException e) {\n                setError(GDataResponse.SERVER_ERROR,\n                        \"can not create feed\");\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n\n            }catch (ParseException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n\n        }\n        sendResponse(response);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/servlet/handler/InsertFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/InsertFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        super.processRequest(request, response);\n        if (this.authenticated) {\n            AdminService service = null;\n            try {\n                ServerBaseFeed feed = createFeedFromRequest(request);\n                GDataAccount account = createRequestedAccount(request);\n\n                GDataServerRegistry registry = GDataServerRegistry\n                        .getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(\n                        ServiceFactory.class, ComponentType.SERVICEFACTORY);\n                if (serviceFactory == null) {\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\n                            \"required component is not available\");\n                    throw new FeedHandlerException(\n                            \"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.createFeed(feed, account);\n            } catch (ServiceException e) {\n                setError(GDataResponse.SERVER_ERROR,\n                        \"can not create feed\");\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n\n            }catch (ParseException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n\n        }\n        sendResponse(response);\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        super.processRequest(request, response);\n        if (this.authenticated) {\n            AdminService service = null;\n            try {\n                ServerBaseFeed feed = createFeedFromRequest(request);\n                GDataAccount account = createRequestedAccount(request);\n\n                GDataServerRegistry registry = GDataServerRegistry\n                        .getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(\n                        ServiceFactory.class, ComponentType.SERVICEFACTORY);\n                if (serviceFactory == null) {\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\n                            \"required component is not available\");\n                    throw new FeedHandlerException(\n                            \"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.createFeed(feed, account);\n            } catch (ServiceException e) {\n                setError(GDataResponse.SERVER_ERROR,\n                        \"can not create feed\");\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n\n            }catch (ParseException e) {\n                LOG.error(\"Can not create feed -- \" + e.getMessage(), e);\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n\n        }\n        sendResponse(response);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}