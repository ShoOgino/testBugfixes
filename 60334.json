{"path":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#fillBytesRef().mjava","commits":[{"id":"b3d07f1ae3b58102f36f3393c397d78ba4e547a4","date":1300715535,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#fillBytesRef().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":"    public int fillBytesRef() {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#fillBytesRef().mjava","pathOld":"/dev/null","sourceNew":"    public int fillBytesRef() {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#fillBytesRef().mjava","pathOld":"/dev/null","sourceNew":"    public int fillBytesRef() {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#fillBytesRef().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#fillBytesRef().mjava","sourceNew":"    public int fillBytesRef() {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":"    public int fillBytesRef() {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3d07f1ae3b58102f36f3393c397d78ba4e547a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"b3d07f1ae3b58102f36f3393c397d78ba4e547a4":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}