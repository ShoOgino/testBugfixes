{"path":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#incrementToken().mjava","commits":[{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#incrementToken().mjava","pathOld":"src/java/org/apache/solr/analysis/BufferedTokenStream#incrementToken().mjava","sourceNew":"  public final boolean incrementToken() throws IOException {\n    while (true) {\n      if (!outQueue.isEmpty()) return writeToken(outQueue.removeFirst());\n      Token t = read();\n      if (null == t) return false;\n      Token out = process(t);\n      if (null != out) return writeToken(out);\n      // loop back to top in case process() put something on the output queue\n    }\n  }\n\n","sourceOld":"  public final boolean incrementToken() throws IOException {\n    while (true) {\n      if (!outQueue.isEmpty()) return writeToken(outQueue.removeFirst());\n      Token t = read();\n      if (null == t) return false;\n      Token out = process(t);\n      if (null != out) return writeToken(out);\n      // loop back to top in case process() put something on the output queue\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  public final boolean incrementToken() throws IOException {\n    while (true) {\n      if (!outQueue.isEmpty()) return writeToken(outQueue.removeFirst());\n      Token t = read();\n      if (null == t) return false;\n      Token out = process(t);\n      if (null != out) return writeToken(out);\n      // loop back to top in case process() put something on the output queue\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d4fb2da5489b4a308da34d68590b31e9e5bc7e7","date":1295267679,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#incrementToken().mjava","sourceNew":null,"sourceOld":"  public final boolean incrementToken() throws IOException {\n    while (true) {\n      if (!outQueue.isEmpty()) return writeToken(outQueue.removeFirst());\n      Token t = read();\n      if (null == t) return false;\n      Token out = process(t);\n      if (null != out) return writeToken(out);\n      // loop back to top in case process() put something on the output queue\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#incrementToken().mjava","sourceNew":null,"sourceOld":"  public final boolean incrementToken() throws IOException {\n    while (true) {\n      if (!outQueue.isEmpty()) return writeToken(outQueue.removeFirst());\n      Token t = read();\n      if (null == t) return false;\n      Token out = process(t);\n      if (null != out) return writeToken(out);\n      // loop back to top in case process() put something on the output queue\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#incrementToken().mjava","sourceNew":null,"sourceOld":"  public final boolean incrementToken() throws IOException {\n    while (true) {\n      if (!outQueue.isEmpty()) return writeToken(outQueue.removeFirst());\n      Token t = read();\n      if (null == t) return false;\n      Token out = process(t);\n      if (null != out) return writeToken(out);\n      // loop back to top in case process() put something on the output queue\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad94625fb8d088209f46650c8097196fec67f00c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","2d4fb2da5489b4a308da34d68590b31e9e5bc7e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2d4fb2da5489b4a308da34d68590b31e9e5bc7e7":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["1da8d55113b689b06716246649de6f62430f15c0","2d4fb2da5489b4a308da34d68590b31e9e5bc7e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d4fb2da5489b4a308da34d68590b31e9e5bc7e7"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["29ef99d61cda9641b6250bf9567329a6e65f901d","2d4fb2da5489b4a308da34d68590b31e9e5bc7e7","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"2d4fb2da5489b4a308da34d68590b31e9e5bc7e7":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}