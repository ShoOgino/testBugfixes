{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#getChildResources().mjava","commits":[{"id":"502e9b7abb02586bb5aaa7df20504b67c2be51d7","date":1507128773,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#getChildResources().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized Collection<Accountable> getChildResources() {\n    final List<Accountable> resources = new ArrayList<>();\n    long ramBytesUsed = 0;\n    for (LeafReaderContext ctx : indexReader.leaves()) {\n      ramBytesUsed += ((SegmentReader) ctx.reader()).ramBytesUsed();\n    }\n    resources.add(Accountables.namedAccountable(\"indexReader\", ramBytesUsed));\n    if (taxoArrays != null) {\n      resources.add(Accountables.namedAccountable(\"taxoArrays\", taxoArrays));\n    }\n\n    synchronized (categoryCache) {\n      resources.add(Accountables.namedAccountable(\"categoryCache\", BYTES_PER_CACHE_ENTRY * categoryCache.size()));\n    }    \n\n    synchronized (ordinalCache) {\n      resources.add(Accountables.namedAccountable(\"ordinalCache\", BYTES_PER_CACHE_ENTRY * ordinalCache.size()));\n    }    \n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7859b8e6a469429413db808a609e8468be14c03","date":1507222263,"type":0,"author":"tballison","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#getChildResources().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized Collection<Accountable> getChildResources() {\n    final List<Accountable> resources = new ArrayList<>();\n    long ramBytesUsed = 0;\n    for (LeafReaderContext ctx : indexReader.leaves()) {\n      ramBytesUsed += ((SegmentReader) ctx.reader()).ramBytesUsed();\n    }\n    resources.add(Accountables.namedAccountable(\"indexReader\", ramBytesUsed));\n    if (taxoArrays != null) {\n      resources.add(Accountables.namedAccountable(\"taxoArrays\", taxoArrays));\n    }\n\n    synchronized (categoryCache) {\n      resources.add(Accountables.namedAccountable(\"categoryCache\", BYTES_PER_CACHE_ENTRY * categoryCache.size()));\n    }    \n\n    synchronized (ordinalCache) {\n      resources.add(Accountables.namedAccountable(\"ordinalCache\", BYTES_PER_CACHE_ENTRY * ordinalCache.size()));\n    }    \n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"502e9b7abb02586bb5aaa7df20504b67c2be51d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d7859b8e6a469429413db808a609e8468be14c03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","502e9b7abb02586bb5aaa7df20504b67c2be51d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["502e9b7abb02586bb5aaa7df20504b67c2be51d7"]},"commit2Childs":{"502e9b7abb02586bb5aaa7df20504b67c2be51d7":["d7859b8e6a469429413db808a609e8468be14c03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d7859b8e6a469429413db808a609e8468be14c03":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["502e9b7abb02586bb5aaa7df20504b67c2be51d7","d7859b8e6a469429413db808a609e8468be14c03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d7859b8e6a469429413db808a609e8468be14c03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}