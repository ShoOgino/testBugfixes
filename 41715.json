{"path":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#testEnumMethod().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#testEnumMethod().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that the correct method (getTermsEnum/getEnum) is called.\n   */\n  @Test\n  public void testEnumMethod() throws IOException {\n    assertAPI(\"old\", new OldAPI(FIELD));\n    assertAPI(\"new\", new NewAPI(FIELD));\n    assertAPI(\"new\", new BothAPI(FIELD));\n    \n    assertAPI(\"old2\", new OldExtendsOldAPI(FIELD));\n    assertAPI(\"old2\", new OldExtendsNewAPI(FIELD));\n    assertAPI(\"old2\", new OldExtendsBothAPI(FIELD));\n    \n    assertAPI(\"new2\", new NewExtendsOldAPI(FIELD));\n    assertAPI(\"new2\", new NewExtendsNewAPI(FIELD));\n    assertAPI(\"new2\", new NewExtendsBothAPI(FIELD));\n    \n    assertAPI(\"new2\", new BothExtendsOldAPI(FIELD));\n    assertAPI(\"new2\", new BothExtendsNewAPI(FIELD));\n    assertAPI(\"new2\", new BothExtendsBothAPI(FIELD));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#testEnumMethod().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that the correct method (getTermsEnum/getEnum) is called.\n   */\n  @Test\n  public void testEnumMethod() throws IOException {\n    assertAPI(\"old\", new OldAPI(FIELD));\n    assertAPI(\"new\", new NewAPI(FIELD));\n    assertAPI(\"new\", new BothAPI(FIELD));\n    \n    assertAPI(\"old2\", new OldExtendsOldAPI(FIELD));\n    assertAPI(\"old2\", new OldExtendsNewAPI(FIELD));\n    assertAPI(\"old2\", new OldExtendsBothAPI(FIELD));\n    \n    assertAPI(\"new2\", new NewExtendsOldAPI(FIELD));\n    assertAPI(\"new2\", new NewExtendsNewAPI(FIELD));\n    assertAPI(\"new2\", new NewExtendsBothAPI(FIELD));\n    \n    assertAPI(\"new2\", new BothExtendsOldAPI(FIELD));\n    assertAPI(\"new2\", new BothExtendsNewAPI(FIELD));\n    assertAPI(\"new2\", new BothExtendsBothAPI(FIELD));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#testEnumMethod().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that the correct method (getTermsEnum/getEnum) is called.\n   */\n  @Test\n  public void testEnumMethod() throws IOException {\n    assertAPI(\"old\", new OldAPI(FIELD));\n    assertAPI(\"new\", new NewAPI(FIELD));\n    assertAPI(\"new\", new BothAPI(FIELD));\n    \n    assertAPI(\"old2\", new OldExtendsOldAPI(FIELD));\n    assertAPI(\"old2\", new OldExtendsNewAPI(FIELD));\n    assertAPI(\"old2\", new OldExtendsBothAPI(FIELD));\n    \n    assertAPI(\"new2\", new NewExtendsOldAPI(FIELD));\n    assertAPI(\"new2\", new NewExtendsNewAPI(FIELD));\n    assertAPI(\"new2\", new NewExtendsBothAPI(FIELD));\n    \n    assertAPI(\"new2\", new BothExtendsOldAPI(FIELD));\n    assertAPI(\"new2\", new BothExtendsNewAPI(FIELD));\n    assertAPI(\"new2\", new BothExtendsBothAPI(FIELD));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","28427ef110c4c5bf5b4057731b83110bd1e13724"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28427ef110c4c5bf5b4057731b83110bd1e13724"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}