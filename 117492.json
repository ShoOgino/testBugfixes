{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#shingleFilterTest(int,int,Token[],Token[],int[],String[],boolean,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#shingleFilterTest(int,int,Token[],Token[],int[],String[],boolean,boolean).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#shingleFilterTest(int,int,Token[],Token[],int[],String[],boolean,boolean).mjava","sourceNew":"  protected void shingleFilterTest(int minSize, int maxSize, Token[] tokensToShingle, \n                                   Token[] tokensToCompare, int[] positionIncrements,\n                                   String[] types, boolean outputUnigrams, \n                                   boolean outputUnigramsIfNoShingles)\n    throws IOException {\n    ShingleFilter filter \n      = new ShingleFilter(new TestTokenStream(tokensToShingle), minSize, maxSize);\n    filter.setOutputUnigrams(outputUnigrams);\n    filter.setOutputUnigramsIfNoShingles(outputUnigramsIfNoShingles);\n    shingleFilterTestCommon(filter, tokensToCompare, positionIncrements, types);\n  }\n\n","sourceOld":"  protected void shingleFilterTest(int minSize, int maxSize, Token[] tokensToShingle, \n                                   Token[] tokensToCompare, int[] positionIncrements,\n                                   String[] types, boolean outputUnigrams, \n                                   boolean outputUnigramsIfNoShingles)\n    throws IOException {\n    ShingleFilter filter \n      = new ShingleFilter(new TestTokenStream(tokensToShingle), minSize, maxSize);\n    filter.setOutputUnigrams(outputUnigrams);\n    filter.setOutputUnigramsIfNoShingles(outputUnigramsIfNoShingles);\n    shingleFilterTestCommon(filter, tokensToCompare, positionIncrements, types);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fec40a4bb4fb8565560f443818a3ae4c42b8b2f","date":1379435196,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#shingleFilterTest(int,int,Token[],Token[],int[],String[],boolean,boolean).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#shingleFilterTest(int,int,Token[],Token[],int[],String[],boolean,boolean).mjava","sourceNew":"  protected void shingleFilterTest(int minSize, int maxSize, Token[] tokensToShingle, \n                                   Token[] tokensToCompare, int[] positionIncrements,\n                                   String[] types, boolean outputUnigrams, \n                                   boolean outputUnigramsIfNoShingles)\n    throws IOException {\n    ShingleFilter filter \n      = new ShingleFilter(new CannedTokenStream(tokensToShingle), minSize, maxSize);\n    filter.setOutputUnigrams(outputUnigrams);\n    filter.setOutputUnigramsIfNoShingles(outputUnigramsIfNoShingles);\n    shingleFilterTestCommon(filter, tokensToCompare, positionIncrements, types);\n  }\n\n","sourceOld":"  protected void shingleFilterTest(int minSize, int maxSize, Token[] tokensToShingle, \n                                   Token[] tokensToCompare, int[] positionIncrements,\n                                   String[] types, boolean outputUnigrams, \n                                   boolean outputUnigramsIfNoShingles)\n    throws IOException {\n    ShingleFilter filter \n      = new ShingleFilter(new TestTokenStream(tokensToShingle), minSize, maxSize);\n    filter.setOutputUnigrams(outputUnigrams);\n    filter.setOutputUnigramsIfNoShingles(outputUnigramsIfNoShingles);\n    shingleFilterTestCommon(filter, tokensToCompare, positionIncrements, types);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1fec40a4bb4fb8565560f443818a3ae4c42b8b2f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1fec40a4bb4fb8565560f443818a3ae4c42b8b2f"]},"commit2Childs":{"1fec40a4bb4fb8565560f443818a3ae4c42b8b2f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1fec40a4bb4fb8565560f443818a3ae4c42b8b2f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}