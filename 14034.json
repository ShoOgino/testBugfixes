{"path":"lucene/src/java/org/apache/lucene/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.hasDocValues()) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, fieldInfo.getDocValuesType(), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.hasDocValues()) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, fieldInfo.getDocValuesType(), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.hasDocValues()) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, fieldInfo.getDocValuesType(), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}