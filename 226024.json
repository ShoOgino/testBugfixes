{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser.Parser#equalsIgnoreTurkish(String,String).mjava","commits":[{"id":"91e8768e9769f9e5175b1d99dcd27600bc9d4374","date":1342373687,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser.Parser#equalsIgnoreTurkish(String,String).mjava","pathOld":"/dev/null","sourceNew":"    static final boolean equalsIgnoreTurkish(String s1, String s2) {\n      final int len1 = s1.length(), len2 = s2.length();\n      if (len1 != len2)\n        return false;\n      for (int i = 0; i < len1; i++) {\n        char ch1 = s1.charAt(i), ch2 = s2.charAt(i);\n        if (ch1 == 'ı') ch1 = 'i';\n        if (ch2 == 'ı') ch2 = 'i';\n        if (ch1 != ch2)\n          return false;\n      }\n      return true;\n    }\n    // END: workaround\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser.Parser#equalsIgnoreTurkish(String,String).mjava","pathOld":"/dev/null","sourceNew":"    static final boolean equalsIgnoreTurkish(String s1, String s2) {\n      final int len1 = s1.length(), len2 = s2.length();\n      if (len1 != len2)\n        return false;\n      for (int i = 0; i < len1; i++) {\n        char ch1 = s1.charAt(i), ch2 = s2.charAt(i);\n        if (ch1 == 'ı') ch1 = 'i';\n        if (ch2 == 'ı') ch2 = 'i';\n        if (ch1 != ch2)\n          return false;\n      }\n      return true;\n    }\n    // END: workaround\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser.Parser#equalsIgnoreTurkish(String,String).mjava","pathOld":"/dev/null","sourceNew":"    static final boolean equalsIgnoreTurkish(String s1, String s2) {\n      final int len1 = s1.length(), len2 = s2.length();\n      if (len1 != len2)\n        return false;\n      for (int i = 0; i < len1; i++) {\n        char ch1 = s1.charAt(i), ch2 = s2.charAt(i);\n        if (ch1 == 'ı') ch1 = 'i';\n        if (ch2 == 'ı') ch2 = 'i';\n        if (ch1 != ch2)\n          return false;\n      }\n      return true;\n    }\n    // END: workaround\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6cc22d685eededeac6e0c9060b3c80cdf1f39fce","date":1354749887,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser.Parser#equalsIgnoreTurkish(String,String).mjava","sourceNew":null,"sourceOld":"    static final boolean equalsIgnoreTurkish(String s1, String s2) {\n      final int len1 = s1.length(), len2 = s2.length();\n      if (len1 != len2)\n        return false;\n      for (int i = 0; i < len1; i++) {\n        char ch1 = s1.charAt(i), ch2 = s2.charAt(i);\n        if (ch1 == 'ı') ch1 = 'i';\n        if (ch2 == 'ı') ch2 = 'i';\n        if (ch1 != ch2)\n          return false;\n      }\n      return true;\n    }\n    // END: workaround\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser.Parser#equalsIgnoreTurkish(String,String).mjava","sourceNew":null,"sourceOld":"    static final boolean equalsIgnoreTurkish(String s1, String s2) {\n      final int len1 = s1.length(), len2 = s2.length();\n      if (len1 != len2)\n        return false;\n      for (int i = 0; i < len1; i++) {\n        char ch1 = s1.charAt(i), ch2 = s2.charAt(i);\n        if (ch1 == 'ı') ch1 = 'i';\n        if (ch2 == 'ı') ch2 = 'i';\n        if (ch1 != ch2)\n          return false;\n      }\n      return true;\n    }\n    // END: workaround\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"6cc22d685eededeac6e0c9060b3c80cdf1f39fce":["91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["91e8768e9769f9e5175b1d99dcd27600bc9d4374","6cc22d685eededeac6e0c9060b3c80cdf1f39fce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6cc22d685eededeac6e0c9060b3c80cdf1f39fce"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"6cc22d685eededeac6e0c9060b3c80cdf1f39fce":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["aba371508186796cc6151d8223a5b4e16d02e26e","6cc22d685eededeac6e0c9060b3c80cdf1f39fce","fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","91e8768e9769f9e5175b1d99dcd27600bc9d4374","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}