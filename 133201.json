{"path":"src/java/org/apache/lucene/search/BooleanClause.Occur#readResolve().mjava","commits":[{"id":"c3dbc65b5add215591bd01adbe5cc4af53e01a32","date":1094994962,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanClause.Occur#readResolve().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Resolves the deserialized instance to the local reference for accurate\n     * equals() and == comparisons.\n     * \n     * @return a reference to Occur as resolved in the local VM\n     * @throws ObjectStreamException\n     */\n    private Object readResolve() throws ObjectStreamException {\n      int id = ((Occur) this).id;\n      switch (id) {\n        case MUST_ID :\n          return Occur.MUST;\n        case MUST_NOT_ID :\n          return Occur.MUST_NOT;\n        case SHOULD_ID:\n          return Occur.SHOULD;\n        default :\n          throw new StreamCorruptedException(\"Unknown id \" + id);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d70aede7b1d1b2d0d1e5ecf089b153caf8c99ce","date":1097054344,"type":4,"author":"Christoph Goller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/BooleanClause.Occur#readResolve().mjava","sourceNew":null,"sourceOld":"    /**\n     * Resolves the deserialized instance to the local reference for accurate\n     * equals() and == comparisons.\n     * \n     * @return a reference to Occur as resolved in the local VM\n     * @throws ObjectStreamException\n     */\n    private Object readResolve() throws ObjectStreamException {\n      int id = ((Occur) this).id;\n      switch (id) {\n        case MUST_ID :\n          return Occur.MUST;\n        case MUST_NOT_ID :\n          return Occur.MUST_NOT;\n        case SHOULD_ID:\n          return Occur.SHOULD;\n        default :\n          throw new StreamCorruptedException(\"Unknown id \" + id);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d70aede7b1d1b2d0d1e5ecf089b153caf8c99ce":["c3dbc65b5add215591bd01adbe5cc4af53e01a32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3dbc65b5add215591bd01adbe5cc4af53e01a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6d70aede7b1d1b2d0d1e5ecf089b153caf8c99ce"]},"commit2Childs":{"6d70aede7b1d1b2d0d1e5ecf089b153caf8c99ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3dbc65b5add215591bd01adbe5cc4af53e01a32"],"c3dbc65b5add215591bd01adbe5cc4af53e01a32":["6d70aede7b1d1b2d0d1e5ecf089b153caf8c99ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}