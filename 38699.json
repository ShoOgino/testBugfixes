{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stems the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuilder.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stems the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuilder.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stems the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuilder.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stems the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuilder.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}