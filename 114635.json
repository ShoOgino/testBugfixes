{"path":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#close().mjava","commits":[{"id":"3051885808bc68dbef19d96968d713e42a27312f","date":1259872519,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#close().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Close the IndexSearcher used by this SpellChecker.\n   */\n  public void close() throws IOException {\n    searcher.close();\n    searcher = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edfb471a48a4bd226eefc6d6fd96195d9ce1db73","date":1260015437,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#close().mjava","pathOld":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#close().mjava","sourceNew":"  /**\n   * Close the IndexSearcher used by this SpellChecker\n   * @throws IOException if the close operation causes an {@link IOException}\n   * @throws AlreadyClosedException if the {@link SpellChecker} is already closed\n   */\n  public void close() throws IOException {\n    synchronized (searcherLock) {\n      ensureOpen();\n      closed = true;\n      if (searcher != null) {\n        searcher.close();\n      }\n      searcher = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Close the IndexSearcher used by this SpellChecker.\n   */\n  public void close() throws IOException {\n    searcher.close();\n    searcher = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#close().mjava","pathOld":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#close().mjava","sourceNew":"  /**\n   * Close the IndexSearcher used by this SpellChecker\n   * @throws IOException if the close operation causes an {@link IOException}\n   * @throws AlreadyClosedException if the {@link SpellChecker} is already closed\n   */\n  public void close() throws IOException {\n    synchronized (searcherLock) {\n      ensureOpen();\n      closed = true;\n      if (searcher != null) {\n        searcher.close();\n      }\n      searcher = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Close the IndexSearcher used by this SpellChecker\n   * @throws IOException if the close operation causes an {@link IOException}\n   * @throws AlreadyClosedException if the {@link SpellChecker} is already closed\n   */\n  public void close() throws IOException {\n    synchronized (searcherLock) {\n      ensureOpen();\n      closed = true;\n      if (searcher != null) {\n        searcher.close();\n      }\n      searcher = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3051885808bc68dbef19d96968d713e42a27312f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"edfb471a48a4bd226eefc6d6fd96195d9ce1db73":["3051885808bc68dbef19d96968d713e42a27312f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["edfb471a48a4bd226eefc6d6fd96195d9ce1db73"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3051885808bc68dbef19d96968d713e42a27312f"],"3051885808bc68dbef19d96968d713e42a27312f":["edfb471a48a4bd226eefc6d6fd96195d9ce1db73"],"edfb471a48a4bd226eefc6d6fd96195d9ce1db73":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}