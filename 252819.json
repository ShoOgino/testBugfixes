{"path":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link SolrInfoBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Register any {@link SolrInfoBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","sourceNew":"  /**\n   * Register any {@link SolrInfoBean}s\n   *\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link SolrInfoBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","sourceNew":"  /**\n   * Register any {@link SolrInfoBean}s\n   *\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          if (log.isWarnEnabled()) {\n            log.warn(\"could not register MBean '{}'.\", bean.getName(), e);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link SolrInfoBean}s\n   *\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","sourceNew":"  /**\n   * Register any {@link SolrInfoBean}s\n   *\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '{}'.\", bean.getName(), e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link SolrInfoBean}s\n   *\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          if (log.isWarnEnabled()) {\n            log.warn(\"could not register MBean '{}'.\", bean.getName(), e);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["816521ebaad5add9cb96bb88c577394e2938c40b"],"140be51d03394488536f4aacedace29f9b318347":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["140be51d03394488536f4aacedace29f9b318347"],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["140be51d03394488536f4aacedace29f9b318347"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"140be51d03394488536f4aacedace29f9b318347":["575e66bd4b2349209027f6801184da7fc3cba13f"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"816521ebaad5add9cb96bb88c577394e2938c40b":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}