{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.TriggerListeners#fireListeners(String,TriggerEvent,AutoScaling.EventProcessorStage,String,ActionContext,Throwable,String).mjava","commits":[{"id":"c5fd294da67452cd8d116692194908de00eb5209","date":1499704155,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.TriggerListeners#fireListeners(String,TriggerEvent,AutoScaling.EventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"/dev/null","sourceNew":"    void fireListeners(String trigger, TriggerEvent event, AutoScaling.EventProcessorStage stage, String actionName,\n                       ActionContext context, Throwable error, String message) {\n      updateLock.lock();\n      try {\n        for (TriggerListener listener : getTriggerListeners(trigger, stage)) {\n          if (actionName != null) {\n            AutoScalingConfig.TriggerListenerConfig config = listener.getConfig();\n            if (stage == AutoScaling.EventProcessorStage.BEFORE_ACTION) {\n              if (!config.beforeActions.contains(actionName)) {\n                continue;\n              }\n            } else if (stage == AutoScaling.EventProcessorStage.AFTER_ACTION) {\n              if (!config.afterActions.contains(actionName)) {\n                continue;\n              }\n            }\n          }\n          try {\n            listener.onEvent(event, stage, actionName, context, error, message);\n          } catch (Exception e) {\n            log.warn(\"Exception running listener \" + listener.getConfig(), e);\n          }\n        }\n      } finally {\n        updateLock.unlock();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.TriggerListeners#fireListeners(String,TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.TriggerListeners#fireListeners(String,TriggerEvent,AutoScaling.EventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    void fireListeners(String trigger, TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                       ActionContext context, Throwable error, String message) {\n      updateLock.lock();\n      try {\n        for (TriggerListener listener : getTriggerListeners(trigger, stage)) {\n          if (actionName != null) {\n            AutoScalingConfig.TriggerListenerConfig config = listener.getConfig();\n            if (stage == TriggerEventProcessorStage.BEFORE_ACTION) {\n              if (!config.beforeActions.contains(actionName)) {\n                continue;\n              }\n            } else if (stage == TriggerEventProcessorStage.AFTER_ACTION) {\n              if (!config.afterActions.contains(actionName)) {\n                continue;\n              }\n            }\n          }\n          try {\n            listener.onEvent(event, stage, actionName, context, error, message);\n          } catch (Exception e) {\n            log.warn(\"Exception running listener \" + listener.getConfig(), e);\n          }\n        }\n      } finally {\n        updateLock.unlock();\n      }\n    }\n\n","sourceOld":"    void fireListeners(String trigger, TriggerEvent event, AutoScaling.EventProcessorStage stage, String actionName,\n                       ActionContext context, Throwable error, String message) {\n      updateLock.lock();\n      try {\n        for (TriggerListener listener : getTriggerListeners(trigger, stage)) {\n          if (actionName != null) {\n            AutoScalingConfig.TriggerListenerConfig config = listener.getConfig();\n            if (stage == AutoScaling.EventProcessorStage.BEFORE_ACTION) {\n              if (!config.beforeActions.contains(actionName)) {\n                continue;\n              }\n            } else if (stage == AutoScaling.EventProcessorStage.AFTER_ACTION) {\n              if (!config.afterActions.contains(actionName)) {\n                continue;\n              }\n            }\n          }\n          try {\n            listener.onEvent(event, stage, actionName, context, error, message);\n          } catch (Exception e) {\n            log.warn(\"Exception running listener \" + listener.getConfig(), e);\n          }\n        }\n      } finally {\n        updateLock.unlock();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5fd294da67452cd8d116692194908de00eb5209":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c5fd294da67452cd8d116692194908de00eb5209"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c5fd294da67452cd8d116692194908de00eb5209":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5fd294da67452cd8d116692194908de00eb5209","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}