{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeOnCommitKeepFullyDeletedSegments().mjava","commits":[{"id":"fe39f1a106531207c028defebbc9eb5bb489ac50","date":1592513789,"type":0,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeOnCommitKeepFullyDeletedSegments().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergeOnCommitKeepFullyDeletedSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setMaxCommitMergeWaitSeconds(30);\n    iwc.mergePolicy = new FilterMergePolicy(newMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) {\n        return true;\n      }\n\n      @Override\n      public MergeSpecification findFullFlushMerges(MergeTrigger mergeTrigger,\n                                                    SegmentInfos segmentInfos,\n                                                    MergeContext mergeContext) {\n        List<SegmentCommitInfo> fullyDeletedSegments = segmentInfos.asList().stream()\n            .filter(s -> s.info.maxDoc() - s.getDelCount() == 0)\n            .collect(Collectors.toList());\n        if (fullyDeletedSegments.isEmpty()) {\n          return null;\n        }\n        MergeSpecification spec = new MergeSpecification();\n        spec.add(new OneMerge(fullyDeletedSegments));\n        return spec;\n      }\n    };\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(d);\n    w.commit();\n    w.updateDocument(new Term(\"id\", \"1\"), d);\n    w.commit();\n    try (DirectoryReader reader = w.getReader()) {\n      assertEquals(1, reader.numDocs());\n    }\n    IOUtils.close(w, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1182fe36fb5df768dc2da53f6d5338cbc07268ae","date":1592861749,"type":4,"author":"Michael Sokolov","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeOnCommitKeepFullyDeletedSegments().mjava","sourceNew":null,"sourceOld":"  public void testMergeOnCommitKeepFullyDeletedSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setMaxCommitMergeWaitSeconds(30);\n    iwc.mergePolicy = new FilterMergePolicy(newMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) {\n        return true;\n      }\n\n      @Override\n      public MergeSpecification findFullFlushMerges(MergeTrigger mergeTrigger,\n                                                    SegmentInfos segmentInfos,\n                                                    MergeContext mergeContext) {\n        List<SegmentCommitInfo> fullyDeletedSegments = segmentInfos.asList().stream()\n            .filter(s -> s.info.maxDoc() - s.getDelCount() == 0)\n            .collect(Collectors.toList());\n        if (fullyDeletedSegments.isEmpty()) {\n          return null;\n        }\n        MergeSpecification spec = new MergeSpecification();\n        spec.add(new OneMerge(fullyDeletedSegments));\n        return spec;\n      }\n    };\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(d);\n    w.commit();\n    w.updateDocument(new Term(\"id\", \"1\"), d);\n    w.commit();\n    try (DirectoryReader reader = w.getReader()) {\n      assertEquals(1, reader.numDocs());\n    }\n    IOUtils.close(w, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeOnCommitKeepFullyDeletedSegments().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergeOnCommitKeepFullyDeletedSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setMaxCommitMergeWaitMillis(30 * 1000);\n    iwc.mergePolicy = new FilterMergePolicy(newMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) {\n        return true;\n      }\n\n      @Override\n      public MergeSpecification findFullFlushMerges(MergeTrigger mergeTrigger,\n                                                    SegmentInfos segmentInfos,\n                                                    MergeContext mergeContext) {\n        List<SegmentCommitInfo> fullyDeletedSegments = segmentInfos.asList().stream()\n            .filter(s -> s.info.maxDoc() - s.getDelCount() == 0)\n            .collect(Collectors.toList());\n        if (fullyDeletedSegments.isEmpty()) {\n          return null;\n        }\n        MergeSpecification spec = new MergeSpecification();\n        spec.add(new OneMerge(fullyDeletedSegments));\n        return spec;\n      }\n    };\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(d);\n    w.commit();\n    w.updateDocument(new Term(\"id\", \"1\"), d);\n    w.commit();\n    try (DirectoryReader reader = w.getReader()) {\n      assertEquals(1, reader.numDocs());\n    }\n    IOUtils.close(w, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeOnCommitKeepFullyDeletedSegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeOnCommitKeepFullyDeletedSegments().mjava","sourceNew":"  public void testMergeOnCommitKeepFullyDeletedSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setMaxFullFlushMergeWaitMillis(30 * 1000);\n    iwc.mergePolicy = new FilterMergePolicy(newMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) {\n        return true;\n      }\n\n      @Override\n      public MergeSpecification findFullFlushMerges(MergeTrigger mergeTrigger,\n                                                    SegmentInfos segmentInfos,\n                                                    MergeContext mergeContext) {\n        List<SegmentCommitInfo> fullyDeletedSegments = segmentInfos.asList().stream()\n            .filter(s -> s.info.maxDoc() - s.getDelCount() == 0)\n            .collect(Collectors.toList());\n        if (fullyDeletedSegments.isEmpty()) {\n          return null;\n        }\n        MergeSpecification spec = new MergeSpecification();\n        spec.add(new OneMerge(fullyDeletedSegments));\n        return spec;\n      }\n    };\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(d);\n    w.commit();\n    w.updateDocument(new Term(\"id\", \"1\"), d);\n    w.commit();\n    try (DirectoryReader reader = w.getReader()) {\n      assertEquals(1, reader.numDocs());\n    }\n    IOUtils.close(w, dir);\n  }\n\n","sourceOld":"  public void testMergeOnCommitKeepFullyDeletedSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setMaxCommitMergeWaitMillis(30 * 1000);\n    iwc.mergePolicy = new FilterMergePolicy(newMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) {\n        return true;\n      }\n\n      @Override\n      public MergeSpecification findFullFlushMerges(MergeTrigger mergeTrigger,\n                                                    SegmentInfos segmentInfos,\n                                                    MergeContext mergeContext) {\n        List<SegmentCommitInfo> fullyDeletedSegments = segmentInfos.asList().stream()\n            .filter(s -> s.info.maxDoc() - s.getDelCount() == 0)\n            .collect(Collectors.toList());\n        if (fullyDeletedSegments.isEmpty()) {\n          return null;\n        }\n        MergeSpecification spec = new MergeSpecification();\n        spec.add(new OneMerge(fullyDeletedSegments));\n        return spec;\n      }\n    };\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(d);\n    w.commit();\n    w.updateDocument(new Term(\"id\", \"1\"), d);\n    w.commit();\n    try (DirectoryReader reader = w.getReader()) {\n      assertEquals(1, reader.numDocs());\n    }\n    IOUtils.close(w, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}