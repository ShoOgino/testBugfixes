{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","commits":[{"id":"40dce2b6d4360eb09fa16fb6c40a18b25507ed73","date":1383035822,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"/dev/null","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, Overseer.DELETECORE,\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5de0133a64f3e28d38cdf3f25f099bb70d48168a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30c688f7052130cef7bd419c85e3c5be214f7b9e","date":1411018984,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, Overseer.OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, Overseer.DELETECORE,\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"24a5da2a0d397ff29f3de8f6cf451d3412c2509a","date":1417276391,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, Overseer.OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b693a83132c9e45afcd564fd65a25b60ed80388b":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}