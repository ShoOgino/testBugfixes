{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleTransLog#replayAddDocument(Connection,NodeProcess,DataInput).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleTransLog#replayAddDocument(Connection,NodeProcess,DataInput).mjava","pathOld":"/dev/null","sourceNew":"  private void replayAddDocument(Connection c, NodeProcess primary, DataInput in) throws IOException {\n    String id = in.readString();\n\n    Document doc = new Document();\n    doc.add(new StringField(\"docid\", id, Field.Store.YES));\n\n    String title = readNullableString(in);\n    if (title != null) {\n      doc.add(new StringField(\"title\", title, Field.Store.NO));\n      doc.add(new TextField(\"titleTokenized\", title, Field.Store.NO));\n    }\n    String body = readNullableString(in);\n    if (body != null) {\n      doc.add(new TextField(\"body\", body, Field.Store.NO));\n    }\n    String marker = readNullableString(in);\n    if (marker != null) {\n      //System.out.println(\"xlog: replay marker=\" + id);\n      doc.add(new StringField(\"marker\", marker, Field.Store.YES));\n    }\n\n    // For both add and update originally, we use updateDocument to replay,\n    // because the doc could in fact already be in the index:\n    // nocomit what if this fails?\n    primary.addOrUpdateDocument(c, doc, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec317d5d3de749e12abcc9e6f976d765638fe9e2","date":1454411397,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleTransLog#replayAddDocument(Connection,NodeProcess,DataInput).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleTransLog#replayAddDocument(Connection,NodeProcess,DataInput).mjava","sourceNew":"  private void replayAddDocument(Connection c, NodeProcess primary, DataInput in) throws IOException {\n    String id = in.readString();\n\n    Document doc = new Document();\n    doc.add(new StringField(\"docid\", id, Field.Store.YES));\n\n    String title = readNullableString(in);\n    if (title != null) {\n      doc.add(new StringField(\"title\", title, Field.Store.NO));\n      doc.add(new TextField(\"titleTokenized\", title, Field.Store.NO));\n    }\n    String body = readNullableString(in);\n    if (body != null) {\n      doc.add(new TextField(\"body\", body, Field.Store.NO));\n    }\n    String marker = readNullableString(in);\n    if (marker != null) {\n      //TestStressNRTReplication.message(\"xlog: replay marker=\" + id);\n      doc.add(new StringField(\"marker\", marker, Field.Store.YES));\n    }\n\n    // For both add and update originally, we use updateDocument to replay,\n    // because the doc could in fact already be in the index:\n    // nocomit what if this fails?\n    primary.addOrUpdateDocument(c, doc, false);\n  }\n\n","sourceOld":"  private void replayAddDocument(Connection c, NodeProcess primary, DataInput in) throws IOException {\n    String id = in.readString();\n\n    Document doc = new Document();\n    doc.add(new StringField(\"docid\", id, Field.Store.YES));\n\n    String title = readNullableString(in);\n    if (title != null) {\n      doc.add(new StringField(\"title\", title, Field.Store.NO));\n      doc.add(new TextField(\"titleTokenized\", title, Field.Store.NO));\n    }\n    String body = readNullableString(in);\n    if (body != null) {\n      doc.add(new TextField(\"body\", body, Field.Store.NO));\n    }\n    String marker = readNullableString(in);\n    if (marker != null) {\n      //System.out.println(\"xlog: replay marker=\" + id);\n      doc.add(new StringField(\"marker\", marker, Field.Store.YES));\n    }\n\n    // For both add and update originally, we use updateDocument to replay,\n    // because the doc could in fact already be in the index:\n    // nocomit what if this fails?\n    primary.addOrUpdateDocument(c, doc, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleTransLog#replayAddDocument(Connection,NodeProcess,DataInput).mjava","pathOld":"/dev/null","sourceNew":"  private void replayAddDocument(Connection c, NodeProcess primary, DataInput in) throws IOException {\n    String id = in.readString();\n\n    Document doc = new Document();\n    doc.add(new StringField(\"docid\", id, Field.Store.YES));\n\n    String title = readNullableString(in);\n    if (title != null) {\n      doc.add(new StringField(\"title\", title, Field.Store.NO));\n      doc.add(new TextField(\"titleTokenized\", title, Field.Store.NO));\n    }\n    String body = readNullableString(in);\n    if (body != null) {\n      doc.add(new TextField(\"body\", body, Field.Store.NO));\n    }\n    String marker = readNullableString(in);\n    if (marker != null) {\n      //TestStressNRTReplication.message(\"xlog: replay marker=\" + id);\n      doc.add(new StringField(\"marker\", marker, Field.Store.YES));\n    }\n\n    // For both add and update originally, we use updateDocument to replay,\n    // because the doc could in fact already be in the index:\n    // nocomit what if this fails?\n    primary.addOrUpdateDocument(c, doc, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec317d5d3de749e12abcc9e6f976d765638fe9e2":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ec317d5d3de749e12abcc9e6f976d765638fe9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ec317d5d3de749e12abcc9e6f976d765638fe9e2":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["ec317d5d3de749e12abcc9e6f976d765638fe9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}