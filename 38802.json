{"path":"src/java/org/apache/lucene/search/FilterManager.FilterCleaner#FilterCleaner().mjava","commits":[{"id":"203bc84a5a9461a17a2a8e136f872bf4657aaee4","date":1176138824,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilterManager.FilterCleaner#FilterCleaner().mjava","pathOld":"/dev/null","sourceNew":"    public FilterCleaner() {\n      sortedFilterItems = new TreeSet(new Comparator() {\n        public int compare(Object a, Object b) {\n          if( a instanceof Map.Entry && b instanceof Map.Entry) {\n            FilterItem fia = (FilterItem) ((Map.Entry)a).getValue();\n            FilterItem fib = (FilterItem) ((Map.Entry)b).getValue();\n            if ( fia.timestamp == fib.timestamp ) {\n              return 0;\n            }\n            // smaller timestamp first\n            if ( fia.timestamp < fib.timestamp ) {\n              return -1;\n            }\n            // larger timestamp last\n            return 1;\n          } else {\n            throw new ClassCastException(\"Objects are not Map.Entry\");\n          }\n        }\n      });\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilterManager.FilterCleaner#FilterCleaner().mjava","pathOld":"src/java/org/apache/lucene/search/FilterManager.FilterCleaner#FilterCleaner().mjava","sourceNew":"    public FilterCleaner() {\n      sortedFilterItems = new TreeSet<Map.Entry<Integer,FilterItem>>(new Comparator<Map.Entry<Integer,FilterItem>>() {\n        public int compare(Map.Entry<Integer,FilterItem> a, Map.Entry<Integer,FilterItem> b) {\n            FilterItem fia = a.getValue();\n            FilterItem fib = b.getValue();\n            if ( fia.timestamp == fib.timestamp ) {\n              return 0;\n            }\n            // smaller timestamp first\n            if ( fia.timestamp < fib.timestamp ) {\n              return -1;\n            }\n            // larger timestamp last\n            return 1;\n          \n        }\n      });\n    }\n\n","sourceOld":"    public FilterCleaner() {\n      sortedFilterItems = new TreeSet(new Comparator() {\n        public int compare(Object a, Object b) {\n          if( a instanceof Map.Entry && b instanceof Map.Entry) {\n            FilterItem fia = (FilterItem) ((Map.Entry)a).getValue();\n            FilterItem fib = (FilterItem) ((Map.Entry)b).getValue();\n            if ( fia.timestamp == fib.timestamp ) {\n              return 0;\n            }\n            // smaller timestamp first\n            if ( fia.timestamp < fib.timestamp ) {\n              return -1;\n            }\n            // larger timestamp last\n            return 1;\n          } else {\n            throw new ClassCastException(\"Objects are not Map.Entry\");\n          }\n        }\n      });\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FilterManager.FilterCleaner#FilterCleaner().mjava","pathOld":"src/java/org/apache/lucene/search/FilterManager.FilterCleaner#FilterCleaner().mjava","sourceNew":"    public FilterCleaner() {\n      sortedFilterItems = new TreeSet<Map.Entry<Integer,FilterItem>>(new Comparator<Map.Entry<Integer,FilterItem>>() {\n        public int compare(Map.Entry<Integer,FilterItem> a, Map.Entry<Integer,FilterItem> b) {\n            FilterItem fia = a.getValue();\n            FilterItem fib = b.getValue();\n            if ( fia.timestamp == fib.timestamp ) {\n              return 0;\n            }\n            // smaller timestamp first\n            if ( fia.timestamp < fib.timestamp ) {\n              return -1;\n            }\n            // larger timestamp last\n            return 1;\n          \n        }\n      });\n    }\n\n","sourceOld":"    public FilterCleaner() {\n      sortedFilterItems = new TreeSet<Map.Entry<Integer,FilterItem>>(new Comparator<Map.Entry<Integer,FilterItem>>() {\n        public int compare(Map.Entry<Integer,FilterItem> a, Map.Entry<Integer,FilterItem> b) {\n            FilterItem fia = a.getValue();\n            FilterItem fib = b.getValue();\n            if ( fia.timestamp == fib.timestamp ) {\n              return 0;\n            }\n            // smaller timestamp first\n            if ( fia.timestamp < fib.timestamp ) {\n              return -1;\n            }\n            // larger timestamp last\n            return 1;\n          \n        }\n      });\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef82ff03e4016c705811b2658e81471a645c0e49":["203bc84a5a9461a17a2a8e136f872bf4657aaee4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"203bc84a5a9461a17a2a8e136f872bf4657aaee4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["203bc84a5a9461a17a2a8e136f872bf4657aaee4"],"203bc84a5a9461a17a2a8e136f872bf4657aaee4":["ef82ff03e4016c705811b2658e81471a645c0e49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}