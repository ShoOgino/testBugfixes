{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,CollectionRef]).mjava","commits":[{"id":"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","date":1491191579,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","sourceNew":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public Map<String, CollectionRef> getCollections() {\n        return Collections.emptyMap();\n      }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","sourceOld":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd7cebd53a1b7af73c5ca163a8a64808c9cf159d","date":1491310508,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,CollectionRef]).mjava","sourceNew":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","sourceOld":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public Map<String, CollectionRef> getCollections() {\n        return Collections.emptyMap();\n      }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,CollectionRef]).mjava","sourceNew":null,"sourceOld":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["cd7cebd53a1b7af73c5ca163a8a64808c9cf159d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd7cebd53a1b7af73c5ca163a8a64808c9cf159d":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd7cebd53a1b7af73c5ca163a8a64808c9cf159d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["cd7cebd53a1b7af73c5ca163a8a64808c9cf159d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}