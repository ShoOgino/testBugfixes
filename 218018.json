{"path":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","commits":[{"id":"f76ccdfca879f9e8881676ce0fb611f44c0f07a2","date":1322905997,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {parentDoc}));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {childDoc, parentDoc}));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {parentDoc}));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {childDoc, parentDoc}));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {parentDoc}));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {childDoc, parentDoc}));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {parentDoc}));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {childDoc, parentDoc}));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {parentDoc}));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {childDoc, parentDoc}));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {parentDoc}));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {childDoc, parentDoc}));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fae06511695f4be0bce5337deb3b3f813d0c3e7c","date":1323890147,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {parentDoc}));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(new Document[] {childDoc, parentDoc}));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6bd4a7478aca8c3880512b730b28bf3239340635","date":1326554224,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    BlockJoinQuery q = new BlockJoinQuery(tq, parentFilter, BlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8","date":1328775259,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6bd4a7478aca8c3880512b730b28bf3239340635":["fae06511695f4be0bce5337deb3b3f813d0c3e7c"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["f76ccdfca879f9e8881676ce0fb611f44c0f07a2"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["f76ccdfca879f9e8881676ce0fb611f44c0f07a2","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8":["6bd4a7478aca8c3880512b730b28bf3239340635"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8"],"fae06511695f4be0bce5337deb3b3f813d0c3e7c":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"f76ccdfca879f9e8881676ce0fb611f44c0f07a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"6bd4a7478aca8c3880512b730b28bf3239340635":["0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","fae06511695f4be0bce5337deb3b3f813d0c3e7c"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f76ccdfca879f9e8881676ce0fb611f44c0f07a2"],"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fae06511695f4be0bce5337deb3b3f813d0c3e7c":["6bd4a7478aca8c3880512b730b28bf3239340635"],"f76ccdfca879f9e8881676ce0fb611f44c0f07a2":["0e7c2454a6a8237bfd0e953f5b940838408c9055","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}