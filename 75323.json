{"path":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#getSubMatches().mjava","commits":[{"id":"165c3432cb3c4fcfc8e859af24323bbbd12084af","date":1532292166,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#getSubMatches().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  MatchesIterator getSubMatches() throws IOException {\n    int[][] submatches = new int[phrasePositions.length][3];\n    for (PhrasePositions pp : phrasePositions) {\n      if (pp.ord == leadOrd) {\n        submatches[pp.ord][0] = leadPosition;\n        submatches[pp.ord][1] = leadOffset;\n        submatches[pp.ord][2] = leadEndOffset;\n      }\n      else {\n        submatches[pp.ord][0] = pp.position + pp.offset;\n        submatches[pp.ord][1] = pp.postings.startOffset();\n        submatches[pp.ord][2] = pp.postings.endOffset();\n      }\n    }\n    Arrays.sort(submatches, Comparator.comparingInt(a -> a[0]));\n    return new MatchesIterator() {\n      int upTo = -1;\n      @Override\n      public boolean next() throws IOException {\n        upTo++;\n        return upTo < submatches.length;\n      }\n\n      @Override\n      public int startPosition() {\n        return submatches[upTo][0];\n      }\n\n      @Override\n      public int endPosition() {\n        return submatches[upTo][0];\n      }\n\n      @Override\n      public int startOffset() {\n        return submatches[upTo][1];\n      }\n\n      @Override\n      public int endOffset() {\n        return submatches[upTo][2];\n      }\n\n      @Override\n      public MatchesIterator getSubMatches() {\n        return MatchesIterator.EMPTY_ITERATOR;\n      }\n\n      @Override\n      public Object label() {\n        return this;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62ba8124694976baa3b03705351de238ec5d4352","date":1532295406,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#getSubMatches().mjava","sourceNew":null,"sourceOld":"  @Override\n  MatchesIterator getSubMatches() throws IOException {\n    int[][] submatches = new int[phrasePositions.length][3];\n    for (PhrasePositions pp : phrasePositions) {\n      if (pp.ord == leadOrd) {\n        submatches[pp.ord][0] = leadPosition;\n        submatches[pp.ord][1] = leadOffset;\n        submatches[pp.ord][2] = leadEndOffset;\n      }\n      else {\n        submatches[pp.ord][0] = pp.position + pp.offset;\n        submatches[pp.ord][1] = pp.postings.startOffset();\n        submatches[pp.ord][2] = pp.postings.endOffset();\n      }\n    }\n    Arrays.sort(submatches, Comparator.comparingInt(a -> a[0]));\n    return new MatchesIterator() {\n      int upTo = -1;\n      @Override\n      public boolean next() throws IOException {\n        upTo++;\n        return upTo < submatches.length;\n      }\n\n      @Override\n      public int startPosition() {\n        return submatches[upTo][0];\n      }\n\n      @Override\n      public int endPosition() {\n        return submatches[upTo][0];\n      }\n\n      @Override\n      public int startOffset() {\n        return submatches[upTo][1];\n      }\n\n      @Override\n      public int endOffset() {\n        return submatches[upTo][2];\n      }\n\n      @Override\n      public MatchesIterator getSubMatches() {\n        return MatchesIterator.EMPTY_ITERATOR;\n      }\n\n      @Override\n      public Object label() {\n        return this;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"165c3432cb3c4fcfc8e859af24323bbbd12084af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62ba8124694976baa3b03705351de238ec5d4352":["165c3432cb3c4fcfc8e859af24323bbbd12084af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["62ba8124694976baa3b03705351de238ec5d4352"]},"commit2Childs":{"165c3432cb3c4fcfc8e859af24323bbbd12084af":["62ba8124694976baa3b03705351de238ec5d4352"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["165c3432cb3c4fcfc8e859af24323bbbd12084af"],"62ba8124694976baa3b03705351de238ec5d4352":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}