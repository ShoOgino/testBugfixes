{"path":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","commits":[{"id":"16fa358573e3c2508728b3c7c438a8c19a3f0ae4","date":1482846144,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n    return Collections.emptyList(); // we do not know the names of the metrics yet\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n    return Collections.emptyList(); // we do not know the names of the metrics yet\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d646b44d1d17a867bcd0e7a07b11c4837b169366","date":1483540291,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n  }\n\n","sourceOld":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n    return Collections.emptyList(); // we do not know the names of the metrics yet\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n  }\n\n","sourceOld":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n    return Collections.emptyList(); // we do not know the names of the metrics yet\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    this.metricManager = manager;\n    this.registryName = registry;\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedHttpRequestExecutor#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    this.metricManager = manager;\n    this.registryName = registry;\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    this.metricsRegistry = manager.registry(registry);\n    this.scope = scope;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfc52860e6d13d034226a760813c59d984c6817a":["d646b44d1d17a867bcd0e7a07b11c4837b169366"],"43564cbb30b064675027cfb569564e8531096e97":["d646b44d1d17a867bcd0e7a07b11c4837b169366","bfc52860e6d13d034226a760813c59d984c6817a"],"d646b44d1d17a867bcd0e7a07b11c4837b169366":["16fa358573e3c2508728b3c7c438a8c19a3f0ae4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43564cbb30b064675027cfb569564e8531096e97"],"16fa358573e3c2508728b3c7c438a8c19a3f0ae4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16fa358573e3c2508728b3c7c438a8c19a3f0ae4"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["f03e4bed5023ec3ef93a771b8888cae991cf448d","d646b44d1d17a867bcd0e7a07b11c4837b169366"]},"commit2Childs":{"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d646b44d1d17a867bcd0e7a07b11c4837b169366":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16fa358573e3c2508728b3c7c438a8c19a3f0ae4","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"16fa358573e3c2508728b3c7c438a8c19a3f0ae4":["d646b44d1d17a867bcd0e7a07b11c4837b169366","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["491c9672ec42582fe43960452dbd37f1c80fe0f0"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}