{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","sourceNew":"  /**\n   * Return the drilldown Term-Text which does not need to do any allocations.\n   * The number of chars set is returned.\n   * <p>\n   * Note: Make sure <code>buffer</code> is large enough.\n   * @see CategoryPath#charsNeededForFullPath()\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer);\n\n","sourceOld":"  /**\n   * Return the drilldown Term-Text which does not need to do any allocations.\n   * The number of chars set is returned.\n   * <p>\n   * Note: Make sure <code>buffer</code> is large enough.\n   * @see CategoryPath#charsNeededForFullPath()\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","sourceNew":"  /**\n   * Copies the text required to execute a drill-down query on the given\n   * category to the given {@code char[]}, and returns the number of characters\n   * that were written.\n   * <p>\n   * <b>NOTE:</b> You should make sure that the {@code char[]} is large enough,\n   * by e.g. calling {@link CategoryPath#charsNeededForFullPath()}.\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer) {\n    return path.copyToCharArray(buffer, 0, -1, getFacetDelimChar());\n  }\n\n","sourceOld":"  /**\n   * Return the drilldown Term-Text which does not need to do any allocations.\n   * The number of chars set is returned.\n   * <p>\n   * Note: Make sure <code>buffer</code> is large enough.\n   * @see CategoryPath#charsNeededForFullPath()\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","sourceNew":"  /**\n   * Copies the text required to execute a drill-down query on the given\n   * category to the given {@code char[]}, and returns the number of characters\n   * that were written.\n   * <p>\n   * <b>NOTE:</b> You should make sure that the {@code char[]} is large enough,\n   * by e.g. calling {@link CategoryPath#fullPathLength()}.\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer) {\n    return path.copyFullPath(buffer, 0, getFacetDelimChar());\n  }\n\n","sourceOld":"  /**\n   * Copies the text required to execute a drill-down query on the given\n   * category to the given {@code char[]}, and returns the number of characters\n   * that were written.\n   * <p>\n   * <b>NOTE:</b> You should make sure that the {@code char[]} is large enough,\n   * by e.g. calling {@link CategoryPath#charsNeededForFullPath()}.\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer) {\n    return path.copyToCharArray(buffer, 0, -1, getFacetDelimChar());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","sourceNew":"  /**\n   * Copies the text required to execute a drill-down query on the given\n   * category to the given {@code char[]}, and returns the number of characters\n   * that were written.\n   * <p>\n   * <b>NOTE:</b> You should make sure that the {@code char[]} is large enough,\n   * by e.g. calling {@link CategoryPath#fullPathLength()}.\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer) {\n    return path.copyFullPath(buffer, 0, getFacetDelimChar());\n  }\n\n","sourceOld":"  /**\n   * Return the drilldown Term-Text which does not need to do any allocations.\n   * The number of chars set is returned.\n   * <p>\n   * Note: Make sure <code>buffer</code> is large enough.\n   * @see CategoryPath#charsNeededForFullPath()\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#drillDownTermText(CategoryPath,char[]).mjava","sourceNew":"  /**\n   * Copies the text required to execute a drill-down query on the given\n   * category to the given {@code char[]}, and returns the number of characters\n   * that were written.\n   * <p>\n   * <b>NOTE:</b> You should make sure that the {@code char[]} is large enough,\n   * by e.g. calling {@link CategoryPath#fullPathLength()}.\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer) {\n    return path.copyFullPath(buffer, 0, getFacetDelimChar());\n  }\n\n","sourceOld":"  /**\n   * Copies the text required to execute a drill-down query on the given\n   * category to the given {@code char[]}, and returns the number of characters\n   * that were written.\n   * <p>\n   * <b>NOTE:</b> You should make sure that the {@code char[]} is large enough,\n   * by e.g. calling {@link CategoryPath#fullPathLength()}.\n   */\n  public int drillDownTermText(CategoryPath path, char[] buffer) {\n    return path.copyFullPath(buffer, 0, getFacetDelimChar());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"607428da722dcb3e86bbd11c63de8986e6275c36":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","607428da722dcb3e86bbd11c63de8986e6275c36"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}