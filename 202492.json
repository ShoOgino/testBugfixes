{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isValidFieldGlob(String).mjava","commits":[{"id":"f4ebbcaa830b0a3008a69f1a4cdbcdec2703be0b","date":1363161710,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isValidFieldGlob(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isValidDynamicFieldName(String).mjava","sourceNew":"  /** Returns true if the given name has exactly one asterisk either at the start or end of the name */\n  private static boolean isValidFieldGlob(String name) {\n    if (name.startsWith(\"*\") || name.endsWith(\"*\")) {\n      int count = 0;\n      for (int pos = 0 ; pos < name.length() && -1 != (pos = name.indexOf('*', pos)) ; ++pos) ++count;\n      if (1 == count) return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns true if the given name has exactly one asterisk either at the start or end of the name */\n  private boolean isValidDynamicFieldName(String name) {\n    if (name.startsWith(\"*\") || name.endsWith(\"*\")) {\n      int count = 0;\n      for (int pos = 0 ; pos < name.length() && -1 != (pos = name.indexOf('*', pos)) ; ++pos) ++count;\n      if (1 == count) return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeeea2295d6355a29e259130a5c48ace73022d7c","date":1426569216,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isValidFieldGlob(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isValidFieldGlob(String).mjava","sourceNew":"  /** Returns true if the given name has exactly one asterisk either at the start or end of the name */\n  protected static boolean isValidFieldGlob(String name) {\n    if (name.startsWith(\"*\") || name.endsWith(\"*\")) {\n      int count = 0;\n      for (int pos = 0 ; pos < name.length() && -1 != (pos = name.indexOf('*', pos)) ; ++pos) ++count;\n      if (1 == count) return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns true if the given name has exactly one asterisk either at the start or end of the name */\n  private static boolean isValidFieldGlob(String name) {\n    if (name.startsWith(\"*\") || name.endsWith(\"*\")) {\n      int count = 0;\n      for (int pos = 0 ; pos < name.length() && -1 != (pos = name.indexOf('*', pos)) ; ++pos) ++count;\n      if (1 == count) return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isValidFieldGlob(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#isValidFieldGlob(String).mjava","sourceNew":"  /** Returns true if the given name has exactly one asterisk either at the start or end of the name */\n  protected static boolean isValidFieldGlob(String name) {\n    if (name.startsWith(\"*\") || name.endsWith(\"*\")) {\n      int count = 0;\n      for (int pos = 0 ; pos < name.length() && -1 != (pos = name.indexOf('*', pos)) ; ++pos) ++count;\n      if (1 == count) return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns true if the given name has exactly one asterisk either at the start or end of the name */\n  private static boolean isValidFieldGlob(String name) {\n    if (name.startsWith(\"*\") || name.endsWith(\"*\")) {\n      int count = 0;\n      for (int pos = 0 ; pos < name.length() && -1 != (pos = name.indexOf('*', pos)) ; ++pos) ++count;\n      if (1 == count) return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["f4ebbcaa830b0a3008a69f1a4cdbcdec2703be0b","eeeea2295d6355a29e259130a5c48ace73022d7c"],"f4ebbcaa830b0a3008a69f1a4cdbcdec2703be0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["f4ebbcaa830b0a3008a69f1a4cdbcdec2703be0b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeeea2295d6355a29e259130a5c48ace73022d7c"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"f4ebbcaa830b0a3008a69f1a4cdbcdec2703be0b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","eeeea2295d6355a29e259130a5c48ace73022d7c"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4ebbcaa830b0a3008a69f1a4cdbcdec2703be0b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}