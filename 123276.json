{"path":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","commits":[{"id":"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691","date":1516909549,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"/dev/null","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-routed-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"max-future-ms\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAliasUpdateProcessor\n        .formatCollectionNameFromInstant(aliasName, startDate.toInstant()\n        );\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46589ed5cc841861bf6b5e2afc55f718ebcd02a0","date":1516984620,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-routed-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"max-future-ms\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-routed-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"max-future-ms\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAliasUpdateProcessor\n        .formatCollectionNameFromInstant(aliasName, startDate.toInstant()\n        );\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b255c32e68c5ab0957ed097198e260c0c59816ad","date":1518193498,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-routed-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-routed-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"max-future-ms\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db21ceba3043cc8e4145472fef08e5b136892778","date":1520453762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-routed-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767","date":1520865397,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasMetadata(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3c9595c75582a7ea7efb585014102ed83f2d9c8b","date":1523581112,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":["a980795a56f2fcbc94caeb3233071312d5684d59"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b87d1f8719d7f05be003f3477450b74af13706a","date":1523590376,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a980795a56f2fcbc94caeb3233071312d5684d59","date":1524255736,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":["3c9595c75582a7ea7efb585014102ed83f2d9c8b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e","date":1529622176,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1eebf1b080530bdd7572c4927fb2bb52334b7a86","date":1563199033,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": '\" + createNode + \"',\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    Thread.sleep(1000);\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": ['\" + createNode + \"'],\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": '\" + createNode + \"',\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    Thread.sleep(1000);\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": '\" + createNode + \"',\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    Thread.sleep(1000);\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    //TODO SOLR-11877 assertEquals(2, coll.getStateFormat());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testV2().mjava","sourceNew":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"nodeSet\\\": '\" + createNode + \"',\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    Thread.sleep(1000);\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","sourceOld":"  // This is a fairly complete test where we set many options and see that it both affected the created\n  //  collection and that the alias metadata was saved accordingly\n  @Test\n  public void testV2() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n\n    String createNode = cluster.getRandomJetty(random()).getNodeName();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    //TODO fix Solr test infra so that this /____v2/ becomes /api/\n    HttpPost post = new HttpPost(baseUrl + \"/____v2/c\");\n    post.setEntity(new StringEntity(\"{\\n\" +\n        \"  \\\"create-alias\\\" : {\\n\" +\n        \"    \\\"name\\\": \\\"\" + aliasName + \"\\\",\\n\" +\n        \"    \\\"router\\\" : {\\n\" +\n        \"      \\\"name\\\": \\\"time\\\",\\n\" +\n        \"      \\\"field\\\": \\\"evt_dt\\\",\\n\" +\n        \"      \\\"start\\\":\\\"NOW/DAY\\\",\\n\" + // small window for test failure once a day.\n        \"      \\\"interval\\\":\\\"+2HOUR\\\",\\n\" +\n        \"      \\\"maxFutureMs\\\":\\\"14400000\\\"\\n\" +\n        \"    },\\n\" +\n        //TODO should we use \"NOW=\" param?  Won't work with v2 and is kinda a hack any way since intended for distrib\n        \"    \\\"create-collection\\\" : {\\n\" +\n        \"      \\\"router\\\": {\\n\" +\n        \"        \\\"name\\\":\\\"implicit\\\",\\n\" +\n        \"        \\\"field\\\":\\\"foo_s\\\"\\n\" +\n        \"      },\\n\" +\n        \"      \\\"shards\\\":\\\"foo,bar\\\",\\n\" +\n        \"      \\\"config\\\":\\\"_default\\\",\\n\" +\n        \"      \\\"tlogReplicas\\\":1,\\n\" +\n        \"      \\\"pullReplicas\\\":1,\\n\" +\n        \"      \\\"maxShardsPerNode\\\":4,\\n\" + // note: we also expect the 'policy' to work fine\n        \"      \\\"nodeSet\\\": '\" + createNode + \"',\\n\" +\n        \"      \\\"properties\\\" : {\\n\" +\n        \"        \\\"foobar\\\":\\\"bazbam\\\",\\n\" +\n        \"        \\\"foobar2\\\":\\\"bazbam2\\\"\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\", ContentType.APPLICATION_JSON));\n    assertSuccess(post);\n\n    Date startDate = DateMathParser.parseMath(new Date(), \"NOW/DAY\");\n    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startDate.toInstant());\n    // small chance could fail due to \"NOW\"; see above\n    assertCollectionExists(initialCollectionName);\n\n    Thread.sleep(1000);\n    // Test created collection:\n    final DocCollection coll = solrClient.getClusterStateProvider().getState(initialCollectionName).get();\n    //System.err.println(coll);\n    //TODO how do we assert the configSet ?\n    assertEquals(ImplicitDocRouter.class, coll.getRouter().getClass());\n    assertEquals(\"foo_s\", ((Map)coll.get(\"router\")).get(\"field\"));\n    assertEquals(2, coll.getSlices().size()); // numShards\n    assertEquals(4, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas().size()).sum()); // num replicas\n    // we didn't ask for any NRT replicas\n    assertEquals(0, coll.getSlices().stream()\n        .mapToInt(s -> s.getReplicas(r -> r.getType() == Replica.Type.NRT).size()).sum());\n    //assertEquals(1, coll.getNumNrtReplicas().intValue()); // TODO seems to be erroneous; I figured 'null'\n    assertEquals(1, coll.getNumTlogReplicas().intValue()); // per-shard\n    assertEquals(1, coll.getNumPullReplicas().intValue()); // per-shard\n    assertEquals(4, coll.getMaxShardsPerNode());\n    assertTrue(\"nodeSet didn't work?\",\n        coll.getSlices().stream().flatMap(s -> s.getReplicas().stream())\n            .map(Replica::getNodeName).allMatch(createNode::equals));\n\n    // Test Alias metadata:\n    Aliases aliases = cluster.getSolrClient().getZkStateReader().getAliases();\n    Map<String, String> collectionAliasMap = aliases.getCollectionAliasMap();\n    assertEquals(initialCollectionName, collectionAliasMap.get(aliasName));\n    Map<String, String> meta = aliases.getCollectionAliasProperties(aliasName);\n    //System.err.println(new TreeMap(meta));\n    assertEquals(\"evt_dt\",meta.get(\"router.field\"));\n    assertEquals(\"_default\",meta.get(\"create-collection.collection.configName\"));\n    assertEquals(\"foo_s\",meta.get(\"create-collection.router.field\"));\n    assertEquals(\"bazbam\",meta.get(\"create-collection.property.foobar\"));\n    assertEquals(\"bazbam2\",meta.get(\"create-collection.property.foobar2\"));\n    assertEquals(createNode,meta.get(\"create-collection.createNodeSet\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["db21ceba3043cc8e4145472fef08e5b136892778"],"46589ed5cc841861bf6b5e2afc55f718ebcd02a0":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"],"3c9595c75582a7ea7efb585014102ed83f2d9c8b":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"b255c32e68c5ab0957ed097198e260c0c59816ad":["46589ed5cc841861bf6b5e2afc55f718ebcd02a0"],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a980795a56f2fcbc94caeb3233071312d5684d59":["6b87d1f8719d7f05be003f3477450b74af13706a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a980795a56f2fcbc94caeb3233071312d5684d59","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6b87d1f8719d7f05be003f3477450b74af13706a":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767","3c9595c75582a7ea7efb585014102ed83f2d9c8b"],"db21ceba3043cc8e4145472fef08e5b136892778":["b255c32e68c5ab0957ed097198e260c0c59816ad"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e":["a980795a56f2fcbc94caeb3233071312d5684d59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a980795a56f2fcbc94caeb3233071312d5684d59","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["3c9595c75582a7ea7efb585014102ed83f2d9c8b","6b87d1f8719d7f05be003f3477450b74af13706a"],"46589ed5cc841861bf6b5e2afc55f718ebcd02a0":["b255c32e68c5ab0957ed097198e260c0c59816ad"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"3c9595c75582a7ea7efb585014102ed83f2d9c8b":["6b87d1f8719d7f05be003f3477450b74af13706a"],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["46589ed5cc841861bf6b5e2afc55f718ebcd02a0"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b255c32e68c5ab0957ed097198e260c0c59816ad":["db21ceba3043cc8e4145472fef08e5b136892778"],"a980795a56f2fcbc94caeb3233071312d5684d59":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"6b87d1f8719d7f05be003f3477450b74af13706a":["a980795a56f2fcbc94caeb3233071312d5684d59"],"db21ceba3043cc8e4145472fef08e5b136892778":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}