{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(TaxonomyReader,FacetSearchParams,int).mjava","commits":[{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(TaxonomyReader,FacetSearchParams,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":"  /**\n   * Create the category list iterator for the specified partition. If a non\n   * null cache is provided which contains the required data, use it for the\n   * iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache != null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData != null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(partition);\n  }\n\n","sourceOld":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(TaxonomyReader,FacetSearchParams,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":"  /**\n   * Create the category list iterator for the specified partition. If a non\n   * null cache is provided which contains the required data, use it for the\n   * iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache != null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData != null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(partition);\n  }\n\n","sourceOld":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create the category list iterator for the specified partition. If a non\n   * null cache is provided which contains the required data, use it for the\n   * iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache != null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData != null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create the category list iterator for the specified partition. If a non\n   * null cache is provided which contains the required data, use it for the\n   * iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache != null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData != null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["8917bfede3b4ca30f4305c1e391e9218959cd723","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"]},"commit2Childs":{"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"8917bfede3b4ca30f4305c1e391e9218959cd723":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","8917bfede3b4ca30f4305c1e391e9218959cd723"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}