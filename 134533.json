{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#testOneDocMissingFixed().mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#testOneDocMissingFixed().mjava","pathOld":"/dev/null","sourceNew":"  public void testOneDocMissingFixed() throws IOException {\n    int maxDoc = 9699;\n    final byte denseRankPower = rarely() ? -1 : (byte) (random().nextInt(7)+7); // sane + chance of disable\n    FixedBitSet set = new FixedBitSet(maxDoc);\n    set.set(0, maxDoc);\n    set.clear(1345);\n    try (Directory dir = newDirectory()) {\n\n      final int cardinality = set.cardinality();\n      long length;\n      int jumpTableentryCount;\n      try (IndexOutput out = dir.createOutput(\"foo\", IOContext.DEFAULT)) {\n        jumpTableentryCount = IndexedDISI.writeBitSet(new BitSetIterator(set, cardinality), out, denseRankPower);\n        length = out.getFilePointer();\n      }\n\n      int step = 16000;\n      try (IndexInput in = dir.openInput(\"foo\", IOContext.DEFAULT)) {\n        IndexedDISI disi = new IndexedDISI(in, 0L, length, jumpTableentryCount, denseRankPower, cardinality);\n        BitSetIterator disi2 = new BitSetIterator(set, cardinality);\n        assertAdvanceEquality(disi, disi2, step);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#testOneDocMissingFixed().mjava","pathOld":"/dev/null","sourceNew":"  public void testOneDocMissingFixed() throws IOException {\n    int maxDoc = 9699;\n    final byte denseRankPower = rarely() ? -1 : (byte) (random().nextInt(7)+7); // sane + chance of disable\n    FixedBitSet set = new FixedBitSet(maxDoc);\n    set.set(0, maxDoc);\n    set.clear(1345);\n    try (Directory dir = newDirectory()) {\n\n      final int cardinality = set.cardinality();\n      long length;\n      int jumpTableentryCount;\n      try (IndexOutput out = dir.createOutput(\"foo\", IOContext.DEFAULT)) {\n        jumpTableentryCount = IndexedDISI.writeBitSet(new BitSetIterator(set, cardinality), out, denseRankPower);\n        length = out.getFilePointer();\n      }\n\n      int step = 16000;\n      try (IndexInput in = dir.openInput(\"foo\", IOContext.DEFAULT)) {\n        IndexedDISI disi = new IndexedDISI(in, 0L, length, jumpTableentryCount, denseRankPower, cardinality);\n        BitSetIterator disi2 = new BitSetIterator(set, cardinality);\n        assertAdvanceEquality(disi, disi2, step);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e17b020972a0d6e8d6823f545571a66646a167"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}