{"path":"lucene/core/src/test/org/apache/lucene/geo/TestSimpleWKTShapeParsing#testGeometryCollection().mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestSimpleWKTShapeParsing#testGeometryCollection().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestSimpleWKTShapeParsing#testGeometryCollection().mjava","sourceNew":"  /** test simple geometry collection */\n  public void testGeometryCollection() throws Exception {\n    StringBuilder b = new StringBuilder();\n    b.append(ShapeType.GEOMETRYCOLLECTION + \"(\");\n    b.append(ShapeType.MULTIPOLYGON + \"(((100.0 0.0, 101.0 0.0, 101.0 1.0, 100.0 1.0, 100.0 0.0)),\");\n    b.append(\"((10.0 2.0, 11.0 2.0, 11.0 3.0, 10.0 3.0, 10.0 2.0))),\");\n    b.append(ShapeType.POINT + \"(101.0 10.0),\");\n    b.append(ShapeType.LINESTRING + \"(101.0 10.0, 180.0 90.0, -180.0 -90.0),\");\n    b.append(ShapeType.ENVELOPE + \"(-180.0, 180.0, 90.0, -90.0)\");\n    b.append(\")\");\n    Object shape = SimpleWKTShapeParser.parse(b.toString());\n\n    assertTrue(shape instanceof Object[]);\n    Object[] shapes = (Object[]) shape;\n    assertEquals(4, shapes.length);\n    assertTrue(shapes[0] instanceof Polygon[]);\n    assertTrue(shapes[1] instanceof double[]);\n    assertTrue(shapes[2] instanceof Line);\n    assertTrue(shapes[3] instanceof Rectangle);\n  }\n\n","sourceOld":"  /** test simple geometry collection */\n  public void testGeometryCollection() throws Exception {\n    StringBuilder b = new StringBuilder();\n    b.append(ShapeType.GEOMETRYCOLLECTION + \"(\");\n    b.append(ShapeType.MULTIPOLYGON + \"(((100.0 0.0, 101.0 0.0, 101.0 1.0, 100.0 1.0, 100.0 0.0)),\");\n    b.append(\"((10.0 2.0, 11.0 2.0, 11.0 3.0, 10.0 3.0, 10.0 2.0))),\");\n    b.append(ShapeType.POINT + \"(101.0 10.0),\");\n    b.append(ShapeType.LINESTRING + \"(101.0 10.0, 180.0 90.0, -180.0 -90.0),\");\n    b.append(ShapeType.ENVELOPE + \"(-180.0, 180.0, 90.0, -90.0)\");\n    b.append(\")\");\n    Object shape = SimpleWKTShapeParser.parse(b.toString());\n\n    assertTrue(shape instanceof Object[]);\n    Object[] shapes = (Object[]) shape;\n    assertEquals(4, shapes.length);\n    assertTrue(shapes[0] instanceof Polygon[]);\n    assertTrue(shapes[1] instanceof double[]);\n    assertTrue(shapes[2] instanceof Line);\n    assertTrue(shapes[3] instanceof Rectangle);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}