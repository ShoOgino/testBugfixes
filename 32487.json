{"path":"solr/solrj/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","pathOld":"solr/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","sourceNew":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.EMPTY_LIST ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","sourceOld":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.EMPTY_LIST ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","pathOld":"solr/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","sourceNew":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.EMPTY_LIST ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","sourceOld":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.EMPTY_LIST ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","pathOld":"solr/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","sourceNew":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.EMPTY_LIST ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","sourceOld":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.EMPTY_LIST ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3adc4d119a7deba35b2721853853464857d9d0a9","date":1594608068,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","sourceNew":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.emptyList() ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","sourceOld":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n    \n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", \"value\" ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    try { doc.getFieldValuesMap().clear();               fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().entrySet();            fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().values();              fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValuesMap().remove( \"key\" );       fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n    try { doc.getFieldValueMap().put( \"key\", Collections.EMPTY_LIST ); fail( \"should be unsupported!\" ); } catch( UnsupportedOperationException ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3adc4d119a7deba35b2721853853464857d9d0a9":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3adc4d119a7deba35b2721853853464857d9d0a9"]},"commit2Childs":{"3adc4d119a7deba35b2721853853464857d9d0a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["3adc4d119a7deba35b2721853853464857d9d0a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}