{"path":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"/dev/null","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);    \n    w.setMaxBufferedDocs(2);\n    w.setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      ((ConcurrentMergeScheduler) w.getMergeScheduler()).setSuppressExceptions();\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);    \n    w.setMaxBufferedDocs(2);\n    w.setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      ((ConcurrentMergeScheduler) w.getMergeScheduler()).setSuppressExceptions();\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);    \n    w.setMaxBufferedDocs(2);\n    w.setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      ((ConcurrentMergeScheduler) w.getMergeScheduler()).setSuppressExceptions();\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}