{"path":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new String(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new String(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new BytesRef(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new String(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new BytesRef(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new String(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes), false);\n      //term = new Term(field, bytes, false);\n    }\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new BytesRef(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes), false);\n      //term = new Term(field, bytes, false);\n    }\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new BytesRef(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes), false);\n      //term = new Term(field, bytes, false);\n    }\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null)\n      term = new Term(field, new BytesRef(text.result, 0, text.length), false);\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","date":1308670974,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes));\n    }\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes), false);\n      //term = new Term(field, bytes, false);\n    }\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes));\n    }\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes), false);\n      //term = new Term(field, bytes, false);\n    }\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes));\n    }\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes), false);\n      //term = new Term(field, bytes, false);\n    }\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermBuffer#toTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#toTerm().mjava","sourceNew":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes));\n    }\n\n    return term;\n  }\n\n","sourceOld":"  public Term toTerm() {\n    if (field == null)                            // unset\n      return null;\n\n    if (term == null) {\n      term = new Term(field, new BytesRef(bytes));\n    }\n\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"2553b00f699380c64959ccb27991289aae87be2e":["4b103252dee6afa1b6d7a622c773d178788eb85a","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["4b103252dee6afa1b6d7a622c773d178788eb85a","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57","5f4e87790277826a2aea119328600dfb07761f32"],"3242a09f703274d3b9283f2064a1a33064b53a1b":[],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["7b91922b55d15444d554721b352861d028eb8278","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3242a09f703274d3b9283f2064a1a33064b53a1b","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}