{"path":"lucene/core/src/java/org/apache/lucene/search/QueryVisitor#consumeTermsMatching(Query,String,ByteRunAutomaton).mjava","commits":[{"id":"d35c63123a7e255b58f8cf3948eb9a6128100a32","date":1574872099,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/QueryVisitor#consumeTermsMatching(Query,String,ByteRunAutomaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called by leaf queries that match on a class of terms\n   *\n   * @param query     the leaf query\n   * @param field     the field queried against\n   * @param automaton an automaton defining which terms match\n   *\n   * @lucene.experimental\n   */\n  public void consumeTermsMatching(Query query, String field, ByteRunAutomaton automaton) {\n    visitLeaf(query); // default impl for backward compatibility\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1bc3639daa2b0731b0eac4b50e518f492d3a23","date":1588151945,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/QueryVisitor#consumeTermsMatching(Query,String,Supplier[ByteRunAutomaton]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/QueryVisitor#consumeTermsMatching(Query,String,ByteRunAutomaton).mjava","sourceNew":"  /**\n   * Called by leaf queries that match on a class of terms\n   *\n   * @param query     the leaf query\n   * @param field     the field queried against\n   * @param automaton a supplier for an automaton defining which terms match\n   *\n   * @lucene.experimental\n   */\n  public void consumeTermsMatching(Query query, String field, Supplier<ByteRunAutomaton> automaton) {\n    visitLeaf(query); // default impl for backward compatibility\n  }\n\n","sourceOld":"  /**\n   * Called by leaf queries that match on a class of terms\n   *\n   * @param query     the leaf query\n   * @param field     the field queried against\n   * @param automaton an automaton defining which terms match\n   *\n   * @lucene.experimental\n   */\n  public void consumeTermsMatching(Query query, String field, ByteRunAutomaton automaton) {\n    visitLeaf(query); // default impl for backward compatibility\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe1bc3639daa2b0731b0eac4b50e518f492d3a23":["d35c63123a7e255b58f8cf3948eb9a6128100a32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe1bc3639daa2b0731b0eac4b50e518f492d3a23"]},"commit2Childs":{"fe1bc3639daa2b0731b0eac4b50e518f492d3a23":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d35c63123a7e255b58f8cf3948eb9a6128100a32"],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["fe1bc3639daa2b0731b0eac4b50e518f492d3a23"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}