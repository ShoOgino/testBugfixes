{"path":"lucene/core/src/test/org/apache/lucene/index/TestManyFields#testRotatingFieldNames().mjava","commits":[{"id":"57dea9cc0cdda318a986edb0250c26cee1e8bb19","date":1410398087,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestManyFields#testRotatingFieldNames().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testRotatingFieldNames().mjava","sourceNew":"  // LUCENE-4398\n  public void testRotatingFieldNames() throws Exception {\n    Directory dir = newFSDirectory(createTempDir(\"TestIndexWriter.testChangingFields\"));\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setRAMBufferSizeMB(0.2);\n    iwc.setMaxBufferedDocs(-1);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    int upto = 0;\n\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setOmitNorms(true);\n\n    int firstDocCount = -1;\n    for(int iter=0;iter<10;iter++) {\n      final int startFlushCount = w.getFlushCount();\n      int docCount = 0;\n      while(w.getFlushCount() == startFlushCount) {\n        Document doc = new Document();\n        for(int i=0;i<10;i++) {\n          doc.add(new Field(\"field\" + (upto++), \"content\", ft));\n        }\n        w.addDocument(doc);\n        docCount++;\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter + \" flushed after docCount=\" + docCount);\n      }\n\n      if (iter == 0) {\n        firstDocCount = docCount;\n      }\n\n      assertTrue(\"flushed after too few docs: first segment flushed at docCount=\" + firstDocCount + \", but current segment flushed after docCount=\" + docCount + \"; iter=\" + iter, ((float) docCount) / firstDocCount > 0.9);\n\n      if (upto > 5000) {\n        // Start re-using field names after a while\n        // ... important because otherwise we can OOME due\n        // to too many FieldInfo instances.\n        upto = 0;\n      }\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4398\n  public void testRotatingFieldNames() throws Exception {\n    Directory dir = newFSDirectory(createTempDir(\"TestIndexWriter.testChangingFields\"));\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setRAMBufferSizeMB(0.2);\n    iwc.setMaxBufferedDocs(-1);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    int upto = 0;\n\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setOmitNorms(true);\n\n    int firstDocCount = -1;\n    for(int iter=0;iter<10;iter++) {\n      final int startFlushCount = w.getFlushCount();\n      int docCount = 0;\n      while(w.getFlushCount() == startFlushCount) {\n        Document doc = new Document();\n        for(int i=0;i<10;i++) {\n          doc.add(new Field(\"field\" + (upto++), \"content\", ft));\n        }\n        w.addDocument(doc);\n        docCount++;\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter + \" flushed after docCount=\" + docCount);\n      }\n\n      if (iter == 0) {\n        firstDocCount = docCount;\n      }\n\n      assertTrue(\"flushed after too few docs: first segment flushed at docCount=\" + firstDocCount + \", but current segment flushed after docCount=\" + docCount + \"; iter=\" + iter, ((float) docCount) / firstDocCount > 0.9);\n\n      if (upto > 5000) {\n        // Start re-using field names after a while\n        // ... important because otherwise we can OOME due\n        // to too many FieldInfo instances.\n        upto = 0;\n      }\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57dea9cc0cdda318a986edb0250c26cee1e8bb19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57dea9cc0cdda318a986edb0250c26cee1e8bb19"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57dea9cc0cdda318a986edb0250c26cee1e8bb19"],"57dea9cc0cdda318a986edb0250c26cee1e8bb19":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}