{"path":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2","date":1289765998,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2":["1da8d55113b689b06716246649de6f62430f15c0"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["1da8d55113b689b06716246649de6f62430f15c0","0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}