{"path":"lucene/src/java/org/apache/lucene/index/Fields#getUniqueTermCount().mjava","commits":[{"id":"f458fcb817a740e7906774b7ca2c54d37b34f24f","date":1319501743,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Fields#getUniqueTermCount().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of terms for all fields, or -1 if this \n   *  measure isn't stored by the codec. Note that, just like \n   *  other term measures, this measure does not take deleted \n   *  documents into account. */\n  // TODO: deprecate?\n  public long getUniqueTermCount() throws IOException {\n    long numTerms = 0;\n    FieldsEnum it = iterator();\n    while(true) {\n      String field = it.next();\n      if (field == null) {\n        break;\n      }\n      Terms terms = terms(field);\n      if (terms != null) {\n        final long termCount = terms.getUniqueTermCount();\n        if (termCount == -1) {\n          return -1;\n        }\n          \n        numTerms += termCount;\n      }\n    }\n    return numTerms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/Fields#getUniqueTermCount().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Fields#getUniqueTermCount().mjava","sourceNew":"  /** Returns the number of terms for all fields, or -1 if this \n   *  measure isn't stored by the codec. Note that, just like \n   *  other term measures, this measure does not take deleted \n   *  documents into account. */\n  // TODO: deprecate?\n  public long getUniqueTermCount() throws IOException {\n    long numTerms = 0;\n    FieldsEnum it = iterator();\n    while(true) {\n      String field = it.next();\n      if (field == null) {\n        break;\n      }\n      Terms terms = terms(field);\n      if (terms != null) {\n        final long termCount = terms.getUniqueTermCount();\n        if (termCount == -1) {\n          return -1;\n        }\n          \n        numTerms += termCount;\n      }\n    }\n    return numTerms;\n  }\n\n","sourceOld":"  /** Returns the number of terms for all fields, or -1 if this \n   *  measure isn't stored by the codec. Note that, just like \n   *  other term measures, this measure does not take deleted \n   *  documents into account. */\n  // TODO: deprecate?\n  public long getUniqueTermCount() throws IOException {\n    long numTerms = 0;\n    FieldsEnum it = iterator();\n    while(true) {\n      String field = it.next();\n      if (field == null) {\n        break;\n      }\n      Terms terms = terms(field);\n      if (terms != null) {\n        final long termCount = terms.getUniqueTermCount();\n        if (termCount == -1) {\n          return -1;\n        }\n          \n        numTerms += termCount;\n      }\n    }\n    return numTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f458fcb817a740e7906774b7ca2c54d37b34f24f"],"f458fcb817a740e7906774b7ca2c54d37b34f24f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f458fcb817a740e7906774b7ca2c54d37b34f24f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f458fcb817a740e7906774b7ca2c54d37b34f24f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}