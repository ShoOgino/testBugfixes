{"path":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","commits":[{"id":"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5","date":1347072117,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"/dev/null","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(TestUtil.getTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(TestUtil.createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(TestUtil.getTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(TestUtil.createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(TestUtil.getTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","date":1400334249,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInput slicer = mmapDir.openInput(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.slice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInput slicer = mmapDir.openInput(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.slice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInputSlicer slicer = mmapDir.createSlicer(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.openSlice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInput slicer = mmapDir.openInput(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.slice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), null, 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInput slicer = mmapDir.openInput(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.slice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4208ed8e426ae5f75a41d8b4ae53f4587e413061","date":1580475454,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testSeekSliceZero().mjava","sourceNew":"  public void testSeekSliceZero() throws Exception {\n    int upto = TEST_NIGHTLY ? 31 : 3;\n    for (int i = 0; i < 3; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInput slicer = mmapDir.openInput(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.slice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","sourceOld":"  public void testSeekSliceZero() throws Exception {\n    for (int i = 0; i < 31; i++) {\n      MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testSeekSliceZero\"), 1<<i);\n      IndexOutput io = mmapDir.createOutput(\"zeroBytes\", newIOContext(random()));\n      io.close();\n      IndexInput slicer = mmapDir.openInput(\"zeroBytes\", newIOContext(random()));\n      IndexInput ii = slicer.slice(\"zero-length slice\", 0, 0);\n      ii.seek(0L);\n      ii.close();\n      slicer.close();\n      mmapDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"285cdc737de75b7cc7c284a156b20214deb67bca":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["285cdc737de75b7cc7c284a156b20214deb67bca"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"56572ec06f1407c066d6b7399413178b33176cd8":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"]},"commit2Childs":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["6613659748fe4411a7dcf85266e55db1f95f7315"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["285cdc737de75b7cc7c284a156b20214deb67bca","56572ec06f1407c066d6b7399413178b33176cd8"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","56572ec06f1407c066d6b7399413178b33176cd8"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5"],"285cdc737de75b7cc7c284a156b20214deb67bca":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}