{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","sourceNew":"  private boolean isOptimized(IndexWriter writer, SegmentInfo info)\n    throws IOException {\n    return !info.hasDeletions() &&\n      !info.hasSeparateNorms() &&\n      info.dir == writer.getDirectory() &&\n      info.getUseCompoundFile() == getUseCompoundFile();\n  }\n\n","sourceOld":"  private boolean isOptimized(IndexWriter writer, SegmentInfo info)\n    throws IOException {\n    return !info.hasDeletions() &&\n      !info.hasSeparateNorms() &&\n      info.dir == writer.getDirectory() &&\n      info.getUseCompoundFile() == getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","sourceNew":"  private boolean isOptimized(IndexWriter writer, SegmentInfo info)\n    throws IOException {\n    assert writer != null;\n    return !info.hasDeletions() &&\n      !info.hasSeparateNorms() &&\n      info.dir == writer.getDirectory() &&\n      info.getUseCompoundFile() == getUseCompoundFile();\n  }\n\n","sourceOld":"  private boolean isOptimized(IndexWriter writer, SegmentInfo info)\n    throws IOException {\n    return !info.hasDeletions() &&\n      !info.hasSeparateNorms() &&\n      info.dir == writer.getDirectory() &&\n      info.getUseCompoundFile() == getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8723a3379c08ae0b4ba0cf4f246306f86ad8362d","date":1287582680,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","sourceNew":null,"sourceOld":"  private boolean isOptimized(IndexWriter writer, SegmentInfo info)\n    throws IOException {\n    assert writer != null;\n    return !info.hasDeletions() &&\n      !info.hasSeparateNorms() &&\n      info.dir == writer.getDirectory() &&\n      info.getUseCompoundFile() == getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8017ab6544f30f93b106e419e7298173bad77f69","date":1287608126,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","sourceNew":null,"sourceOld":"  private boolean isOptimized(IndexWriter writer, SegmentInfo info)\n    throws IOException {\n    assert writer != null;\n    return !info.hasDeletions() &&\n      !info.hasSeparateNorms() &&\n      info.dir == writer.getDirectory() &&\n      info.getUseCompoundFile() == getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(IndexWriter,SegmentInfo).mjava","sourceNew":null,"sourceOld":"  private boolean isOptimized(IndexWriter writer, SegmentInfo info)\n    throws IOException {\n    assert writer != null;\n    return !info.hasDeletions() &&\n      !info.hasSeparateNorms() &&\n      info.dir == writer.getDirectory() &&\n      info.getUseCompoundFile() == getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8017ab6544f30f93b106e419e7298173bad77f69":["7ab99e8c71442b92c320e218141dee04a9b91ce8","8723a3379c08ae0b4ba0cf4f246306f86ad8362d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["7ab99e8c71442b92c320e218141dee04a9b91ce8","8723a3379c08ae0b4ba0cf4f246306f86ad8362d"],"8723a3379c08ae0b4ba0cf4f246306f86ad8362d":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8723a3379c08ae0b4ba0cf4f246306f86ad8362d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7ab99e8c71442b92c320e218141dee04a9b91ce8":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8723a3379c08ae0b4ba0cf4f246306f86ad8362d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8017ab6544f30f93b106e419e7298173bad77f69":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"8723a3379c08ae0b4ba0cf4f246306f86ad8362d":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}