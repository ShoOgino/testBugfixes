{"path":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9","date":1419431639,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitialization().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitialization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n\n    // Build an explicit list that includes the debug comp.\n    //-----------------------------------------------\n    names0 = new ArrayList<>();\n    names0.add( FacetComponent.COMPONENT_NAME );\n    names0.add( DebugComponent.COMPONENT_NAME );\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n\n    args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n\n    assertEquals( 3, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 0 ) );\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ),\n        handler.getComponents().get( 1 ) );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 2 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FIRST_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponents().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-2 ) );\n    //Debug component is always last in this case\n    assertEquals( core.getSearchComponent( DebugComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}