{"path":"lucene/core/src/java/org/apache/lucene/index/SortingCodecReader#getDocValuesReader().mjava","commits":[{"id":"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63","date":1599130480,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingCodecReader#getDocValuesReader().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesProducer getDocValuesReader() {\n    final DocValuesProducer delegate = in.getDocValuesReader();\n    return new DocValuesProducer() {\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return produceNumericDocValues(field,delegate.getNumeric(field), cachedNumericDVs);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        final BinaryDocValues oldDocValues = delegate.getBinary(field);\n        BinaryDocValuesWriter.CachedBinaryDVs dvs;\n        synchronized (cachedBinaryDVs) {\n          dvs = cachedBinaryDVs.get(field);\n          if (dvs == null) {\n            dvs = BinaryDocValuesWriter.sortDocValues(maxDoc(), docMap, oldDocValues);\n            cachedBinaryDVs.put(field.name, dvs);\n          }\n        }\n        return new BinaryDocValuesWriter.SortingBinaryDocValues(dvs);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        SortedDocValues oldDocValues = delegate.getSorted(field);\n        int[] ords;\n        synchronized (cachedSortedDVs) {\n          ords = cachedSortedDVs.get(field);\n          if (ords == null) {\n            ords = new int[maxDoc()];\n            Arrays.fill(ords, -1);\n            int docID;\n            while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n              int newDocID = docMap.oldToNew(docID);\n              ords[newDocID] = oldDocValues.ordValue();\n            }\n            cachedSortedDVs.put(field.name, ords);\n          }\n        }\n\n        return new SortedDocValuesWriter.SortingSortedDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        final SortedNumericDocValues oldDocValues = delegate.getSortedNumeric(field);\n        long[][] values;\n        synchronized (cachedSortedNumericDVs) {\n          values = cachedSortedNumericDVs.get(field);\n          if (values == null) {\n            values = SortedNumericDocValuesWriter.sortDocValues(maxDoc(), docMap, oldDocValues);\n            cachedSortedNumericDVs.put(field.name, values);\n          }\n        }\n\n        return new SortedNumericDocValuesWriter.SortingSortedNumericDocValues(oldDocValues, values);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        SortedSetDocValues oldDocValues = delegate.getSortedSet(field);\n        long[][] ords;\n        synchronized (cachedSortedSetDVs) {\n          ords = cachedSortedSetDVs.get(field);\n          if (ords == null) {\n            ords = SortedSetDocValuesWriter.sortDocValues(maxDoc(), docMap, oldDocValues);\n            cachedSortedSetDVs.put(field.name, ords);\n          }\n        }\n        return new SortedSetDocValuesWriter.SortingSortedSetDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        delegate.checkIntegrity();\n      }\n\n      @Override\n      public void close() throws IOException {\n        delegate.close();\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return delegate.ramBytesUsed();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46a689927fad636f7324c6166ffe3df0b93d7ce6","date":1600780253,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingCodecReader#getDocValuesReader().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingCodecReader#getDocValuesReader().mjava","sourceNew":"  @Override\n  public DocValuesProducer getDocValuesReader() {\n    final DocValuesProducer delegate = in.getDocValuesReader();\n    return new DocValuesProducer() {\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return produceNumericDocValues(field,delegate.getNumeric(field), cachedNumericDVs);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        final BinaryDocValues oldDocValues = delegate.getBinary(field);\n        BinaryDocValuesWriter.CachedBinaryDVs dvs;\n        synchronized (cachedBinaryDVs) {\n          dvs = cachedBinaryDVs.get(field);\n          if (dvs == null) {\n            dvs = new BinaryDocValuesWriter.CachedBinaryDVs(maxDoc(), docMap, oldDocValues);\n            cachedBinaryDVs.put(field.name, dvs);\n          }\n        }\n        return new BinaryDocValuesWriter.SortingBinaryDocValues(dvs);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        SortedDocValues oldDocValues = delegate.getSorted(field);\n        int[] ords;\n        synchronized (cachedSortedDVs) {\n          ords = cachedSortedDVs.get(field);\n          if (ords == null) {\n            ords = new int[maxDoc()];\n            Arrays.fill(ords, -1);\n            int docID;\n            while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n              int newDocID = docMap.oldToNew(docID);\n              ords[newDocID] = oldDocValues.ordValue();\n            }\n            cachedSortedDVs.put(field.name, ords);\n          }\n        }\n\n        return new SortedDocValuesWriter.SortingSortedDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        final SortedNumericDocValues oldDocValues = delegate.getSortedNumeric(field);\n        SortedNumericDocValuesWriter.LongValues values;\n        synchronized (cachedSortedNumericDVs) {\n          values = cachedSortedNumericDVs.get(field);\n          if (values == null) {\n            values = new SortedNumericDocValuesWriter.LongValues(maxDoc(), docMap, oldDocValues, PackedInts.FAST);\n            cachedSortedNumericDVs.put(field.name, values);\n          }\n        }\n\n        return new SortedNumericDocValuesWriter.SortingSortedNumericDocValues(oldDocValues, values);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        SortedSetDocValues oldDocValues = delegate.getSortedSet(field);\n        SortedSetDocValuesWriter.DocOrds ords;\n        synchronized (cachedSortedSetDVs) {\n          ords = cachedSortedSetDVs.get(field);\n          if (ords == null) {\n            ords = new SortedSetDocValuesWriter.DocOrds(maxDoc(), docMap, oldDocValues, PackedInts.FASTEST);\n            cachedSortedSetDVs.put(field.name, ords);\n          }\n        }\n        return new SortedSetDocValuesWriter.SortingSortedSetDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        delegate.checkIntegrity();\n      }\n\n      @Override\n      public void close() throws IOException {\n        delegate.close();\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return delegate.ramBytesUsed();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValuesProducer getDocValuesReader() {\n    final DocValuesProducer delegate = in.getDocValuesReader();\n    return new DocValuesProducer() {\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return produceNumericDocValues(field,delegate.getNumeric(field), cachedNumericDVs);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        final BinaryDocValues oldDocValues = delegate.getBinary(field);\n        BinaryDocValuesWriter.CachedBinaryDVs dvs;\n        synchronized (cachedBinaryDVs) {\n          dvs = cachedBinaryDVs.get(field);\n          if (dvs == null) {\n            dvs = BinaryDocValuesWriter.sortDocValues(maxDoc(), docMap, oldDocValues);\n            cachedBinaryDVs.put(field.name, dvs);\n          }\n        }\n        return new BinaryDocValuesWriter.SortingBinaryDocValues(dvs);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        SortedDocValues oldDocValues = delegate.getSorted(field);\n        int[] ords;\n        synchronized (cachedSortedDVs) {\n          ords = cachedSortedDVs.get(field);\n          if (ords == null) {\n            ords = new int[maxDoc()];\n            Arrays.fill(ords, -1);\n            int docID;\n            while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n              int newDocID = docMap.oldToNew(docID);\n              ords[newDocID] = oldDocValues.ordValue();\n            }\n            cachedSortedDVs.put(field.name, ords);\n          }\n        }\n\n        return new SortedDocValuesWriter.SortingSortedDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        final SortedNumericDocValues oldDocValues = delegate.getSortedNumeric(field);\n        long[][] values;\n        synchronized (cachedSortedNumericDVs) {\n          values = cachedSortedNumericDVs.get(field);\n          if (values == null) {\n            values = SortedNumericDocValuesWriter.sortDocValues(maxDoc(), docMap, oldDocValues);\n            cachedSortedNumericDVs.put(field.name, values);\n          }\n        }\n\n        return new SortedNumericDocValuesWriter.SortingSortedNumericDocValues(oldDocValues, values);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        SortedSetDocValues oldDocValues = delegate.getSortedSet(field);\n        long[][] ords;\n        synchronized (cachedSortedSetDVs) {\n          ords = cachedSortedSetDVs.get(field);\n          if (ords == null) {\n            ords = SortedSetDocValuesWriter.sortDocValues(maxDoc(), docMap, oldDocValues);\n            cachedSortedSetDVs.put(field.name, ords);\n          }\n        }\n        return new SortedSetDocValuesWriter.SortingSortedSetDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        delegate.checkIntegrity();\n      }\n\n      @Override\n      public void close() throws IOException {\n        delegate.close();\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return delegate.ramBytesUsed();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6109eb85278a3a0b573c754977177cbad278c6c","date":1600863688,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingCodecReader#getDocValuesReader().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingCodecReader#getDocValuesReader().mjava","sourceNew":"  @Override\n  public DocValuesProducer getDocValuesReader() {\n    final DocValuesProducer delegate = in.getDocValuesReader();\n    return new DocValuesProducer() {\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return new NumericDocValuesWriter.SortingNumericDocValues(getOrCreateDV(field.name, () -> getNumericDocValues(delegate.getNumeric(field))));\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return new BinaryDocValuesWriter.SortingBinaryDocValues(getOrCreateDV(field.name,\n            () -> new BinaryDocValuesWriter.BinaryDVs(maxDoc(), docMap, delegate.getBinary(field))));\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        SortedDocValues oldDocValues = delegate.getSorted(field);\n        return new SortedDocValuesWriter.SortingSortedDocValues(oldDocValues, getOrCreateDV(field.name, () -> {\n          int[] ords = new int[maxDoc()];\n          Arrays.fill(ords, -1);\n          int docID;\n          while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n            int newDocID = docMap.oldToNew(docID);\n            ords[newDocID] = oldDocValues.ordValue();\n          }\n          return ords;\n        }));\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        final SortedNumericDocValues oldDocValues = delegate.getSortedNumeric(field);\n        return new SortedNumericDocValuesWriter.SortingSortedNumericDocValues(oldDocValues, getOrCreateDV(field.name, () ->\n            new SortedNumericDocValuesWriter.LongValues(maxDoc(), docMap, oldDocValues, PackedInts.FAST)));\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        SortedSetDocValues oldDocValues = delegate.getSortedSet(field);\n        return new SortedSetDocValuesWriter.SortingSortedSetDocValues(oldDocValues, getOrCreateDV(field.name, () ->\n            new SortedSetDocValuesWriter.DocOrds(maxDoc(), docMap, oldDocValues, PackedInts.FAST)));\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        delegate.checkIntegrity();\n      }\n\n      @Override\n      public void close() throws IOException {\n        delegate.close();\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return delegate.ramBytesUsed();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValuesProducer getDocValuesReader() {\n    final DocValuesProducer delegate = in.getDocValuesReader();\n    return new DocValuesProducer() {\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return produceNumericDocValues(field,delegate.getNumeric(field), cachedNumericDVs);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        final BinaryDocValues oldDocValues = delegate.getBinary(field);\n        BinaryDocValuesWriter.CachedBinaryDVs dvs;\n        synchronized (cachedBinaryDVs) {\n          dvs = cachedBinaryDVs.get(field);\n          if (dvs == null) {\n            dvs = new BinaryDocValuesWriter.CachedBinaryDVs(maxDoc(), docMap, oldDocValues);\n            cachedBinaryDVs.put(field.name, dvs);\n          }\n        }\n        return new BinaryDocValuesWriter.SortingBinaryDocValues(dvs);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        SortedDocValues oldDocValues = delegate.getSorted(field);\n        int[] ords;\n        synchronized (cachedSortedDVs) {\n          ords = cachedSortedDVs.get(field);\n          if (ords == null) {\n            ords = new int[maxDoc()];\n            Arrays.fill(ords, -1);\n            int docID;\n            while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n              int newDocID = docMap.oldToNew(docID);\n              ords[newDocID] = oldDocValues.ordValue();\n            }\n            cachedSortedDVs.put(field.name, ords);\n          }\n        }\n\n        return new SortedDocValuesWriter.SortingSortedDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        final SortedNumericDocValues oldDocValues = delegate.getSortedNumeric(field);\n        SortedNumericDocValuesWriter.LongValues values;\n        synchronized (cachedSortedNumericDVs) {\n          values = cachedSortedNumericDVs.get(field);\n          if (values == null) {\n            values = new SortedNumericDocValuesWriter.LongValues(maxDoc(), docMap, oldDocValues, PackedInts.FAST);\n            cachedSortedNumericDVs.put(field.name, values);\n          }\n        }\n\n        return new SortedNumericDocValuesWriter.SortingSortedNumericDocValues(oldDocValues, values);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        SortedSetDocValues oldDocValues = delegate.getSortedSet(field);\n        SortedSetDocValuesWriter.DocOrds ords;\n        synchronized (cachedSortedSetDVs) {\n          ords = cachedSortedSetDVs.get(field);\n          if (ords == null) {\n            ords = new SortedSetDocValuesWriter.DocOrds(maxDoc(), docMap, oldDocValues, PackedInts.FASTEST);\n            cachedSortedSetDVs.put(field.name, ords);\n          }\n        }\n        return new SortedSetDocValuesWriter.SortingSortedSetDocValues(oldDocValues, ords);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        delegate.checkIntegrity();\n      }\n\n      @Override\n      public void close() throws IOException {\n        delegate.close();\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return delegate.ramBytesUsed();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6109eb85278a3a0b573c754977177cbad278c6c":["46a689927fad636f7324c6166ffe3df0b93d7ce6"],"46a689927fad636f7324c6166ffe3df0b93d7ce6":["19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c6109eb85278a3a0b573c754977177cbad278c6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"c6109eb85278a3a0b573c754977177cbad278c6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"46a689927fad636f7324c6166ffe3df0b93d7ce6":["c6109eb85278a3a0b573c754977177cbad278c6c"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["46a689927fad636f7324c6166ffe3df0b93d7ce6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}