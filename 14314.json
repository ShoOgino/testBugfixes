{"path":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","sourceNew":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final int node;\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(nodeIn);\n      } else {\n        node = dedupHash.add(nodeIn);\n      }\n    } else {\n      node = fst.addNode(nodeIn);\n    }\n    assert node != -2;\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","sourceOld":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final int node;\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(nodeIn);\n      } else {\n        node = dedupHash.add(nodeIn);\n      }\n    } else {\n      node = fst.addNode(nodeIn);\n    }\n    assert node != -2;\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","date":1358188277,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","sourceNew":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(nodeIn);\n      } else {\n        node = dedupHash.add(nodeIn);\n      }\n    } else {\n      node = fst.addNode(nodeIn);\n    }\n    assert node != -2;\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","sourceOld":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final int node;\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(nodeIn);\n      } else {\n        node = dedupHash.add(nodeIn);\n      }\n    } else {\n      node = fst.addNode(nodeIn);\n    }\n    assert node != -2;\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","sourceNew":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(nodeIn);\n      } else {\n        node = dedupHash.add(nodeIn);\n      }\n    } else {\n      node = fst.addNode(nodeIn);\n    }\n    assert node != -2;\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","sourceOld":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final int node;\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(nodeIn);\n      } else {\n        node = dedupHash.add(nodeIn);\n      }\n    } else {\n      node = fst.addNode(nodeIn);\n    }\n    assert node != -2;\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1abb939fb41b2fe4f89fd518f3da288c0213341d","date":1435657417,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","sourceNew":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    long bytesPosStart = bytes.getPosition();\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(this, nodeIn);\n        lastFrozenNode = node;\n      } else {\n        node = dedupHash.add(this, nodeIn);\n      }\n    } else {\n      node = fst.addNode(this, nodeIn);\n    }\n    assert node != -2;\n\n    long bytesPosEnd = bytes.getPosition();\n    if (bytesPosEnd != bytesPosStart) {\n      // The FST added a new node:\n      assert bytesPosEnd > bytesPosStart;\n      lastFrozenNode = node;\n    }\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","sourceOld":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(nodeIn);\n      } else {\n        node = dedupHash.add(nodeIn);\n      }\n    } else {\n      node = fst.addNode(nodeIn);\n    }\n    assert node != -2;\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f5661e6a04d3172e262ad741b717924f2f1b6a5","date":1576244274,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler#compileNode(UnCompiledNode[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","sourceNew":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    long bytesPosStart = bytes.getPosition();\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(this, nodeIn);\n        lastFrozenNode = node;\n      } else {\n        node = dedupHash.add(this, nodeIn);\n      }\n    } else {\n      node = fst.addNode(this, nodeIn);\n    }\n    assert node != -2;\n\n    long bytesPosEnd = bytes.getPosition();\n    if (bytesPosEnd != bytesPosStart) {\n      // The FST added a new node:\n      assert bytesPosEnd > bytesPosStart;\n      lastFrozenNode = node;\n    }\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","sourceOld":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    long bytesPosStart = bytes.getPosition();\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(this, nodeIn);\n        lastFrozenNode = node;\n      } else {\n        node = dedupHash.add(this, nodeIn);\n      }\n    } else {\n      node = fst.addNode(this, nodeIn);\n    }\n    assert node != -2;\n\n    long bytesPosEnd = bytes.getPosition();\n    if (bytesPosEnd != bytesPosStart) {\n      // The FST added a new node:\n      assert bytesPosEnd > bytesPosStart;\n      lastFrozenNode = node;\n    }\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","date":1576247714,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler#compileNode(UnCompiledNode[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#compileNode(UnCompiledNode[T],int).mjava","sourceNew":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    long bytesPosStart = bytes.getPosition();\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(this, nodeIn);\n        lastFrozenNode = node;\n      } else {\n        node = dedupHash.add(this, nodeIn);\n      }\n    } else {\n      node = fst.addNode(this, nodeIn);\n    }\n    assert node != -2;\n\n    long bytesPosEnd = bytes.getPosition();\n    if (bytesPosEnd != bytesPosStart) {\n      // The FST added a new node:\n      assert bytesPosEnd > bytesPosStart;\n      lastFrozenNode = node;\n    }\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","sourceOld":"  private CompiledNode compileNode(UnCompiledNode<T> nodeIn, int tailLength) throws IOException {\n    final long node;\n    long bytesPosStart = bytes.getPosition();\n    if (dedupHash != null && (doShareNonSingletonNodes || nodeIn.numArcs <= 1) && tailLength <= shareMaxTailLength) {\n      if (nodeIn.numArcs == 0) {\n        node = fst.addNode(this, nodeIn);\n        lastFrozenNode = node;\n      } else {\n        node = dedupHash.add(this, nodeIn);\n      }\n    } else {\n      node = fst.addNode(this, nodeIn);\n    }\n    assert node != -2;\n\n    long bytesPosEnd = bytes.getPosition();\n    if (bytesPosEnd != bytesPosStart) {\n      // The FST added a new node:\n      assert bytesPosEnd > bytesPosStart;\n      lastFrozenNode = node;\n    }\n\n    nodeIn.clear();\n\n    final CompiledNode fn = new CompiledNode();\n    fn.node = node;\n    return fn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1abb939fb41b2fe4f89fd518f3da288c0213341d":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":["1abb939fb41b2fe4f89fd518f3da288c0213341d","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["1abb939fb41b2fe4f89fd518f3da288c0213341d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f5661e6a04d3172e262ad741b717924f2f1b6a5"]},"commit2Childs":{"1abb939fb41b2fe4f89fd518f3da288c0213341d":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["1abb939fb41b2fe4f89fd518f3da288c0213341d","8917bfede3b4ca30f4305c1e391e9218959cd723"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","8917bfede3b4ca30f4305c1e391e9218959cd723"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":[],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}