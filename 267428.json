{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","commits":[{"id":"94df854a0d36420ddbf7a4a21330bd00c2354017","date":1384538000,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"162e1895a880a7263b46e184f1478f0366eb095c","date":1467859866,"type":4,"author":"Erick","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","sourceNew":null,"sourceOld":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String,boolean).mjava","sourceNew":null,"sourceOld":"  public static void copySolrHomeToTemp(File dstRoot, String collection, boolean newStyle) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    if (newStyle) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\"), new File(dstRoot, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n    }\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"162e1895a880a7263b46e184f1478f0366eb095c":["d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["94df854a0d36420ddbf7a4a21330bd00c2354017","d12bbc45d641864ffe03291bc30f178eb34e434c"],"94df854a0d36420ddbf7a4a21330bd00c2354017":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94df854a0d36420ddbf7a4a21330bd00c2354017"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["94df854a0d36420ddbf7a4a21330bd00c2354017"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d12bbc45d641864ffe03291bc30f178eb34e434c","162e1895a880a7263b46e184f1478f0366eb095c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["162e1895a880a7263b46e184f1478f0366eb095c"]},"commit2Childs":{"162e1895a880a7263b46e184f1478f0366eb095c":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"94df854a0d36420ddbf7a4a21330bd00c2354017":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94df854a0d36420ddbf7a4a21330bd00c2354017","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["162e1895a880a7263b46e184f1478f0366eb095c","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}