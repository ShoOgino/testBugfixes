{"path":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","commits":[{"id":"268f09ed3a9a9b77003b15a5ae30386dc4e3721f","date":1483992000,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(registry, \"time\", scope);\n    syncErrors = manager.counter(registry, \"errors\", scope);\n    syncSkipped = manager.counter(registry, \"skipped\", scope);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(registry, \"time\", scope);\n    syncErrors = manager.counter(registry, \"errors\", scope);\n    syncSkipped = manager.counter(registry, \"skipped\", scope);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(registry, \"time\", scope);\n    syncErrors = manager.counter(registry, \"errors\", scope);\n    syncSkipped = manager.counter(registry, \"skipped\", scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(null, registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(null, registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(null, registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(null, registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(null, registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(null, registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    syncTime = manager.timer(null, registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(null, registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(null, registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(null, registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(null, registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(null, registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    syncTime = manager.timer(null, registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(null, registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(null, registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    syncTime = manager.timer(null, registry, \"time\", scope, METRIC_SCOPE);\n    syncErrors = manager.counter(null, registry, \"errors\", scope, METRIC_SCOPE);\n    syncSkipped = manager.counter(null, registry, \"skipped\", scope, METRIC_SCOPE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"bfc52860e6d13d034226a760813c59d984c6817a":["816521ebaad5add9cb96bb88c577394e2938c40b"],"43564cbb30b064675027cfb569564e8531096e97":["816521ebaad5add9cb96bb88c577394e2938c40b","bfc52860e6d13d034226a760813c59d984c6817a"],"268f09ed3a9a9b77003b15a5ae30386dc4e3721f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["268f09ed3a9a9b77003b15a5ae30386dc4e3721f"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","268f09ed3a9a9b77003b15a5ae30386dc4e3721f"],"816521ebaad5add9cb96bb88c577394e2938c40b":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43564cbb30b064675027cfb569564e8531096e97"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"268f09ed3a9a9b77003b15a5ae30386dc4e3721f":["073f1aa70444ec64f3e216816af2a3b43fa38fe7","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["268f09ed3a9a9b77003b15a5ae30386dc4e3721f","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}