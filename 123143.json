{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.DerefBytesWriterBase#add(int,BytesRef).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.DerefBytesWriterBase#add(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.DerefBytesWriterBase#add(int,BytesRef).mjava","sourceNew":"    @Override\n    public void add(int docID, BytesRef bytes) throws IOException {\n      if (bytes.length == 0) { // default value - skip it\n        return;\n      }\n      checkSize(bytes);\n      fillDefault(docID);\n      int ord = hash.add(bytes);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      } else {\n        maxBytes += bytes.length;\n      }\n      \n      \n      docToEntry[docID] = ord;\n      lastDocId = docID;\n    }\n\n","sourceOld":"    @Override\n    public void add(int docID, BytesRef bytes) throws IOException {\n      if (bytes.length == 0) { // default value - skip it\n        return;\n      }\n      checkSize(bytes);\n      fillDefault(docID);\n      int ord = hash.add(bytes);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      } else {\n        maxBytes += bytes.length;\n      }\n      \n      \n      docToEntry[docID] = ord;\n      lastDocId = docID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.DerefBytesWriterBase#add(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.DerefBytesWriterBase#add(int,BytesRef).mjava","sourceNew":"    @Override\n    protected void add(int docID, BytesRef bytes) throws IOException {\n      if (bytes.length == 0) { // default value - skip it\n        return;\n      }\n      checkSize(bytes);\n      fillDefault(docID);\n      int ord = hash.add(bytes);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      } else {\n        maxBytes += bytes.length;\n      }\n      \n      \n      docToEntry[docID] = ord;\n      lastDocId = docID;\n    }\n\n","sourceOld":"    @Override\n    public void add(int docID, BytesRef bytes) throws IOException {\n      if (bytes.length == 0) { // default value - skip it\n        return;\n      }\n      checkSize(bytes);\n      fillDefault(docID);\n      int ord = hash.add(bytes);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      } else {\n        maxBytes += bytes.length;\n      }\n      \n      \n      docToEntry[docID] = ord;\n      lastDocId = docID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.DerefBytesWriterBase#add(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.DerefBytesWriterBase#add(int,BytesRef).mjava","sourceNew":"    @Override\n    protected void add(int docID, BytesRef bytes) throws IOException {\n      if (bytes.length == 0) { // default value - skip it\n        return;\n      }\n      checkSize(bytes);\n      fillDefault(docID);\n      int ord = hash.add(bytes);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      } else {\n        maxBytes += bytes.length;\n      }\n      \n      \n      docToEntry[docID] = ord;\n      lastDocId = docID;\n    }\n\n","sourceOld":"    @Override\n    protected void add(int docID, BytesRef bytes) throws IOException {\n      if (bytes.length == 0) { // default value - skip it\n        return;\n      }\n      checkSize(bytes);\n      fillDefault(docID);\n      int ord = hash.add(bytes);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      } else {\n        maxBytes += bytes.length;\n      }\n      \n      \n      docToEntry[docID] = ord;\n      lastDocId = docID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}