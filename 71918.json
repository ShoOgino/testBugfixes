{"path":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = IndexReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = IndexReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = IndexReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = IndexReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = IndexReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = IndexReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.shutdown();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.shutdown();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n                                                               TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.shutdown();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.shutdown();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw, true);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchAllDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw, 1f);\n    addDoc(\"two\", iw, 20f);\n    addDoc(\"three four\", iw, 300f);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    assertEquals(\"one\", is.doc(hits[0].doc).get(\"key\"));\n    assertEquals(\"two\", is.doc(hits[1].doc).get(\"key\"));\n    assertEquals(\"three four\", is.doc(hits[2].doc).get(\"key\"));\n\n    // some artificial queries to trigger the use of skipTo():\n    \n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    bq = new BooleanQuery.Builder();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"key\", \"three\")), BooleanClause.Occur.MUST);\n    hits = is.search(bq.build(), 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    iw.deleteDocuments(new Term(\"key\", \"one\"));\n    ir.close();\n    ir = DirectoryReader.open(iw);\n    is = newSearcher(ir);\n    \n    hits = is.search(new MatchAllDocsQuery(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"2a1862266772deb28cdcb7d996b64d2177022687":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"acd9883560fd89e6448b2b447302fe543040cd4f":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["2a1862266772deb28cdcb7d996b64d2177022687"],"2a1862266772deb28cdcb7d996b64d2177022687":["acd9883560fd89e6448b2b447302fe543040cd4f"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}