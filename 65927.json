{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#toLightAutomaton().mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#toLightAutomaton().mjava","pathOld":"/dev/null","sourceNew":"  public LightAutomaton toLightAutomaton() {\n    State[] states = getNumberedStates();\n\n    LightAutomaton a = new LightAutomaton();\n    //System.out.println(\"INITIAL: \" + initial);\n\n    // State numbers are nearly the same, except we must remap initial to state 0\n    int[] oldToNew = new int[states.length];\n    for(int i=0;i<states.length;i++) {\n      oldToNew[i] = i;\n    }\n\n    oldToNew[initial.number] = 0;\n    oldToNew[0] = initial.number;\n    //System.out.println(\"initial.number=\" + initial.number);\n\n    // First pass creates all states\n    for(int i=0;i<states.length;i++) {\n      a.createState();\n      a.setAccept(oldToNew[i], states[i].isAccept());\n    }\n\n    // Second pass carries over all transitions\n    for(State state : states) {\n      for(Transition t : state.getTransitions()) {\n        assert t.getMax() >= t.getMin();\n        a.addTransition(oldToNew[state.number], oldToNew[t.getDest().getNumber()], t.getMin(), t.getMax());\n        //System.out.println(\"  add transtion \" + oldToNew[state.number] + \" -> \" + oldToNew[t.getDest().getNumber()] + \" min=\" + (char) t.getMin() + \" max=\" + (char) t.getMax());\n      }\n    }\n    // a.writeDot(\"/l/la/lucene/core/afterconvert.dot\");\n    a.finish();\n    return a;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#toLightAutomaton().mjava","sourceNew":null,"sourceOld":"  public LightAutomaton toLightAutomaton() {\n    State[] states = getNumberedStates();\n\n    LightAutomaton a = new LightAutomaton();\n    //System.out.println(\"INITIAL: \" + initial);\n\n    // State numbers are nearly the same, except we must remap initial to state 0\n    int[] oldToNew = new int[states.length];\n    for(int i=0;i<states.length;i++) {\n      oldToNew[i] = i;\n    }\n\n    oldToNew[initial.number] = 0;\n    oldToNew[0] = initial.number;\n    //System.out.println(\"initial.number=\" + initial.number);\n\n    // First pass creates all states\n    for(int i=0;i<states.length;i++) {\n      a.createState();\n      a.setAccept(oldToNew[i], states[i].isAccept());\n    }\n\n    // Second pass carries over all transitions\n    for(State state : states) {\n      for(Transition t : state.getTransitions()) {\n        assert t.getMax() >= t.getMin();\n        a.addTransition(oldToNew[state.number], oldToNew[t.getDest().getNumber()], t.getMin(), t.getMax());\n        //System.out.println(\"  add transtion \" + oldToNew[state.number] + \" -> \" + oldToNew[t.getDest().getNumber()] + \" min=\" + (char) t.getMin() + \" max=\" + (char) t.getMax());\n      }\n    }\n    // a.writeDot(\"/l/la/lucene/core/afterconvert.dot\");\n    a.finish();\n    return a;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}