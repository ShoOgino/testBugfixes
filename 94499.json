{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","commits":[{"id":"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","date":1342645458,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<ChildScorer>(numScorers);\n    for (int i = 0; i < numScorers; i++) {\n      children.add(new ChildScorer(subScorers[i], \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<ChildScorer>(numScorers);\n    for (int i = 0; i < numScorers; i++) {\n      children.add(new ChildScorer(subScorers[i], \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<ChildScorer>(numScorers);\n    for (int i = 0; i < numScorers; i++) {\n      children.add(new ChildScorer(subScorers[i], \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>(numScorers);\n    for (int i = 0; i < numScorers; i++) {\n      children.add(new ChildScorer(subScorers[i], \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<ChildScorer>(numScorers);\n    for (int i = 0; i < numScorers; i++) {\n      children.add(new ChildScorer(subScorers[i], \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251e6911800e3a02e1da3bfd4dc49a914aef9778","date":1423063783,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (ScorerWrapper scorer : subScorers) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>(numScorers);\n    for (int i = 0; i < numScorers; i++) {\n      children.add(new ChildScorer(subScorers[i], \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","date":1429852340,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper<Scorer> scorer : subScorers) {\n      children.add(new ChildScorer(scorer.iterator, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (ScorerWrapper scorer : subScorers) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer : subScorers) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper<Scorer> scorer : subScorers) {\n      children.add(new ChildScorer(scorer.iterator, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26ae065817023d886f3de2bc162e9e1ad71c7a02","date":1485164116,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() throws IOException {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer = getSubMatches(); scorer != null; scorer = scorer.next) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer : subScorers) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d88f2d3d3107907144cec6455db31ccebd65475a","date":1485171003,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer : subScorers) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() throws IOException {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer = getSubMatches(); scorer != null; scorer = scorer.next) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c9e07c6618087aa30ff83c3a54818165e76c3a8","date":1487684665,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorer> getChildren() throws IOException {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer = getSubMatches(); scorer != null; scorer = scorer.next) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer : subScorers) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#getChildren().mjava","sourceNew":"  @Override\n  public final Collection<ChildScorable> getChildren() throws IOException {\n    ArrayList<ChildScorable> children = new ArrayList<>();\n    for (DisiWrapper scorer = getSubMatches(); scorer != null; scorer = scorer.next) {\n      children.add(new ChildScorable(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","sourceOld":"  @Override\n  public final Collection<ChildScorer> getChildren() throws IOException {\n    ArrayList<ChildScorer> children = new ArrayList<>();\n    for (DisiWrapper scorer = getSubMatches(); scorer != null; scorer = scorer.next) {\n      children.add(new ChildScorer(scorer.scorer, \"SHOULD\"));\n    }\n    return children;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"251e6911800e3a02e1da3bfd4dc49a914aef9778":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2c9e07c6618087aa30ff83c3a54818165e76c3a8":["d88f2d3d3107907144cec6455db31ccebd65475a"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["2c9e07c6618087aa30ff83c3a54818165e76c3a8"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d88f2d3d3107907144cec6455db31ccebd65475a":["26ae065817023d886f3de2bc162e9e1ad71c7a02"],"26ae065817023d886f3de2bc162e9e1ad71c7a02":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"251e6911800e3a02e1da3bfd4dc49a914aef9778":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"2c9e07c6618087aa30ff83c3a54818165e76c3a8":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"d88f2d3d3107907144cec6455db31ccebd65475a":["2c9e07c6618087aa30ff83c3a54818165e76c3a8"],"26ae065817023d886f3de2bc162e9e1ad71c7a02":["d88f2d3d3107907144cec6455db31ccebd65475a"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["26ae065817023d886f3de2bc162e9e1ad71c7a02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}