{"path":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.UninvertingDirectoryReader#UninvertingDirectoryReader(DirectoryReader,Function[LeafReader,Map[String,Type]]).mjava","commits":[{"id":"83c8471489eeb663dabdc354a41bea707f560bc9","date":1492417766,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.UninvertingDirectoryReader#UninvertingDirectoryReader(DirectoryReader,Function[LeafReader,Map[String,Type]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.UninvertingDirectoryReader#UninvertingDirectoryReader(DirectoryReader,Map[String,Type]).mjava","sourceNew":"    public UninvertingDirectoryReader(DirectoryReader in, final Function<LeafReader, Map<String,Type>> mapper) throws IOException {\n      super(in, new FilterDirectoryReader.SubReaderWrapper() {\n        @Override\n        public LeafReader wrap(LeafReader reader) {\n          return new UninvertingReader(reader, mapper.apply(reader));\n        }\n      });\n      this.mapper = mapper;\n    }\n\n","sourceOld":"    public UninvertingDirectoryReader(DirectoryReader in, final Map<String,Type> mapping) throws IOException {\n      super(in, new FilterDirectoryReader.SubReaderWrapper() {\n        @Override\n        public LeafReader wrap(LeafReader reader) {\n          return new UninvertingReader(reader, mapping);\n        }\n      });\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.UninvertingDirectoryReader#UninvertingDirectoryReader(DirectoryReader,Function[LeafReader,Map[String,Type]]).mjava","pathOld":"/dev/null","sourceNew":"    public UninvertingDirectoryReader(DirectoryReader in, final Function<LeafReader, Map<String,Type>> mapper) throws IOException {\n      super(in, new FilterDirectoryReader.SubReaderWrapper() {\n        @Override\n        public LeafReader wrap(LeafReader reader) {\n          return new UninvertingReader(reader, mapper.apply(reader));\n        }\n      });\n      this.mapper = mapper;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a07eeba66d4090af0095b50cbd1795a3d6182c1d","date":1538797239,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.UninvertingDirectoryReader#UninvertingDirectoryReader(DirectoryReader,Function[String,Type]).mjava","pathOld":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.UninvertingDirectoryReader#UninvertingDirectoryReader(DirectoryReader,Function[LeafReader,Map[String,Type]]).mjava","sourceNew":"    public UninvertingDirectoryReader(DirectoryReader in, final Function<String, Type> mapper) throws IOException {\n      super(in, new FilterDirectoryReader.SubReaderWrapper() {\n        @Override\n        public LeafReader wrap(LeafReader reader) {\n          return UninvertingReader.wrap(reader, mapper);\n        }\n      });\n      this.mapper = mapper;\n    }\n\n","sourceOld":"    public UninvertingDirectoryReader(DirectoryReader in, final Function<LeafReader, Map<String,Type>> mapper) throws IOException {\n      super(in, new FilterDirectoryReader.SubReaderWrapper() {\n        @Override\n        public LeafReader wrap(LeafReader reader) {\n          return new UninvertingReader(reader, mapper.apply(reader));\n        }\n      });\n      this.mapper = mapper;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83c8471489eeb663dabdc354a41bea707f560bc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a07eeba66d4090af0095b50cbd1795a3d6182c1d":["83c8471489eeb663dabdc354a41bea707f560bc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a07eeba66d4090af0095b50cbd1795a3d6182c1d"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"83c8471489eeb663dabdc354a41bea707f560bc9":["a07eeba66d4090af0095b50cbd1795a3d6182c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","83c8471489eeb663dabdc354a41bea707f560bc9"],"a07eeba66d4090af0095b50cbd1795a3d6182c1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}