{"path":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2a81b3988dfbdfb187c425043b89868e359b238","date":1329919075,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      final IndexReader r = subReaders[i];\n      maxDoc += r.maxDoc();      // compute maxDocs\n      numDocs += r.numDocs();    // compute numDocs\n      if (r.hasDeletions()) {\n        hasDeletions = true;\n      }\n      r.registerParentReader(this);\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","bugFix":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"bugIntro":["fe43a17fb193c95257604ee5486e9f6e2a392c28"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fdea49117913baff3ee1b0bb8d2c7d148e210e72","date":1331056250,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#BaseCompositeReader(R[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":"  protected BaseCompositeReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      final IndexReader r = subReaders[i];\n      maxDoc += r.maxDoc();      // compute maxDocs\n      numDocs += r.numDocs();    // compute numDocs\n      if (r.hasDeletions()) {\n        hasDeletions = true;\n      }\n      r.registerParentReader(this);\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      final IndexReader r = subReaders[i];\n      maxDoc += r.maxDoc();      // compute maxDocs\n      numDocs += r.numDocs();    // compute numDocs\n      if (r.hasDeletions()) {\n        hasDeletions = true;\n      }\n      r.registerParentReader(this);\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":null,"sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdea49117913baff3ee1b0bb8d2c7d148e210e72":["a2a81b3988dfbdfb187c425043b89868e359b238"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fdea49117913baff3ee1b0bb8d2c7d148e210e72"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a2a81b3988dfbdfb187c425043b89868e359b238":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fdea49117913baff3ee1b0bb8d2c7d148e210e72"]},"commit2Childs":{"fdea49117913baff3ee1b0bb8d2c7d148e210e72":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a2a81b3988dfbdfb187c425043b89868e359b238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a2a81b3988dfbdfb187c425043b89868e359b238":["fdea49117913baff3ee1b0bb8d2c7d148e210e72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}