{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","commits":[{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextStartPosition() throws IOException {\n      if (atFirstInCurrentDoc) {\n        atFirstInCurrentDoc = false;\n        return startPos;\n      }\n\n      for (;;) {\n        startPos = in.nextStartPosition();\n        if (startPos == NO_MORE_POSITIONS) {\n          return NO_MORE_POSITIONS;\n        }\n        switch(acceptPosition(this)) {\n          case YES:\n            return startPos;\n          case NO:\n            break;\n          case NO_MORE_IN_CURRENT_DOC:\n            return startPos = NO_MORE_POSITIONS; // startPos ahead for the current doc.\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextStartPosition() throws IOException {\n      if (atFirstInCurrentDoc) {\n        atFirstInCurrentDoc = false;\n        return startPos;\n      }\n\n      for (;;) {\n        startPos = in.nextStartPosition();\n        if (startPos == NO_MORE_POSITIONS) {\n          return NO_MORE_POSITIONS;\n        }\n        switch(acceptPosition(this)) {\n          case YES:\n            return startPos;\n          case NO:\n            break;\n          case NO_MORE_IN_CURRENT_DOC:\n            return startPos = NO_MORE_POSITIONS; // startPos ahead for the current doc.\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4409879b1445c56c3834b823720d47c08c409c5","date":1428086307,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","sourceNew":"    @Override\n    public int nextStartPosition() throws IOException {\n      if (atFirstInCurrentDoc) {\n        atFirstInCurrentDoc = false;\n        return startPos;\n      }\n\n      for (;;) {\n        startPos = in.nextStartPosition();\n        if (startPos == NO_MORE_POSITIONS) {\n          return NO_MORE_POSITIONS;\n        }\n        switch(acceptPosition(in)) {\n          case YES:\n            return startPos;\n          case NO:\n            break;\n          case NO_MORE_IN_CURRENT_DOC:\n            return startPos = NO_MORE_POSITIONS; // startPos ahead for the current doc.\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextStartPosition() throws IOException {\n      if (atFirstInCurrentDoc) {\n        atFirstInCurrentDoc = false;\n        return startPos;\n      }\n\n      for (;;) {\n        startPos = in.nextStartPosition();\n        if (startPos == NO_MORE_POSITIONS) {\n          return NO_MORE_POSITIONS;\n        }\n        switch(acceptPosition(this)) {\n          case YES:\n            return startPos;\n          case NO:\n            break;\n          case NO_MORE_IN_CURRENT_DOC:\n            return startPos = NO_MORE_POSITIONS; // startPos ahead for the current doc.\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","sourceNew":"    @Override\n    public int nextStartPosition() throws IOException {\n      if (atFirstInCurrentDoc) {\n        atFirstInCurrentDoc = false;\n        return startPos;\n      }\n\n      for (;;) {\n        startPos = in.nextStartPosition();\n        if (startPos == NO_MORE_POSITIONS) {\n          return NO_MORE_POSITIONS;\n        }\n        switch(acceptPosition(in)) {\n          case YES:\n            return startPos;\n          case NO:\n            break;\n          case NO_MORE_IN_CURRENT_DOC:\n            return startPos = NO_MORE_POSITIONS; // startPos ahead for the current doc.\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextStartPosition() throws IOException {\n      if (atFirstInCurrentDoc) {\n        atFirstInCurrentDoc = false;\n        return startPos;\n      }\n\n      for (;;) {\n        startPos = in.nextStartPosition();\n        if (startPos == NO_MORE_POSITIONS) {\n          return NO_MORE_POSITIONS;\n        }\n        switch(acceptPosition(this)) {\n          case YES:\n            return startPos;\n          case NO:\n            break;\n          case NO_MORE_IN_CURRENT_DOC:\n            return startPos = NO_MORE_POSITIONS; // startPos ahead for the current doc.\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdd572df21b78bb2212d045bf26a2773a48b58e9","date":1428851244,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.PositionCheckSpans#nextStartPosition().mjava","sourceNew":null,"sourceOld":"    @Override\n    public int nextStartPosition() throws IOException {\n      if (atFirstInCurrentDoc) {\n        atFirstInCurrentDoc = false;\n        return startPos;\n      }\n\n      for (;;) {\n        startPos = in.nextStartPosition();\n        if (startPos == NO_MORE_POSITIONS) {\n          return NO_MORE_POSITIONS;\n        }\n        switch(acceptPosition(in)) {\n          case YES:\n            return startPos;\n          case NO:\n            break;\n          case NO_MORE_IN_CURRENT_DOC:\n            return startPos = NO_MORE_POSITIONS; // startPos ahead for the current doc.\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdd572df21b78bb2212d045bf26a2773a48b58e9":["f4409879b1445c56c3834b823720d47c08c409c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4409879b1445c56c3834b823720d47c08c409c5":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["fab172655716b96f7e42376116235017a922de3a","f4409879b1445c56c3834b823720d47c08c409c5"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fab172655716b96f7e42376116235017a922de3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fdd572df21b78bb2212d045bf26a2773a48b58e9"]},"commit2Childs":{"fdd572df21b78bb2212d045bf26a2773a48b58e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"f4409879b1445c56c3834b823720d47c08c409c5":["fdd572df21b78bb2212d045bf26a2773a48b58e9","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["f4409879b1445c56c3834b823720d47c08c409c5","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}