{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#close().mjava","commits":[{"id":"34067df01cbbefc83d0b316037fe4e10d89ba6a3","date":1559054674,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void close() {\n    globalBufferLock.lock();\n    try {\n      if (anyChanges()) {\n        throw new IllegalStateException(\"Can't close queue unless all changes are applied\");\n      }\n      this.closed = true;\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9","date":1559371943,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void close() {\n    globalBufferLock.lock();\n    try {\n      if (anyChanges()) {\n        throw new IllegalStateException(\"Can't close queue unless all changes are applied\");\n      }\n      this.closed = true;\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b07024a7318c25225dc4d070cf6d047315b73aaf","date":1586885963,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#close().mjava","sourceNew":"  @Override\n  public synchronized void close() {\n    globalBufferLock.lock();\n    try {\n      if (anyChanges()) {\n        throw new IllegalStateException(\"Can't close queue unless all changes are applied\");\n      }\n      this.closed = true;\n      long seqNo = nextSeqNo.get();\n      assert seqNo <= maxSeqNo : \"maxSeqNo must be greater or equal to \" + seqNo + \" but was \" + maxSeqNo;\n      nextSeqNo.set(maxSeqNo+1);\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void close() {\n    globalBufferLock.lock();\n    try {\n      if (anyChanges()) {\n        throw new IllegalStateException(\"Can't close queue unless all changes are applied\");\n      }\n      this.closed = true;\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b07024a7318c25225dc4d070cf6d047315b73aaf":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","34067df01cbbefc83d0b316037fe4e10d89ba6a3"],"34067df01cbbefc83d0b316037fe4e10d89ba6a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b07024a7318c25225dc4d070cf6d047315b73aaf"]},"commit2Childs":{"b07024a7318c25225dc4d070cf6d047315b73aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9":["b07024a7318c25225dc4d070cf6d047315b73aaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9","34067df01cbbefc83d0b316037fe4e10d89ba6a3"],"34067df01cbbefc83d0b316037fe4e10d89ba6a3":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}