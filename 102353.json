{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/sinks/TeeSinkTokenFilter#incrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/sinks/TeeSinkTokenFilter#incrementToken().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/sinks/TeeSinkTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (WeakReference<SinkTokenStream> ref : sinks) {\n        final SinkTokenStream sink = ref.get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (WeakReference<SinkTokenStream> ref : sinks) {\n        final SinkTokenStream sink = ref.get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3eac7b217fb57548b6fc21f0117e74698afde766","date":1452862547,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/sinks/TeeSinkTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/sinks/TeeSinkTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      cachedStates.add(captureState());\n      return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (WeakReference<SinkTokenStream> ref : sinks) {\n        final SinkTokenStream sink = ref.get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3eac7b217fb57548b6fc21f0117e74698afde766"],"3eac7b217fb57548b6fc21f0117e74698afde766":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3eac7b217fb57548b6fc21f0117e74698afde766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3eac7b217fb57548b6fc21f0117e74698afde766":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}