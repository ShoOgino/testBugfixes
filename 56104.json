{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","sourceNew":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), RandomSpatialOpFuzzyPrefixTreeTest.this.ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      this.shape1_2D = toNonGeo(shape1);\n      this.shape2_2D = toNonGeo(shape2);\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","sourceOld":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), RandomSpatialOpFuzzyPrefixTreeTest.this.ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      this.shape1_2D = toNonGeo(shape1);\n      this.shape2_2D = toNonGeo(shape2);\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","sourceNew":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), RandomSpatialOpFuzzyPrefixTreeTest.this.ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      this.shape1_2D = toNonGeo(shape1);\n      this.shape2_2D = toNonGeo(shape2);\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","sourceOld":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), RandomSpatialOpFuzzyPrefixTreeTest.this.ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      this.shape1_2D = toNonGeo(shape1);\n      this.shape2_2D = toNonGeo(shape2);\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}