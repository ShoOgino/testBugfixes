{"path":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","commits":[{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testClassRequired() throws Exception {\n    Node nodeWithNoClass = getNode(\"<plugin></plugin>\", \"plugin\");\n    AbstractSolrTestCase.ignoreException(\"missing mandatory attribute\");\n    try {\n      @SuppressWarnings(\"unused\")\n      PluginInfo pi = new PluginInfo(nodeWithNoClass, \"Node with No Class\", false, true);\n      fail(\"Exception should have been thrown\");\n    } catch (RuntimeException e) {\n      assertTrue(e.getMessage().contains(\"missing mandatory attribute\"));\n    } finally {\n      AbstractSolrTestCase.resetExceptionIgnores();\n    }\n    Node nodeWithAClass = getNode(\"<plugin class=\\\"myName\\\" />\", \"plugin\");\n    PluginInfo pi2 = new PluginInfo(nodeWithAClass, \"Node with a Class\", false, true);\n    assertTrue(pi2.className.equals(\"myName\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","pathOld":"solr/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","sourceNew":"  @Test\n  public void testClassRequired() throws Exception {\n    Node nodeWithNoClass = getNode(\"<plugin></plugin>\", \"plugin\");\n    AbstractSolrTestCase.ignoreException(\"missing mandatory attribute\");\n    try {\n      @SuppressWarnings(\"unused\")\n      PluginInfo pi = new PluginInfo(nodeWithNoClass, \"Node with No Class\", false, true);\n      fail(\"Exception should have been thrown\");\n    } catch (RuntimeException e) {\n      assertTrue(e.getMessage().contains(\"missing mandatory attribute\"));\n    } finally {\n      AbstractSolrTestCase.resetExceptionIgnores();\n    }\n    Node nodeWithAClass = getNode(\"<plugin class=\\\"myName\\\" />\", \"plugin\");\n    PluginInfo pi2 = new PluginInfo(nodeWithAClass, \"Node with a Class\", false, true);\n    assertTrue(pi2.className.equals(\"myName\"));\n  }\n\n","sourceOld":"  @Test\n  public void testClassRequired() throws Exception {\n    Node nodeWithNoClass = getNode(\"<plugin></plugin>\", \"plugin\");\n    AbstractSolrTestCase.ignoreException(\"missing mandatory attribute\");\n    try {\n      @SuppressWarnings(\"unused\")\n      PluginInfo pi = new PluginInfo(nodeWithNoClass, \"Node with No Class\", false, true);\n      fail(\"Exception should have been thrown\");\n    } catch (RuntimeException e) {\n      assertTrue(e.getMessage().contains(\"missing mandatory attribute\"));\n    } finally {\n      AbstractSolrTestCase.resetExceptionIgnores();\n    }\n    Node nodeWithAClass = getNode(\"<plugin class=\\\"myName\\\" />\", \"plugin\");\n    PluginInfo pi2 = new PluginInfo(nodeWithAClass, \"Node with a Class\", false, true);\n    assertTrue(pi2.className.equals(\"myName\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64ddba243900a65c26afa3346a93d6c71e58a226","date":1513880422,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","sourceNew":"  @Test\n  public void testClassRequired() throws Exception {\n    Node nodeWithNoClass = getNode(\"<plugin></plugin>\", \"plugin\");\n    SolrTestCaseJ4.ignoreException(\"missing mandatory attribute\");\n    try {\n      @SuppressWarnings(\"unused\")\n      PluginInfo pi = new PluginInfo(nodeWithNoClass, \"Node with No Class\", false, true);\n      fail(\"Exception should have been thrown\");\n    } catch (RuntimeException e) {\n      assertTrue(e.getMessage().contains(\"missing mandatory attribute\"));\n    } finally {\n      SolrTestCaseJ4.resetExceptionIgnores();\n    }\n    Node nodeWithAClass = getNode(\"<plugin class=\\\"myName\\\" />\", \"plugin\");\n    PluginInfo pi2 = new PluginInfo(nodeWithAClass, \"Node with a Class\", false, true);\n    assertTrue(pi2.className.equals(\"myName\"));\n  }\n\n","sourceOld":"  @Test\n  public void testClassRequired() throws Exception {\n    Node nodeWithNoClass = getNode(\"<plugin></plugin>\", \"plugin\");\n    AbstractSolrTestCase.ignoreException(\"missing mandatory attribute\");\n    try {\n      @SuppressWarnings(\"unused\")\n      PluginInfo pi = new PluginInfo(nodeWithNoClass, \"Node with No Class\", false, true);\n      fail(\"Exception should have been thrown\");\n    } catch (RuntimeException e) {\n      assertTrue(e.getMessage().contains(\"missing mandatory attribute\"));\n    } finally {\n      AbstractSolrTestCase.resetExceptionIgnores();\n    }\n    Node nodeWithAClass = getNode(\"<plugin class=\\\"myName\\\" />\", \"plugin\");\n    PluginInfo pi2 = new PluginInfo(nodeWithAClass, \"Node with a Class\", false, true);\n    assertTrue(pi2.className.equals(\"myName\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68cb00b5f16300efa7bd172de723d9ac91d38cc2","date":1543702774,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testClassRequired().mjava","sourceNew":"  @Test\n  public void testClassRequired() throws Exception {\n    Node nodeWithNoClass = getNode(\"<plugin></plugin>\", \"plugin\");\n    try {\n      SolrTestCaseJ4.ignoreException(\"missing mandatory attribute\");\n      RuntimeException thrown = expectThrows(RuntimeException.class, () -> {\n        PluginInfo pi = new PluginInfo(nodeWithNoClass, \"Node with No Class\", false, true);\n      });\n      assertTrue(thrown.getMessage().contains(\"missing mandatory attribute\"));\n    } finally {\n      SolrTestCaseJ4.resetExceptionIgnores();\n    }\n\n    Node nodeWithAClass = getNode(\"<plugin class=\\\"myName\\\" />\", \"plugin\");\n    PluginInfo pi2 = new PluginInfo(nodeWithAClass, \"Node with a Class\", false, true);\n    assertTrue(pi2.className.equals(\"myName\"));\n  }\n\n","sourceOld":"  @Test\n  public void testClassRequired() throws Exception {\n    Node nodeWithNoClass = getNode(\"<plugin></plugin>\", \"plugin\");\n    SolrTestCaseJ4.ignoreException(\"missing mandatory attribute\");\n    try {\n      @SuppressWarnings(\"unused\")\n      PluginInfo pi = new PluginInfo(nodeWithNoClass, \"Node with No Class\", false, true);\n      fail(\"Exception should have been thrown\");\n    } catch (RuntimeException e) {\n      assertTrue(e.getMessage().contains(\"missing mandatory attribute\"));\n    } finally {\n      SolrTestCaseJ4.resetExceptionIgnores();\n    }\n    Node nodeWithAClass = getNode(\"<plugin class=\\\"myName\\\" />\", \"plugin\");\n    PluginInfo pi2 = new PluginInfo(nodeWithAClass, \"Node with a Class\", false, true);\n    assertTrue(pi2.className.equals(\"myName\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["64ddba243900a65c26afa3346a93d6c71e58a226"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64ddba243900a65c26afa3346a93d6c71e58a226":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["64ddba243900a65c26afa3346a93d6c71e58a226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["c26f00b574427b55127e869b935845554afde1fa"],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"64ddba243900a65c26afa3346a93d6c71e58a226":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}