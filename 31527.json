{"path":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TrieDateField.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","date":1437383270,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TrieDateField.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15cb24c5fa70ba12290e43b3aa0feab5582863ee","date":1457033685,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","bugFix":null,"bugIntro":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","date":1463148204,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","bugFix":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03ca89c15fe244d30f72e014aced577bfe46373b","date":1500424101,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)) {\n      assumeTrue(\"Skipping test: Points+facets require docValues, but randomizer: points=true && DV=false\",\n                 Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP));\n    }\n    \n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)) {\n      assumeTrue(\"Skipping test: Points+facets require docValues, but randomizer: points=true && DV=false\",\n                 Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP));\n    }\n    \n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"03ca89c15fe244d30f72e014aced577bfe46373b":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["d470c8182e92b264680e34081b75e70a9f2b3c89","03ca89c15fe244d30f72e014aced577bfe46373b"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["c26f00b574427b55127e869b935845554afde1fa"],"0ad30c6a479e764150a3316e57263319775f1df2":["d3f6c7717a0f1decd1668144537943efcc70cd95","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d3f6c7717a0f1decd1668144537943efcc70cd95","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["2106271e380c198349e0f6eac0395bb462913fab"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["d3f6c7717a0f1decd1668144537943efcc70cd95","0ad30c6a479e764150a3316e57263319775f1df2"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"15cb24c5fa70ba12290e43b3aa0feab5582863ee":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2106271e380c198349e0f6eac0395bb462913fab":["2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","15cb24c5fa70ba12290e43b3aa0feab5582863ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03ca89c15fe244d30f72e014aced577bfe46373b"]},"commit2Childs":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"c26f00b574427b55127e869b935845554afde1fa":["9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"03ca89c15fe244d30f72e014aced577bfe46373b":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"2acf500f78aa12b92e371fd89c719291986b6b90":["46d8ada1fff8d18cb197c38c7983225162599948","2106271e380c198349e0f6eac0395bb462913fab","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["03ca89c15fe244d30f72e014aced577bfe46373b","936cdd5882761db3b844afd6f84ab81cbb011a75","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["15cb24c5fa70ba12290e43b3aa0feab5582863ee","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0ad30c6a479e764150a3316e57263319775f1df2"],"15cb24c5fa70ba12290e43b3aa0feab5582863ee":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"2106271e380c198349e0f6eac0395bb462913fab":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}