{"path":"modules/spatial/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decode(String,SpatialContext).mjava","commits":[{"id":"935445a30e9e8dc0240a7c78efc73d08c2faa6a8","date":1329778521,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decode(String,SpatialContext).mjava","pathOld":"modules/spatial/src/main/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decode(String,SpatialContext).mjava","sourceNew":"  /**\n   * Decodes the given geohash into a latitude and longitude\n   *\n   * @param geohash Geohash to deocde\n   * @return Array with the latitude at index 0, and longitude at index 1\n   */\n  public static Point decode(String geohash, SpatialContext ctx) {\n    Rectangle rect = decodeBoundary(geohash,ctx);\n    double latitude = (rect.getMinY() + rect.getMaxY()) / 2D;\n    double longitude = (rect.getMinX() + rect.getMaxX()) / 2D;\n    return ctx.makePoint(longitude,latitude);\n\t}\n\n","sourceOld":"  /**\n   * Decodes the given geohash into a latitude and longitude\n   *\n   * @param geohash Geohash to deocde\n   * @return Array with the latitude at index 0, and longitude at index 1\n   */\n  public static Point decode(String geohash, SpatialContext ctx) {\n    Rectangle rect = decodeBoundary(geohash,ctx);\n    double latitude = (rect.getMinY() + rect.getMaxY()) / 2D;\n    double longitude = (rect.getMinX() + rect.getMaxX()) / 2D;\n    return ctx.makePoint(longitude,latitude);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33ee89d976c91275e5be5da438ca0977b1c5b90f","date":1329808149,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decode(String,SpatialContext).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decode(String,SpatialContext).mjava","sourceNew":"  /**\n   * Decodes the given geohash into a latitude and longitude\n   *\n   * @param geohash Geohash to deocde\n   * @return Array with the latitude at index 0, and longitude at index 1\n   */\n  public static Point decode(String geohash, SpatialContext ctx) {\n    Rectangle rect = decodeBoundary(geohash,ctx);\n    double latitude = (rect.getMinY() + rect.getMaxY()) / 2D;\n    double longitude = (rect.getMinX() + rect.getMaxX()) / 2D;\n    return ctx.makePoint(longitude,latitude);\n\t}\n\n","sourceOld":"  /**\n   * Decodes the given geohash into a latitude and longitude\n   *\n   * @param geohash Geohash to deocde\n   * @return Array with the latitude at index 0, and longitude at index 1\n   */\n  public static Point decode(String geohash, SpatialContext ctx) {\n    Rectangle rect = decodeBoundary(geohash,ctx);\n    double latitude = (rect.getMinY() + rect.getMaxY()) / 2D;\n    double longitude = (rect.getMinX() + rect.getMaxX()) / 2D;\n    return ctx.makePoint(longitude,latitude);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["33ee89d976c91275e5be5da438ca0977b1c5b90f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"33ee89d976c91275e5be5da438ca0977b1c5b90f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["33ee89d976c91275e5be5da438ca0977b1c5b90f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}