{"path":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","sourceNew":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", new StringReader(\"abcd\")),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","sourceOld":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", new StringReader(\"abcd\")),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83d6c4335f31cae14f625a222bc842f20073dcd","date":1373306148,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","sourceNew":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","sourceOld":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", new StringReader(\"abcd\")),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","bugFix":["0984ad47974c2d5d354519ddb2aa8358973a6271"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","sourceNew":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","sourceOld":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", new StringReader(\"abcd\")),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","sourceNew":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              4\n    );\n  }\n\n","sourceOld":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","sourceNew":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              4\n    );\n  }\n\n","sourceOld":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testUserDict3().mjava","sourceNew":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              4\n    );\n  }\n\n","sourceOld":"  public void testUserDict3() throws Exception {\n    // Test entry that breaks into multiple tokens:\n    assertTokenStreamContents(analyzer.tokenStream(\"foo\", \"abcd\"),\n                              new String[] { \"a\", \"b\", \"cd\"  },\n                              new int[] { 0, 1, 2 },\n                              new int[] { 1, 2, 4 },\n                              new Integer(4)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["c83d6c4335f31cae14f625a222bc842f20073dcd","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c83d6c4335f31cae14f625a222bc842f20073dcd"],"c83d6c4335f31cae14f625a222bc842f20073dcd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["c83d6c4335f31cae14f625a222bc842f20073dcd","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c83d6c4335f31cae14f625a222bc842f20073dcd"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c83d6c4335f31cae14f625a222bc842f20073dcd":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","37a0f60745e53927c4c876cfe5b5a58170f0646c","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}