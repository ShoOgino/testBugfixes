{"path":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","commits":[{"id":"e847ef0151948fe67f4f07d70d7730578444ac6f","date":1374237791,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.shutdown();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.shutdown();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (LeafReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (AtomicReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    w.addIndexes(new LeafReader[0]);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (LeafReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    MultiReader empty = new MultiReader();\n    w.addIndexes(empty);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (LeafReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","bugFix":["e847ef0151948fe67f4f07d70d7730578444ac6f"],"bugIntro":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddEmpty().mjava","sourceNew":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    w.addIndexes(new CodecReader[0]);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (LeafReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","sourceOld":"  public void testAddEmpty() throws Exception {\n    Directory d1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d1);\n    w.addIndexes(new LeafReader[0]);\n    w.close();\n    DirectoryReader dr = DirectoryReader.open(d1);\n    for (LeafReaderContext ctx : dr.leaves()) {\n      assertTrue(\"empty segments should be dropped by addIndexes\", ctx.reader().maxDoc() > 0);\n    }\n    dr.close();\n    d1.close();\n  }\n\n","bugFix":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e847ef0151948fe67f4f07d70d7730578444ac6f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["e847ef0151948fe67f4f07d70d7730578444ac6f"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["505bff044e47a553f461b6f4484d1d08faf4ac85"]},"commit2Childs":{"e847ef0151948fe67f4f07d70d7730578444ac6f":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e847ef0151948fe67f4f07d70d7730578444ac6f","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}