{"path":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","commits":[{"id":"4a54d9ede1b7f2f026639186eb07f3f314d87d9a","date":1412176848,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","pathOld":"/dev/null","sourceNew":"  private String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","pathOld":"/dev/null","sourceNew":"  private String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb9af919a17be70cfc512901fc70f1beaf840ca1","date":1413208885,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","sourceNew":"  public static String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","sourceNew":"  public static String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeeea2295d6355a29e259130a5c48ace73022d7c","date":1426569216,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","sourceNew":"  public static String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause = e;\n    for (int i = 0 ; i < 5 ; i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if (cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SchemaManager#getErrorStr(Exception).mjava","sourceNew":"  public static String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause = e;\n    for (int i = 0 ; i < 5 ; i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if (cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String getErrorStr(Exception e) {\n    StringBuilder sb = new StringBuilder();\n    Throwable cause= e;\n    for(int i =0;i<5;i++) {\n      sb.append(cause.getMessage()).append(\"\\n\");\n      if(cause.getCause() == null || cause.getCause() == cause) break;\n      cause = cause.getCause();\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cb9af919a17be70cfc512901fc70f1beaf840ca1","eeeea2295d6355a29e259130a5c48ace73022d7c"],"55980207f1977bd1463465de1659b821347e2fa8":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cb9af919a17be70cfc512901fc70f1beaf840ca1"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["cb9af919a17be70cfc512901fc70f1beaf840ca1"],"cb9af919a17be70cfc512901fc70f1beaf840ca1":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeeea2295d6355a29e259130a5c48ace73022d7c"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"55980207f1977bd1463465de1659b821347e2fa8":[],"eeeea2295d6355a29e259130a5c48ace73022d7c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb9af919a17be70cfc512901fc70f1beaf840ca1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","55980207f1977bd1463465de1659b821347e2fa8","eeeea2295d6355a29e259130a5c48ace73022d7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["55980207f1977bd1463465de1659b821347e2fa8"],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["cb9af919a17be70cfc512901fc70f1beaf840ca1","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}