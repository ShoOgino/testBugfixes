{"path":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95cd5a38a855e021b63ce0a52cd6e43d358c8c61","date":1556473589,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    expectThrows(HttpSolrClient.RemoteSolrException.class, () -> {\n      CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n          .setCreateNodeSet(nn1 + \",\" + nn2)\n          .process(cluster.getSolrClient());\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> {\n      CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n          .setCreateNodeSet(nn1 + \",\" + nn2)\n          .process(cluster.getSolrClient());\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    expectThrows(HttpSolrClient.RemoteSolrException.class, () -> {\n      CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n          .setCreateNodeSet(nn1 + \",\" + nn2)\n          .process(cluster.getSolrClient());\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"db96734b79e26d948b59f68bd4564c4836a71acf":["95cd5a38a855e021b63ce0a52cd6e43d358c8c61"],"95cd5a38a855e021b63ce0a52cd6e43d358c8c61":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db96734b79e26d948b59f68bd4564c4836a71acf"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["95cd5a38a855e021b63ce0a52cd6e43d358c8c61"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"db96734b79e26d948b59f68bd4564c4836a71acf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"95cd5a38a855e021b63ce0a52cd6e43d358c8c61":["db96734b79e26d948b59f68bd4564c4836a71acf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}