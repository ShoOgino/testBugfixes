{"path":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperReadAPI#listNodes(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"0cdbfc1e5714aafb41cabb055936a38ba4db5362","date":1587983533,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperReadAPI#listNodes(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @EndPoint(path = \"/cluster/zk/ls/*\",\n      method = SolrRequest.METHOD.GET,\n      permission = ZK_READ_PERM)\n  public void listNodes(SolrQueryRequest req, SolrQueryResponse rsp) {\n    String path = req.getPathTemplateValues().get(\"*\");\n    if (path == null || path.isEmpty()) path = \"/\";\n    try {\n      List<String> l = coreContainer.getZkController().getZkClient().getChildren(path, null, false);\n      String prefix = path.endsWith(\"/\") ? path : path + \"/\";\n\n      Map<String , Stat> stats = new LinkedHashMap<>();\n      for (String s : l) {\n        try {\n          stats.put(s, coreContainer.getZkController().getZkClient().exists(prefix + s, null, false));\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n      rsp.add(path, (MapWriter) ew -> {\n        for (Map.Entry<String, Stat> e : stats.entrySet()) {\n          printStat(ew, e.getKey(), e.getValue());\n        }\n      });\n    } catch (KeeperException.NoNodeException e) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No such node :\"+ path);\n    } catch (Exception e) {\n      rsp.add(CONTENT, new ContentStreamBase.StringStream(Utils.toJSONString(Collections.singletonMap(\"error\", e.getMessage()))));\n    } finally {\n      RequestHandlerUtils.addExperimentalFormatWarning(rsp);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0cdbfc1e5714aafb41cabb055936a38ba4db5362":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0cdbfc1e5714aafb41cabb055936a38ba4db5362"]},"commit2Childs":{"0cdbfc1e5714aafb41cabb055936a38ba4db5362":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cdbfc1e5714aafb41cabb055936a38ba4db5362"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}