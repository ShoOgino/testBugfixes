{"path":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":["d4edd6709e4d77e1bdff86cf618397d853bd7481"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws IOException {\n    IndexReader r = DirectoryReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}