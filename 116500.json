{"path":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#checkContents(IndexReader,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#checkContents(IndexReader,String).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#checkContents(IndexReader,String).mjava","sourceNew":"  private void checkContents(IndexReader ir, String indexname) throws Exception {\n    final Bits liveDocs = MultiFields.getLiveDocs(ir);\n    for (int i = 0; i < ir.maxDoc(); i++) {\n      if (liveDocs == null || liveDocs.get(i)) {\n        assertEquals(indexname, ir.document(i).get(\"indexname\"));\n      }\n    }\n  }\n\n","sourceOld":"  private void checkContents(IndexReader ir, String indexname) throws Exception {\n    final Bits liveDocs = MultiFields.getLiveDocs(ir);\n    for (int i = 0; i < ir.maxDoc(); i++) {\n      if (liveDocs == null || liveDocs.get(i)) {\n        assertEquals(indexname, ir.document(i).get(\"indexname\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#checkContents(IndexReader,String).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#checkContents(IndexReader,String).mjava","sourceNew":"  private void checkContents(IndexReader ir, String indexname) throws Exception {\n    final Bits liveDocs = MultiBits.getLiveDocs(ir);\n    for (int i = 0; i < ir.maxDoc(); i++) {\n      if (liveDocs == null || liveDocs.get(i)) {\n        assertEquals(indexname, ir.document(i).get(\"indexname\"));\n      }\n    }\n  }\n\n","sourceOld":"  private void checkContents(IndexReader ir, String indexname) throws Exception {\n    final Bits liveDocs = MultiFields.getLiveDocs(ir);\n    for (int i = 0; i < ir.maxDoc(); i++) {\n      if (liveDocs == null || liveDocs.get(i)) {\n        assertEquals(indexname, ir.document(i).get(\"indexname\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}