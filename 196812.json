{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetRequest#FacetRequest(FacetLabel,int).mjava","commits":[{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetRequest#FacetRequest(FacetLabel,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetRequest#FacetRequest(CategoryPath,int).mjava","sourceNew":"  /**\n   * Constructor with the given category to aggregate and the number of child\n   * categories to return.\n   * \n   * @param path\n   *          the category to aggregate. Cannot be {@code null}.\n   * @param numResults\n   *          the number of child categories to return. If set to\n   *          {@code Integer.MAX_VALUE}, all immediate child categories will be\n   *          returned. Must be greater than 0.\n   */\n  public FacetRequest(FacetLabel path, int numResults) {\n    if (numResults <= 0) {\n      throw new IllegalArgumentException(\"num results must be a positive (>0) number: \" + numResults);\n    }\n    if (path == null) {\n      throw new IllegalArgumentException(\"category path cannot be null!\");\n    }\n    categoryPath = path;\n    this.numResults = numResults;\n    numLabel = numResults;\n    hashCode = categoryPath.hashCode() ^ this.numResults;\n  }\n\n","sourceOld":"  /**\n   * Constructor with the given category to aggregate and the number of child\n   * categories to return.\n   * \n   * @param path\n   *          the category to aggregate. Cannot be {@code null}.\n   * @param numResults\n   *          the number of child categories to return. If set to\n   *          {@code Integer.MAX_VALUE}, all immediate child categories will be\n   *          returned. Must be greater than 0.\n   */\n  public FacetRequest(CategoryPath path, int numResults) {\n    if (numResults <= 0) {\n      throw new IllegalArgumentException(\"num results must be a positive (>0) number: \" + numResults);\n    }\n    if (path == null) {\n      throw new IllegalArgumentException(\"category path cannot be null!\");\n    }\n    categoryPath = path;\n    this.numResults = numResults;\n    numLabel = numResults;\n    hashCode = categoryPath.hashCode() ^ this.numResults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetRequest#FacetRequest(FacetLabel,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructor with the given category to aggregate and the number of child\n   * categories to return.\n   * \n   * @param path\n   *          the category to aggregate. Cannot be {@code null}.\n   * @param numResults\n   *          the number of child categories to return. If set to\n   *          {@code Integer.MAX_VALUE}, all immediate child categories will be\n   *          returned. Must be greater than 0.\n   */\n  public FacetRequest(FacetLabel path, int numResults) {\n    if (numResults <= 0) {\n      throw new IllegalArgumentException(\"num results must be a positive (>0) number: \" + numResults);\n    }\n    if (path == null) {\n      throw new IllegalArgumentException(\"category path cannot be null!\");\n    }\n    categoryPath = path;\n    this.numResults = numResults;\n    numLabel = numResults;\n    hashCode = categoryPath.hashCode() ^ this.numResults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d33e19a97046248623a7591aeaa6547233fd15e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}