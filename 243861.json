{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","sourceNew":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random, mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random,\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random, mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random,\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","sourceNew":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(),\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random, mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random,\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","sourceNew":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(),\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(),\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","sourceNew":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(),\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.shutdown();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(),\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","sourceNew":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.shutdown();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(),\n            MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.shutdown();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","sourceNew":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.shutdown();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e75448368ba628d73e9967b45e29c40bbfe39fa","date":1441768575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#setUp().mjava","sourceNew":null,"sourceOld":"  /**\n   * Initializes the tests by adding documents to the index.\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // create test index\n    final RandomIndexWriter writer = new RandomIndexWriter(random(), mDirectory,\n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET))\n            .setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())\n            .setSimilarity(new DefaultSimilarity()));\n    addDocument(writer, \"A\", \"Should we, could we, would we?\");\n    addDocument(writer, \"B\", \"It should.  Should it?\");\n    addDocument(writer, \"C\", \"It shouldn't.\");\n    addDocument(writer, \"D\", \"Should we, should we, should we.\");\n    reader2 = writer.getReader();\n    writer.close();\n    \n    // re-open the searcher since we added more docs\n    searcher2 = newSearcher(reader2);\n    searcher2.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e75448368ba628d73e9967b45e29c40bbfe39fa":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e75448368ba628d73e9967b45e29c40bbfe39fa"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6e75448368ba628d73e9967b45e29c40bbfe39fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["6e75448368ba628d73e9967b45e29c40bbfe39fa"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}