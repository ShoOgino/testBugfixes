{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_6().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_6().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_6().mjava","sourceNew":"        private boolean r_Step_6() {\n            int among_var;\n            // (, line 153\n            // [, line 154\n            ket = cursor;\n            // among, line 154\n            among_var = find_among_b(a_6, 22);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 154\n            // ], line 154\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 155\n                    // <-, line 155\n                    slice_from(\"b\");\n                    break;\n                case 2:\n                    // (, line 156\n                    // <-, line 156\n                    slice_from(\"c\");\n                    break;\n                case 3:\n                    // (, line 157\n                    // <-, line 157\n                    slice_from(\"d\");\n                    break;\n                case 4:\n                    // (, line 158\n                    // <-, line 158\n                    slice_from(\"f\");\n                    break;\n                case 5:\n                    // (, line 159\n                    // <-, line 159\n                    slice_from(\"g\");\n                    break;\n                case 6:\n                    // (, line 160\n                    // <-, line 160\n                    slice_from(\"h\");\n                    break;\n                case 7:\n                    // (, line 161\n                    // <-, line 161\n                    slice_from(\"j\");\n                    break;\n                case 8:\n                    // (, line 162\n                    // <-, line 162\n                    slice_from(\"k\");\n                    break;\n                case 9:\n                    // (, line 163\n                    // <-, line 163\n                    slice_from(\"l\");\n                    break;\n                case 10:\n                    // (, line 164\n                    // <-, line 164\n                    slice_from(\"m\");\n                    break;\n                case 11:\n                    // (, line 165\n                    // <-, line 165\n                    slice_from(\"n\");\n                    break;\n                case 12:\n                    // (, line 166\n                    // <-, line 166\n                    slice_from(\"p\");\n                    break;\n                case 13:\n                    // (, line 167\n                    // <-, line 167\n                    slice_from(\"q\");\n                    break;\n                case 14:\n                    // (, line 168\n                    // <-, line 168\n                    slice_from(\"r\");\n                    break;\n                case 15:\n                    // (, line 169\n                    // <-, line 169\n                    slice_from(\"s\");\n                    break;\n                case 16:\n                    // (, line 170\n                    // <-, line 170\n                    slice_from(\"t\");\n                    break;\n                case 17:\n                    // (, line 171\n                    // <-, line 171\n                    slice_from(\"v\");\n                    break;\n                case 18:\n                    // (, line 172\n                    // <-, line 172\n                    slice_from(\"w\");\n                    break;\n                case 19:\n                    // (, line 173\n                    // <-, line 173\n                    slice_from(\"x\");\n                    break;\n                case 20:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"z\");\n                    break;\n                case 21:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"f\");\n                    break;\n                case 22:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"s\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_6() {\n            int among_var;\n            // (, line 153\n            // [, line 154\n            ket = cursor;\n            // among, line 154\n            among_var = find_among_b(a_6, 22);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 154\n            // ], line 154\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 155\n                    // <-, line 155\n                    slice_from(\"b\");\n                    break;\n                case 2:\n                    // (, line 156\n                    // <-, line 156\n                    slice_from(\"c\");\n                    break;\n                case 3:\n                    // (, line 157\n                    // <-, line 157\n                    slice_from(\"d\");\n                    break;\n                case 4:\n                    // (, line 158\n                    // <-, line 158\n                    slice_from(\"f\");\n                    break;\n                case 5:\n                    // (, line 159\n                    // <-, line 159\n                    slice_from(\"g\");\n                    break;\n                case 6:\n                    // (, line 160\n                    // <-, line 160\n                    slice_from(\"h\");\n                    break;\n                case 7:\n                    // (, line 161\n                    // <-, line 161\n                    slice_from(\"j\");\n                    break;\n                case 8:\n                    // (, line 162\n                    // <-, line 162\n                    slice_from(\"k\");\n                    break;\n                case 9:\n                    // (, line 163\n                    // <-, line 163\n                    slice_from(\"l\");\n                    break;\n                case 10:\n                    // (, line 164\n                    // <-, line 164\n                    slice_from(\"m\");\n                    break;\n                case 11:\n                    // (, line 165\n                    // <-, line 165\n                    slice_from(\"n\");\n                    break;\n                case 12:\n                    // (, line 166\n                    // <-, line 166\n                    slice_from(\"p\");\n                    break;\n                case 13:\n                    // (, line 167\n                    // <-, line 167\n                    slice_from(\"q\");\n                    break;\n                case 14:\n                    // (, line 168\n                    // <-, line 168\n                    slice_from(\"r\");\n                    break;\n                case 15:\n                    // (, line 169\n                    // <-, line 169\n                    slice_from(\"s\");\n                    break;\n                case 16:\n                    // (, line 170\n                    // <-, line 170\n                    slice_from(\"t\");\n                    break;\n                case 17:\n                    // (, line 171\n                    // <-, line 171\n                    slice_from(\"v\");\n                    break;\n                case 18:\n                    // (, line 172\n                    // <-, line 172\n                    slice_from(\"w\");\n                    break;\n                case 19:\n                    // (, line 173\n                    // <-, line 173\n                    slice_from(\"x\");\n                    break;\n                case 20:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"z\");\n                    break;\n                case 21:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"f\");\n                    break;\n                case 22:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"s\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_6().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_6().mjava","sourceNew":"        private boolean r_Step_6() {\n            int among_var;\n            // (, line 153\n            // [, line 154\n            ket = cursor;\n            // among, line 154\n            among_var = find_among_b(a_6, 22);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 154\n            // ], line 154\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 155\n                    // <-, line 155\n                    slice_from(\"b\");\n                    break;\n                case 2:\n                    // (, line 156\n                    // <-, line 156\n                    slice_from(\"c\");\n                    break;\n                case 3:\n                    // (, line 157\n                    // <-, line 157\n                    slice_from(\"d\");\n                    break;\n                case 4:\n                    // (, line 158\n                    // <-, line 158\n                    slice_from(\"f\");\n                    break;\n                case 5:\n                    // (, line 159\n                    // <-, line 159\n                    slice_from(\"g\");\n                    break;\n                case 6:\n                    // (, line 160\n                    // <-, line 160\n                    slice_from(\"h\");\n                    break;\n                case 7:\n                    // (, line 161\n                    // <-, line 161\n                    slice_from(\"j\");\n                    break;\n                case 8:\n                    // (, line 162\n                    // <-, line 162\n                    slice_from(\"k\");\n                    break;\n                case 9:\n                    // (, line 163\n                    // <-, line 163\n                    slice_from(\"l\");\n                    break;\n                case 10:\n                    // (, line 164\n                    // <-, line 164\n                    slice_from(\"m\");\n                    break;\n                case 11:\n                    // (, line 165\n                    // <-, line 165\n                    slice_from(\"n\");\n                    break;\n                case 12:\n                    // (, line 166\n                    // <-, line 166\n                    slice_from(\"p\");\n                    break;\n                case 13:\n                    // (, line 167\n                    // <-, line 167\n                    slice_from(\"q\");\n                    break;\n                case 14:\n                    // (, line 168\n                    // <-, line 168\n                    slice_from(\"r\");\n                    break;\n                case 15:\n                    // (, line 169\n                    // <-, line 169\n                    slice_from(\"s\");\n                    break;\n                case 16:\n                    // (, line 170\n                    // <-, line 170\n                    slice_from(\"t\");\n                    break;\n                case 17:\n                    // (, line 171\n                    // <-, line 171\n                    slice_from(\"v\");\n                    break;\n                case 18:\n                    // (, line 172\n                    // <-, line 172\n                    slice_from(\"w\");\n                    break;\n                case 19:\n                    // (, line 173\n                    // <-, line 173\n                    slice_from(\"x\");\n                    break;\n                case 20:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"z\");\n                    break;\n                case 21:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"f\");\n                    break;\n                case 22:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"s\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_6() {\n            int among_var;\n            // (, line 153\n            // [, line 154\n            ket = cursor;\n            // among, line 154\n            among_var = find_among_b(a_6, 22);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 154\n            // ], line 154\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 155\n                    // <-, line 155\n                    slice_from(\"b\");\n                    break;\n                case 2:\n                    // (, line 156\n                    // <-, line 156\n                    slice_from(\"c\");\n                    break;\n                case 3:\n                    // (, line 157\n                    // <-, line 157\n                    slice_from(\"d\");\n                    break;\n                case 4:\n                    // (, line 158\n                    // <-, line 158\n                    slice_from(\"f\");\n                    break;\n                case 5:\n                    // (, line 159\n                    // <-, line 159\n                    slice_from(\"g\");\n                    break;\n                case 6:\n                    // (, line 160\n                    // <-, line 160\n                    slice_from(\"h\");\n                    break;\n                case 7:\n                    // (, line 161\n                    // <-, line 161\n                    slice_from(\"j\");\n                    break;\n                case 8:\n                    // (, line 162\n                    // <-, line 162\n                    slice_from(\"k\");\n                    break;\n                case 9:\n                    // (, line 163\n                    // <-, line 163\n                    slice_from(\"l\");\n                    break;\n                case 10:\n                    // (, line 164\n                    // <-, line 164\n                    slice_from(\"m\");\n                    break;\n                case 11:\n                    // (, line 165\n                    // <-, line 165\n                    slice_from(\"n\");\n                    break;\n                case 12:\n                    // (, line 166\n                    // <-, line 166\n                    slice_from(\"p\");\n                    break;\n                case 13:\n                    // (, line 167\n                    // <-, line 167\n                    slice_from(\"q\");\n                    break;\n                case 14:\n                    // (, line 168\n                    // <-, line 168\n                    slice_from(\"r\");\n                    break;\n                case 15:\n                    // (, line 169\n                    // <-, line 169\n                    slice_from(\"s\");\n                    break;\n                case 16:\n                    // (, line 170\n                    // <-, line 170\n                    slice_from(\"t\");\n                    break;\n                case 17:\n                    // (, line 171\n                    // <-, line 171\n                    slice_from(\"v\");\n                    break;\n                case 18:\n                    // (, line 172\n                    // <-, line 172\n                    slice_from(\"w\");\n                    break;\n                case 19:\n                    // (, line 173\n                    // <-, line 173\n                    slice_from(\"x\");\n                    break;\n                case 20:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"z\");\n                    break;\n                case 21:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"f\");\n                    break;\n                case 22:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"s\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}