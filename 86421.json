{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","commits":[{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n    \n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n    \n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n    \n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n    \n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e1cbd7e289dc1243c7a59e1a83d078163a147fe","date":1292268032,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n    \n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n    \n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 100, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["79c2cb24929f2649a8875fb629086171f914d5ce","cca56866c19997e28ef073622656669c15210540"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cca56866c19997e28ef073622656669c15210540"],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["85a883878c0af761245ab048babc63d099f835f3","7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"79c2cb24929f2649a8875fb629086171f914d5ce":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cca56866c19997e28ef073622656669c15210540"],"cca56866c19997e28ef073622656669c15210540":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["79c2cb24929f2649a8875fb629086171f914d5ce","cca56866c19997e28ef073622656669c15210540"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"79c2cb24929f2649a8875fb629086171f914d5ce":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["85a883878c0af761245ab048babc63d099f835f3","7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"cca56866c19997e28ef073622656669c15210540":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","3a119bbc8703c10faa329ec201c654b3a35a1e3e","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","79c2cb24929f2649a8875fb629086171f914d5ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}