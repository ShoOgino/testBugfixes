{"path":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","commits":[{"id":"fca71501024d125c6671b2fbda9b2920909d3ccf","date":1398961701,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5611: don't abort segment when term vector settings are wrong\n  public void testNoAbortOnBadTVSettings() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use RandomIndexWriter because we want to be sure both docs go to 1 seg:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter iw = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    iw.addDocument(doc);\n    FieldType ft = new FieldType(StoredField.TYPE);\n    ft.setStoreTermVectors(true);\n    ft.freeze();\n    doc.add(new Field(\"field\", \"value\", ft));\n    try {\n      iw.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader r = DirectoryReader.open(iw, true);\n\n    // Make sure the exc didn't lose our first document:\n    assertEquals(1, r.numDocs());\n    iw.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","sourceNew":"  // LUCENE-5611: don't abort segment when term vector settings are wrong\n  public void testNoAbortOnBadTVSettings() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use RandomIndexWriter because we want to be sure both docs go to 1 seg:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter iw = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    iw.addDocument(doc);\n    FieldType ft = new FieldType(StoredField.TYPE);\n    ft.setStoreTermVectors(true);\n    ft.freeze();\n    doc.add(new Field(\"field\", \"value\", ft));\n    try {\n      iw.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader r = DirectoryReader.open(iw, true);\n\n    // Make sure the exc didn't lose our first document:\n    assertEquals(1, r.numDocs());\n    iw.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5611: don't abort segment when term vector settings are wrong\n  public void testNoAbortOnBadTVSettings() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use RandomIndexWriter because we want to be sure both docs go to 1 seg:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter iw = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    iw.addDocument(doc);\n    FieldType ft = new FieldType(StoredField.TYPE);\n    ft.setStoreTermVectors(true);\n    ft.freeze();\n    doc.add(new Field(\"field\", \"value\", ft));\n    try {\n      iw.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader r = DirectoryReader.open(iw, true);\n\n    // Make sure the exc didn't lose our first document:\n    assertEquals(1, r.numDocs());\n    iw.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","sourceNew":"  // LUCENE-5611: don't abort segment when term vector settings are wrong\n  public void testNoAbortOnBadTVSettings() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use RandomIndexWriter because we want to be sure both docs go to 1 seg:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter iw = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    iw.addDocument(doc);\n    FieldType ft = new FieldType(StoredField.TYPE);\n    ft.setStoreTermVectors(true);\n    ft.freeze();\n    doc.add(new Field(\"field\", \"value\", ft));\n    try {\n      iw.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader r = DirectoryReader.open(iw);\n\n    // Make sure the exc didn't lose our first document:\n    assertEquals(1, r.numDocs());\n    iw.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5611: don't abort segment when term vector settings are wrong\n  public void testNoAbortOnBadTVSettings() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use RandomIndexWriter because we want to be sure both docs go to 1 seg:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter iw = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    iw.addDocument(doc);\n    FieldType ft = new FieldType(StoredField.TYPE);\n    ft.setStoreTermVectors(true);\n    ft.freeze();\n    doc.add(new Field(\"field\", \"value\", ft));\n    try {\n      iw.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader r = DirectoryReader.open(iw, true);\n\n    // Make sure the exc didn't lose our first document:\n    assertEquals(1, r.numDocs());\n    iw.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testNoAbortOnBadTVSettings().mjava","sourceNew":"  // LUCENE-5611: don't abort segment when term vector settings are wrong\n  public void testNoAbortOnBadTVSettings() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use RandomIndexWriter because we want to be sure both docs go to 1 seg:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter iw = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    iw.addDocument(doc);\n    FieldType ft = new FieldType(StoredField.TYPE);\n    ft.setStoreTermVectors(true);\n    ft.freeze();\n    doc.add(new Field(\"field\", \"value\", ft));\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      iw.addDocument(doc);\n    });\n\n    IndexReader r = DirectoryReader.open(iw);\n\n    // Make sure the exc didn't lose our first document:\n    assertEquals(1, r.numDocs());\n    iw.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5611: don't abort segment when term vector settings are wrong\n  public void testNoAbortOnBadTVSettings() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use RandomIndexWriter because we want to be sure both docs go to 1 seg:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter iw = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    iw.addDocument(doc);\n    FieldType ft = new FieldType(StoredField.TYPE);\n    ft.setStoreTermVectors(true);\n    ft.freeze();\n    doc.add(new Field(\"field\", \"value\", ft));\n    try {\n      iw.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader r = DirectoryReader.open(iw);\n\n    // Make sure the exc didn't lose our first document:\n    assertEquals(1, r.numDocs());\n    iw.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["fca71501024d125c6671b2fbda9b2920909d3ccf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fca71501024d125c6671b2fbda9b2920909d3ccf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a1862266772deb28cdcb7d996b64d2177022687":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["2a1862266772deb28cdcb7d996b64d2177022687"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["fca71501024d125c6671b2fbda9b2920909d3ccf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"fca71501024d125c6671b2fbda9b2920909d3ccf":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"2a1862266772deb28cdcb7d996b64d2177022687":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fca71501024d125c6671b2fbda9b2920909d3ccf"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2a1862266772deb28cdcb7d996b64d2177022687"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}