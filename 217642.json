{"path":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","commits":[{"id":"7f4e54ed7cef46f86888b5fb547594f62160395c","date":1340006971,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    readerTermsIndexDivisor = config.getReaderTermsIndexDivisor();\n    termIndexInterval = config.getTermIndexInterval();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","sourceNew":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    readerTermsIndexDivisor = config.getReaderTermsIndexDivisor();\n    termIndexInterval = config.getTermIndexInterval();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    readerTermsIndexDivisor = config.getReaderTermsIndexDivisor();\n    termIndexInterval = config.getTermIndexInterval();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","sourceNew":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    readerTermsIndexDivisor = config.getReaderTermsIndexDivisor();\n    termIndexInterval = config.getTermIndexInterval();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    readerTermsIndexDivisor = config.getReaderTermsIndexDivisor();\n    termIndexInterval = config.getTermIndexInterval();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","sourceNew":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    readerTermsIndexDivisor = config.getReaderTermsIndexDivisor();\n    termIndexInterval = config.getTermIndexInterval();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","sourceNew":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    readerTermsIndexDivisor = config.getReaderTermsIndexDivisor();\n    termIndexInterval = config.getTermIndexInterval();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","sourceNew":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n    checkIntegrityAtMerge = config.getCheckIntegrityAtMerge();\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","sourceNew":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n    checkIntegrityAtMerge = config.getCheckIntegrityAtMerge();\n  }\n\n","sourceOld":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfc45818441587d8004ff1a119fb60ac9ecb9a14","date":1401437797,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#LiveIndexWriterConfig(IndexWriterConfig).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new config that that handles the live {@link IndexWriter}\n   * settings.\n   */\n  LiveIndexWriterConfig(IndexWriterConfig config) {\n    maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();\n    maxBufferedDocs = config.getMaxBufferedDocs();\n    mergedSegmentWarmer = config.getMergedSegmentWarmer();\n    ramBufferSizeMB = config.getRAMBufferSizeMB();\n    matchVersion = config.matchVersion;\n    analyzer = config.getAnalyzer();\n    delPolicy = config.getIndexDeletionPolicy();\n    commit = config.getIndexCommit();\n    openMode = config.getOpenMode();\n    similarity = config.getSimilarity();\n    mergeScheduler = config.getMergeScheduler();\n    writeLockTimeout = config.getWriteLockTimeout();\n    indexingChain = config.getIndexingChain();\n    codec = config.getCodec();\n    infoStream = config.getInfoStream();\n    mergePolicy = config.getMergePolicy();\n    indexerThreadPool = config.getIndexerThreadPool();\n    readerPooling = config.getReaderPooling();\n    flushPolicy = config.getFlushPolicy();\n    perThreadHardLimitMB = config.getRAMPerThreadHardLimitMB();\n    useCompoundFile = config.getUseCompoundFile();\n    checkIntegrityAtMerge = config.getCheckIntegrityAtMerge();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a45bec74b98f6fc05f52770cfb425739e6563960","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a45bec74b98f6fc05f52770cfb425739e6563960"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a45bec74b98f6fc05f52770cfb425739e6563960":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4e54ed7cef46f86888b5fb547594f62160395c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfc45818441587d8004ff1a119fb60ac9ecb9a14"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a45bec74b98f6fc05f52770cfb425739e6563960":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"7f4e54ed7cef46f86888b5fb547594f62160395c":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["a45bec74b98f6fc05f52770cfb425739e6563960"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}