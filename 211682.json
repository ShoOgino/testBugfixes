{"path":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#checkResourcesAfterClass().mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#checkResourcesAfterClass().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#checkResourcesAfterClass().mjava","sourceNew":"  /** check that directories and their resources were closed */\n  private static void checkResourcesAfterClass() {\n    for (MockDirectoryWrapper d : stores.keySet()) {\n      if (d.isOpen()) {\n        StackTraceElement elements[] = stores.get(d);\n        // Look for the first class that is not LuceneTestCase that requested\n        // a Directory. The first two items are of Thread's, so skipping over\n        // them.\n        StackTraceElement element = null;\n        for (int i = 2; i < elements.length; i++) {\n          StackTraceElement ste = elements[i];\n          if (ste.getClassName().indexOf(\"LuceneTestCase\") == -1) {\n            element = ste;\n            break;\n          }\n        }\n        fail(\"directory of test was not closed, opened from: \" + element);\n      }\n    }\n  }\n\n","sourceOld":"  /** check that directories and their resources were closed */\n  private static void checkResourcesAfterClass() {\n    for (MockDirectoryWrapper d : stores.keySet()) {\n      if (d.isOpen()) {\n        StackTraceElement elements[] = stores.get(d);\n        // Look for the first class that is not LuceneTestCase that requested\n        // a Directory. The first two items are of Thread's, so skipping over\n        // them.\n        StackTraceElement element = null;\n        for (int i = 2; i < elements.length; i++) {\n          StackTraceElement ste = elements[i];\n          if (ste.getClassName().indexOf(\"LuceneTestCase\") == -1) {\n            element = ste;\n            break;\n          }\n        }\n        fail(\"directory of test was not closed, opened from: \" + element);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#checkResourcesAfterClass().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#checkResourcesAfterClass().mjava","sourceNew":"  /** check that directories and their resources were closed */\n  private static void checkResourcesAfterClass() {\n    for (MockDirectoryWrapper d : stores.keySet()) {\n      if (d.isOpen()) {\n        StackTraceElement elements[] = stores.get(d);\n        // Look for the first class that is not LuceneTestCase that requested\n        // a Directory. The first two items are of Thread's, so skipping over\n        // them.\n        StackTraceElement element = null;\n        for (int i = 2; i < elements.length; i++) {\n          StackTraceElement ste = elements[i];\n          if (ste.getClassName().indexOf(\"LuceneTestCase\") == -1) {\n            element = ste;\n            break;\n          }\n        }\n        fail(\"directory of test was not closed, opened from: \" + element);\n      }\n    }\n  }\n\n","sourceOld":"  /** check that directories and their resources were closed */\n  private static void checkResourcesAfterClass() {\n    for (MockDirectoryWrapper d : stores.keySet()) {\n      if (d.isOpen()) {\n        StackTraceElement elements[] = stores.get(d);\n        // Look for the first class that is not LuceneTestCase that requested\n        // a Directory. The first two items are of Thread's, so skipping over\n        // them.\n        StackTraceElement element = null;\n        for (int i = 2; i < elements.length; i++) {\n          StackTraceElement ste = elements[i];\n          if (ste.getClassName().indexOf(\"LuceneTestCase\") == -1) {\n            element = ste;\n            break;\n          }\n        }\n        fail(\"directory of test was not closed, opened from: \" + element);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}