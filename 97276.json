{"path":"src/test/org/apache/solr/handler/SearchHandlerTest#testInitalization().mjava","commits":[{"id":"68f896937cecbd003415d5fd0616436eaa1fb336","date":1197098869,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/SearchHandlerTest#testInitalization().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FISRT_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponets().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7c1e9928d771e4e47fc17bc23aa91a2454b133a","date":1199894278,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/SearchHandlerTest#testInitalization().mjava","pathOld":"src/test/org/apache/solr/handler/SearchHandlerTest#testInitalization().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FISRT_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponets().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public void testInitalization()\n  {\n    SolrCore core = h.getCore();\n    \n    // Build an explicit list\n    //-----------------------------------------------\n    List<String> names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    NamedList args = new NamedList();\n    args.add( SearchHandler.INIT_COMPONENTS, names0 );\n    SearchHandler handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    assertEquals( 1, handler.getComponents().size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), \n        handler.getComponents().get( 0 ) );\n    \n\n    // First/Last list\n    //-----------------------------------------------\n    names0 = new ArrayList<String>();\n    names0.add( MoreLikeThisComponent.COMPONENT_NAME );\n    \n    List<String> names1 = new ArrayList<String>();\n    names1.add( FacetComponent.COMPONENT_NAME );\n    \n    args = new NamedList();\n    args.add( SearchHandler.INIT_FISRT_COMPONENTS, names0 );\n    args.add( SearchHandler.INIT_LAST_COMPONENTS, names1 );\n    handler = new SearchHandler();\n    handler.init( args );\n    handler.inform( core );\n    \n    List<SearchComponent> comps = handler.getComponents();\n    assertEquals( 2+handler.getDefaultComponets().size(), comps.size() );\n    assertEquals( core.getSearchComponent( MoreLikeThisComponent.COMPONENT_NAME ), comps.get( 0 ) );\n    assertEquals( core.getSearchComponent( FacetComponent.COMPONENT_NAME ), comps.get( comps.size()-1 ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"68f896937cecbd003415d5fd0616436eaa1fb336":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d7c1e9928d771e4e47fc17bc23aa91a2454b133a":["68f896937cecbd003415d5fd0616436eaa1fb336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["68f896937cecbd003415d5fd0616436eaa1fb336"],"68f896937cecbd003415d5fd0616436eaa1fb336":["d7c1e9928d771e4e47fc17bc23aa91a2454b133a"],"d7c1e9928d771e4e47fc17bc23aa91a2454b133a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d7c1e9928d771e4e47fc17bc23aa91a2454b133a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}