{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/SimpleBindings#getDoubleValuesSource(String).mjava","commits":[{"id":"7ae1ad302fc92a61505409a38838f2b1a4a2b092","date":1483787106,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/SimpleBindings#getDoubleValuesSource(String).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/SimpleBindings#getValueSource(String).mjava","sourceNew":"  @Override\n  public DoubleValuesSource getDoubleValuesSource(String name) {\n    Object o = map.get(name);\n    if (o == null) {\n      throw new IllegalArgumentException(\"Invalid reference '\" + name + \"'\");\n    } else if (o instanceof Expression) {\n      return ((Expression)o).getDoubleValuesSource(this);\n    } else if (o instanceof DoubleValuesSource) {\n      return ((DoubleValuesSource) o);\n    }\n    SortField field = (SortField) o;\n    switch(field.getType()) {\n      case INT:\n        return DoubleValuesSource.fromIntField(field.getField());\n      case LONG:\n        return DoubleValuesSource.fromLongField(field.getField());\n      case FLOAT:\n        return DoubleValuesSource.fromFloatField(field.getField());\n      case DOUBLE:\n        return DoubleValuesSource.fromDoubleField(field.getField());\n      case SCORE:\n        return DoubleValuesSource.SCORES;\n      default:\n        throw new UnsupportedOperationException(); \n    }\n  }\n\n","sourceOld":"  @Override\n  public ValueSource getValueSource(String name) {\n    Object o = map.get(name);\n    if (o == null) {\n      throw new IllegalArgumentException(\"Invalid reference '\" + name + \"'\");\n    } else if (o instanceof Expression) {\n      return ((Expression)o).getValueSource(this);\n    } else if (o instanceof ValueSource) {\n      return ((ValueSource)o);\n    }\n    SortField field = (SortField) o;\n    switch(field.getType()) {\n      case INT:\n        return new IntFieldSource(field.getField());\n      case LONG:\n        return new LongFieldSource(field.getField());\n      case FLOAT:\n        return new FloatFieldSource(field.getField());\n      case DOUBLE:\n        return new DoubleFieldSource(field.getField());\n      case SCORE:\n        return getScoreValueSource();\n      default:\n        throw new UnsupportedOperationException(); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/SimpleBindings#getDoubleValuesSource(String).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/SimpleBindings#getValueSource(String).mjava","sourceNew":"  @Override\n  public DoubleValuesSource getDoubleValuesSource(String name) {\n    Object o = map.get(name);\n    if (o == null) {\n      throw new IllegalArgumentException(\"Invalid reference '\" + name + \"'\");\n    } else if (o instanceof Expression) {\n      return ((Expression)o).getDoubleValuesSource(this);\n    } else if (o instanceof DoubleValuesSource) {\n      return ((DoubleValuesSource) o);\n    }\n    SortField field = (SortField) o;\n    switch(field.getType()) {\n      case INT:\n        return DoubleValuesSource.fromIntField(field.getField());\n      case LONG:\n        return DoubleValuesSource.fromLongField(field.getField());\n      case FLOAT:\n        return DoubleValuesSource.fromFloatField(field.getField());\n      case DOUBLE:\n        return DoubleValuesSource.fromDoubleField(field.getField());\n      case SCORE:\n        return DoubleValuesSource.SCORES;\n      default:\n        throw new UnsupportedOperationException(); \n    }\n  }\n\n","sourceOld":"  @Override\n  public ValueSource getValueSource(String name) {\n    Object o = map.get(name);\n    if (o == null) {\n      throw new IllegalArgumentException(\"Invalid reference '\" + name + \"'\");\n    } else if (o instanceof Expression) {\n      return ((Expression)o).getValueSource(this);\n    } else if (o instanceof ValueSource) {\n      return ((ValueSource)o);\n    }\n    SortField field = (SortField) o;\n    switch(field.getType()) {\n      case INT:\n        return new IntFieldSource(field.getField());\n      case LONG:\n        return new LongFieldSource(field.getField());\n      case FLOAT:\n        return new FloatFieldSource(field.getField());\n      case DOUBLE:\n        return new DoubleFieldSource(field.getField());\n      case SCORE:\n        return getScoreValueSource();\n      default:\n        throw new UnsupportedOperationException(); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e19926b5df3ff21524afd77f06c4cd823147b22","date":1587720230,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/SimpleBindings#getDoubleValuesSource(String).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/SimpleBindings#getDoubleValuesSource(String).mjava","sourceNew":"  @Override\n  public DoubleValuesSource getDoubleValuesSource(String name) {\n    if (map.containsKey(name) == false) {\n      throw new IllegalArgumentException(\"Invalid reference '\" + name + \"'\");\n    }\n    return map.get(name).apply(this);\n  }\n\n","sourceOld":"  @Override\n  public DoubleValuesSource getDoubleValuesSource(String name) {\n    Object o = map.get(name);\n    if (o == null) {\n      throw new IllegalArgumentException(\"Invalid reference '\" + name + \"'\");\n    } else if (o instanceof Expression) {\n      return ((Expression)o).getDoubleValuesSource(this);\n    } else if (o instanceof DoubleValuesSource) {\n      return ((DoubleValuesSource) o);\n    }\n    SortField field = (SortField) o;\n    switch(field.getType()) {\n      case INT:\n        return DoubleValuesSource.fromIntField(field.getField());\n      case LONG:\n        return DoubleValuesSource.fromLongField(field.getField());\n      case FLOAT:\n        return DoubleValuesSource.fromFloatField(field.getField());\n      case DOUBLE:\n        return DoubleValuesSource.fromDoubleField(field.getField());\n      case SCORE:\n        return DoubleValuesSource.SCORES;\n      default:\n        throw new UnsupportedOperationException(); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e19926b5df3ff21524afd77f06c4cd823147b22":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e19926b5df3ff21524afd77f06c4cd823147b22"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ae1ad302fc92a61505409a38838f2b1a4a2b092","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["4e19926b5df3ff21524afd77f06c4cd823147b22","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"4e19926b5df3ff21524afd77f06c4cd823147b22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}