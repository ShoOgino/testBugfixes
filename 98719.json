{"path":"src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","commits":[{"id":"65b5c1fd5fa6357d1ab6681080073a45c2e87962","date":1203480393,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  static NamedList<NamedList<Object>> getTokens(TokenStream tstream) throws IOException {\n    NamedList<NamedList<Object>> tokens = new NamedList<NamedList<Object>>();\n    Token t = null;\n    while (((t = tstream.next()) != null)) {\n      NamedList<Object> token = new NamedList<Object>();\n      tokens.add(\"token\", token);\n      token.add(\"value\", new String(t.termBuffer(), 0, t.termLength()));\n      token.add(\"start\", t.startOffset());\n      token.add(\"end\", t.endOffset());\n      token.add(\"posInc\", t.getPositionIncrement());\n      token.add(\"type\", t.type());\n      //TODO: handle payloads\n    }\n    return tokens;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da0acfe5ceed804451d76c8f887855b3d060e132","date":1208287358,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","pathOld":"src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","sourceNew":"  static NamedList<NamedList<Object>> getTokens(TokenStream tstream) throws IOException {\n    // outer is namedList since order of tokens is important\n    NamedList<NamedList<Object>> tokens = new NamedList<NamedList<Object>>();\n    Token t = null;\n    while (((t = tstream.next()) != null)) {\n      NamedList<Object> token = new SimpleOrderedMap<Object>();\n      tokens.add(\"token\", token);\n      token.add(\"value\", new String(t.termBuffer(), 0, t.termLength()));\n      token.add(\"start\", t.startOffset());\n      token.add(\"end\", t.endOffset());\n      token.add(\"posInc\", t.getPositionIncrement());\n      token.add(\"type\", t.type());\n      //TODO: handle payloads\n    }\n    return tokens;\n  }\n\n","sourceOld":"  static NamedList<NamedList<Object>> getTokens(TokenStream tstream) throws IOException {\n    NamedList<NamedList<Object>> tokens = new NamedList<NamedList<Object>>();\n    Token t = null;\n    while (((t = tstream.next()) != null)) {\n      NamedList<Object> token = new NamedList<Object>();\n      tokens.add(\"token\", token);\n      token.add(\"value\", new String(t.termBuffer(), 0, t.termLength()));\n      token.add(\"start\", t.startOffset());\n      token.add(\"end\", t.endOffset());\n      token.add(\"posInc\", t.getPositionIncrement());\n      token.add(\"type\", t.type());\n      //TODO: handle payloads\n    }\n    return tokens;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","pathOld":"src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","sourceNew":"  static NamedList<NamedList<Object>> getTokens(TokenStream tstream) throws IOException {\n    // outer is namedList since order of tokens is important\n    NamedList<NamedList<Object>> tokens = new NamedList<NamedList<Object>>();\n    // TODO: support custom attributes\n    TermAttribute termAtt = (TermAttribute) tstream.addAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = (OffsetAttribute) tstream.addAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = (TypeAttribute) tstream.addAttribute(TypeAttribute.class);\n    PositionIncrementAttribute posIncAtt = (PositionIncrementAttribute) tstream.addAttribute(PositionIncrementAttribute.class);\n    \n    while (tstream.incrementToken()) {\n      NamedList<Object> token = new SimpleOrderedMap<Object>();\n      tokens.add(\"token\", token);\n      token.add(\"value\", new String(termAtt.termBuffer(), 0, termAtt.termLength()));\n      token.add(\"start\", offsetAtt.startOffset());\n      token.add(\"end\", offsetAtt.endOffset());\n      token.add(\"posInc\", posIncAtt.getPositionIncrement());\n      token.add(\"type\", typeAtt.type());\n      //TODO: handle payloads\n    }\n    return tokens;\n  }\n\n","sourceOld":"  static NamedList<NamedList<Object>> getTokens(TokenStream tstream) throws IOException {\n    // outer is namedList since order of tokens is important\n    NamedList<NamedList<Object>> tokens = new NamedList<NamedList<Object>>();\n    Token t = null;\n    while (((t = tstream.next()) != null)) {\n      NamedList<Object> token = new SimpleOrderedMap<Object>();\n      tokens.add(\"token\", token);\n      token.add(\"value\", new String(t.termBuffer(), 0, t.termLength()));\n      token.add(\"start\", t.startOffset());\n      token.add(\"end\", t.endOffset());\n      token.add(\"posInc\", t.getPositionIncrement());\n      token.add(\"type\", t.type());\n      //TODO: handle payloads\n    }\n    return tokens;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","pathOld":"src/java/org/apache/solr/handler/AnalysisRequestHandler#getTokens(TokenStream).mjava","sourceNew":"  static NamedList<NamedList<Object>> getTokens(TokenStream tstream) throws IOException {\n    // outer is namedList since order of tokens is important\n    NamedList<NamedList<Object>> tokens = new NamedList<NamedList<Object>>();\n    // TODO: support custom attributes\n    TermAttribute termAtt = (TermAttribute) tstream.addAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = (OffsetAttribute) tstream.addAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = (TypeAttribute) tstream.addAttribute(TypeAttribute.class);\n    PositionIncrementAttribute posIncAtt = (PositionIncrementAttribute) tstream.addAttribute(PositionIncrementAttribute.class);\n    \n    while (tstream.incrementToken()) {\n      NamedList<Object> token = new SimpleOrderedMap<Object>();\n      tokens.add(\"token\", token);\n      token.add(\"value\", new String(termAtt.termBuffer(), 0, termAtt.termLength()));\n      token.add(\"start\", offsetAtt.startOffset());\n      token.add(\"end\", offsetAtt.endOffset());\n      token.add(\"posInc\", posIncAtt.getPositionIncrement());\n      token.add(\"type\", typeAtt.type());\n      //TODO: handle payloads\n    }\n    return tokens;\n  }\n\n","sourceOld":"  static NamedList<NamedList<Object>> getTokens(TokenStream tstream) throws IOException {\n    // outer is namedList since order of tokens is important\n    NamedList<NamedList<Object>> tokens = new NamedList<NamedList<Object>>();\n    // TODO: support custom attributes\n    TermAttribute termAtt = (TermAttribute) tstream.addAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = (OffsetAttribute) tstream.addAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = (TypeAttribute) tstream.addAttribute(TypeAttribute.class);\n    PositionIncrementAttribute posIncAtt = (PositionIncrementAttribute) tstream.addAttribute(PositionIncrementAttribute.class);\n    \n    while (tstream.incrementToken()) {\n      NamedList<Object> token = new SimpleOrderedMap<Object>();\n      tokens.add(\"token\", token);\n      token.add(\"value\", new String(termAtt.termBuffer(), 0, termAtt.termLength()));\n      token.add(\"start\", offsetAtt.startOffset());\n      token.add(\"end\", offsetAtt.endOffset());\n      token.add(\"posInc\", posIncAtt.getPositionIncrement());\n      token.add(\"type\", typeAtt.type());\n      //TODO: handle payloads\n    }\n    return tokens;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da0acfe5ceed804451d76c8f887855b3d060e132":["65b5c1fd5fa6357d1ab6681080073a45c2e87962"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["da0acfe5ceed804451d76c8f887855b3d060e132"],"ad94625fb8d088209f46650c8097196fec67f00c":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"65b5c1fd5fa6357d1ab6681080073a45c2e87962":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"da0acfe5ceed804451d76c8f887855b3d060e132":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["65b5c1fd5fa6357d1ab6681080073a45c2e87962"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"65b5c1fd5fa6357d1ab6681080073a45c2e87962":["da0acfe5ceed804451d76c8f887855b3d060e132"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}