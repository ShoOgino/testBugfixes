{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#compareRows(Row,Row,Policy).mjava","commits":[{"id":"954590f07cfbe2c3ccb86e29d0742c43740ca509","date":1500371516,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#compareRows(Row,Row,Policy).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compares two {@link Row} loads according to a policy.\n   *\n   * @param r1 the first {@link Row} to compare\n   * @param r2 the second {@link Row} to compare\n   * @return the value {@code 0} if r1 and r2 are equally loaded\n   * a value {@code -1} if r1 is more loaded than r2\n   * a value {@code 1} if  r1 is less loaded than r2\n   */\n  static int compareRows(Row r1, Row r2, Policy policy) {\n    return policy.clusterPreferences.get(0).compare(r1, r2, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00aca69329b84bc12b5a402a8745f8e4db7b7d40","date":1506911750,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#compareRows(Row,Row,Policy).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#compareRows(Row,Row,Policy).mjava","sourceNew":"  /**\n   * Compares two {@link Row} loads according to a policy.\n   *\n   * @param r1 the first {@link Row} to compare\n   * @param r2 the second {@link Row} to compare\n   * @return the value {@code 0} if r1 and r2 are equally loaded\n   * a value {@code -1} if r1 is more loaded than r2\n   * a value {@code 1} if  r1 is less loaded than r2\n   */\n  static int compareRows(Row r1, Row r2, Policy policy) {\n    return policy.clusterPreferences.get(0).compare(r1, r2, true);\n  }\n\n","sourceOld":"  /**\n   * Compares two {@link Row} loads according to a policy.\n   *\n   * @param r1 the first {@link Row} to compare\n   * @param r2 the second {@link Row} to compare\n   * @return the value {@code 0} if r1 and r2 are equally loaded\n   * a value {@code -1} if r1 is more loaded than r2\n   * a value {@code 1} if  r1 is less loaded than r2\n   */\n  static int compareRows(Row r1, Row r2, Policy policy) {\n    return policy.clusterPreferences.get(0).compare(r1, r2, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#compareRows(Row,Row,Policy).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compares two {@link Row} loads according to a policy.\n   *\n   * @param r1 the first {@link Row} to compare\n   * @param r2 the second {@link Row} to compare\n   * @return the value {@code 0} if r1 and r2 are equally loaded\n   * a value {@code -1} if r1 is more loaded than r2\n   * a value {@code 1} if  r1 is less loaded than r2\n   */\n  static int compareRows(Row r1, Row r2, Policy policy) {\n    return policy.clusterPreferences.get(0).compare(r1, r2, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#compareRows(Row,Row,Policy).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compares two {@link Row} loads according to a policy.\n   *\n   * @param r1 the first {@link Row} to compare\n   * @param r2 the second {@link Row} to compare\n   * @return the value {@code 0} if r1 and r2 are equally loaded\n   * a value {@code -1} if r1 is more loaded than r2\n   * a value {@code 1} if  r1 is less loaded than r2\n   */\n  static int compareRows(Row r1, Row r2, Policy policy) {\n    return policy.clusterPreferences.get(0).compare(r1, r2, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#compareRows(Row,Row,Policy).mjava","sourceNew":null,"sourceOld":"  /**\n   * Compares two {@link Row} loads according to a policy.\n   *\n   * @param r1 the first {@link Row} to compare\n   * @param r2 the second {@link Row} to compare\n   * @return the value {@code 0} if r1 and r2 are equally loaded\n   * a value {@code -1} if r1 is more loaded than r2\n   * a value {@code 1} if  r1 is less loaded than r2\n   */\n  static int compareRows(Row r1, Row r2, Policy policy) {\n    return policy.clusterPreferences.get(0).compare(r1, r2, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","00aca69329b84bc12b5a402a8745f8e4db7b7d40"],"3f504512a03d978990cbff30db0522b354e846db":["560c18d71dad43d675158783c3840f8c80d6d39c"],"954590f07cfbe2c3ccb86e29d0742c43740ca509":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"00aca69329b84bc12b5a402a8745f8e4db7b7d40":["954590f07cfbe2c3ccb86e29d0742c43740ca509"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"954590f07cfbe2c3ccb86e29d0742c43740ca509":["00aca69329b84bc12b5a402a8745f8e4db7b7d40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","954590f07cfbe2c3ccb86e29d0742c43740ca509","560c18d71dad43d675158783c3840f8c80d6d39c"],"00aca69329b84bc12b5a402a8745f8e4db7b7d40":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"560c18d71dad43d675158783c3840f8c80d6d39c":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}