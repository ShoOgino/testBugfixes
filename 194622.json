{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","commits":[{"id":"a870f9917149dc600c4ad4417d615c1795de5864","date":1445975387,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","pathOld":"/dev/null","sourceNew":"  private BinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","sourceNew":"  private LegacyBinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private BinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","sourceNew":"  private LegacyBinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private BinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","sourceNew":"  private LegacyBinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private LegacyBinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getVariableBinary(FieldInfo,BinaryEntry).mjava","sourceNew":null,"sourceOld":"  private BinaryDocValues getVariableBinary(FieldInfo field, final BinaryEntry bytes) throws IOException {\n    final RandomAccessInput addressesData = this.data.randomAccessSlice(bytes.addressesOffset, bytes.addressesEndOffset - bytes.addressesOffset);\n    final LongValues addresses = DirectMonotonicReader.getInstance(bytes.addressesMeta, addressesData);\n\n    final IndexInput data = this.data.slice(\"var-binary\", bytes.offset, bytes.addressesOffset - bytes.offset);\n    final BytesRef term = new BytesRef(Math.max(0, bytes.maxLength));\n    final byte buffer[] = term.bytes;\n\n    return new LongBinaryDocValues() {\n      @Override\n      public BytesRef get(long id) {\n        long startAddress = addresses.get(id);\n        long endAddress = addresses.get(id+1);\n        int length = (int) (endAddress - startAddress);\n        try {\n          data.seek(startAddress);\n          data.readBytes(buffer, 0, length);\n          term.length = length;\n          return term;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a870f9917149dc600c4ad4417d615c1795de5864","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a870f9917149dc600c4ad4417d615c1795de5864"],"a870f9917149dc600c4ad4417d615c1795de5864":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a870f9917149dc600c4ad4417d615c1795de5864","7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a870f9917149dc600c4ad4417d615c1795de5864"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a870f9917149dc600c4ad4417d615c1795de5864":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}