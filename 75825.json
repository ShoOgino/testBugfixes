{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#longestOp(Iterator).mjava","commits":[{"id":"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0","date":1174485154,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#longestOp(Iterator).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/stats/Points#longestOp(Collection).mjava","sourceNew":"  /**\n   * find the longest op name out of completed tasks.  \n   * @param taskStats completed tasks to be considered.\n   * @return the longest op name out of completed tasks.\n   */\n  protected String longestOp(Iterator taskStats) {\n    String longest = OP;\n    while (taskStats.hasNext()) {\n      TaskStats stat = (TaskStats) taskStats.next();\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\n        String name = stat.getTask().getName();\n        if (name.length() > longest.length()) {\n          longest = name;\n        }\n      }\n    }\n    return longest;\n  }\n\n","sourceOld":"  private String longestOp(Collection c) {\r\n    String longest = OP;\r\n    for (Iterator it = c.iterator(); it.hasNext();) {\r\n      TaskStats stat = (TaskStats) it.next();\r\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\r\n        String name = stat.getTask().getName();\r\n        if (name.length() > longest.length()) {\r\n          longest = name;\r\n        }\r\n      }\r\n    }\r\n    return longest;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#longestOp(Iterable[TaskStats]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#longestOp(Iterator).mjava","sourceNew":"  /**\n   * find the longest op name out of completed tasks.  \n   * @param taskStats completed tasks to be considered.\n   * @return the longest op name out of completed tasks.\n   */\n  protected String longestOp(Iterable<TaskStats> taskStats) {\n    String longest = OP;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\n        String name = stat.getTask().getName();\n        if (name.length() > longest.length()) {\n          longest = name;\n        }\n      }\n    }\n    return longest;\n  }\n\n","sourceOld":"  /**\n   * find the longest op name out of completed tasks.  \n   * @param taskStats completed tasks to be considered.\n   * @return the longest op name out of completed tasks.\n   */\n  protected String longestOp(Iterator taskStats) {\n    String longest = OP;\n    while (taskStats.hasNext()) {\n      TaskStats stat = (TaskStats) taskStats.next();\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\n        String name = stat.getTask().getName();\n        if (name.length() > longest.length()) {\n          longest = name;\n        }\n      }\n    }\n    return longest;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e1ce9be74263e9659aad8a6ee1f213193710b71"]},"commit2Childs":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}