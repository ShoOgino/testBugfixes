{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","commits":[{"id":"d64148a458eb3ddf4d1bb1f1753cb9af194e1707","date":1247144811,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","pathOld":"/dev/null","sourceNew":"  public void testSearchPhraseSlop() throws Exception {\n    // \"a b c\"~0\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 2 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 4 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n\n    // \"a b c\"~1\n    query = pqF( 1F, 1, \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    \n    // \"a b c\" w/ position-gap = 3\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 3 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 6 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","sourceNew":"  public void testSearchPhraseSlop() throws Exception {\n    // \"a b c\"~0\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 2 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 4 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n\n    // \"a b c\"~1\n    query = pqF( 1F, 1, \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    \n    // \"a b c\" w/ position-gap = 3\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 3 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 6 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n  }\n\n","sourceOld":"  public void testSearchPhraseSlop() throws Exception {\n    // \"a b c\"~0\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 2 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 4 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n\n    // \"a b c\"~1\n    query = pqF( 1F, 1, \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    \n    // \"a b c\" w/ position-gap = 3\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 3 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 6 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}