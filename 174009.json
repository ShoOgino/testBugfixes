{"path":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","commits":[{"id":"fd45d359393ce293fc33bb4770a2fa8582298ee4","date":1356134855,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"/dev/null","sourceNew":"  public void test404ViaHttp() throws SolrServerException {\n    SolrServer server = getSolrServer();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(server);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"/dev/null","sourceNew":"  public void test404ViaHttp() throws SolrServerException {\n    SolrServer server = getSolrServer();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(server);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","sourceNew":"  public void test404ViaHttp() throws SolrServerException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","sourceOld":"  public void test404ViaHttp() throws SolrServerException {\n    SolrServer server = getSolrServer();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(server);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa","date":1425039471,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","sourceNew":"  public void test404ViaHttp() throws SolrServerException, IOException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","sourceOld":"  public void test404ViaHttp() throws SolrServerException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","sourceNew":"  public void test404ViaHttp() throws SolrServerException, IOException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","sourceOld":"  public void test404ViaHttp() throws SolrServerException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","sourceNew":"  public void test404ViaHttp() throws Exception {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    SolrException e = expectThrows(SolrException.class, () -> request.process(client));\n    assertEquals(404, e.code());\n  }\n\n","sourceOld":"  public void test404ViaHttp() throws SolrServerException, IOException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","sourceNew":"  public void test404ViaHttp() throws Exception {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    SolrException e = expectThrows(SolrException.class, () -> request.process(client));\n    assertEquals(404, e.code());\n  }\n\n","sourceOld":"  public void test404ViaHttp() throws SolrServerException, IOException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/ShowFileRequestHandlerTest#test404ViaHttp().mjava","sourceNew":"  public void test404ViaHttp() throws Exception {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    SolrException e = expectThrows(SolrException.class, () -> request.process(client));\n    assertEquals(404, e.code());\n  }\n\n","sourceOld":"  public void test404ViaHttp() throws SolrServerException, IOException {\n    SolrClient client = getSolrClient();\n    QueryRequest request = new QueryRequest(params(\"file\",\n                                                   \"does-not-exist-404.txt\"));\n    request.setPath(\"/admin/file\");\n    try {\n      QueryResponse resp = request.process(client);\n      fail(\"didn't get 404 exception\");\n    } catch (SolrException e) {\n      assertEquals(404, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd45d359393ce293fc33bb4770a2fa8582298ee4"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd45d359393ce293fc33bb4770a2fa8582298ee4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["fd45d359393ce293fc33bb4770a2fa8582298ee4"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fd45d359393ce293fc33bb4770a2fa8582298ee4"],"fd45d359393ce293fc33bb4770a2fa8582298ee4":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}