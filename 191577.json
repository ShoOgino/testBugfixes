{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","commits":[{"id":"d47a51687a906464022060653be52ed62dfa2c18","date":1391087530,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","pathOld":"/dev/null","sourceNew":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, indexDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","sourceNew":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","sourceOld":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","sourceNew":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","sourceOld":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","sourceNew":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    w.close();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","sourceOld":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c6c784f777a2cc8fa014507ea129526822714d","date":1579733373,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testDirectory().mjava","sourceNew":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 600;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    w.close();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","sourceOld":"  public void testDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    final IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    final DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    // first empty commit\n    w.commit();\n    tw.commit();\n    final SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    final FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"field\", true);\n    final AtomicBoolean stop = new AtomicBoolean();\n\n    // How many unique facets to index before stopping:\n    final int ordLimit = TEST_NIGHTLY ? 100000 : 6000;\n\n    Thread indexer = new IndexerThread(w, config, tw, mgr, ordLimit, stop);\n    indexer.start();\n\n    try {\n      while (!stop.get()) {\n        SearcherAndTaxonomy pair = mgr.acquire();\n        try {\n          //System.out.println(\"search maxOrd=\" + pair.taxonomyReader.getSize());\n          FacetsCollector sfc = new FacetsCollector();\n          pair.searcher.search(new MatchAllDocsQuery(), sfc);\n          Facets facets = getTaxonomyFacetCounts(pair.taxonomyReader, config, sfc);\n          FacetResult result = facets.getTopChildren(10, \"field\");\n          if (pair.searcher.getIndexReader().numDocs() > 0) { \n            //System.out.println(pair.taxonomyReader.getSize());\n            assertTrue(result.childCount > 0);\n            assertTrue(result.labelValues.length > 0);\n          }\n\n          //if (VERBOSE) {\n          //System.out.println(\"TEST: facets=\" + FacetTestUtils.toString(results.get(0)));\n          //}\n        } finally {\n          mgr.release(pair);\n        }\n      }\n    } finally {\n      indexer.join();\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: now stop\");\n    }\n\n    w.close();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d47a51687a906464022060653be52ed62dfa2c18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"57c6c784f777a2cc8fa014507ea129526822714d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d47a51687a906464022060653be52ed62dfa2c18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c6c784f777a2cc8fa014507ea129526822714d"]},"commit2Childs":{"d47a51687a906464022060653be52ed62dfa2c18":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"57c6c784f777a2cc8fa014507ea129526822714d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d47a51687a906464022060653be52ed62dfa2c18"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["57c6c784f777a2cc8fa014507ea129526822714d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}