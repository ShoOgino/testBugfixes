{"path":"lucene/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer));\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength));\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer));\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength));\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer));\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength));\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer));\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength));\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}