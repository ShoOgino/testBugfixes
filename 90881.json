{"path":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  public String stringValue() {\n    return fieldsData instanceof String ? (String) fieldsData : null;\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  public String stringValue() {\n    return fieldsData instanceof String ? (String) fieldsData : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"621520e8943e605a0ce845cf205adcfd6194b587","date":1346785264,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  public String stringValue() {\n    return fieldsData instanceof String ? (String) fieldsData : null;\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c60fbe1aa6c47eeb51c804909248106f8d95113","date":1470129030,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * binaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * binaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * binaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * getBinaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e7ba4f223712927a09f4dfb65a4c261d07ccc54","date":1544513757,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#stringValue().mjava","sourceNew":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * binaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof CharSequence || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * The value of the field as a String, or null. If null, the Reader value or\n   * binary value is used. Exactly one of stringValue(), readerValue(), and\n   * binaryValue() must be set.\n   */\n  @Override\n  public String stringValue() {\n    if (fieldsData instanceof String || fieldsData instanceof Number) {\n      return fieldsData.toString();\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["621520e8943e605a0ce845cf205adcfd6194b587","7530de27b87b961b51f01bd1299b7004d46e8823"],"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["0c60fbe1aa6c47eeb51c804909248106f8d95113"],"0c60fbe1aa6c47eeb51c804909248106f8d95113":["7530de27b87b961b51f01bd1299b7004d46e8823"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["621520e8943e605a0ce845cf205adcfd6194b587"],"621520e8943e605a0ce845cf205adcfd6194b587":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7530de27b87b961b51f01bd1299b7004d46e8823","0c60fbe1aa6c47eeb51c804909248106f8d95113"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["7530de27b87b961b51f01bd1299b7004d46e8823","0c60fbe1aa6c47eeb51c804909248106f8d95113"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0c60fbe1aa6c47eeb51c804909248106f8d95113":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["621520e8943e605a0ce845cf205adcfd6194b587"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0c60fbe1aa6c47eeb51c804909248106f8d95113","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"621520e8943e605a0ce845cf205adcfd6194b587":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}