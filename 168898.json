{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","commits":[{"id":"d984627825732e682759c22df7a3b171a80f3812","date":1461857653,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","pathOld":"/dev/null","sourceNew":"    private List<String> translateMatch(RexNode condition) {\n      return translateOr(condition);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90","date":1461958396,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","sourceNew":"    private String translateMatch(RexNode condition) {\n      return translateOr(condition);\n    }\n\n","sourceOld":"    private List<String> translateMatch(RexNode condition) {\n      return translateOr(condition);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36b1ce25b5b465615c00f409ce694664abbe7bd2","date":1481836328,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","sourceNew":"    private String translateMatch(RexNode condition) {\n      if(condition.getKind().belongsTo(SqlKind.COMPARISON)) {\n        return translateComparison(condition);\n      } else if(condition.isA(SqlKind.AND)) {\n        return \"(\"+translateAnd(condition)+\")\";\n      } else if(condition.isA(SqlKind.OR)) {\n        return \"(\" + translateOr(condition) + \")\";\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    private String translateMatch(RexNode condition) {\n      return translateOr(condition);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5cb41f0427fb7a75b0bfefe992561738c11fd80","date":1486576891,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","sourceNew":"    private String translateMatch(RexNode condition) {\n      if (condition.getKind().belongsTo(SqlKind.COMPARISON)) {\n        return translateComparison(condition);\n      } else if (condition.isA(SqlKind.AND)) {\n        return \"(\" + translateAnd(condition) + \")\";\n      } else if (condition.isA(SqlKind.OR)) {\n        return \"(\" + translateOr(condition) + \")\";\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    private String translateMatch(RexNode condition) {\n      if(condition.getKind().belongsTo(SqlKind.COMPARISON)) {\n        return translateComparison(condition);\n      } else if(condition.isA(SqlKind.AND)) {\n        return \"(\"+translateAnd(condition)+\")\";\n      } else if(condition.isA(SqlKind.OR)) {\n        return \"(\" + translateOr(condition) + \")\";\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":0,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrFilter.Translator#translateMatch(RexNode).mjava","pathOld":"/dev/null","sourceNew":"    private String translateMatch(RexNode condition) {\n      if (condition.getKind().belongsTo(SqlKind.COMPARISON)) {\n        return translateComparison(condition);\n      } else if (condition.isA(SqlKind.AND)) {\n        return \"(\" + translateAnd(condition) + \")\";\n      } else if (condition.isA(SqlKind.OR)) {\n        return \"(\" + translateOr(condition) + \")\";\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d5cb41f0427fb7a75b0bfefe992561738c11fd80"],"d5cb41f0427fb7a75b0bfefe992561738c11fd80":["36b1ce25b5b465615c00f409ce694664abbe7bd2"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["c1bfdd692c5b78fe01e8f90339fb1edbcc887a90"],"d984627825732e682759c22df7a3b171a80f3812":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90":["d984627825732e682759c22df7a3b171a80f3812"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d5cb41f0427fb7a75b0bfefe992561738c11fd80":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["d5cb41f0427fb7a75b0bfefe992561738c11fd80"],"d984627825732e682759c22df7a3b171a80f3812":["c1bfdd692c5b78fe01e8f90339fb1edbcc887a90"],"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90":["36b1ce25b5b465615c00f409ce694664abbe7bd2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","d984627825732e682759c22df7a3b171a80f3812"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}