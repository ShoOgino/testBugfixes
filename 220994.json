{"path":"backwards/src/java/org/apache/lucene/search/function/FieldScoreQuery#FieldScoreQuery(String,Type).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/function/FieldScoreQuery#FieldScoreQuery(String,Type).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a FieldScoreQuery - a query that scores each document as the value of the numeric input field.\n   * <p>\n   * The <code>type</code> param tells how to parse the field string values into a numeric score value.\n   * @param field the numeric field to be used.\n   * @param type the type of the field: either\n   * {@link Type#BYTE}, {@link Type#SHORT}, {@link Type#INT}, or {@link Type#FLOAT}. \n   */\n  public FieldScoreQuery(String field, Type type) {\n    super(getValueSource(field,type));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/function/FieldScoreQuery#FieldScoreQuery(String,Type).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/function/FieldScoreQuery#FieldScoreQuery(String,Type).mjava","sourceNew":"  /**\n   * Create a FieldScoreQuery - a query that scores each document as the value of the numeric input field.\n   * <p>\n   * The <code>type</code> param tells how to parse the field string values into a numeric score value.\n   * @param field the numeric field to be used.\n   * @param type the type of the field: either\n   * {@link Type#BYTE}, {@link Type#SHORT}, {@link Type#INT}, or {@link Type#FLOAT}. \n   */\n  public FieldScoreQuery(String field, Type type) {\n    super(getValueSource(field,type));\n  }\n\n","sourceOld":"  /**\n   * Create a FieldScoreQuery - a query that scores each document as the value of the numeric input field.\n   * <p>\n   * The <code>type</code> param tells how to parse the field string values into a numeric score value.\n   * @param field the numeric field to be used.\n   * @param type the type of the field: either\n   * {@link Type#BYTE}, {@link Type#SHORT}, {@link Type#INT}, or {@link Type#FLOAT}. \n   */\n  public FieldScoreQuery(String field, Type type) {\n    super(getValueSource(field,type));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}