{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","commits":[{"id":"6ce825e9276493231308229152c48f755ce1a0a5","date":1348871483,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"/dev/null","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n\n    List<TermFreq> keys = Arrays.asList(new TermFreq[] {\n        new TermFreq(\"a\", 40),\n        new TermFreq(\"a \", 50),\n        new TermFreq(\" a\", 60),\n      });\n\n    Collections.shuffle(keys, random());\n    suggester.build(new TermFreqArrayIterator(keys));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["889901f1b564e80868c57d5f3743f4ddbb4ce44a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"889901f1b564e80868c57d5f3743f4ddbb4ce44a","date":1375181138,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n    suggester.build(new TermFreqArrayIterator(shuffle(new TermFreq(\"a\", 40),\n        new TermFreq(\"a \", 50), new TermFreq(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n\n    List<TermFreq> keys = Arrays.asList(new TermFreq[] {\n        new TermFreq(\"a\", 40),\n        new TermFreq(\"a \", 50),\n        new TermFreq(\" a\", 60),\n      });\n\n    Collections.shuffle(keys, random());\n    suggester.build(new TermFreqArrayIterator(keys));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":["6ce825e9276493231308229152c48f755ce1a0a5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n    suggester.build(new TermFreqArrayIterator(shuffle(new TermFreq(\"a\", 40),\n        new TermFreq(\"a \", 50), new TermFreq(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n\n    List<TermFreq> keys = Arrays.asList(new TermFreq[] {\n        new TermFreq(\"a\", 40),\n        new TermFreq(\"a \", 50),\n        new TermFreq(\" a\", 60),\n      });\n\n    Collections.shuffle(keys, random());\n    suggester.build(new TermFreqArrayIterator(keys));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n    suggester.build(new TermFreqPayloadArrayIterator(shuffle(new TermFreqPayload(\"a\", 40),\n        new TermFreqPayload(\"a \", 50), new TermFreqPayload(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n    suggester.build(new TermFreqArrayIterator(shuffle(new TermFreq(\"a\", 40),\n        new TermFreq(\"a \", 50), new TermFreq(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n    suggester.build(new TermFreqPayloadArrayIterator(shuffle(new TermFreqPayload(\"a\", 40),\n        new TermFreqPayload(\"a \", 50), new TermFreqPayload(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4e0095ef720d1b8e7406847147af69f19af3ab6","date":1383131477,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, false);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33f87fe6faf49dfc1e66f45e841e24838c2f725c","date":1383142987,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, true);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, false);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, true);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n    a.close();\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, true);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, true);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n    a.close();\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, true);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testMaxSurfaceFormsPerAnalyzedForm().mjava","sourceNew":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    Directory tempDir = getDirectory();\n    AnalyzingSuggester suggester = new AnalyzingSuggester(tempDir, \"suggest\", a, a, 0, 2, -1, true);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n    IOUtils.close(a, tempDir);\n  }\n\n","sourceOld":"  public void testMaxSurfaceFormsPerAnalyzedForm() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, 0, 2, -1, true);\n    suggester.build(new InputArrayIterator(shuffle(new Input(\"a\", 40),\n        new Input(\"a \", 50), new Input(\" a\", 60))));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 5);\n    assertEquals(2, results.size());\n    assertEquals(\" a\", results.get(0).key);\n    assertEquals(60, results.get(0).value);\n    assertEquals(\"a \", results.get(1).key);\n    assertEquals(50, results.get(1).value);\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["33f87fe6faf49dfc1e66f45e841e24838c2f725c","a56958d7f71a28824f20031ffbb2e13502a0274e"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["6ce825e9276493231308229152c48f755ce1a0a5"],"889901f1b564e80868c57d5f3743f4ddbb4ce44a":["6ce825e9276493231308229152c48f755ce1a0a5"],"6ce825e9276493231308229152c48f755ce1a0a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["33f87fe6faf49dfc1e66f45e841e24838c2f725c"],"33f87fe6faf49dfc1e66f45e841e24838c2f725c":["d4e0095ef720d1b8e7406847147af69f19af3ab6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"d4e0095ef720d1b8e7406847147af69f19af3ab6":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["889901f1b564e80868c57d5f3743f4ddbb4ce44a"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["d4e0095ef720d1b8e7406847147af69f19af3ab6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ce825e9276493231308229152c48f755ce1a0a5"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"6ce825e9276493231308229152c48f755ce1a0a5":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","889901f1b564e80868c57d5f3743f4ddbb4ce44a"],"889901f1b564e80868c57d5f3743f4ddbb4ce44a":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"33f87fe6faf49dfc1e66f45e841e24838c2f725c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","867e3d9153fb761456b54a9dcce566e1545c5ef6"],"d4e0095ef720d1b8e7406847147af69f19af3ab6":["33f87fe6faf49dfc1e66f45e841e24838c2f725c"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}