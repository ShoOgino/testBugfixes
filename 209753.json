{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, it's just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}