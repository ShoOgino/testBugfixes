{"path":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","commits":[{"id":"68a5c887424a2c6209bb3e87715125a2d398f6b9","date":1247133435,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"/dev/null","sourceNew":"  public void testReplicateAfterWrite2Slave() throws Exception {\n\n    //add 500 docs to master\n    for (int i = 0; i < 500; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(500, masterQueryResult.getNumFound());\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6853de074db2da34eea5de01389349474d656fb4","date":1254141855,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  public void testReplicateAfterWrite2Slave() throws Exception {\n\n    //add 500 docs to master\n    for (int i = 0; i < 500; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(500, masterQueryResult.getNumFound());\n\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  public void testReplicateAfterWrite2Slave() throws Exception {\n\n    //add 500 docs to master\n    for (int i = 0; i < 500; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(500, masterQueryResult.getNumFound());\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c73f127dda0f4628ecb8123d310b5d17259ad4fb","date":1254238909,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  public void testReplicateAfterWrite2Slave() throws Exception {\n\n    //add 500 docs to master\n    for (int i = 0; i < 500; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(500, masterQueryResult.getNumFound());\n\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":["379ec215b82e132c6741b5211d9cd8cfc30aa02a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c73f127dda0f4628ecb8123d310b5d17259ad4fb":["6853de074db2da34eea5de01389349474d656fb4"],"6853de074db2da34eea5de01389349474d656fb4":["68a5c887424a2c6209bb3e87715125a2d398f6b9"],"68a5c887424a2c6209bb3e87715125a2d398f6b9":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c73f127dda0f4628ecb8123d310b5d17259ad4fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c73f127dda0f4628ecb8123d310b5d17259ad4fb":["ad94625fb8d088209f46650c8097196fec67f00c"],"6853de074db2da34eea5de01389349474d656fb4":["c73f127dda0f4628ecb8123d310b5d17259ad4fb"],"68a5c887424a2c6209bb3e87715125a2d398f6b9":["6853de074db2da34eea5de01389349474d656fb4"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["68a5c887424a2c6209bb3e87715125a2d398f6b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}