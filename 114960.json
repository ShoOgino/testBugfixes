{"path":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query).mjava","commits":[{"id":"25f40dbcd244dc82447a23719db34376cdcc9cfe","date":1461323366,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query).mjava","pathOld":"/dev/null","sourceNew":"  /** Whether the given {@link Query} is worth caching.\n   *  This method will be called by the {@link QueryCache} to know whether to\n   *  cache. It will first attempt to load a {@link DocIdSet} from the cache.\n   *  If it is not cached yet and this method returns <tt>true</tt> then a\n   *  cache entry will be generated. Otherwise an uncached scorer will be\n   *  returned. */\n  boolean shouldCache(Query query) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query).mjava","pathOld":"/dev/null","sourceNew":"  /** Whether the given {@link Query} is worth caching.\n   *  This method will be called by the {@link QueryCache} to know whether to\n   *  cache. It will first attempt to load a {@link DocIdSet} from the cache.\n   *  If it is not cached yet and this method returns <tt>true</tt> then a\n   *  cache entry will be generated. Otherwise an uncached scorer will be\n   *  returned. */\n  boolean shouldCache(Query query) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query).mjava","sourceNew":"  /** Whether the given {@link Query} is worth caching.\n   *  This method will be called by the {@link QueryCache} to know whether to\n   *  cache. It will first attempt to load a {@link DocIdSet} from the cache.\n   *  If it is not cached yet and this method returns <code>true</code> then a\n   *  cache entry will be generated. Otherwise an uncached scorer will be\n   *  returned. */\n  boolean shouldCache(Query query) throws IOException;\n\n","sourceOld":"  /** Whether the given {@link Query} is worth caching.\n   *  This method will be called by the {@link QueryCache} to know whether to\n   *  cache. It will first attempt to load a {@link DocIdSet} from the cache.\n   *  If it is not cached yet and this method returns <tt>true</tt> then a\n   *  cache entry will be generated. Otherwise an uncached scorer will be\n   *  returned. */\n  boolean shouldCache(Query query) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","25f40dbcd244dc82447a23719db34376cdcc9cfe"],"25f40dbcd244dc82447a23719db34376cdcc9cfe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","25f40dbcd244dc82447a23719db34376cdcc9cfe"],"25f40dbcd244dc82447a23719db34376cdcc9cfe":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}