{"path":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","commits":[{"id":"f34d83c894e07c24f5f957820777b5da2cc29e5a","date":1489491395,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b","date":1489651910,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","sourceNew":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer().getMetricManager());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","sourceOld":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"750239682d222924398443d581163940f48d68fc","date":1533297311,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","sourceNew":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","sourceOld":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer().getMetricManager());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","sourceNew":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testCompact().mjava","sourceNew":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCompact() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Number);\n    handler.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["f34d83c894e07c24f5f957820777b5da2cc29e5a"],"ba055e19afc289adcb5bedaf68513793a7254012":["750239682d222924398443d581163940f48d68fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f34d83c894e07c24f5f957820777b5da2cc29e5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b"],"750239682d222924398443d581163940f48d68fc":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["ba055e19afc289adcb5bedaf68513793a7254012"],"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["750239682d222924398443d581163940f48d68fc"],"ba055e19afc289adcb5bedaf68513793a7254012":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f34d83c894e07c24f5f957820777b5da2cc29e5a","ab68488225b6a6c357dda72ed11dedca9914a192","0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b"],"f34d83c894e07c24f5f957820777b5da2cc29e5a":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"750239682d222924398443d581163940f48d68fc":["ba055e19afc289adcb5bedaf68513793a7254012"],"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b":["ab68488225b6a6c357dda72ed11dedca9914a192"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}