{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String).mjava","commits":[{"id":"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","date":1411674127,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the Long value of the param, or null if not set */\n  public Long getLong(String param) {\n    String val = get(param);\n    try {\n      return val == null ? null : Long.valueOf(val);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","date":1411744836,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the Long value of the param, or null if not set */\n  public Long getLong(String param) {\n    String val = get(param);\n    try {\n      return val == null ? null : Long.valueOf(val);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ed124d21605b0e41f648c25f80f60ba1828e78a","date":1477056513,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String).mjava","sourceNew":"  /** \n   * Returns the Long value of the param, or null if not set \n   * Use this method only when you want to be explicit \n   * about absence of a value (<code>null</code>) vs the default value zero (<code>0</code>).  \n   * @see #getLong(String, long) \n   *\n   **/\n  public Long getLong(String param) {\n    String val = get(param);\n    try {\n      return val == null ? null : Long.valueOf(val);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex);\n    }\n  }\n\n","sourceOld":"  /** Returns the Long value of the param, or null if not set */\n  public Long getLong(String param) {\n    String val = get(param);\n    try {\n      return val == null ? null : Long.valueOf(val);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String).mjava","sourceNew":"  /** \n   * Returns the Long value of the param, or null if not set \n   * Use this method only when you want to be explicit \n   * about absence of a value (<code>null</code>) vs the default value zero (<code>0</code>).  \n   * @see #getLong(String, long) \n   *\n   **/\n  public Long getLong(String param) {\n    String val = get(param);\n    try {\n      return val == null ? null : Long.valueOf(val);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex);\n    }\n  }\n\n","sourceOld":"  /** Returns the Long value of the param, or null if not set */\n  public Long getLong(String param) {\n    String val = get(param);\n    try {\n      return val == null ? null : Long.valueOf(val);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ed124d21605b0e41f648c25f80f60ba1828e78a":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","8ed124d21605b0e41f648c25f80f60ba1828e78a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ed124d21605b0e41f648c25f80f60ba1828e78a"]},"commit2Childs":{"8ed124d21605b0e41f648c25f80f60ba1828e78a":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["8ed124d21605b0e41f648c25f80f60ba1828e78a","da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","da951a24a6a87d5ba7e1820f8c28a1e2beea76c1"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}