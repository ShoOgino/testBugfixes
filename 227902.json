{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","commits":[{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","sourceNew":"    public CompressedBinaryDocValues(BinaryEntry bytes, MonotonicBlockPackedReader addresses, ReverseTermsIndex index, IndexInput data) throws IOException {\n      this.maxTermLength = bytes.maxLength;\n      this.numValues = bytes.count;\n      this.addresses = addresses;\n      this.numIndexValues = addresses.size();\n      this.data = data;\n      this.reverseTerms = index.terms;\n      this.reverseAddresses = index.termAddresses;\n      this.numReverseIndexValues = reverseAddresses.size();\n      this.termsEnum = getTermsEnum(data);\n    }\n\n","sourceOld":"    public CompressedBinaryDocValues(BinaryEntry bytes, MonotonicBlockPackedReader addresses, ReverseTermsIndex index, IndexInput data) throws IOException {\n      this.maxTermLength = bytes.maxLength;\n      this.numValues = bytes.count;\n      this.addresses = addresses;\n      this.numIndexValues = addresses.size();\n      this.data = data;\n      this.reverseTerms = index.terms;\n      this.reverseAddresses = index.termAddresses;\n      this.numReverseIndexValues = reverseAddresses.size();\n      this.termsEnum = getTermsEnum(data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","sourceNew":"    public CompressedBinaryDocValues(BinaryEntry bytes, MonotonicBlockPackedReader addresses, ReverseTermsIndex index, IndexInput data) throws IOException {\n      this.maxTermLength = bytes.maxLength;\n      this.numValues = bytes.count;\n      this.addresses = addresses;\n      this.numIndexValues = addresses.size();\n      this.data = data;\n      this.reverseTerms = index.terms;\n      this.reverseAddresses = index.termAddresses;\n      this.numReverseIndexValues = reverseAddresses.size();\n      this.termsEnum = getTermsEnum(data);\n    }\n\n","sourceOld":"    public CompressedBinaryDocValues(BinaryEntry bytes, MonotonicBlockPackedReader addresses, ReverseTermsIndex index, IndexInput data) throws IOException {\n      this.maxTermLength = bytes.maxLength;\n      this.numValues = bytes.count;\n      this.addresses = addresses;\n      this.numIndexValues = addresses.size();\n      this.data = data;\n      this.reverseTerms = index.terms;\n      this.reverseAddresses = index.termAddresses;\n      this.numReverseIndexValues = reverseAddresses.size();\n      this.termsEnum = getTermsEnum(data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85b9829d27224bda451a373a47f081afb1c664b8","date":1498846708,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","sourceNew":null,"sourceOld":"    public CompressedBinaryDocValues(BinaryEntry bytes, MonotonicBlockPackedReader addresses, ReverseTermsIndex index, IndexInput data) throws IOException {\n      this.maxTermLength = bytes.maxLength;\n      this.numValues = bytes.count;\n      this.addresses = addresses;\n      this.numIndexValues = addresses.size();\n      this.data = data;\n      this.reverseTerms = index.terms;\n      this.reverseAddresses = index.termAddresses;\n      this.numReverseIndexValues = reverseAddresses.size();\n      this.termsEnum = getTermsEnum(data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc018b79379c67835b40b1259cd3dc931df60944","date":1499109112,"type":4,"author":"Anshum Gupta","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","sourceNew":null,"sourceOld":"    public CompressedBinaryDocValues(BinaryEntry bytes, MonotonicBlockPackedReader addresses, ReverseTermsIndex index, IndexInput data) throws IOException {\n      this.maxTermLength = bytes.maxLength;\n      this.numValues = bytes.count;\n      this.addresses = addresses;\n      this.numIndexValues = addresses.size();\n      this.data = data;\n      this.reverseTerms = index.terms;\n      this.reverseAddresses = index.termAddresses;\n      this.numReverseIndexValues = reverseAddresses.size();\n      this.termsEnum = getTermsEnum(data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer.CompressedBinaryDocValues#CompressedBinaryDocValues(BinaryEntry,MonotonicBlockPackedReader,ReverseTermsIndex,IndexInput).mjava","sourceNew":null,"sourceOld":"    public CompressedBinaryDocValues(BinaryEntry bytes, MonotonicBlockPackedReader addresses, ReverseTermsIndex index, IndexInput data) throws IOException {\n      this.maxTermLength = bytes.maxLength;\n      this.numValues = bytes.count;\n      this.addresses = addresses;\n      this.numIndexValues = addresses.size();\n      this.data = data;\n      this.reverseTerms = index.terms;\n      this.reverseAddresses = index.termAddresses;\n      this.numReverseIndexValues = reverseAddresses.size();\n      this.termsEnum = getTermsEnum(data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc018b79379c67835b40b1259cd3dc931df60944":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","85b9829d27224bda451a373a47f081afb1c664b8"],"30c8e5574b55d57947e989443dfde611646530ee":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","cc018b79379c67835b40b1259cd3dc931df60944"],"85b9829d27224bda451a373a47f081afb1c664b8":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc018b79379c67835b40b1259cd3dc931df60944"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["cc018b79379c67835b40b1259cd3dc931df60944","30c8e5574b55d57947e989443dfde611646530ee","85b9829d27224bda451a373a47f081afb1c664b8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cc018b79379c67835b40b1259cd3dc931df60944":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30c8e5574b55d57947e989443dfde611646530ee":[],"85b9829d27224bda451a373a47f081afb1c664b8":["cc018b79379c67835b40b1259cd3dc931df60944"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}