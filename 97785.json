{"path":"solr/core/src/java/org/apache/solr/schema/BinaryField#createField(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BinaryField#createField(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BinaryField#createField(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object val) {\n    if (val == null) return null;\n    if (!field.stored()) {\n      log.trace(\"Ignoring unstored binary field: \" + field);\n      return null;\n    }\n    byte[] buf = null;\n    int offset = 0, len = 0;\n    if (val instanceof byte[]) {\n      buf = (byte[]) val;\n      len = buf.length;\n    } else if (val instanceof ByteBuffer && ((ByteBuffer)val).hasArray()) {\n      ByteBuffer byteBuf = (ByteBuffer) val;\n      buf = byteBuf.array();\n      offset = byteBuf.position();\n      len = byteBuf.limit() - byteBuf.position();\n    } else {\n      String strVal = val.toString();\n      //the string has to be a base64 encoded string\n      buf = Base64.base64ToByteArray(strVal);\n      offset = 0;\n      len = buf.length;\n    }\n\n    return new org.apache.lucene.document.StoredField(field.getName(), buf, offset, len);\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(SchemaField field, Object val, float boost) {\n    if (val == null) return null;\n    if (!field.stored()) {\n      log.trace(\"Ignoring unstored binary field: \" + field);\n      return null;\n    }\n    byte[] buf = null;\n    int offset = 0, len = 0;\n    if (val instanceof byte[]) {\n      buf = (byte[]) val;\n      len = buf.length;\n    } else if (val instanceof ByteBuffer && ((ByteBuffer)val).hasArray()) {\n      ByteBuffer byteBuf = (ByteBuffer) val;\n      buf = byteBuf.array();\n      offset = byteBuf.position();\n      len = byteBuf.limit() - byteBuf.position();\n    } else {\n      String strVal = val.toString();\n      //the string has to be a base64 encoded string\n      buf = Base64.base64ToByteArray(strVal);\n      offset = 0;\n      len = buf.length;\n    }\n\n    Field f = new org.apache.lucene.document.StoredField(field.getName(), buf, offset, len);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df8125ba9193a2e2e285ed92157810b1952a244","date":1587326330,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BinaryField#createField(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BinaryField#createField(SchemaField,Object).mjava","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object val) {\n    if (val == null) return null;\n    if (!field.stored()) {\n      log.trace(\"Ignoring unstored binary field: {}\", field);\n      return null;\n    }\n    byte[] buf = null;\n    int offset = 0, len = 0;\n    if (val instanceof byte[]) {\n      buf = (byte[]) val;\n      len = buf.length;\n    } else if (val instanceof ByteBuffer && ((ByteBuffer)val).hasArray()) {\n      ByteBuffer byteBuf = (ByteBuffer) val;\n      buf = byteBuf.array();\n      offset = byteBuf.position();\n      len = byteBuf.limit() - byteBuf.position();\n    } else {\n      String strVal = val.toString();\n      //the string has to be a base64 encoded string\n      buf = Base64.base64ToByteArray(strVal);\n      offset = 0;\n      len = buf.length;\n    }\n\n    return new org.apache.lucene.document.StoredField(field.getName(), buf, offset, len);\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(SchemaField field, Object val) {\n    if (val == null) return null;\n    if (!field.stored()) {\n      log.trace(\"Ignoring unstored binary field: \" + field);\n      return null;\n    }\n    byte[] buf = null;\n    int offset = 0, len = 0;\n    if (val instanceof byte[]) {\n      buf = (byte[]) val;\n      len = buf.length;\n    } else if (val instanceof ByteBuffer && ((ByteBuffer)val).hasArray()) {\n      ByteBuffer byteBuf = (ByteBuffer) val;\n      buf = byteBuf.array();\n      offset = byteBuf.position();\n      len = byteBuf.limit() - byteBuf.position();\n    } else {\n      String strVal = val.toString();\n      //the string has to be a base64 encoded string\n      buf = Base64.base64ToByteArray(strVal);\n      offset = 0;\n      len = buf.length;\n    }\n\n    return new org.apache.lucene.document.StoredField(field.getName(), buf, offset, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9df8125ba9193a2e2e285ed92157810b1952a244"],"9df8125ba9193a2e2e285ed92157810b1952a244":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["9df8125ba9193a2e2e285ed92157810b1952a244"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9df8125ba9193a2e2e285ed92157810b1952a244":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}