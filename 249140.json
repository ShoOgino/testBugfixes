{"path":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#doTestQuery(String,List[String],List[String]).mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#doTestQuery(String,List[String],List[String]).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestExportWriter#doTestQuery(String,List[String],List[String]).mjava","sourceNew":"  private void doTestQuery(String query, List<String> trieFields, List<String> pointFields) throws Exception {\n    String trieFieldsFl = String.join(\",\", trieFields);\n    String pointFieldsFl = String.join(\",\", pointFields);\n    String sort = pickRandom((String)pickRandom(trieFields.toArray()), (String)pickRandom(pointFields.toArray())).replace(\"s_\", \"_\") + pickRandom(\" asc\", \" desc\");\n    String resultPoints =  h.query(req(\"q\", query, \"qt\", \"/export\", \"fl\", pointFieldsFl, \"sort\", sort));\n    String resultTries =  h.query(req(\"q\", query, \"qt\", \"/export\", \"fl\", trieFieldsFl, \"sort\", sort));\n    assertJsonEquals(resultPoints.replaceAll(\"_p\", \"\"), resultTries.replaceAll(\"_t\", \"\"));\n  }\n\n","sourceOld":"  private void doTestQuery(String query, List<String> trieFields, List<String> pointFields) throws Exception {\n    String trieFieldsFl = String.join(\",\", trieFields);\n    String pointFieldsFl = String.join(\",\", pointFields);\n    String sort = pickRandom((String)pickRandom(trieFields.toArray()), (String)pickRandom(pointFields.toArray())).replace(\"s_\", \"_\") + pickRandom(\" asc\", \" desc\");\n    String resultPoints =  h.query(req(\"q\", query, \"qt\", \"/export\", \"fl\", pointFieldsFl, \"sort\", sort));\n    String resultTries =  h.query(req(\"q\", query, \"qt\", \"/export\", \"fl\", trieFieldsFl, \"sort\", sort));\n    assertJsonEquals(resultPoints.replaceAll(\"_p\", \"\"), resultTries.replaceAll(\"_t\", \"\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"]},"commit2Childs":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}