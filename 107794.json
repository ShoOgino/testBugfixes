{"path":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#add(Scorer).mjava","commits":[{"id":"f58d67a8f4d66d0872915c9bb14606874988efc3","date":1132166857,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#add(Scorer).mjava","pathOld":"/dev/null","sourceNew":"    /** Add the scorer for a subquery\r\n     * @param scorer the scorer of a subquery of our associated DisjunctionMaxQuery\r\n     */\r\n    public void add(Scorer scorer) throws IOException {\r\n        if ( scorer.next() ) {       // Initialize and retain only if it produces docs\r\n            subScorers.add(scorer);\r\n            more = true;\r\n        }\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca9e1c07be7f899d56eb37b44a2e4ca252744a52","date":1134440386,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#add(Scorer).mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#add(Scorer).mjava","sourceNew":"    /** Add the scorer for a subquery\r\n     * @param scorer the scorer of a subquery of our associated DisjunctionMaxQuery\r\n     */\r\n    public void add(Scorer scorer) throws IOException {\r\n        if (scorer.next()) {       // Initialize and retain only if it produces docs\r\n            subScorers.add(scorer);\r\n            more = true;\r\n        }\r\n    }\r\n\n","sourceOld":"    /** Add the scorer for a subquery\r\n     * @param scorer the scorer of a subquery of our associated DisjunctionMaxQuery\r\n     */\r\n    public void add(Scorer scorer) throws IOException {\r\n        if ( scorer.next() ) {       // Initialize and retain only if it produces docs\r\n            subScorers.add(scorer);\r\n            more = true;\r\n        }\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#add(Scorer).mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#add(Scorer).mjava","sourceNew":"    /** Add the scorer for a subquery\n     * @param scorer the scorer of a subquery of our associated DisjunctionMaxQuery\n     */\n    public void add(Scorer scorer) throws IOException {\n        if (scorer.next()) {       // Initialize and retain only if it produces docs\n            subScorers.add(scorer);\n            more = true;\n        }\n    }\n\n","sourceOld":"    /** Add the scorer for a subquery\r\n     * @param scorer the scorer of a subquery of our associated DisjunctionMaxQuery\r\n     */\r\n    public void add(Scorer scorer) throws IOException {\r\n        if (scorer.next()) {       // Initialize and retain only if it produces docs\r\n            subScorers.add(scorer);\r\n            more = true;\r\n        }\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#add(Scorer).mjava","sourceNew":null,"sourceOld":"    /** Add the scorer for a subquery\n     * @param scorer the scorer of a subquery of our associated DisjunctionMaxQuery\n     */\n    public void add(Scorer scorer) throws IOException {\n        if (scorer.next()) {       // Initialize and retain only if it produces docs\n            subScorers.add(scorer);\n            more = true;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["2123bddbd65dea198cac380540636ce43a880403"],"f58d67a8f4d66d0872915c9bb14606874988efc3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca9e1c07be7f899d56eb37b44a2e4ca252744a52":["f58d67a8f4d66d0872915c9bb14606874988efc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2123bddbd65dea198cac380540636ce43a880403":["ca9e1c07be7f899d56eb37b44a2e4ca252744a52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30a558487f2298c2c19ceca9103c1b6865d64708"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f58d67a8f4d66d0872915c9bb14606874988efc3":["ca9e1c07be7f899d56eb37b44a2e4ca252744a52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f58d67a8f4d66d0872915c9bb14606874988efc3"],"ca9e1c07be7f899d56eb37b44a2e4ca252744a52":["2123bddbd65dea198cac380540636ce43a880403"],"2123bddbd65dea198cac380540636ce43a880403":["30a558487f2298c2c19ceca9103c1b6865d64708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}