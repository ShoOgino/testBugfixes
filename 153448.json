{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#setWrapIfNotCachingTokenFilter(boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#setWrapIfNotCachingTokenFilter(boolean).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#setWrapIfNotCachingTokenFilter(boolean).mjava","sourceNew":"  /**\n   * By default, {@link TokenStream}s that are not of the type\n   * {@link CachingTokenFilter} are wrapped in a {@link CachingTokenFilter} to\n   * ensure an efficient reset - if you are already using a different caching\n   * {@link TokenStream} impl and you don't want it to be wrapped, set this to\n   * false.\n   * \n   * @param wrap\n   */\n  public void setWrapIfNotCachingTokenFilter(boolean wrap) {\n    this.wrapToCaching = wrap;\n  }\n\n","sourceOld":"  /**\n   * By default, {@link TokenStream}s that are not of the type\n   * {@link CachingTokenFilter} are wrapped in a {@link CachingTokenFilter} to\n   * ensure an efficient reset - if you are already using a different caching\n   * {@link TokenStream} impl and you don't want it to be wrapped, set this to\n   * false.\n   * \n   * @param wrap\n   */\n  public void setWrapIfNotCachingTokenFilter(boolean wrap) {\n    this.wrapToCaching = wrap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#setWrapIfNotCachingTokenFilter(boolean).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#setWrapIfNotCachingTokenFilter(boolean).mjava","sourceNew":"  /**\n   * By default, {@link TokenStream}s that are not of the type\n   * {@link CachingTokenFilter} are wrapped in a {@link CachingTokenFilter} to\n   * ensure an efficient reset - if you are already using a different caching\n   * {@link TokenStream} impl and you don't want it to be wrapped, set this to\n   * false.\n   */\n  public void setWrapIfNotCachingTokenFilter(boolean wrap) {\n    this.wrapToCaching = wrap;\n  }\n\n","sourceOld":"  /**\n   * By default, {@link TokenStream}s that are not of the type\n   * {@link CachingTokenFilter} are wrapped in a {@link CachingTokenFilter} to\n   * ensure an efficient reset - if you are already using a different caching\n   * {@link TokenStream} impl and you don't want it to be wrapped, set this to\n   * false.\n   * \n   * @param wrap\n   */\n  public void setWrapIfNotCachingTokenFilter(boolean wrap) {\n    this.wrapToCaching = wrap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aeebe27bce18b879b80f68494c52cda1021b5705","date":1417792137,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#setWrapIfNotCachingTokenFilter(boolean).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#setWrapIfNotCachingTokenFilter(boolean).mjava","sourceNew":"  /**\n   * By default, {@link TokenStream}s that are not of the type\n   * {@link CachingTokenFilter} are wrapped in a {@link CachingTokenFilter} to\n   * ensure an efficient reset - if you are already using a different caching\n   * {@link TokenStream} impl and you don't want it to be wrapped, set this to\n   * false. This setting is ignored when a term vector based TokenStream is supplied,\n   * since it can be reset efficiently.\n   */\n  public void setWrapIfNotCachingTokenFilter(boolean wrap) {\n    this.wrapToCaching = wrap;\n  }\n\n","sourceOld":"  /**\n   * By default, {@link TokenStream}s that are not of the type\n   * {@link CachingTokenFilter} are wrapped in a {@link CachingTokenFilter} to\n   * ensure an efficient reset - if you are already using a different caching\n   * {@link TokenStream} impl and you don't want it to be wrapped, set this to\n   * false.\n   */\n  public void setWrapIfNotCachingTokenFilter(boolean wrap) {\n    this.wrapToCaching = wrap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aeebe27bce18b879b80f68494c52cda1021b5705"],"aeebe27bce18b879b80f68494c52cda1021b5705":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["aeebe27bce18b879b80f68494c52cda1021b5705"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"aeebe27bce18b879b80f68494c52cda1021b5705":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}