{"path":"lucene/test-framework/src/java/org/apache/lucene/util/RollingBuffer#freeBefore(int).mjava","commits":[{"id":"6795c6bc2f5a6b2a2230cb20ff4744003faf7802","date":1333839972,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RollingBuffer#freeBefore(int).mjava","pathOld":"/dev/null","sourceNew":"  public void freeBefore(int pos) {\n    final int toFree = count - (nextPos - pos);\n    assert toFree >= 0;\n    assert toFree <= count: \"toFree=\" + toFree + \" count=\" + count;\n    int index = nextWrite - count;\n    if (index < 0) {\n      index += buffer.length;\n    }\n    for(int i=0;i<toFree;i++) {\n      if (index == buffer.length) {\n        index = 0;\n      }\n      //System.out.println(\"  fb idx=\" + index);\n      buffer[index].reset();\n      index++;\n    }\n    count -= toFree;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ce825e9276493231308229152c48f755ce1a0a5","date":1348871483,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RollingBuffer#freeBefore(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/RollingBuffer#freeBefore(int).mjava","sourceNew":"  public void freeBefore(int pos) {\n    final int toFree = count - (nextPos - pos);\n    assert toFree >= 0;\n    assert toFree <= count: \"toFree=\" + toFree + \" count=\" + count;\n    int index = nextWrite - count;\n    if (index < 0) {\n      index += buffer.length;\n    }\n    for(int i=0;i<toFree;i++) {\n      if (index == buffer.length) {\n        index = 0;\n      }\n      //System.out.println(\"  fb idx=\" + index);\n      buffer[index].reset();\n      index++;\n    }\n    count -= toFree;\n  }\n\n","sourceOld":"  public void freeBefore(int pos) {\n    final int toFree = count - (nextPos - pos);\n    assert toFree >= 0;\n    assert toFree <= count: \"toFree=\" + toFree + \" count=\" + count;\n    int index = nextWrite - count;\n    if (index < 0) {\n      index += buffer.length;\n    }\n    for(int i=0;i<toFree;i++) {\n      if (index == buffer.length) {\n        index = 0;\n      }\n      //System.out.println(\"  fb idx=\" + index);\n      buffer[index].reset();\n      index++;\n    }\n    count -= toFree;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ce825e9276493231308229152c48f755ce1a0a5":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ce825e9276493231308229152c48f755ce1a0a5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"6ce825e9276493231308229152c48f755ce1a0a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["6ce825e9276493231308229152c48f755ce1a0a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}