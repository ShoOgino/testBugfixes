{"path":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.docScorer.score(lastDoc, docs.docs.freq());\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.docScorer.score(lastDoc, docs.docs.freq());\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","date":1342645458,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.docScorer.score(lastDoc, docs.docs.freq());\n    }\n    return sum * coord;\n  }\n\n","bugFix":["ee1513e4ee2237693ff50a460d78dff5246c3d34"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.docScorer.score(lastDoc, docs.docs.freq());\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.docScorer.score(lastDoc, docs.docs.freq());\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6","date":1345834972,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a","date":1363294103,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#score().mjava","sourceNew":null,"sourceOld":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["aba371508186796cc6151d8223a5b4e16d02e26e","d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6"],"aba371508186796cc6151d8223a5b4e16d02e26e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a":["d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["001b25b42373b22a52f399dbf072f1224632e8e6"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["aba371508186796cc6151d8223a5b4e16d02e26e","d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6":["001b25b42373b22a52f399dbf072f1224632e8e6","7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["aba371508186796cc6151d8223a5b4e16d02e26e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}