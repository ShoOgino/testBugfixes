{"path":"solr/core/src/java/org/apache/solr/handler/SnapPuller#slowFileExists(Directory,String).mjava","commits":[{"id":"cd4e13d997cf4fb810398a20a299c2c5a9f6b796","date":1395594336,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#slowFileExists(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns true if the file exists (can be opened), false\n   *  if it cannot be opened, and (unlike Java's\n   *  File.exists) throws IOException if there's some\n   *  unexpected error. */\n  private static boolean slowFileExists(Directory dir, String fileName) throws IOException {\n    try {\n      dir.openInput(fileName, IOContext.DEFAULT).close();\n      return true;\n    } catch (NoSuchFileException | FileNotFoundException e) {\n      return false;\n    }\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":5,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#slowFileExists(Directory,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#slowFileExists(Directory,String).mjava","sourceNew":"  /** Returns true if the file exists (can be opened), false\n   *  if it cannot be opened, and (unlike Java's\n   *  File.exists) throws IOException if there's some\n   *  unexpected error. */\n  private static boolean slowFileExists(Directory dir, String fileName) throws IOException {\n    try {\n      dir.openInput(fileName, IOContext.DEFAULT).close();\n      return true;\n    } catch (NoSuchFileException | FileNotFoundException e) {\n      return false;\n    }\n  }  \n\n","sourceOld":"  /** Returns true if the file exists (can be opened), false\n   *  if it cannot be opened, and (unlike Java's\n   *  File.exists) throws IOException if there's some\n   *  unexpected error. */\n  private static boolean slowFileExists(Directory dir, String fileName) throws IOException {\n    try {\n      dir.openInput(fileName, IOContext.DEFAULT).close();\n      return true;\n    } catch (NoSuchFileException | FileNotFoundException e) {\n      return false;\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#slowFileExists(Directory,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#slowFileExists(Directory,String).mjava","sourceNew":"  /** Returns true if the file exists (can be opened), false\n   *  if it cannot be opened, and (unlike Java's\n   *  File.exists) throws IOException if there's some\n   *  unexpected error. */\n  private static boolean slowFileExists(Directory dir, String fileName) throws IOException {\n    try {\n      dir.openInput(fileName, IOContext.DEFAULT).close();\n      return true;\n    } catch (NoSuchFileException | FileNotFoundException e) {\n      return false;\n    }\n  }  \n\n","sourceOld":"  /** Returns true if the file exists (can be opened), false\n   *  if it cannot be opened, and (unlike Java's\n   *  File.exists) throws IOException if there's some\n   *  unexpected error. */\n  private static boolean slowFileExists(Directory dir, String fileName) throws IOException {\n    try {\n      dir.openInput(fileName, IOContext.DEFAULT).close();\n      return true;\n    } catch (NoSuchFileException | FileNotFoundException e) {\n      return false;\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}