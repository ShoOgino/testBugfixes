{"path":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector#testNullCollectors().mjava","commits":[{"id":"d488a38bddbdcc0d425b27beb126f54df6dd82a4","date":1598268476,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector#testNullCollectors().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/MultiCollectorTest#testNullCollectors().mjava","sourceNew":"  @Test\n  public void testNullCollectors() throws Exception {\n    // Tests that the collector rejects all null collectors.\n    expectThrows(IllegalArgumentException.class, () -> {\n      MultiCollector.wrap(null, null);\n    });\n\n    // Tests that the collector handles some null collectors well. If it\n    // doesn't, an NPE would be thrown.\n    Collector c = MultiCollector.wrap(new DummyCollector(), null, new DummyCollector());\n    assertTrue(c instanceof MultiCollector);\n    final LeafCollector ac = c.getLeafCollector(null);\n    ac.collect(1);\n    c.getLeafCollector(null);\n    c.getLeafCollector(null).setScorer(new ScoreAndDoc());\n  }\n\n","sourceOld":"  @Test\n  public void testNullCollectors() throws Exception {\n    // Tests that the collector rejects all null collectors.\n    expectThrows(IllegalArgumentException.class, () -> {\n      MultiCollector.wrap(null, null);\n    });\n\n    // Tests that the collector handles some null collectors well. If it\n    // doesn't, an NPE would be thrown.\n    Collector c = MultiCollector.wrap(new DummyCollector(), null, new DummyCollector());\n    assertTrue(c instanceof MultiCollector);\n    final LeafCollector ac = c.getLeafCollector(null);\n    ac.collect(1);\n    c.getLeafCollector(null);\n    c.getLeafCollector(null).setScorer(new ScoreAndDoc());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d488a38bddbdcc0d425b27beb126f54df6dd82a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d488a38bddbdcc0d425b27beb126f54df6dd82a4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d488a38bddbdcc0d425b27beb126f54df6dd82a4"],"d488a38bddbdcc0d425b27beb126f54df6dd82a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}