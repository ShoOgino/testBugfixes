{"path":"lucene/backwards/src/demo/org/apache/lucene/demo/IndexFiles#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/demo/org/apache/lucene/demo/IndexFiles#main(String[]).mjava","pathOld":"backwards/src/demo/org/apache/lucene/demo/IndexFiles#main(String[]).mjava","sourceNew":"  /** Index all text files under a directory. */\n  public static void main(String[] args) {\n    String usage = \"java org.apache.lucene.demo.IndexFiles <root_directory>\";\n    if (args.length == 0) {\n      System.err.println(\"Usage: \" + usage);\n      System.exit(1);\n    }\n\n    if (INDEX_DIR.exists()) {\n      System.out.println(\"Cannot save index to '\" +INDEX_DIR+ \"' directory, please delete it first\");\n      System.exit(1);\n    }\n    \n    final File docDir = new File(args[0]);\n    if (!docDir.exists() || !docDir.canRead()) {\n      System.out.println(\"Document directory '\" +docDir.getAbsolutePath()+ \"' does not exist or is not readable, please check the path\");\n      System.exit(1);\n    }\n    \n    Date start = new Date();\n    try {\n      IndexWriter writer = new IndexWriter(FSDirectory.open(INDEX_DIR), new StandardAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      System.out.println(\"Indexing to directory '\" +INDEX_DIR+ \"'...\");\n      indexDocs(writer, docDir);\n      System.out.println(\"Optimizing...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n      System.out.println(end.getTime() - start.getTime() + \" total milliseconds\");\n\n    } catch (IOException e) {\n      System.out.println(\" caught a \" + e.getClass() +\n       \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","sourceOld":"  /** Index all text files under a directory. */\n  public static void main(String[] args) {\n    String usage = \"java org.apache.lucene.demo.IndexFiles <root_directory>\";\n    if (args.length == 0) {\n      System.err.println(\"Usage: \" + usage);\n      System.exit(1);\n    }\n\n    if (INDEX_DIR.exists()) {\n      System.out.println(\"Cannot save index to '\" +INDEX_DIR+ \"' directory, please delete it first\");\n      System.exit(1);\n    }\n    \n    final File docDir = new File(args[0]);\n    if (!docDir.exists() || !docDir.canRead()) {\n      System.out.println(\"Document directory '\" +docDir.getAbsolutePath()+ \"' does not exist or is not readable, please check the path\");\n      System.exit(1);\n    }\n    \n    Date start = new Date();\n    try {\n      IndexWriter writer = new IndexWriter(FSDirectory.open(INDEX_DIR), new StandardAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      System.out.println(\"Indexing to directory '\" +INDEX_DIR+ \"'...\");\n      indexDocs(writer, docDir);\n      System.out.println(\"Optimizing...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n      System.out.println(end.getTime() - start.getTime() + \" total milliseconds\");\n\n    } catch (IOException e) {\n      System.out.println(\" caught a \" + e.getClass() +\n       \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/demo/org/apache/lucene/demo/IndexFiles#main(String[]).mjava","sourceNew":null,"sourceOld":"  /** Index all text files under a directory. */\n  public static void main(String[] args) {\n    String usage = \"java org.apache.lucene.demo.IndexFiles <root_directory>\";\n    if (args.length == 0) {\n      System.err.println(\"Usage: \" + usage);\n      System.exit(1);\n    }\n\n    if (INDEX_DIR.exists()) {\n      System.out.println(\"Cannot save index to '\" +INDEX_DIR+ \"' directory, please delete it first\");\n      System.exit(1);\n    }\n    \n    final File docDir = new File(args[0]);\n    if (!docDir.exists() || !docDir.canRead()) {\n      System.out.println(\"Document directory '\" +docDir.getAbsolutePath()+ \"' does not exist or is not readable, please check the path\");\n      System.exit(1);\n    }\n    \n    Date start = new Date();\n    try {\n      IndexWriter writer = new IndexWriter(FSDirectory.open(INDEX_DIR), new StandardAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      System.out.println(\"Indexing to directory '\" +INDEX_DIR+ \"'...\");\n      indexDocs(writer, docDir);\n      System.out.println(\"Optimizing...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n      System.out.println(end.getTime() - start.getTime() + \" total milliseconds\");\n\n    } catch (IOException e) {\n      System.out.println(\" caught a \" + e.getClass() +\n       \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}