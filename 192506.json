{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#explain(BasicStats,Explanation,double).mjava","commits":[{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#explain(BasicStats,Explanation,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#explain(BasicStats,int,Explanation,double).mjava","sourceNew":"  @Override\n  protected Explanation explain(\n      BasicStats stats, Explanation freq, double docLen) {\n    final double expected = (stats.getTotalTermFreq() + 1) * docLen /\n        (stats.getNumberOfFieldTokens() + 1);\n    if (freq.getValue().doubleValue() <= expected){\n      return Explanation.match((float) 0, \"score(\" +\n          getClass().getSimpleName() + \", freq=\" +\n          freq.getValue() +\"), equals to 0\");\n    }\n    Explanation explExpected = Explanation.match((float) expected,\n        \"expected, computed as (F + 1) * dl / (T + 1) from:\",\n        Explanation.match(stats.getTotalTermFreq(),\n            \"F, total number of occurrences of term across all docs\"),\n        Explanation.match((float) docLen, \"dl, length of field\"),\n        Explanation.match(stats.getNumberOfFieldTokens(),\n            \"T, total number of tokens in the field\"));\n\n    final double measure = independence.score(freq.getValue().doubleValue(), expected);\n    Explanation explMeasure = Explanation.match((float) measure,\n        \"measure, computed as independence.score(freq, expected) from:\",\n        freq,\n        explExpected);\n\n    return Explanation.match(\n        (float) score(stats, freq.getValue().doubleValue(), docLen),\n        \"score(\" + getClass().getSimpleName() + \", freq=\" +\n            freq.getValue() +\"), computed as boost * log2(measure + 1) from:\",\n        Explanation.match( (float)stats.getBoost(), \"boost, query boost\"),\n        explMeasure);\n  }\n\n","sourceOld":"  @Override\n  protected Explanation explain(\n      BasicStats stats, int doc, Explanation freq, double docLen) {\n    final double expected = (stats.getTotalTermFreq() + 1) * docLen /\n        (stats.getNumberOfFieldTokens() + 1);\n    if (freq.getValue().doubleValue() <= expected){\n      return Explanation.match((float) 0, \"score(\" +\n          getClass().getSimpleName() + \", doc=\" + doc + \", freq=\" +\n          freq.getValue() +\"), equals to 0\");\n    }\n    Explanation explExpected = Explanation.match((float) expected,\n        \"expected, computed as (F + 1) * dl / (T + 1) from:\",\n        Explanation.match(stats.getTotalTermFreq(),\n            \"F, total number of occurrences of term across all docs\"),\n        Explanation.match((float) docLen, \"dl, length of field\"),\n        Explanation.match(stats.getNumberOfFieldTokens(),\n            \"T, total number of tokens in the field\"));\n\n    final double measure = independence.score(freq.getValue().doubleValue(), expected);\n    Explanation explMeasure = Explanation.match((float) measure,\n        \"measure, computed as independence.score(freq, expected) from:\",\n        freq,\n        explExpected);\n\n    return Explanation.match(\n        (float) score(stats, freq.getValue().doubleValue(), docLen),\n        \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \", freq=\" +\n            freq.getValue() +\"), computed as boost * log2(measure + 1) from:\",\n        Explanation.match( (float)stats.getBoost(), \"boost, query boost\"),\n        explMeasure);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#explain(BasicStats,Explanation,double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Explanation explain(\n      BasicStats stats, Explanation freq, double docLen) {\n    final double expected = (stats.getTotalTermFreq() + 1) * docLen /\n        (stats.getNumberOfFieldTokens() + 1);\n    if (freq.getValue().doubleValue() <= expected){\n      return Explanation.match((float) 0, \"score(\" +\n          getClass().getSimpleName() + \", freq=\" +\n          freq.getValue() +\"), equals to 0\");\n    }\n    Explanation explExpected = Explanation.match((float) expected,\n        \"expected, computed as (F + 1) * dl / (T + 1) from:\",\n        Explanation.match(stats.getTotalTermFreq(),\n            \"F, total number of occurrences of term across all docs\"),\n        Explanation.match((float) docLen, \"dl, length of field\"),\n        Explanation.match(stats.getNumberOfFieldTokens(),\n            \"T, total number of tokens in the field\"));\n\n    final double measure = independence.score(freq.getValue().doubleValue(), expected);\n    Explanation explMeasure = Explanation.match((float) measure,\n        \"measure, computed as independence.score(freq, expected) from:\",\n        freq,\n        explExpected);\n\n    return Explanation.match(\n        (float) score(stats, freq.getValue().doubleValue(), docLen),\n        \"score(\" + getClass().getSimpleName() + \", freq=\" +\n            freq.getValue() +\"), computed as boost * log2(measure + 1) from:\",\n        Explanation.match( (float)stats.getBoost(), \"boost, query boost\"),\n        explMeasure);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}