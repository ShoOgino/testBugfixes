{"path":"src/java/org/apache/lucene/util/FieldCacheSanityChecker#checkSanity(CacheEntry[]).mjava","commits":[{"id":"e69f59b863731d864bf3047235e718f0f88f8841","date":1250105498,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/FieldCacheSanityChecker#checkSanity(CacheEntry[]).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Quick and dirty convenience method that instantiates an instance with \n   * \"good defaults\" and uses it to test the CacheEntry[]\n   * @see #check\n   */\n  public static Insanity[] checkSanity(CacheEntry[] cacheEntries) {\n    FieldCacheSanityChecker sanityChecker = new FieldCacheSanityChecker();\n    // doesn't check for interned\n    sanityChecker.setRamUsageEstimator(new RamUsageEstimator(false));\n    return sanityChecker.check(cacheEntries);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87e76a976d5469661c89ff8931edd3df1f5b9cb2","date":1258226809,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/FieldCacheSanityChecker#checkSanity(CacheEntry...).mjava","pathOld":"src/java/org/apache/lucene/util/FieldCacheSanityChecker#checkSanity(CacheEntry[]).mjava","sourceNew":"  /** \n   * Quick and dirty convenience method that instantiates an instance with \n   * \"good defaults\" and uses it to test the CacheEntrys\n   * @see #check\n   */\n  public static Insanity[] checkSanity(CacheEntry... cacheEntries) {\n    FieldCacheSanityChecker sanityChecker = new FieldCacheSanityChecker();\n    // doesn't check for interned\n    sanityChecker.setRamUsageEstimator(new RamUsageEstimator(false));\n    return sanityChecker.check(cacheEntries);\n  }\n\n","sourceOld":"  /** \n   * Quick and dirty convenience method that instantiates an instance with \n   * \"good defaults\" and uses it to test the CacheEntry[]\n   * @see #check\n   */\n  public static Insanity[] checkSanity(CacheEntry[] cacheEntries) {\n    FieldCacheSanityChecker sanityChecker = new FieldCacheSanityChecker();\n    // doesn't check for interned\n    sanityChecker.setRamUsageEstimator(new RamUsageEstimator(false));\n    return sanityChecker.check(cacheEntries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"87e76a976d5469661c89ff8931edd3df1f5b9cb2":["e69f59b863731d864bf3047235e718f0f88f8841"],"e69f59b863731d864bf3047235e718f0f88f8841":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87e76a976d5469661c89ff8931edd3df1f5b9cb2"]},"commit2Childs":{"87e76a976d5469661c89ff8931edd3df1f5b9cb2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e69f59b863731d864bf3047235e718f0f88f8841":["87e76a976d5469661c89ff8931edd3df1f5b9cb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e69f59b863731d864bf3047235e718f0f88f8841"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}