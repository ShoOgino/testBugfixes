{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","commits":[{"id":"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","date":1334628185,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T-extends-Object]_createInstance(String,Class[T],String).mjava","sourceNew":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T extends Object> T createInstance(String className, Class<T> cast, String msg) {\n    Class clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className);\n        if (cast != null && !cast.isAssignableFrom(clazz)) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" is not a \" +cast.getName());\n        }\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return (T) getResourceLoader().newInstance(className);//use the empty constructor      \n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22455f5d09943428acbf15c1bd87ba2cad36c08d","date":1345569934,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","sourceNew":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      // The JVM likes to wrap our helpful SolrExceptions in things like\n      // \"InvocationTargetException\" that have no useful getMessage\n      if (null != e.getCause() && e.getCause() instanceof SolrException) {\n        SolrException inner = (SolrException) e.getCause();\n        throw inner;\n      }\n\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","sourceNew":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      // The JVM likes to wrap our helpful SolrExceptions in things like\n      // \"InvocationTargetException\" that have no useful getMessage\n      if (null != e.getCause() && e.getCause() instanceof SolrException) {\n        SolrException inner = (SolrException) e.getCause();\n        throw inner;\n      }\n\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3b687d77563d946578f099495d70e55c92f3f1d","date":1373111282,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","sourceNew":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n        //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n        // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor<?>[] cons =  clazz.getConstructors();\n        for (Constructor<?> con : cons) {\n          Class<?>[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return cast.cast(con.newInstance(this));\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      // The JVM likes to wrap our helpful SolrExceptions in things like\n      // \"InvocationTargetException\" that have no useful getMessage\n      if (null != e.getCause() && e.getCause() instanceof SolrException) {\n        SolrException inner = (SolrException) e.getCause();\n        throw inner;\n      }\n\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      // The JVM likes to wrap our helpful SolrExceptions in things like\n      // \"InvocationTargetException\" that have no useful getMessage\n      if (null != e.getCause() && e.getCause() instanceof SolrException) {\n        SolrException inner = (SolrException) e.getCause();\n        throw inner;\n      }\n\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","sourceNew":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n        //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n        // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor<?>[] cons =  clazz.getConstructors();\n        for (Constructor<?> con : cons) {\n          Class<?>[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return cast.cast(con.newInstance(this));\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      // The JVM likes to wrap our helpful SolrExceptions in things like\n      // \"InvocationTargetException\" that have no useful getMessage\n      if (null != e.getCause() && e.getCause() instanceof SolrException) {\n        SolrException inner = (SolrException) e.getCause();\n        throw inner;\n      }\n\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n      //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n      // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor[] cons =  clazz.getConstructors();\n        for (Constructor con : cons) {\n          Class[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return (T)con.newInstance(this);\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      // The JVM likes to wrap our helpful SolrExceptions in things like\n      // \"InvocationTargetException\" that have no useful getMessage\n      if (null != e.getCause() && e.getCause() instanceof SolrException) {\n        SolrException inner = (SolrException) e.getCause();\n        throw inner;\n      }\n\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1","date":1423220905,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","sourceNew":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    return createInstance(className,cast,msg, this);\n  }\n\n","sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    Class<? extends T> clazz = null;\n    if (msg == null) msg = \"SolrCore Object\";\n    try {\n        clazz = getResourceLoader().findClass(className, cast);\n        //most of the classes do not have constructors which takes SolrCore argument. It is recommended to obtain SolrCore by implementing SolrCoreAware.\n        // So invariably always it will cause a  NoSuchMethodException. So iterate though the list of available constructors\n        Constructor<?>[] cons =  clazz.getConstructors();\n        for (Constructor<?> con : cons) {\n          Class<?>[] types = con.getParameterTypes();\n          if(types.length == 1 && types[0] == SolrCore.class){\n            return cast.cast(con.newInstance(this));\n          }\n        }\n        return getResourceLoader().newInstance(className, cast);//use the empty constructor\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      // The JVM likes to wrap our helpful SolrExceptions in things like\n      // \"InvocationTargetException\" that have no useful getMessage\n      if (null != e.getCause() && e.getCause() instanceof SolrException) {\n        SolrException inner = (SolrException) e.getCause();\n        throw inner;\n      }\n\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Error Instantiating \"+msg+\", \"+className+ \" failed to instantiate \" +cast.getName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","sourceNew":null,"sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    return createInstance(className,cast,msg, this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_createInstance(String,Class[T],String).mjava","sourceNew":null,"sourceOld":"  /** Creates an instance by trying a constructor that accepts a SolrCore before\n   *  trying the default (no arg) constructor.\n   *@param className the instance class to create\n   *@param cast the class or interface that the instance should extend or implement\n   *@param msg a message helping compose the exception error if any occurs.\n   *@return the desired instance\n   *@throws SolrException if the object could not be instantiated\n   */\n  private <T> T createInstance(String className, Class<T> cast, String msg) {\n    return createInstance(className,cast,msg, this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","22455f5d09943428acbf15c1bd87ba2cad36c08d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1","9aea0485ecacb6734c17da2d02569816c23a69c1"],"a3b687d77563d946578f099495d70e55c92f3f1d":["22455f5d09943428acbf15c1bd87ba2cad36c08d"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["22455f5d09943428acbf15c1bd87ba2cad36c08d","a3b687d77563d946578f099495d70e55c92f3f1d"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22455f5d09943428acbf15c1bd87ba2cad36c08d":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1":["a3b687d77563d946578f099495d70e55c92f3f1d"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9aea0485ecacb6734c17da2d02569816c23a69c1"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a3b687d77563d946578f099495d70e55c92f3f1d":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["001b25b42373b22a52f399dbf072f1224632e8e6","22455f5d09943428acbf15c1bd87ba2cad36c08d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"22455f5d09943428acbf15c1bd87ba2cad36c08d":["001b25b42373b22a52f399dbf072f1224632e8e6","a3b687d77563d946578f099495d70e55c92f3f1d","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}