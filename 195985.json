{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runTool(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = -1;\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool();\n        } else {\n          tool = new CreateCoreTool();\n        }\n        result = tool.runTool(cli);\n      } catch (Exception exc) {\n        System.err.println(\"ERROR: create failed due to: \"+exc.getMessage());\n        System.err.println();\n        result = 1;\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b7179395314ddf699861fdd8c18857152660e84","date":1463787399,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runTool(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":["4ca20be81c9284c840498143264e583ccbb8525a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runTool(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runTool(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","date":1503399053,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      ToolBase tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runImpl(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["d470c8182e92b264680e34081b75e70a9f2b3c89","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6b7179395314ddf699861fdd8c18857152660e84":["4ca20be81c9284c840498143264e583ccbb8525a"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4ca20be81c9284c840498143264e583ccbb8525a","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4ca20be81c9284c840498143264e583ccbb8525a","6b7179395314ddf699861fdd8c18857152660e84"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["6b7179395314ddf699861fdd8c18857152660e84","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"6b7179395314ddf699861fdd8c18857152660e84":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}