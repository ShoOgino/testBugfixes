{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuffer res = new StringBuffer();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuffer res = new StringBuffer();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b80ad3438ccc68d1ef441add711ed2143324f14","date":1293087175,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuffer res = new StringBuffer();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc5ecd93bcd50b2199757091d526fc1bcbce0db1","date":1293154244,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuffer res = new StringBuffer();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":null,"sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuffer res = new StringBuffer();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["9b80ad3438ccc68d1ef441add711ed2143324f14"],"dc5ecd93bcd50b2199757091d526fc1bcbce0db1":["9454a6510e2db155fb01faa5c049b06ece95fab9","9b80ad3438ccc68d1ef441add711ed2143324f14"],"9b80ad3438ccc68d1ef441add711ed2143324f14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["dc5ecd93bcd50b2199757091d526fc1bcbce0db1","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dc5ecd93bcd50b2199757091d526fc1bcbce0db1":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"9b80ad3438ccc68d1ef441add711ed2143324f14":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","dc5ecd93bcd50b2199757091d526fc1bcbce0db1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","dc5ecd93bcd50b2199757091d526fc1bcbce0db1","9b80ad3438ccc68d1ef441add711ed2143324f14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}