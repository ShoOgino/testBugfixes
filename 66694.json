{"path":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,String,JmxConfiguration,Map[String,#]).mjava","commits":[{"id":"4290ddfa982b6cadf2103ead2a0a3d0ec899da85","date":1346331246,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,String,JmxConfiguration,Map[String,#]).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: Make public? Move Map<String,?> env to environment?\n  // Currently the map is needed to bind to localhost\n  JmxMonitoredMap(String coreName, String coreHashCode,\n                         final JmxConfiguration jmxConfig, Map<String,?> env) {\n    this.coreHashCode = coreHashCode;\n    jmxRootName = (null != jmxConfig.rootName ?\n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        env, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f91ea59ad86660fb3d24fde452cf98e48fcdee3","date":1346344320,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,String,JmxConfiguration,Map[String,#]).mjava","sourceNew":null,"sourceOld":"  // TODO: Make public? Move Map<String,?> env to environment?\n  // Currently the map is needed to bind to localhost\n  JmxMonitoredMap(String coreName, String coreHashCode,\n                         final JmxConfiguration jmxConfig, Map<String,?> env) {\n    this.coreHashCode = coreHashCode;\n    jmxRootName = (null != jmxConfig.rootName ?\n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        env, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4290ddfa982b6cadf2103ead2a0a3d0ec899da85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f91ea59ad86660fb3d24fde452cf98e48fcdee3"],"7f91ea59ad86660fb3d24fde452cf98e48fcdee3":["4290ddfa982b6cadf2103ead2a0a3d0ec899da85"]},"commit2Childs":{"4290ddfa982b6cadf2103ead2a0a3d0ec899da85":["7f91ea59ad86660fb3d24fde452cf98e48fcdee3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4290ddfa982b6cadf2103ead2a0a3d0ec899da85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7f91ea59ad86660fb3d24fde452cf98e48fcdee3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}