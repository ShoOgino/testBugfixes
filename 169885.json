{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[Long]).mjava","commits":[{"id":"dbba3c5be159d190b2b308dfc250c43531694ddb","date":1375234944,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[Long]).mjava","pathOld":"/dev/null","sourceNew":"      // Update current enum according to FSTEnum\n      void updateEnum(final InputOutput<Long> pair) throws IOException {\n        if (pair == null) {\n          term = null;\n        } else {\n          term = pair.input;\n          ord = pair.output;\n          decodeStats();\n        }\n        decoded = false;\n        seekPending = false;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[Long]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[Long]).mjava","sourceNew":"      // Update current enum according to FSTEnum\n      void updateEnum(final InputOutput<Long> pair) throws IOException {\n        if (pair == null) {\n          term = null;\n        } else {\n          term = pair.input;\n          ord = pair.output;\n          decodeStats();\n        }\n        decoded = false;\n        seekPending = false;\n      }\n\n","sourceOld":"      // Update current enum according to FSTEnum\n      void updateEnum(final InputOutput<Long> pair) throws IOException {\n        if (pair == null) {\n          term = null;\n        } else {\n          term = pair.input;\n          ord = pair.output;\n          decodeStats();\n        }\n        decoded = false;\n        seekPending = false;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dbba3c5be159d190b2b308dfc250c43531694ddb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["dbba3c5be159d190b2b308dfc250c43531694ddb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dbba3c5be159d190b2b308dfc250c43531694ddb":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbba3c5be159d190b2b308dfc250c43531694ddb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}