{"path":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","commits":[{"id":"4926b5318ba4167d360445a0c5f3fc8af2cf8c49","date":1218678599,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"/dev/null","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer();\n        cores.loader = new SolrResourceLoader(instanceDir);\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores);\n        dcore.init(\"\", cfg.getResourceLoader().getInstanceDir());\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        dcore.setCore(singlecore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(dcore);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c28792ff7d1774c306e16afbd44ded91a417049b","date":1219072108,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", cfg.getResourceLoader().getInstanceDir());\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer();\n        cores.loader = new SolrResourceLoader(instanceDir);\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores);\n        dcore.init(\"\", cfg.getResourceLoader().getInstanceDir());\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        dcore.setCore(singlecore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(dcore);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"bugIntro":["2918f514216bf93e5dc75df3952e98d18bb31839"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2918f514216bf93e5dc75df3952e98d18bb31839","date":1220734428,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", cfg.getResourceLoader().getInstanceDir());\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":["c28792ff7d1774c306e16afbd44ded91a417049b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0575de170d94ae509fadcfdd0c2a50d7ea58f85","date":1235893208,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", instanceDir);\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f218136f6ae01f0f4a2a93ae8e37229d49b149cf","date":1237398690,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", instanceDir);\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":null,"bugIntro":["0387f9d27058e794734097b422ddcc0d63139527"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"baf5396191fd3f561aa9c6af0633bae3500799ba","date":1245405538,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer(solrHome);\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(solrHome));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(instanceDir, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(instanceDir));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"870f5bc648780b3cffe29a8b31edb46c0fabc3cb","date":1245839115,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(solrHome));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer(solrHome);\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(solrHome));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7800b737e8d04d70bd0c747ff5efaaf6e74aeb77","date":1251272782,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHome, null, getCoreProps(solrHome, null,null));\n        cores = new CoreContainer(resourceLoader);\n        SolrConfig cfg = solrConfigFilename == null ?\n                new SolrConfig(resourceLoader, SolrConfig.DEFAULT_CONF_FILE,null) :\n                new SolrConfig(resourceLoader, solrConfigFilename,null);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(new SolrResourceLoader(solrHome));\n        SolrConfig cfg = solrConfigFilename == null ? new SolrConfig() : new SolrConfig(solrConfigFilename);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":null,"bugIntro":["0387f9d27058e794734097b422ddcc0d63139527"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0387f9d27058e794734097b422ddcc0d63139527","date":1252219010,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(solrHome);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        dcore.setCoreProperties(null);\n        SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHome, null, getCoreProps(solrHome, null,dcore.getCoreProperties()));\n        cores.loader = resourceLoader;\n        SolrConfig cfg = solrConfigFilename == null ?\n                new SolrConfig(resourceLoader, SolrConfig.DEFAULT_CONF_FILE,null) :\n                new SolrConfig(resourceLoader, solrConfigFilename,null);\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHome, null, getCoreProps(solrHome, null,null));\n        cores = new CoreContainer(resourceLoader);\n        SolrConfig cfg = solrConfigFilename == null ?\n                new SolrConfig(resourceLoader, SolrConfig.DEFAULT_CONF_FILE,null) :\n                new SolrConfig(resourceLoader, solrConfigFilename,null);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":["7800b737e8d04d70bd0c747ff5efaaf6e74aeb77","f218136f6ae01f0f4a2a93ae8e37229d49b149cf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72","date":1260860758,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      cores.solrConfigFilenameOverride = solrConfigFilename;\n      if (fconf.exists())\n        cores.load(solrHome, fconf);\n      else {\n        cores.load(solrHome, new ByteArrayInputStream(DEF_SOLR_XML.getBytes()));\n        cores.configFile = fconf;\n      }\n      abortOnConfigurationError = false;\n      // if any core aborts on startup, then abort\n      for (SolrCore c : cores.getCores()) {\n        if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n          abortOnConfigurationError = true;\n          break;\n        }\n      }\n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException, ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null? \"solr.xml\": solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n\n      if (fconf.exists()) {\n        cores = new CoreContainer();\n        cores.load(solrHome, fconf);\n        abortOnConfigurationError = false;\n        // if any core aborts on startup, then abort\n        for (SolrCore c : cores.getCores()) {\n          if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n            abortOnConfigurationError = true;\n            break;\n          }\n        }\n        solrConfigFilename = cores.getConfigFile().getName();\n      } else {\n        // perform compatibility init\n        cores = new CoreContainer(solrHome);\n        CoreDescriptor dcore = new CoreDescriptor(cores, \"\", \".\");\n        dcore.setCoreProperties(null);\n        SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHome, null, getCoreProps(solrHome, null,dcore.getCoreProperties()));\n        cores.loader = resourceLoader;\n        SolrConfig cfg = solrConfigFilename == null ?\n                new SolrConfig(resourceLoader, SolrConfig.DEFAULT_CONF_FILE,null) :\n                new SolrConfig(resourceLoader, solrConfigFilename,null);\n        SolrCore singlecore = new SolrCore(null, null, cfg, null, dcore);\n        abortOnConfigurationError = cfg.getBool(\n                \"abortOnConfigurationError\", abortOnConfigurationError);\n        cores.register(\"\", singlecore, false);\n        cores.setPersistent(false);\n        solrConfigFilename = cfg.getName();\n      }\n      return cores;\n    }\n\n","bugFix":null,"bugIntro":["e90d4b14ac52c437faaf05e0b0523f83bc4cf65f","083df6f7d2115772bdcf0f53c63aa859e664c69e","083df6f7d2115772bdcf0f53c63aa859e664c69e","083df6f7d2115772bdcf0f53c63aa859e664c69e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e90d4b14ac52c437faaf05e0b0523f83bc4cf65f","date":1268762566,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      cores.solrConfigFilenameOverride = solrConfigFilename;\n      if (fconf.exists()) {\n        // default abortOnConfigurationError ignored in multicore\n        cores.defaultAbortOnConfigError = false;\n        cores.load(solrHome, fconf);\n      } else {\n        cores.defaultAbortOnConfigError = abortOnConfigurationError;\n        cores.load(solrHome, new ByteArrayInputStream(DEF_SOLR_XML.getBytes()));\n        cores.configFile = fconf;\n      }\n      setAbortOnConfigurationError(0 < cores.numCoresAbortOnConfigError);\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      cores.solrConfigFilenameOverride = solrConfigFilename;\n      if (fconf.exists())\n        cores.load(solrHome, fconf);\n      else {\n        cores.load(solrHome, new ByteArrayInputStream(DEF_SOLR_XML.getBytes()));\n        cores.configFile = fconf;\n      }\n      abortOnConfigurationError = false;\n      // if any core aborts on startup, then abort\n      for (SolrCore c : cores.getCores()) {\n        if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n          abortOnConfigurationError = true;\n          break;\n        }\n      }\n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"bugIntro":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d76efa24e968bc7896338b3dc41294d5c320f40","date":1268783982,"type":3,"author":"Yonik Seeley","isMerge":true,"pathNew":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      cores.solrConfigFilenameOverride = solrConfigFilename;\n      if (fconf.exists()) {\n        // default abortOnConfigurationError ignored in multicore\n        cores.defaultAbortOnConfigError = false;\n        cores.load(solrHome, fconf);\n      } else {\n        cores.defaultAbortOnConfigError = abortOnConfigurationError;\n        cores.load(solrHome, new ByteArrayInputStream(DEF_SOLR_XML.getBytes()));\n        cores.configFile = fconf;\n      }\n      setAbortOnConfigurationError(0 < cores.numCoresAbortOnConfigError);\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      cores.solrConfigFilenameOverride = solrConfigFilename;\n      if (fconf.exists())\n        cores.load(solrHome, fconf);\n      else {\n        cores.load(solrHome, new ByteArrayInputStream(DEF_SOLR_XML.getBytes()));\n        cores.configFile = fconf;\n      }\n      abortOnConfigurationError = false;\n      // if any core aborts on startup, then abort\n      for (SolrCore c : cores.getCores()) {\n        if (c.getSolrConfig().getBool(\"abortOnConfigurationError\", false)) {\n          abortOnConfigurationError = true;\n          break;\n        }\n      }\n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      cores.solrConfigFilenameOverride = solrConfigFilename;\n      if (fconf.exists()) {\n        // default abortOnConfigurationError ignored in multicore\n        cores.defaultAbortOnConfigError = false;\n        cores.load(solrHome, fconf);\n      } else {\n        cores.defaultAbortOnConfigError = abortOnConfigurationError;\n        cores.load(solrHome, new ByteArrayInputStream(DEF_SOLR_XML.getBytes()));\n        cores.configFile = fconf;\n      }\n      setAbortOnConfigurationError(0 < cores.numCoresAbortOnConfigError);\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      cores.solrConfigFilenameOverride = solrConfigFilename;\n      if (fconf.exists()) {\n        // default abortOnConfigurationError ignored in multicore\n        cores.defaultAbortOnConfigError = false;\n        cores.load(solrHome, fconf);\n      } else {\n        cores.defaultAbortOnConfigError = abortOnConfigurationError;\n        cores.load(solrHome, new ByteArrayInputStream(DEF_SOLR_XML.getBytes()));\n        cores.configFile = fconf;\n      }\n      setAbortOnConfigurationError(0 < cores.numCoresAbortOnConfigError);\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e90d4b14ac52c437faaf05e0b0523f83bc4cf65f":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"f218136f6ae01f0f4a2a93ae8e37229d49b149cf":["e0575de170d94ae509fadcfdd0c2a50d7ea58f85"],"870f5bc648780b3cffe29a8b31edb46c0fabc3cb":["baf5396191fd3f561aa9c6af0633bae3500799ba"],"2918f514216bf93e5dc75df3952e98d18bb31839":["c28792ff7d1774c306e16afbd44ded91a417049b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c28792ff7d1774c306e16afbd44ded91a417049b":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"1d76efa24e968bc7896338b3dc41294d5c320f40":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72","e90d4b14ac52c437faaf05e0b0523f83bc4cf65f"],"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72":["0387f9d27058e794734097b422ddcc0d63139527"],"e0575de170d94ae509fadcfdd0c2a50d7ea58f85":["2918f514216bf93e5dc75df3952e98d18bb31839"],"0387f9d27058e794734097b422ddcc0d63139527":["7800b737e8d04d70bd0c747ff5efaaf6e74aeb77"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"baf5396191fd3f561aa9c6af0633bae3500799ba":["f218136f6ae01f0f4a2a93ae8e37229d49b149cf"],"ad94625fb8d088209f46650c8097196fec67f00c":["1d76efa24e968bc7896338b3dc41294d5c320f40"],"7800b737e8d04d70bd0c747ff5efaaf6e74aeb77":["870f5bc648780b3cffe29a8b31edb46c0fabc3cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e90d4b14ac52c437faaf05e0b0523f83bc4cf65f":["1d76efa24e968bc7896338b3dc41294d5c320f40"],"f218136f6ae01f0f4a2a93ae8e37229d49b149cf":["baf5396191fd3f561aa9c6af0633bae3500799ba"],"870f5bc648780b3cffe29a8b31edb46c0fabc3cb":["7800b737e8d04d70bd0c747ff5efaaf6e74aeb77"],"2918f514216bf93e5dc75df3952e98d18bb31839":["e0575de170d94ae509fadcfdd0c2a50d7ea58f85"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"c28792ff7d1774c306e16afbd44ded91a417049b":["2918f514216bf93e5dc75df3952e98d18bb31839"],"1d76efa24e968bc7896338b3dc41294d5c320f40":["ad94625fb8d088209f46650c8097196fec67f00c"],"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72":["e90d4b14ac52c437faaf05e0b0523f83bc4cf65f","1d76efa24e968bc7896338b3dc41294d5c320f40"],"e0575de170d94ae509fadcfdd0c2a50d7ea58f85":["f218136f6ae01f0f4a2a93ae8e37229d49b149cf"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["c28792ff7d1774c306e16afbd44ded91a417049b"],"0387f9d27058e794734097b422ddcc0d63139527":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"baf5396191fd3f561aa9c6af0633bae3500799ba":["870f5bc648780b3cffe29a8b31edb46c0fabc3cb"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7800b737e8d04d70bd0c747ff5efaaf6e74aeb77":["0387f9d27058e794734097b422ddcc0d63139527"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}