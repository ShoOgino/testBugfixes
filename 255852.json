{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderVoteWaitTimeoutTest#setupTest().mjava","commits":[{"id":"18ff77d2a5a7c08b3e372713c2653f6de5f3f7c2","date":1534756550,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderVoteWaitTimeoutTest#setupTest().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setupTest() throws Exception {\n    SolrCloudTestCase.ensureRunningJettys(NODE_COUNT, 5);\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().setDefaultCollection(null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderVoteWaitTimeoutTest#setupTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderVoteWaitTimeoutTest#setupTest().mjava","sourceNew":"  @Before\n  public void setupTest() throws Exception {\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);// TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setupTest() throws Exception {\n    SolrCloudTestCase.ensureRunningJettys(NODE_COUNT, 5);\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().setDefaultCollection(null);\n  }\n\n","bugFix":["18ff77d2a5a7c08b3e372713c2653f6de5f3f7c2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderVoteWaitTimeoutTest#setupTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderVoteWaitTimeoutTest#setupTest().mjava","sourceNew":"  @Before\n  public void setupTest() throws Exception {\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);// TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      if (log.isInfoEnabled()) {\n        log.info(\"Adding proxy for URL: {}. Proxy {}\", jetty.getBaseUrl(), proxy.getUrl());\n      }\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setupTest() throws Exception {\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);// TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18ff77d2a5a7c08b3e372713c2653f6de5f3f7c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["18ff77d2a5a7c08b3e372713c2653f6de5f3f7c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"18ff77d2a5a7c08b3e372713c2653f6de5f3f7c2":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["18ff77d2a5a7c08b3e372713c2653f6de5f3f7c2"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}