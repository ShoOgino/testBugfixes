{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer#PatternTokenizer(AttributeFactory,Pattern,int).mjava","commits":[{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer#PatternTokenizer(AttributeFactory,Pattern,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer#PatternTokenizer(AttributeFactory,Reader,Pattern,int).mjava","sourceNew":"  /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */\n  public PatternTokenizer(AttributeFactory factory, Pattern pattern, int group) {\n    super(factory);\n    this.group = group;\n\n    // Use \"\" instead of str so don't consume chars\n    // (fillBuffer) from the input on throwing IAE below:\n    matcher = pattern.matcher(\"\");\n\n    // confusingly group count depends ENTIRELY on the pattern but is only accessible via matcher\n    if (group >= 0 && group > matcher.groupCount()) {\n      throw new IllegalArgumentException(\"invalid group specified: pattern only has: \" + matcher.groupCount() + \" capturing groups\");\n    }\n  }\n\n","sourceOld":"  /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */\n  public PatternTokenizer(AttributeFactory factory, Reader input, Pattern pattern, int group) {\n    super(factory, input);\n    this.group = group;\n\n    // Use \"\" instead of str so don't consume chars\n    // (fillBuffer) from the input on throwing IAE below:\n    matcher = pattern.matcher(\"\");\n\n    // confusingly group count depends ENTIRELY on the pattern but is only accessible via matcher\n    if (group >= 0 && group > matcher.groupCount()) {\n      throw new IllegalArgumentException(\"invalid group specified: pattern only has: \" + matcher.groupCount() + \" capturing groups\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}