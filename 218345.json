{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene86/TestLucene86PointsFormat#TestLucene86PointsFormat().mjava","commits":[{"id":"78e689a3b60e84c75dc6dd7b181a71fc19ef8482","date":1591689554,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene86/TestLucene86PointsFormat#TestLucene86PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene86PointsFormat() {\n    // standard issue\n    Codec defaultCodec = new Lucene86Codec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene86PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9","date":1598432674,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene86/TestLucene86PointsFormat#TestLucene86PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene86/TestLucene86PointsFormat#TestLucene86PointsFormat().mjava","sourceNew":"  public TestLucene86PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene86PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","sourceOld":"  public TestLucene86PointsFormat() {\n    // standard issue\n    Codec defaultCodec = new Lucene86Codec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene86PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene86/TestLucene86PointsFormat#TestLucene86PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene86/TestLucene86PointsFormat#TestLucene86PointsFormat().mjava","sourceNew":"  public TestLucene86PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene86PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDConfig.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","sourceOld":"  public TestLucene86PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene86PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}