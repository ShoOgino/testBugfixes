{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","commits":[{"id":"18085993942ab483c997b0cff727b33c9396f927","date":1384881194,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexWriter writer = new FacetIndexWriter(dir, iwc, taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(doc);\n    writer.close();\n    taxoWriter.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(builder.build(doc));\n    writer.close();\n    taxoWriter.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexWriter writer = new FacetIndexWriter(dir, iwc, taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(doc);\n    writer.close();\n    taxoWriter.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"006838107b0cd2051371f3470740d23ec91b1886","date":1384950816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(builder.build(doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(builder.build(doc));\n    writer.close();\n    taxoWriter.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(builder.build(doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18085993942ab483c997b0cff727b33c9396f927":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7554009c97f9365492660c1df175b6349f7ec05c":["18085993942ab483c997b0cff727b33c9396f927"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["ae75def1e2525383b6e1397ed97c44387da9941c"],"006838107b0cd2051371f3470740d23ec91b1886":["7554009c97f9365492660c1df175b6349f7ec05c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["006838107b0cd2051371f3470740d23ec91b1886"]},"commit2Childs":{"18085993942ab483c997b0cff727b33c9396f927":["7554009c97f9365492660c1df175b6349f7ec05c"],"7554009c97f9365492660c1df175b6349f7ec05c":["006838107b0cd2051371f3470740d23ec91b1886"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["18085993942ab483c997b0cff727b33c9396f927","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"006838107b0cd2051371f3470740d23ec91b1886":["ae75def1e2525383b6e1397ed97c44387da9941c"],"ae75def1e2525383b6e1397ed97c44387da9941c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}