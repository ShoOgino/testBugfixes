{"path":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","commits":[{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"    public void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      IndexFileDeleter d = new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f","d54c7739bfe85d68f0352823cd70c10c619fad38"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      IndexFileDeleter d = new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      IndexFileDeleter d = new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      IndexFileDeleter d = new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      IndexFileDeleter d = new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"741a5cca05cabe1e7482410a29e563a08379251a","date":1196676550,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      IndexFileDeleter d = new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d54c7739bfe85d68f0352823cd70c10c619fad38","date":1228496593,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.list();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.list();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":["8b6187898fc4413ccd18229711786550a280383c"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d54c7739bfe85d68f0352823cd70c10c619fad38":["741a5cca05cabe1e7482410a29e563a08379251a"],"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6187898fc4413ccd18229711786550a280383c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"741a5cca05cabe1e7482410a29e563a08379251a":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["8b6187898fc4413ccd18229711786550a280383c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d54c7739bfe85d68f0352823cd70c10c619fad38"]},"commit2Childs":{"d54c7739bfe85d68f0352823cd70c10c619fad38":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["741a5cca05cabe1e7482410a29e563a08379251a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b6187898fc4413ccd18229711786550a280383c"],"8b6187898fc4413ccd18229711786550a280383c":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"741a5cca05cabe1e7482410a29e563a08379251a":["d54c7739bfe85d68f0352823cd70c10c619fad38"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}