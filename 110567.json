{"path":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testFieldBasedRetention().mjava","commits":[{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testFieldBasedRetention().mjava","pathOld":"/dev/null","sourceNew":"  public void testFieldBasedRetention() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig indexWriterConfig = newIndexWriterConfig();\n    Instant now = Instant.now();\n    Instant time24HoursAgo = now.minus(Duration.ofDays(1));\n    String softDeletesField = \"soft_delete\";\n    Supplier<Query> docsOfLast24Hours = () -> LongPoint.newRangeQuery(\"creation_date\", time24HoursAgo.toEpochMilli(), now.toEpochMilli());\n    indexWriterConfig.setMergePolicy(new SoftDeletesRetentionMergePolicy(softDeletesField, docsOfLast24Hours,\n        new LogDocMergePolicy()));\n    indexWriterConfig.setSoftDeletesField(softDeletesField);\n    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);\n\n    long time28HoursAgo = now.minus(Duration.ofHours(28)).toEpochMilli();\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new StringField(\"version\", \"1\", Field.Store.YES));\n    doc.add(new LongPoint(\"creation_date\", time28HoursAgo));\n    writer.addDocument(doc);\n\n    writer.flush();\n    long time26HoursAgo = now.minus(Duration.ofHours(26)).toEpochMilli();\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new StringField(\"version\", \"2\", Field.Store.YES));\n    doc.add(new LongPoint(\"creation_date\", time26HoursAgo));\n    writer.softUpdateDocument(new Term(\"id\", \"1\"), doc, new NumericDocValuesField(\"soft_delete\", 1));\n\n    if (random().nextBoolean()) {\n      writer.flush();\n    }\n    long time23HoursAgo = now.minus(Duration.ofHours(23)).toEpochMilli();\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new StringField(\"version\", \"3\", Field.Store.YES));\n    doc.add(new LongPoint(\"creation_date\", time23HoursAgo));\n    writer.softUpdateDocument(new Term(\"id\", \"1\"), doc, new NumericDocValuesField(\"soft_delete\", 1));\n\n    if (random().nextBoolean()) {\n      writer.flush();\n    }\n    long time12HoursAgo = now.minus(Duration.ofHours(12)).toEpochMilli();\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new StringField(\"version\", \"4\", Field.Store.YES));\n    doc.add(new LongPoint(\"creation_date\", time12HoursAgo));\n    writer.softUpdateDocument(new Term(\"id\", \"1\"), doc, new NumericDocValuesField(\"soft_delete\", 1));\n\n    if (random().nextBoolean()) {\n      writer.flush();\n    }\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new StringField(\"version\", \"5\", Field.Store.YES));\n    doc.add(new LongPoint(\"creation_date\", now.toEpochMilli()));\n    writer.softUpdateDocument(new Term(\"id\", \"1\"), doc, new NumericDocValuesField(\"soft_delete\", 1));\n\n    if (random().nextBoolean()) {\n      writer.flush();\n    }\n    writer.forceMerge(1);\n    DirectoryReader reader = writer.getReader();\n    assertEquals(1, reader.numDocs());\n    assertEquals(3, reader.maxDoc());\n    Set<String> versions = new HashSet<>();\n    versions.add(reader.document(0, Collections.singleton(\"version\")).get(\"version\"));\n    versions.add(reader.document(1, Collections.singleton(\"version\")).get(\"version\"));\n    versions.add(reader.document(2, Collections.singleton(\"version\")).get(\"version\"));\n    assertTrue(versions.contains(\"5\"));\n    assertTrue(versions.contains(\"4\"));\n    assertTrue(versions.contains(\"3\"));\n    IOUtils.close(reader, writer, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ee0394b8176abd7c90a4be8c05465be1879db79"]},"commit2Childs":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}