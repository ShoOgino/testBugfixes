{"path":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","commits":[{"id":"80931fa1f3b04650bde7b20e61b02063a7093ced","date":1333130683,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader((getInputStream())));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"197070b7f9191af8b5d8598b579393d4a67e32f0","date":1341843740,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","sourceNew":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), IOUtils.CHARSET_UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","sourceOld":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader((getInputStream())));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","sourceNew":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), IOUtils.CHARSET_UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","sourceOld":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader((getInputStream())));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","sourceNew":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), IOUtils.CHARSET_UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","sourceOld":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader((getInputStream())));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","sourceNew":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), IOUtils.CHARSET_UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","sourceOld":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader((getInputStream())));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","sourceNew":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), StandardCharsets.UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","sourceOld":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), IOUtils.CHARSET_UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","sourceNew":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), StandardCharsets.UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","sourceOld":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), IOUtils.CHARSET_UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63fc16c8a7bc8d24e5266ae06d44d83c6d30403b","date":1553472106,"type":4,"author":"Gus Heck","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfigGuesser#guess().mjava","sourceNew":null,"sourceOld":"    /**\n     * Guess the config based on the first 10 (or less when less available) \n     * records of a CSV file.\n     * \n     * @return the guessed config.\n     */\n    public CSVConfig guess() {\n        try {\n            // tralalal\n            BufferedReader bIn = new BufferedReader(new InputStreamReader(getInputStream(), StandardCharsets.UTF_8));\n            String[] lines = new String[10];\n            String line = null;\n            int counter = 0;\n            while ( (line = bIn.readLine()) != null && counter <= 10) {\n                lines[counter] = line;\n                counter++;\n            }\n            if (counter < 10) {\n                // remove nulls from the array, so we can skip the null checking.\n                String[] newLines = new String[counter];\n                System.arraycopy(lines, 0, newLines, 0, counter);\n                lines = newLines;\n            }\n            analyseLines(lines);\n        } catch(Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch(Exception e) {\n                    // ignore exception.\n                }\n            }\n        }\n        CSVConfig conf = config;\n        // cleanup the config.\n        config = null;\n        return conf;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["2acf500f78aa12b92e371fd89c719291986b6b90","7d89d7e4e5101347833eea558851bf4209218619"],"63fc16c8a7bc8d24e5266ae06d44d83c6d30403b":["7d89d7e4e5101347833eea558851bf4209218619"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["80931fa1f3b04650bde7b20e61b02063a7093ced","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80931fa1f3b04650bde7b20e61b02063a7093ced":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2acf500f78aa12b92e371fd89c719291986b6b90":["80931fa1f3b04650bde7b20e61b02063a7093ced","197070b7f9191af8b5d8598b579393d4a67e32f0"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"7d89d7e4e5101347833eea558851bf4209218619":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["63fc16c8a7bc8d24e5266ae06d44d83c6d30403b"],"46d8ada1fff8d18cb197c38c7983225162599948":["80931fa1f3b04650bde7b20e61b02063a7093ced","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"63fc16c8a7bc8d24e5266ae06d44d83c6d30403b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"80931fa1f3b04650bde7b20e61b02063a7093ced":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","197070b7f9191af8b5d8598b579393d4a67e32f0","46d8ada1fff8d18cb197c38c7983225162599948"],"2acf500f78aa12b92e371fd89c719291986b6b90":["5eb2511ababf862ea11e10761c70ee560cd84510","fe33227f6805edab2036cbb80645cc4e2d1fa424","7d89d7e4e5101347833eea558851bf4209218619","46d8ada1fff8d18cb197c38c7983225162599948"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["2acf500f78aa12b92e371fd89c719291986b6b90"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","63fc16c8a7bc8d24e5266ae06d44d83c6d30403b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}