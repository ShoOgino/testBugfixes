{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/categorypolicy/OrdinalPolicy#init(TaxonomyWriter).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/categorypolicy/OrdinalPolicy#init(TaxonomyWriter).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/categorypolicy/OrdinalPolicy#init(TaxonomyWriter).mjava","sourceNew":"  /**\n   * Initialize the policy with a TaxonomyWriter. This method can be\n   * implemented as noop if the ordinal policy is not taxonomy dependent\n   * \n   * @param taxonomyWriter\n   *            A relevant taxonomyWriter object, with which ordinals sent to\n   *            {@link #shouldAdd(int)} are examined.\n   */\n  public abstract void init(TaxonomyWriter taxonomyWriter);\n\n","sourceOld":"  /**\n   * Initialize the policy with a TaxonomyWriter. This method can be\n   * implemented as noop if the ordinal policy is not taxonomy dependent\n   * \n   * @param taxonomyWriter\n   *            A relevant taxonomyWriter object, with which ordinals sent to\n   *            {@link #shouldAdd(int)} are examined.\n   */\n  public abstract void init(TaxonomyWriter taxonomyWriter);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66644845192a1c92d87d5324cc0b5af16ad31b42","date":1358970583,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/categorypolicy/OrdinalPolicy#init(TaxonomyWriter).mjava","sourceNew":null,"sourceOld":"  /**\n   * Initialize the policy with a TaxonomyWriter. This method can be\n   * implemented as noop if the ordinal policy is not taxonomy dependent\n   * \n   * @param taxonomyWriter\n   *            A relevant taxonomyWriter object, with which ordinals sent to\n   *            {@link #shouldAdd(int)} are examined.\n   */\n  public abstract void init(TaxonomyWriter taxonomyWriter);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/categorypolicy/OrdinalPolicy#init(TaxonomyWriter).mjava","sourceNew":null,"sourceOld":"  /**\n   * Initialize the policy with a TaxonomyWriter. This method can be\n   * implemented as noop if the ordinal policy is not taxonomy dependent\n   * \n   * @param taxonomyWriter\n   *            A relevant taxonomyWriter object, with which ordinals sent to\n   *            {@link #shouldAdd(int)} are examined.\n   */\n  public abstract void init(TaxonomyWriter taxonomyWriter);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"66644845192a1c92d87d5324cc0b5af16ad31b42":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["66644845192a1c92d87d5324cc0b5af16ad31b42"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["b89678825b68eccaf09e6ab71675fc0b0af1e099","66644845192a1c92d87d5324cc0b5af16ad31b42"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["66644845192a1c92d87d5324cc0b5af16ad31b42","b2d5244a676b83c2d551c3746e8181588ba619e1"],"66644845192a1c92d87d5324cc0b5af16ad31b42":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b2d5244a676b83c2d551c3746e8181588ba619e1":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}