{"path":"src/test/org/apache/lucene/index/TestCompoundFile#testIWCreate().mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#testIWCreate().mjava","pathOld":"/dev/null","sourceNew":"    public void testIWCreate() throws IOException {\n        // create index writer\n        IndexWriter iw = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        int created = 0;\n        for (int i=0; i<150; i++) {\n            iw.addDocument(createTestDoc(String.valueOf(i)));\n            created ++;\n        }\n        assertEquals(created, iw.docCount());\n        iw.close();\n\n        // delete 500 documents\n        IndexReader reader = IndexReader.open(dir);\n        int deleted = 0;\n        for (int i = 10; i < created-7; i+=7) {\n            reader.delete(i);\n            deleted ++;\n        }\n        reader.close();\n        int remains = created - deleted;\n\n        iw  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n        assertEquals(created, iw.docCount());\n        iw.close();\n\n        reader = IndexReader.open(dir);\n        assertEquals(created, reader.maxDoc());\n        assertEquals(remains, reader.numDocs());\n        for (int i = 10; i < created-7; i+=7) {\n            assertTrue(\"deleted: \" + i, reader.isDeleted(i));\n            assertFalse(\"deleted+1: \" + i, reader.isDeleted(i + 1));\n            assertFalse(\"deleted-1: \" + i, reader.isDeleted(i - 1));\n        }\n\n        reader.close();\n\n        iw = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n        iw.optimize();\n        assertEquals(remains, iw.docCount());\n        iw.close();\n\n        reader = IndexReader.open(dir);\n        assertEquals(remains, reader.maxDoc());\n        assertEquals(remains, reader.numDocs());\n        reader.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1acbe60842541f8c38e2d60b03591478c9f91546","date":1066055498,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#testIWCreate().mjava","sourceNew":null,"sourceOld":"    public void testIWCreate() throws IOException {\n        // create index writer\n        IndexWriter iw = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        int created = 0;\n        for (int i=0; i<150; i++) {\n            iw.addDocument(createTestDoc(String.valueOf(i)));\n            created ++;\n        }\n        assertEquals(created, iw.docCount());\n        iw.close();\n\n        // delete 500 documents\n        IndexReader reader = IndexReader.open(dir);\n        int deleted = 0;\n        for (int i = 10; i < created-7; i+=7) {\n            reader.delete(i);\n            deleted ++;\n        }\n        reader.close();\n        int remains = created - deleted;\n\n        iw  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n        assertEquals(created, iw.docCount());\n        iw.close();\n\n        reader = IndexReader.open(dir);\n        assertEquals(created, reader.maxDoc());\n        assertEquals(remains, reader.numDocs());\n        for (int i = 10; i < created-7; i+=7) {\n            assertTrue(\"deleted: \" + i, reader.isDeleted(i));\n            assertFalse(\"deleted+1: \" + i, reader.isDeleted(i + 1));\n            assertFalse(\"deleted-1: \" + i, reader.isDeleted(i - 1));\n        }\n\n        reader.close();\n\n        iw = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n        iw.optimize();\n        assertEquals(remains, iw.docCount());\n        iw.close();\n\n        reader = IndexReader.open(dir);\n        assertEquals(remains, reader.maxDoc());\n        assertEquals(remains, reader.numDocs());\n        reader.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1acbe60842541f8c38e2d60b03591478c9f91546":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1acbe60842541f8c38e2d60b03591478c9f91546"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"1acbe60842541f8c38e2d60b03591478c9f91546":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["1acbe60842541f8c38e2d60b03591478c9f91546"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}