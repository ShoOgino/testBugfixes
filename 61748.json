{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","sourceNew":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List<String> (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propogated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","sourceOld":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List<String> (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propogated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","sourceNew":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List<String> (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propogated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","sourceOld":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List<String> (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propogated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2421726ca2609a123915fd46815a1caefdc026e3","date":1351130266,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","sourceNew":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List&lt;String&gt; (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propagated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","sourceOld":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List<String> (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propogated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","sourceNew":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List&lt;String&gt; (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propagated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","sourceOld":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List<String> (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propogated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68b2523bf6d81a99aa007384dc8a69a71fec1cce","date":1477560907,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","sourceNew":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List&lt;String&gt; (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propagated up\n     */\n    void handle(Map<String, Object> record, String xpath);\n\n","sourceOld":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List&lt;String&gt; (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propagated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","sourceNew":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List&lt;String&gt; (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propagated up\n     */\n    void handle(Map<String, Object> record, String xpath);\n\n","sourceOld":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List&lt;String&gt; (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propagated up\n     */\n    public void handle(Map<String, Object> record, String xpath);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Handler#handle(Map[String,Object],String).mjava","sourceNew":null,"sourceOld":"    /**\n     * @param record The record map. The key is the field name as provided in \n     * the addField() methods. The value can be a single String (for single \n     * valued fields) or a List&lt;String&gt; (for multiValued).\n     * @param xpath The forEach XPATH for which this record is being emitted\n     * If there is any change all parsing will be aborted and the Exception\n     * is propagated up\n     */\n    void handle(Map<String, Object> record, String xpath);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"2421726ca2609a123915fd46815a1caefdc026e3":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["2421726ca2609a123915fd46815a1caefdc026e3","68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"f2126b84bd093fa3d921582a109a0ee578c28126":["c26f00b574427b55127e869b935845554afde1fa","2421726ca2609a123915fd46815a1caefdc026e3"],"68b2523bf6d81a99aa007384dc8a69a71fec1cce":["2421726ca2609a123915fd46815a1caefdc026e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["2421726ca2609a123915fd46815a1caefdc026e3","f2126b84bd093fa3d921582a109a0ee578c28126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"2421726ca2609a123915fd46815a1caefdc026e3":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","f2126b84bd093fa3d921582a109a0ee578c28126","68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"68b2523bf6d81a99aa007384dc8a69a71fec1cce":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}