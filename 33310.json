{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        System.err.println(\"\\nERROR: Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n        return 1;\n      }\n\n      int toolExitStatus = 0;\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient(zkHost)) {\n        System.out.println(\"Connecting to ZooKeeper at \" + zkHost);\n        cloudSolrClient.connect();\n        toolExitStatus = runCloudTool(cloudSolrClient, cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e4a9106065a4a11ef25c33e0e1eabd34bfbec38","date":1465913265,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8677448a186f4abd32218787f7ae73ad38f575cf","date":1477484362,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth();\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth();\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth(cli);\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddd225c382b8919214f3db79af4c842f893b871","date":1486491351,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        setBasicAuth();\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#runTool(CommandLine).mjava","sourceNew":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          if (verbose) {\n            exc.printStackTrace(CLIO.getErrStream());\n          }\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n      verbose = cli.hasOption(\"verbose\");\n\n      int toolExitStatus = 0;\n      try {\n        runImpl(cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          CLIO.err(\"\\nERROR: \" + excMsg + \"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4ca20be81c9284c840498143264e583ccbb8525a","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["9ddd225c382b8919214f3db79af4c842f893b871"],"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ddd225c382b8919214f3db79af4c842f893b871":["8677448a186f4abd32218787f7ae73ad38f575cf"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["9ddd225c382b8919214f3db79af4c842f893b871","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"8677448a186f4abd32218787f7ae73ad38f575cf":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["3e4a9106065a4a11ef25c33e0e1eabd34bfbec38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","8677448a186f4abd32218787f7ae73ad38f575cf"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"3e4a9106065a4a11ef25c33e0e1eabd34bfbec38":["4ca20be81c9284c840498143264e583ccbb8525a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["9ddd225c382b8919214f3db79af4c842f893b871","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4ca20be81c9284c840498143264e583ccbb8525a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3e4a9106065a4a11ef25c33e0e1eabd34bfbec38"],"9ddd225c382b8919214f3db79af4c842f893b871":["b79a5db147a1c6f95d1625ddbc3561ef56955225","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","8677448a186f4abd32218787f7ae73ad38f575cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"8677448a186f4abd32218787f7ae73ad38f575cf":["9ddd225c382b8919214f3db79af4c842f893b871","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e4a9106065a4a11ef25c33e0e1eabd34bfbec38":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}