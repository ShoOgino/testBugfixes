{"path":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testKeepFullyDeletedSegments().mjava","commits":[{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testKeepFullyDeletedSegments().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeepFullyDeletedSegments() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig indexWriterConfig = newIndexWriterConfig();\n    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n    DirectoryReader reader = writer.getReader();\n    assertEquals(1, reader.leaves().size());\n    SegmentReader segmentReader = (SegmentReader) reader.leaves().get(0).reader();\n    MergePolicy policy = new SoftDeletesRetentionMergePolicy(\"soft_delete\",\n        () -> new DocValuesFieldExistsQuery(\"keep_around\"), NoMergePolicy.INSTANCE);\n    assertFalse(policy.keepFullyDeletedSegment(segmentReader));\n    reader.close();\n\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"keep_around\", 1));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    assertEquals(2, reader.leaves().size());\n    segmentReader = (SegmentReader) reader.leaves().get(0).reader();\n    assertFalse(policy.keepFullyDeletedSegment(segmentReader));\n\n    segmentReader = (SegmentReader) reader.leaves().get(1).reader();\n    assertTrue(policy.keepFullyDeletedSegment(segmentReader));\n\n    IOUtils.close(reader, writer, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e716649e2bd79a98b5e68c464154ea4c44677a","date":1523975212,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testKeepFullyDeletedSegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testKeepFullyDeletedSegments().mjava","sourceNew":"  public void testKeepFullyDeletedSegments() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig indexWriterConfig = newIndexWriterConfig();\n    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n    DirectoryReader reader = writer.getReader();\n    assertEquals(1, reader.leaves().size());\n    MergePolicy policy = new SoftDeletesRetentionMergePolicy(\"soft_delete\",\n        () -> new DocValuesFieldExistsQuery(\"keep_around\"), NoMergePolicy.INSTANCE);\n    assertFalse(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader.leaves().get(0).reader()));\n    reader.close();\n\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"keep_around\", 1));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n\n    DirectoryReader reader1 = writer.getReader();\n    assertEquals(2, reader1.leaves().size());\n    assertFalse(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(0).reader()));\n\n    assertTrue(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(1).reader()));\n\n    IOUtils.close(reader1, writer, dir);\n  }\n\n","sourceOld":"  public void testKeepFullyDeletedSegments() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig indexWriterConfig = newIndexWriterConfig();\n    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n    DirectoryReader reader = writer.getReader();\n    assertEquals(1, reader.leaves().size());\n    SegmentReader segmentReader = (SegmentReader) reader.leaves().get(0).reader();\n    MergePolicy policy = new SoftDeletesRetentionMergePolicy(\"soft_delete\",\n        () -> new DocValuesFieldExistsQuery(\"keep_around\"), NoMergePolicy.INSTANCE);\n    assertFalse(policy.keepFullyDeletedSegment(segmentReader));\n    reader.close();\n\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"keep_around\", 1));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    assertEquals(2, reader.leaves().size());\n    segmentReader = (SegmentReader) reader.leaves().get(0).reader();\n    assertFalse(policy.keepFullyDeletedSegment(segmentReader));\n\n    segmentReader = (SegmentReader) reader.leaves().get(1).reader();\n    assertTrue(policy.keepFullyDeletedSegment(segmentReader));\n\n    IOUtils.close(reader, writer, dir);\n  }\n\n","bugFix":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testKeepFullyDeletedSegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testKeepFullyDeletedSegments().mjava","sourceNew":"  public void testKeepFullyDeletedSegments() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig indexWriterConfig = newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n    DirectoryReader reader = writer.getReader();\n    assertEquals(1, reader.leaves().size());\n    MergePolicy policy = new SoftDeletesRetentionMergePolicy(\"soft_delete\",\n        () -> new DocValuesFieldExistsQuery(\"keep_around\"), NoMergePolicy.INSTANCE);\n    assertFalse(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader.leaves().get(0).reader()));\n    reader.close();\n\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"keep_around\", 1));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n\n    DirectoryReader reader1 = writer.getReader();\n    assertEquals(2, reader1.leaves().size());\n    assertFalse(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(0).reader()));\n\n    assertTrue(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(1).reader()));\n\n    IOUtils.close(reader1, writer, dir);\n  }\n\n","sourceOld":"  public void testKeepFullyDeletedSegments() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig indexWriterConfig = newIndexWriterConfig();\n    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n    DirectoryReader reader = writer.getReader();\n    assertEquals(1, reader.leaves().size());\n    MergePolicy policy = new SoftDeletesRetentionMergePolicy(\"soft_delete\",\n        () -> new DocValuesFieldExistsQuery(\"keep_around\"), NoMergePolicy.INSTANCE);\n    assertFalse(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader.leaves().get(0).reader()));\n    reader.close();\n\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"keep_around\", 1));\n    doc.add(new NumericDocValuesField(\"soft_delete\", 1));\n    writer.addDocument(doc);\n\n    DirectoryReader reader1 = writer.getReader();\n    assertEquals(2, reader1.leaves().size());\n    assertFalse(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(0).reader()));\n\n    assertTrue(policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(1).reader()));\n\n    IOUtils.close(reader1, writer, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"15e716649e2bd79a98b5e68c464154ea4c44677a":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}