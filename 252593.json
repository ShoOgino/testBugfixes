{"path":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newField(\"theLong\", String.valueOf(theLong--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theDouble\", String.valueOf(theDouble--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theByte\", String.valueOf(theByte--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theShort\", String.valueOf(theShort--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theInt\", String.valueOf(theInt--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theFloat\", String.valueOf(theFloat--), StringField.TYPE_UNSTORED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newField(\"theLong\", String.valueOf(theLong--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theDouble\", String.valueOf(theDouble--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theByte\", String.valueOf(theByte--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theShort\", String.valueOf(theShort--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theInt\", String.valueOf(theInt--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theFloat\", String.valueOf(theFloat--), StringField.TYPE_UNSTORED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newField(\"theLong\", String.valueOf(theLong--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theDouble\", String.valueOf(theDouble--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theByte\", String.valueOf(theByte--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theShort\", String.valueOf(theShort--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theInt\", String.valueOf(theInt--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theFloat\", String.valueOf(theFloat--), StringField.TYPE_UNSTORED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newField(\"theLong\", String.valueOf(theLong--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theDouble\", String.valueOf(theDouble--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theByte\", String.valueOf(theByte--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theShort\", String.valueOf(theShort--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theInt\", String.valueOf(theInt--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theFloat\", String.valueOf(theFloat--), StringField.TYPE_UNSTORED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newStringField(\"theLong\", String.valueOf(theLong--), Field.Store.NO));\n      doc.add(newStringField(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO));\n      doc.add(newStringField(\"theByte\", String.valueOf(theByte--), Field.Store.NO));\n      doc.add(newStringField(\"theShort\", String.valueOf(theShort--), Field.Store.NO));\n      doc.add(newStringField(\"theInt\", String.valueOf(theInt--), Field.Store.NO));\n      doc.add(newStringField(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newField(\"theLong\", String.valueOf(theLong--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theDouble\", String.valueOf(theDouble--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theByte\", String.valueOf(theByte--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theShort\", String.valueOf(theShort--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theInt\", String.valueOf(theInt--), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"theFloat\", String.valueOf(theFloat--), StringField.TYPE_UNSTORED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a0020b413d44dd79d85d7a66ed5004265fb453","date":1371758877,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newStringField(\"theLong\", String.valueOf(theLong--), Field.Store.NO));\n      doc.add(newStringField(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO));\n      doc.add(newStringField(\"theByte\", String.valueOf(theByte--), Field.Store.NO));\n      doc.add(newStringField(\"theShort\", String.valueOf(theShort--), Field.Store.NO));\n      doc.add(newStringField(\"theInt\", String.valueOf(theInt--), Field.Store.NO));\n      doc.add(newStringField(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(newStringField(\"theLong\", String.valueOf(theLong--), Field.Store.NO));\n      doc.add(newStringField(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO));\n      doc.add(newStringField(\"theByte\", String.valueOf(theByte--), Field.Store.NO));\n      doc.add(newStringField(\"theShort\", String.valueOf(theShort--), Field.Store.NO));\n      doc.add(newStringField(\"theInt\", String.valueOf(theInt--), Field.Store.NO));\n      doc.add(newStringField(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.shutdown();\n    wB.shutdown();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.shutdown();\n    wB.shutdown();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.shutdown();\n    wB.shutdown();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.shutdown();\n    wB.shutdown();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.shutdown();\n    wB.shutdown();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.shutdown();\n    wB.shutdown();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new DoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new IntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new FloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.shutdown();\n    wB.shutdown();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["04f07771a2a7dd3a395700665ed839c3dae2def2","59a0020b413d44dd79d85d7a66ed5004265fb453"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"59a0020b413d44dd79d85d7a66ed5004265fb453":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["59a0020b413d44dd79d85d7a66ed5004265fb453"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["37a0f60745e53927c4c876cfe5b5a58170f0646c","59a0020b413d44dd79d85d7a66ed5004265fb453"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"59a0020b413d44dd79d85d7a66ed5004265fb453":["37a0f60745e53927c4c876cfe5b5a58170f0646c","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}