{"path":"src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","commits":[{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","pathOld":"/dev/null","sourceNew":"  private void message(String message) {\n    infoStream.println(\"IW [\" + Thread.currentThread().getName() + \"]: \" + message);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7ed80954d0e91206342729d058da7955cb93aa64","67006a60923e2124212d3baa0d29b444bcbd8373"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"67006a60923e2124212d3baa0d29b444bcbd8373","date":1191425052,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","sourceNew":"  private void message(String message) {\n    infoStream.println(\"IW \" + messageID + \" [\" + Thread.currentThread().getName() + \"]: \" + message);\n  }\n\n","sourceOld":"  private void message(String message) {\n    infoStream.println(\"IW [\" + Thread.currentThread().getName() + \"]: \" + message);\n  }\n\n","bugFix":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"bugIntro":["7ed80954d0e91206342729d058da7955cb93aa64"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7ed80954d0e91206342729d058da7955cb93aa64","date":1193061871,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","sourceNew":"  /**\n   * Prints a message to the infoStream (if non-null),\n   * prefixed with the identifying information for this\n   * writer and the thread that's calling it.\n   */\n  public void message(String message) {\n    if (infoStream != null)\n      infoStream.println(\"IW \" + messageID + \" [\" + Thread.currentThread().getName() + \"]: \" + message);\n  }\n\n","sourceOld":"  private void message(String message) {\n    infoStream.println(\"IW \" + messageID + \" [\" + Thread.currentThread().getName() + \"]: \" + message);\n  }\n\n","bugFix":["b1405362241b561f5590ff4a87d5d6e173bcd9cf","67006a60923e2124212d3baa0d29b444bcbd8373"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#message(String).mjava","sourceNew":"  /**\n   * Prints a message to the infoStream (if non-null),\n   * prefixed with the identifying information for this\n   * writer and the thread that's calling it.\n   */\n  public void message(String message) {\n    if (infoStream != null)\n      infoStream.println(\"IW \" + messageID + \" [\" + Thread.currentThread().getName() + \"]: \" + message);\n  }\n\n","sourceOld":"  /**\n   * Prints a message to the infoStream (if non-null),\n   * prefixed with the identifying information for this\n   * writer and the thread that's calling it.\n   */\n  public void message(String message) {\n    if (infoStream != null)\n      infoStream.println(\"IW \" + messageID + \" [\" + Thread.currentThread().getName() + \"]: \" + message);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7ed80954d0e91206342729d058da7955cb93aa64":["67006a60923e2124212d3baa0d29b444bcbd8373"],"67006a60923e2124212d3baa0d29b444bcbd8373":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ed80954d0e91206342729d058da7955cb93aa64"]},"commit2Childs":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["67006a60923e2124212d3baa0d29b444bcbd8373"],"7ed80954d0e91206342729d058da7955cb93aa64":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"67006a60923e2124212d3baa0d29b444bcbd8373":["7ed80954d0e91206342729d058da7955cb93aa64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}