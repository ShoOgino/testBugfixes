{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#Vector(Vector,Vector).mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#Vector(Vector,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Vector#Vector(Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * IllegalArgumentException will be thrown.\n   * Produces a normalized final vector.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n    final double thisX = A.y * B.z - A.z * B.y;\n    final double thisY = A.z * B.x - A.x * B.z;\n    final double thisZ = A.x * B.y - A.y * B.x;\n    final double magnitude = magnitude(thisX, thisY, thisZ);\n    if (Math.abs(magnitude) < MINIMUM_RESOLUTION) {\n      throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");\n    }\n    final double inverseMagnitude = 1.0 / magnitude;\n    this.x = thisX * inverseMagnitude;\n    this.y = thisY * inverseMagnitude;\n    this.z = thisZ * inverseMagnitude;\n  }\n\n","sourceOld":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * IllegalArgumentException will be thrown.\n   * Produces a normalized final vector.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n    final double thisX = A.y * B.z - A.z * B.y;\n    final double thisY = A.z * B.x - A.x * B.z;\n    final double thisZ = A.x * B.y - A.y * B.x;\n    final double magnitude = magnitude(thisX, thisY, thisZ);\n    if (Math.abs(magnitude) < MINIMUM_RESOLUTION) {\n      throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");\n    }\n    final double inverseMagnitude = 1.0 / magnitude;\n    this.x = thisX * inverseMagnitude;\n    this.y = thisY * inverseMagnitude;\n    this.z = thisZ * inverseMagnitude;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff","date":1516881825,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#Vector(Vector,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#Vector(Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * IllegalArgumentException will be thrown.\n   * Produces a normalized final vector.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    this(A, B.x, B.y, B.z);\n  }\n\n","sourceOld":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * IllegalArgumentException will be thrown.\n   * Produces a normalized final vector.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n    final double thisX = A.y * B.z - A.z * B.y;\n    final double thisY = A.z * B.x - A.x * B.z;\n    final double thisZ = A.x * B.y - A.y * B.x;\n    final double magnitude = magnitude(thisX, thisY, thisZ);\n    if (Math.abs(magnitude) < MINIMUM_RESOLUTION) {\n      throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");\n    }\n    final double inverseMagnitude = 1.0 / magnitude;\n    this.x = thisX * inverseMagnitude;\n    this.y = thisY * inverseMagnitude;\n    this.z = thisZ * inverseMagnitude;\n  }\n\n","bugFix":["e2997acf74723385bd84aff1ea0b12af4aefde77","9908748d960ccb7706a20e81289a656237780b6c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff"]},"commit2Childs":{"9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}