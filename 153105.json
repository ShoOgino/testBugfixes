{"path":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[r.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[r.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[r.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[r.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(ReaderContext context) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(ReaderContext context) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(IndexReader reader) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context) {\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":["8249072f13ea4354ab7635c2d7a59cc682806dab","8249072f13ea4354ab7635c2d7a59cc682806dab"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#addClause(BooleanQuery,BitSet).mjava","sourceNew":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","sourceOld":"  BitSet addClause(BooleanQuery bq, BitSet result) {\n    final BitSet rnd = sets[random.nextInt(sets.length)];\n    Query q = new ConstantScoreQuery(new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        return new DocIdBitSet(rnd);\n      }\n    });\n    bq.add(q, BooleanClause.Occur.MUST);\n    if (validate) {\n      if (result==null) result = (BitSet)rnd.clone();\n      else result.and(rnd);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6620df8541b174097b1133a4fc370adb2e570524"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1f653cfcf159baeaafe5d01682a911e95bba4012","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","1f653cfcf159baeaafe5d01682a911e95bba4012"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["29ef99d61cda9641b6250bf9567329a6e65f901d","2dadf0f3286a34a0fee6e788ffce88624bf2984e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["6620df8541b174097b1133a4fc370adb2e570524","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1f653cfcf159baeaafe5d01682a911e95bba4012","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}