{"path":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","commits":[{"id":"609b19bb8de96c4e5e338d1d4a0349957522b601","date":1474892114,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a (reproducibly) random shard from a {@link DocCollection}\n   */\n  protected Slice getRandomShard(DocCollection collection) {\n    List<Slice> shards = new ArrayList<>(collection.getActiveSlices());\n    if (shards.size() == 0)\n      fail(\"Couldn't get random shard for collection as it has no shards!\\n\" + collection.toString());\n    Collections.shuffle(shards, random());\n    return shards.get(0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a (reproducibly) random shard from a {@link DocCollection}\n   */\n  protected Slice getRandomShard(DocCollection collection) {\n    List<Slice> shards = new ArrayList<>(collection.getActiveSlices());\n    if (shards.size() == 0)\n      fail(\"Couldn't get random shard for collection as it has no shards!\\n\" + collection.toString());\n    Collections.shuffle(shards, random());\n    return shards.get(0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a02c54923e5f4de08097fa9028e09e8cf5caa82","date":1475573567,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","sourceNew":"  /**\n   * Get a (reproducibly) random shard from a {@link DocCollection}\n   */\n  protected static Slice getRandomShard(DocCollection collection) {\n    List<Slice> shards = new ArrayList<>(collection.getActiveSlices());\n    if (shards.size() == 0)\n      fail(\"Couldn't get random shard for collection as it has no shards!\\n\" + collection.toString());\n    Collections.shuffle(shards, random());\n    return shards.get(0);\n  }\n\n","sourceOld":"  /**\n   * Get a (reproducibly) random shard from a {@link DocCollection}\n   */\n  protected Slice getRandomShard(DocCollection collection) {\n    List<Slice> shards = new ArrayList<>(collection.getActiveSlices());\n    if (shards.size() == 0)\n      fail(\"Couldn't get random shard for collection as it has no shards!\\n\" + collection.toString());\n    Collections.shuffle(shards, random());\n    return shards.get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","sourceNew":"  /**\n   * Get a (reproducibly) random shard from a {@link DocCollection}\n   */\n  protected static Slice getRandomShard(DocCollection collection) {\n    List<Slice> shards = new ArrayList<>(collection.getActiveSlices());\n    if (shards.size() == 0)\n      fail(\"Couldn't get random shard for collection as it has no shards!\\n\" + collection.toString());\n    Collections.shuffle(shards, random());\n    return shards.get(0);\n  }\n\n","sourceOld":"  /**\n   * Get a (reproducibly) random shard from a {@link DocCollection}\n   */\n  protected Slice getRandomShard(DocCollection collection) {\n    List<Slice> shards = new ArrayList<>(collection.getActiveSlices());\n    if (shards.size() == 0)\n      fail(\"Couldn't get random shard for collection as it has no shards!\\n\" + collection.toString());\n    Collections.shuffle(shards, random());\n    return shards.get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#getRandomShard(DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a (reproducibly) random shard from a {@link DocCollection}\n   */\n  protected static Slice getRandomShard(DocCollection collection) {\n    List<Slice> shards = new ArrayList<>(collection.getActiveSlices());\n    if (shards.size() == 0)\n      fail(\"Couldn't get random shard for collection as it has no shards!\\n\" + collection.toString());\n    Collections.shuffle(shards, random());\n    return shards.get(0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","5a02c54923e5f4de08097fa9028e09e8cf5caa82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","609b19bb8de96c4e5e338d1d4a0349957522b601"],"609b19bb8de96c4e5e338d1d4a0349957522b601":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1967bed916cc89da82a1c2085f27976da6d08cbd"]},"commit2Childs":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["1967bed916cc89da82a1c2085f27976da6d08cbd","5a02c54923e5f4de08097fa9028e09e8cf5caa82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","609b19bb8de96c4e5e338d1d4a0349957522b601","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"609b19bb8de96c4e5e338d1d4a0349957522b601":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}