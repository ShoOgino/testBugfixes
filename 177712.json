{"path":"lucene/core/src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) payloadCount.incrementAndGet() }));\n      } \n      return hasNext;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) payloadCount.incrementAndGet() }));\n      } \n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76fa9933adb0556e752e8af9734c4d0ae14622ff","date":1339178321,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new BytesRef(new byte[] { (byte) payloadCount.incrementAndGet() }));\n      } \n      return hasNext;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) payloadCount.incrementAndGet() }));\n      } \n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76fa9933adb0556e752e8af9734c4d0ae14622ff"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}