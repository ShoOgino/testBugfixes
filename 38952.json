{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(LegacyNumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(LegacyNumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(LegacyNumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(LegacyNumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb","date":1457059932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(LegacyNumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","bugFix":["651ed0c260e4184c8a85ae7e1c155a4415f2e6e2"],"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(LegacyNumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","date":1459379660,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    if (hasPointVals) {\n      return DoublePoint.newExactQuery(field, number);\n    } else if (legacyNumericFieldType != null) {\n      BytesRefBuilder bytes = new BytesRefBuilder();\n      LegacyNumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(number), 0, bytes);\n      return new TermQuery(new Term(field, bytes.get()));\n    }\n    throw new UnsupportedOperationException(\"An index is required for this operation.\");\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    BytesRefBuilder bytes = new BytesRefBuilder();\n    LegacyNumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(number), 0, bytes);\n    return new TermQuery(new Term(field, bytes.get()));\n  }\n\n","bugFix":["a0e7cdd0facd912df00ec53365f98e7c54d6c9bb","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a178ac3dec643551e66363c457a9074f55545f86","date":1496133188,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    if (hasPointVals) {\n      return DoublePoint.newExactQuery(field, number);\n    }\n    throw new UnsupportedOperationException(\"An index is required for this operation.\");\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    if (hasPointVals) {\n      return DoublePoint.newExactQuery(field, number);\n    } else if (legacyNumericFieldType != null) {\n      BytesRefBuilder bytes = new BytesRefBuilder();\n      LegacyNumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(number), 0, bytes);\n      return new TermQuery(new Term(field, bytes.get()));\n    }\n    throw new UnsupportedOperationException(\"An index is required for this operation.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    if (hasPointVals) {\n      return DoublePoint.newExactQuery(field, number);\n    }\n    throw new UnsupportedOperationException(\"An index is required for this operation.\");\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    if (hasPointVals) {\n      return DoublePoint.newExactQuery(field, number);\n    } else if (legacyNumericFieldType != null) {\n      BytesRefBuilder bytes = new BytesRefBuilder();\n      LegacyNumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(number), 0, bytes);\n      return new TermQuery(new Term(field, bytes.get()));\n    }\n    throw new UnsupportedOperationException(\"An index is required for this operation.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeNumberTermQuery(String,double).mjava","sourceNew":"  private Query makeNumberTermQuery(String field, double number) {\n    if (hasPointVals) {\n      return DoublePoint.newExactQuery(field, number);\n    }\n    throw new UnsupportedOperationException(\"An index is required for this operation.\");\n  }\n\n","sourceOld":"  private Query makeNumberTermQuery(String field, double number) {\n    if (hasPointVals) {\n      return DoublePoint.newExactQuery(field, number);\n    } else if (legacyNumericFieldType != null) {\n      BytesRefBuilder bytes = new BytesRefBuilder();\n      LegacyNumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(number), 0, bytes);\n      return new TermQuery(new Term(field, bytes.get()));\n    }\n    throw new UnsupportedOperationException(\"An index is required for this operation.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a178ac3dec643551e66363c457a9074f55545f86":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","a178ac3dec643551e66363c457a9074f55545f86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["af2638813028b254a88b418ebeafb541afb49653","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","a178ac3dec643551e66363c457a9074f55545f86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["112d77ac8d3e10a362516ad834c9a11d35c94234"]},"commit2Childs":{"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4":["a178ac3dec643551e66363c457a9074f55545f86","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a178ac3dec643551e66363c457a9074f55545f86":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"af2638813028b254a88b418ebeafb541afb49653":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}