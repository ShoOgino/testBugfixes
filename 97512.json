{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger.NodeAddedEvent#NodeAddedEvent(TriggerEventType,String,List[Long],List[String]).mjava","commits":[{"id":"cc5ed4ca39a59c23d13866a1e110e608d93cbcc1","date":1503489512,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger.NodeAddedEvent#NodeAddedEvent(TriggerEventType,String,List[Long],List[String]).mjava","pathOld":"/dev/null","sourceNew":"    public NodeAddedEvent(TriggerEventType eventType, String source, List<Long> times, List<String> nodeNames) {\n      // use the oldest time as the time of the event\n      super(eventType, source, times.get(0), null);\n      properties.put(NODE_NAMES, nodeNames);\n      properties.put(EVENT_TIMES, times);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger.NodeAddedEvent#NodeAddedEvent(TriggerEventType,String,List[Long],List[String]).mjava","pathOld":"/dev/null","sourceNew":"    public NodeAddedEvent(TriggerEventType eventType, String source, List<Long> times, List<String> nodeNames) {\n      // use the oldest time as the time of the event\n      super(eventType, source, times.get(0), null);\n      properties.put(NODE_NAMES, nodeNames);\n      properties.put(EVENT_TIMES, times);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger.NodeAddedEvent#NodeAddedEvent(TriggerEventType,String,List[Long],List[String]).mjava","pathOld":"/dev/null","sourceNew":"    public NodeAddedEvent(TriggerEventType eventType, String source, List<Long> times, List<String> nodeNames) {\n      // use the oldest time as the time of the event\n      super(eventType, source, times.get(0), null);\n      properties.put(NODE_NAMES, nodeNames);\n      properties.put(EVENT_TIMES, times);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f315cd0d0955ce9ca691cc8e2796af69c4b9b6","date":1536060944,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger.NodeAddedEvent#NodeAddedEvent(TriggerEventType,String,List[Long],List[String],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger.NodeAddedEvent#NodeAddedEvent(TriggerEventType,String,List[Long],List[String]).mjava","sourceNew":"    public NodeAddedEvent(TriggerEventType eventType, String source, List<Long> times, List<String> nodeNames, String preferredOp) {\n      // use the oldest time as the time of the event\n      super(eventType, source, times.get(0), null);\n      properties.put(NODE_NAMES, nodeNames);\n      properties.put(EVENT_TIMES, times);\n      properties.put(PREFERRED_OP, preferredOp);\n    }\n\n","sourceOld":"    public NodeAddedEvent(TriggerEventType eventType, String source, List<Long> times, List<String> nodeNames) {\n      // use the oldest time as the time of the event\n      super(eventType, source, times.get(0), null);\n      properties.put(NODE_NAMES, nodeNames);\n      properties.put(EVENT_TIMES, times);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc5ed4ca39a59c23d13866a1e110e608d93cbcc1"],"f7f315cd0d0955ce9ca691cc8e2796af69c4b9b6":["560c18d71dad43d675158783c3840f8c80d6d39c"],"cc5ed4ca39a59c23d13866a1e110e608d93cbcc1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7f315cd0d0955ce9ca691cc8e2796af69c4b9b6"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"cc5ed4ca39a59c23d13866a1e110e608d93cbcc1":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"f7f315cd0d0955ce9ca691cc8e2796af69c4b9b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","cc5ed4ca39a59c23d13866a1e110e608d93cbcc1","560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["f7f315cd0d0955ce9ca691cc8e2796af69c4b9b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}