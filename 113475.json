{"path":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir, true);\n      assertEquals(\"lastCommit.isOptimized()=\" + lastCommit.isOptimized() + \" vs IndexReader.isOptimized=\" + r.isOptimized(), r.isOptimized(), lastCommit.isOptimized());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir, true);\n      assertEquals(\"lastCommit.isOptimized()=\" + lastCommit.isOptimized() + \" vs IndexReader.isOptimized=\" + r.isOptimized(), r.isOptimized(), lastCommit.isOptimized());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir, true);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir, true);\n      assertEquals(\"lastCommit.isOptimized()=\" + lastCommit.isOptimized() + \" vs IndexReader.isOptimized=\" + r.isOptimized(), r.isOptimized(), lastCommit.isOptimized());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir, true);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir, true);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir, true);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868186558eb3a854ce7e720a52bb445795d54910","date":1327853682,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      IndexReader r = IndexReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","868186558eb3a854ce7e720a52bb445795d54910"],"868186558eb3a854ce7e720a52bb445795d54910":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a","868186558eb3a854ce7e720a52bb445795d54910"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"868186558eb3a854ce7e720a52bb445795d54910":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}