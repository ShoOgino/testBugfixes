{"path":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decodeBoundary(String,SpatialContext).mjava","commits":[{"id":"c2047ba81272a0c4edeb11b1c7810ee23ba73502","date":1329808655,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decodeBoundary(String,SpatialContext).mjava","pathOld":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decodeBoundary(String,SpatialContext).mjava","sourceNew":"  /** Returns min-max lat, min-max lon. */\n  public static Rectangle decodeBoundary(String geohash, SpatialContext ctx) {\n    double minY = -90, maxY = 90, minX = -180, maxX = 180;\n    boolean isEven = true;\n\n    for (int i = 0; i < geohash.length(); i++) {\n      char c = geohash.charAt(i);\n      if (c >= 'A' && c <= 'Z')\n        c -= ('A' - 'a');\n      final int cd = BASE_32_IDX[c - BASE_32[0]];//TODO check successful?\n\n      for (int mask : BITS) {\n        if (isEven) {\n          if ((cd & mask) != 0) {\n            minX = (minX + maxX) / 2D;\n          } else {\n            maxX = (minX + maxX) / 2D;\n          }\n        } else {\n          if ((cd & mask) != 0) {\n            minY = (minY + maxY) / 2D;\n          } else {\n            maxY = (minY + maxY) / 2D;\n          }\n        }\n        isEven = !isEven;\n      }\n\n    }\n    return ctx.makeRect(minX, maxX, minY, maxY);\n  }\n\n","sourceOld":"  /** Returns min-max lat, min-max lon. */\n  public static Rectangle decodeBoundary(String geohash, SpatialContext ctx) {\n    double minY = -90, maxY = 90, minX = -180, maxX = 180;\n    boolean isEven = true;\n\n    for (int i = 0; i < geohash.length(); i++) {\n      char c = geohash.charAt(i);\n      if (c >= 'A' && c <= 'Z')\n        c -= ('A' - 'a');\n      final int cd = BASE_32_IDX[c - BASE_32[0]];//TODO check successful?\n\n      for (int mask : BITS) {\n        if (isEven) {\n          if ((cd & mask) != 0) {\n            minX = (minX + maxX) / 2D;\n          } else {\n            maxX = (minX + maxX) / 2D;\n          }\n        } else {\n          if ((cd & mask) != 0) {\n            minY = (minY + maxY) / 2D;\n          } else {\n            maxY = (minY + maxY) / 2D;\n          }\n        }\n        isEven = !isEven;\n      }\n\n    }\n    return ctx.makeRect(minX, maxX, minY, maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a","date":1329809096,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/base/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decodeBoundary(String,SpatialContext).mjava","pathOld":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#decodeBoundary(String,SpatialContext).mjava","sourceNew":"  /** Returns min-max lat, min-max lon. */\n  public static Rectangle decodeBoundary(String geohash, SpatialContext ctx) {\n    double minY = -90, maxY = 90, minX = -180, maxX = 180;\n    boolean isEven = true;\n\n    for (int i = 0; i < geohash.length(); i++) {\n      char c = geohash.charAt(i);\n      if (c >= 'A' && c <= 'Z')\n        c -= ('A' - 'a');\n      final int cd = BASE_32_IDX[c - BASE_32[0]];//TODO check successful?\n\n      for (int mask : BITS) {\n        if (isEven) {\n          if ((cd & mask) != 0) {\n            minX = (minX + maxX) / 2D;\n          } else {\n            maxX = (minX + maxX) / 2D;\n          }\n        } else {\n          if ((cd & mask) != 0) {\n            minY = (minY + maxY) / 2D;\n          } else {\n            maxY = (minY + maxY) / 2D;\n          }\n        }\n        isEven = !isEven;\n      }\n\n    }\n    return ctx.makeRect(minX, maxX, minY, maxY);\n  }\n\n","sourceOld":"  /** Returns min-max lat, min-max lon. */\n  public static Rectangle decodeBoundary(String geohash, SpatialContext ctx) {\n    double minY = -90, maxY = 90, minX = -180, maxX = 180;\n    boolean isEven = true;\n\n    for (int i = 0; i < geohash.length(); i++) {\n      char c = geohash.charAt(i);\n      if (c >= 'A' && c <= 'Z')\n        c -= ('A' - 'a');\n      final int cd = BASE_32_IDX[c - BASE_32[0]];//TODO check successful?\n\n      for (int mask : BITS) {\n        if (isEven) {\n          if ((cd & mask) != 0) {\n            minX = (minX + maxX) / 2D;\n          } else {\n            maxX = (minX + maxX) / 2D;\n          }\n        } else {\n          if ((cd & mask) != 0) {\n            minY = (minY + maxY) / 2D;\n          } else {\n            maxY = (minY + maxY) / 2D;\n          }\n        }\n        isEven = !isEven;\n      }\n\n    }\n    return ctx.makeRect(minX, maxX, minY, maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a":["c2047ba81272a0c4edeb11b1c7810ee23ba73502"]},"commit2Childs":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2047ba81272a0c4edeb11b1c7810ee23ba73502","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}