{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","commits":[{"id":"b799defcfda6d303cbb180917bf1e749089adf42","date":1370695356,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSloppyDocScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq,\n          norms == null ? 1F : decodeNormValue((byte)norms.get(doc)));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq,\n          norms == null ? 1F : decodeNormValue((byte)norms.get(doc)));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getNormValue(doc));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq,\n          norms == null ? 1F : decodeNormValue((byte)norms.get(doc)));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getNormValue(doc));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq,\n          norms == null ? 1F : decodeNormValue((byte)norms.get(doc)));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getNormValue(doc));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq,\n          norms == null ? 1F : decodeNormValue((byte)norms.get(doc)));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getNormValue(doc));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getNormValue(doc));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return (float) SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f82a9bd302914a72572934ddb0a4ee15edfe4c6","date":1509493555,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      return (float) SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      // We have to supply something in case norms are omitted\n      return (float) SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","bugFix":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(float,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":"    @Override\n    public float score(float freq, long norm) throws IOException {\n      return (float) SimilarityBase.this.score(stats, freq, getLengthValue(norm));\n    }\n\n","sourceOld":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      return (float) SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.BasicSimScorer#score(int,float).mjava","sourceNew":null,"sourceOld":"    @Override\n    public float score(int doc, float freq) throws IOException {\n      return (float) SimilarityBase.this.score(stats, freq, getLengthValue(doc));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["0f82a9bd302914a72572934ddb0a4ee15edfe4c6","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["0f82a9bd302914a72572934ddb0a4ee15edfe4c6"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","615370d2b876c3435773b5174df2e2242ad7981a"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b799defcfda6d303cbb180917bf1e749089adf42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b799defcfda6d303cbb180917bf1e749089adf42","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["b799defcfda6d303cbb180917bf1e749089adf42"],"0f82a9bd302914a72572934ddb0a4ee15edfe4c6":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b799defcfda6d303cbb180917bf1e749089adf42","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["0f82a9bd302914a72572934ddb0a4ee15edfe4c6"],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b799defcfda6d303cbb180917bf1e749089adf42":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b799defcfda6d303cbb180917bf1e749089adf42"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0f82a9bd302914a72572934ddb0a4ee15edfe4c6":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}