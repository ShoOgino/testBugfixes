{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentCommitInfo,SegmentReader,Bits,Bits,int,boolean).mjava","commits":[{"id":"578a4d73d90ecd838846cc32bf1098aaa262b524","date":1532504076,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentCommitInfo,SegmentReader,Bits,Bits,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentCommitInfo,SegmentReader,Bits,int,boolean).mjava","sourceNew":"  /** Create new SegmentReader sharing core from a previous\n   *  SegmentReader and using the provided liveDocs, and recording\n   *  whether those liveDocs were carried in ram (isNRT=true). */\n  SegmentReader(SegmentCommitInfo si, SegmentReader sr, Bits liveDocs, Bits hardLiveDocs, int numDocs, boolean isNRT) throws IOException {\n    if (numDocs > si.info.maxDoc()) {\n      throw new IllegalArgumentException(\"numDocs=\" + numDocs + \" but maxDoc=\" + si.info.maxDoc());\n    }\n    if (liveDocs != null && liveDocs.length() != si.info.maxDoc()) {\n      throw new IllegalArgumentException(\"maxDoc=\" + si.info.maxDoc() + \" but liveDocs.size()=\" + liveDocs.length());\n    }\n    this.si = si.clone();\n    this.originalSi = si;\n    this.metaData = sr.getMetaData();\n    this.liveDocs = liveDocs;\n    this.hardLiveDocs = hardLiveDocs;\n    assert assertLiveDocs(isNRT, hardLiveDocs, liveDocs);\n    this.isNRT = isNRT;\n    this.numDocs = numDocs;\n    this.core = sr.core;\n    core.incRef();\n    this.segDocValues = sr.segDocValues;\n\n    boolean success = false;\n    try {\n      fieldInfos = initFieldInfos();\n      docValuesProducer = initDocValuesProducer();\n      success = true;\n    } finally {\n      if (!success) {\n        doClose();\n      }\n    }\n  }\n\n","sourceOld":"  /** Create new SegmentReader sharing core from a previous\n   *  SegmentReader and using the provided liveDocs, and recording\n   *  whether those liveDocs were carried in ram (isNRT=true). */\n  SegmentReader(SegmentCommitInfo si, SegmentReader sr, Bits liveDocs, int numDocs, boolean isNRT) throws IOException {\n    if (numDocs > si.info.maxDoc()) {\n      throw new IllegalArgumentException(\"numDocs=\" + numDocs + \" but maxDoc=\" + si.info.maxDoc());\n    }\n    if (liveDocs != null && liveDocs.length() != si.info.maxDoc()) {\n      throw new IllegalArgumentException(\"maxDoc=\" + si.info.maxDoc() + \" but liveDocs.size()=\" + liveDocs.length());\n    }\n    this.si = si.clone();\n    this.originalSi = si;\n    this.metaData = sr.getMetaData();\n    this.liveDocs = liveDocs;\n    this.isNRT = isNRT;\n    this.numDocs = numDocs;\n    this.core = sr.core;\n    core.incRef();\n    this.segDocValues = sr.segDocValues;\n\n    boolean success = false;\n    try {\n      fieldInfos = initFieldInfos();\n      docValuesProducer = initDocValuesProducer();\n      success = true;\n    } finally {\n      if (!success) {\n        doClose();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"578a4d73d90ecd838846cc32bf1098aaa262b524":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["578a4d73d90ecd838846cc32bf1098aaa262b524"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["578a4d73d90ecd838846cc32bf1098aaa262b524"],"578a4d73d90ecd838846cc32bf1098aaa262b524":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}