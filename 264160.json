{"path":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","commits":[{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d83c76c93630c91bac9a1400a8aaca4f210d5f4d","date":1467188009,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":5,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d83c76c93630c91bac9a1400a8aaca4f210d5f4d":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["d83c76c93630c91bac9a1400a8aaca4f210d5f4d","182384b20c064aa16998ddebe9f36e649279c5a6"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["d83c76c93630c91bac9a1400a8aaca4f210d5f4d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["d83c76c93630c91bac9a1400a8aaca4f210d5f4d","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","d83c76c93630c91bac9a1400a8aaca4f210d5f4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["182384b20c064aa16998ddebe9f36e649279c5a6"]},"commit2Childs":{"d83c76c93630c91bac9a1400a8aaca4f210d5f4d":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["d83c76c93630c91bac9a1400a8aaca4f210d5f4d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}