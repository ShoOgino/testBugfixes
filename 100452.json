{"path":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c71d502dea2f9d6ed3d8783f510ea3254435de9","date":1318266042,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp = null;\n    if (docToOrd.hasArray()) {\n      final Object arr = docToOrd.getArray();\n      if (arr instanceof byte[]) {\n        perSegComp = new ByteOrdComparator((byte[]) arr, parent);\n      } else if (arr instanceof short[]) {\n        perSegComp = new ShortOrdComparator((short[]) arr, parent);\n      } else if (arr instanceof int[]) {\n        perSegComp = new IntOrdComparator((int[]) arr, parent);\n      }\n    }\n\n    if (perSegComp == null) {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96d207426bd26fa5c1014e26d21d87603aea68b7","date":1327944562,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(AtomicReader,TermOrdValComparator_SML).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(AtomicReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp = null;\n    if (docToOrd.hasArray()) {\n      final Object arr = docToOrd.getArray();\n      if (arr instanceof byte[]) {\n        perSegComp = new ByteOrdComparator((byte[]) arr, parent);\n      } else if (arr instanceof short[]) {\n        perSegComp = new ShortOrdComparator((short[]) arr, parent);\n      } else if (arr instanceof int[]) {\n        perSegComp = new IntOrdComparator((int[]) arr, parent);\n      }\n    }\n\n    if (perSegComp == null) {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp = null;\n    if (docToOrd.hasArray()) {\n      final Object arr = docToOrd.getArray();\n      if (arr instanceof byte[]) {\n        perSegComp = new ByteOrdComparator((byte[]) arr, parent);\n      } else if (arr instanceof short[]) {\n        perSegComp = new ShortOrdComparator((short[]) arr, parent);\n      } else if (arr instanceof int[]) {\n        perSegComp = new IntOrdComparator((int[]) arr, parent);\n      }\n    }\n\n    if (perSegComp == null) {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(AtomicReader,TermOrdValComparator_SML).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(AtomicReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp = null;\n    if (docToOrd.hasArray()) {\n      final Object arr = docToOrd.getArray();\n      if (arr instanceof byte[]) {\n        perSegComp = new ByteOrdComparator((byte[]) arr, parent);\n      } else if (arr instanceof short[]) {\n        perSegComp = new ShortOrdComparator((short[]) arr, parent);\n      } else if (arr instanceof int[]) {\n        perSegComp = new IntOrdComparator((int[]) arr, parent);\n      }\n    }\n\n    if (perSegComp == null) {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp = null;\n    if (docToOrd.hasArray()) {\n      final Object arr = docToOrd.getArray();\n      if (arr instanceof byte[]) {\n        perSegComp = new ByteOrdComparator((byte[]) arr, parent);\n      } else if (arr instanceof short[]) {\n        perSegComp = new ShortOrdComparator((short[]) arr, parent);\n      } else if (arr instanceof int[]) {\n        perSegComp = new IntOrdComparator((int[]) arr, parent);\n      }\n    }\n\n    if (perSegComp == null) {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3c71d502dea2f9d6ed3d8783f510ea3254435de9":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96d207426bd26fa5c1014e26d21d87603aea68b7":["3c71d502dea2f9d6ed3d8783f510ea3254435de9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3c71d502dea2f9d6ed3d8783f510ea3254435de9","96d207426bd26fa5c1014e26d21d87603aea68b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"3c71d502dea2f9d6ed3d8783f510ea3254435de9":["96d207426bd26fa5c1014e26d21d87603aea68b7","5cab9a86bd67202d20b6adc463008c8e982b070a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["3c71d502dea2f9d6ed3d8783f510ea3254435de9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"96d207426bd26fa5c1014e26d21d87603aea68b7":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}