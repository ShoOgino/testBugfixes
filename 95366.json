{"path":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":null,"sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef02613bb5b67b98ca5caf41e8d6e016a0158923","date":1283980033,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      fi.addExceptions((List)facet_counts.get(\"exception\"));\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","date":1286157263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      fi.addExceptions((List)facet_counts.get(\"exception\"));\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      fi.addExceptions((List)facet_counts.get(\"exception\"));\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      fi.addExceptions((List)facet_counts.get(\"exception\"));\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = (DistribFieldFacet)fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"755f2f419306d7297c8feee10d1897addf4b2dd0","date":1294442354,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      fi.addExceptions((List)facet_counts.get(\"exception\"));\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      fi.addExceptions((List)facet_counts.get(\"exception\"));\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n\n      fi.addExceptions((List)facet_counts.get(\"exception\"));\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#refineFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void refineFacets(ResponseBuilder rb, ShardRequest sreq) {\n    FacetInfo fi = rb._facetInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      // int shardNum = rb.getShardNum(srsp.shard);\n      NamedList facet_counts = (NamedList)srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      NamedList facet_fields = (NamedList)facet_counts.get(\"facet_fields\");\n  \n      @SuppressWarnings(\"unchecked\") \n      List<String> excepts = (List<String>)facet_counts.get(\"exception\");\n      fi.addExceptions(excepts);\n\n      if (facet_fields == null) continue; // this can happen when there's an exception      \n\n      for (int i=0; i<facet_fields.size(); i++) {\n        String key = facet_fields.getName(i);\n        DistribFieldFacet dff = fi.facets.get(key);\n        if (dff == null) continue;\n\n        NamedList shardCounts = (NamedList)facet_fields.getVal(i);\n\n        for (int j=0; j<shardCounts.size(); j++) {\n          String name = shardCounts.getName(j);\n          long count = ((Number)shardCounts.getVal(j)).longValue();\n          ShardFacetCount sfc = dff.counts.get(name);\n          sfc.count += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d":["ef02613bb5b67b98ca5caf41e8d6e016a0158923"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ef02613bb5b67b98ca5caf41e8d6e016a0158923":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["755f2f419306d7297c8feee10d1897addf4b2dd0","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","755f2f419306d7297c8feee10d1897addf4b2dd0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","755f2f419306d7297c8feee10d1897addf4b2dd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","755f2f419306d7297c8feee10d1897addf4b2dd0","29ef99d61cda9641b6250bf9567329a6e65f901d"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"ef02613bb5b67b98ca5caf41e8d6e016a0158923":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"1da8d55113b689b06716246649de6f62430f15c0":["ef02613bb5b67b98ca5caf41e8d6e016a0158923","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}