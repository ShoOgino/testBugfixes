{"path":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d47326e0c6ce589b6962777df409aad0550940fa","date":1304584540,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0b8069918917b33f361011899a1af0cdd2d462","date":1310039336,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions, getDocValuesUseCFS());\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions, getDocValuesUseCFS());\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions, getDocValuesUseCFS());\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriter.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    BlockTreeTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions, getDocValuesUseCFS());\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions, getDocValuesUseCFS());\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37f149c99eae8edb6c2f44fda36f194e0e345565","date":1317419618,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriter.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    BlockTreeTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    if (useSepDocValues) {\n      SepDocValuesConsumer.getExtensions(extensions);\n    } else {\n      DefaultDocValuesConsumer.getExtensions(extensions);      \n    }\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriter.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    BlockTreeTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    DefaultDocValuesConsumer.getDocValuesExtensions(extensions, getDocValuesUseCFS());\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriter.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    BlockTreeTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    if (useSepDocValues) {\n      SepDocValuesConsumer.getExtensions(extensions);\n    } else {\n      DefaultDocValuesConsumer.getExtensions(extensions);      \n    }\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","2e8d7ba2175f47e280231533f7d3016249cea88b"],"bc0b8069918917b33f361011899a1af0cdd2d462":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["bc0b8069918917b33f361011899a1af0cdd2d462"],"7b91922b55d15444d554721b352861d028eb8278":["37f149c99eae8edb6c2f44fda36f194e0e345565"],"1291e4568eb7d9463d751627596ef14baf4c1603":["2e8d7ba2175f47e280231533f7d3016249cea88b","bc0b8069918917b33f361011899a1af0cdd2d462"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","d47326e0c6ce589b6962777df409aad0550940fa"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","bc0b8069918917b33f361011899a1af0cdd2d462"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"37f149c99eae8edb6c2f44fda36f194e0e345565":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"d47326e0c6ce589b6962777df409aad0550940fa":["29ef99d61cda9641b6250bf9567329a6e65f901d"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"bc0b8069918917b33f361011899a1af0cdd2d462":["60ba444201d2570214b6fcf1d15600dc1a01f548","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["37f149c99eae8edb6c2f44fda36f194e0e345565"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","bc0b8069918917b33f361011899a1af0cdd2d462","1291e4568eb7d9463d751627596ef14baf4c1603"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d47326e0c6ce589b6962777df409aad0550940fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"37f149c99eae8edb6c2f44fda36f194e0e345565":["7b91922b55d15444d554721b352861d028eb8278"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"d47326e0c6ce589b6962777df409aad0550940fa":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}