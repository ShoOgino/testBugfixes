{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","commits":[{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return params.equals(policy.params);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return params.equals(policy.params);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return params.equals(policy.params);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d8ca9e6031bee8fa44d2411f78f1f6e610a46f","date":1516022695,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return params.equals(policy.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return params.equals(policy.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33ae23947c41339ea2b352422bb762dfb4a17077","date":1524235117,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    return getClusterPreferences().equals(policy.getClusterPreferences());\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    if (!getClusterPreferences().equals(policy.getClusterPreferences())) return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#equals(Object).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    Policy policy = (Policy) o;\n\n    if (!getPolicies().equals(policy.getPolicies())) return false;\n    if (!getClusterPolicy().equals(policy.getClusterPolicy())) return false;\n    return getClusterPreferences().equals(policy.getClusterPreferences());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["560c18d71dad43d675158783c3840f8c80d6d39c","81d8ca9e6031bee8fa44d2411f78f1f6e610a46f"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"3f504512a03d978990cbff30db0522b354e846db":["33ae23947c41339ea2b352422bb762dfb4a17077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ae23947c41339ea2b352422bb762dfb4a17077":["b94236357aaa22b76c10629851fe4e376e0cea82"],"81d8ca9e6031bee8fa44d2411f78f1f6e610a46f":["560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["33ae23947c41339ea2b352422bb762dfb4a17077"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"81d8ca9e6031bee8fa44d2411f78f1f6e610a46f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"33ae23947c41339ea2b352422bb762dfb4a17077":["3f504512a03d978990cbff30db0522b354e846db"],"560c18d71dad43d675158783c3840f8c80d6d39c":["b94236357aaa22b76c10629851fe4e376e0cea82","81d8ca9e6031bee8fa44d2411f78f1f6e610a46f"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}