{"path":"backwards/src/java/org/apache/lucene/store/IndexOutput#writeChars(String,int,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/store/IndexOutput#writeChars(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Writes a sub sequence of characters from s as the old\n   *  format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes\n   * instead or use {@link #writeString}\n   */\n  public void writeChars(String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/store/IndexOutput#writeChars(String,int,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/store/IndexOutput#writeChars(String,int,int).mjava","sourceNew":"  /** Writes a sub sequence of characters from s as the old\n   *  format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes\n   * instead or use {@link #writeString}\n   */\n  public void writeChars(String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":"  /** Writes a sub sequence of characters from s as the old\n   *  format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes\n   * instead or use {@link #writeString}\n   */\n  public void writeChars(String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}