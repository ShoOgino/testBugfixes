{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/Storage#getFeed(ServerBaseFeed).mjava","commits":[{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/Storage#getFeed(ServerBaseFeed).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Retrieves the requested feed from the storage. The given ServerBaseFeed\n     * must provide information about the feed id, max-result count and the\n     * start index. To create feeds and entries also the service type must be\n     * provided.\n     * \n     * @param feed -\n     *            the to retieve from the storage\n     * @return the requested feed\n     * @throws StorageException -\n     *             the feed does not exist or can not be retrieved or required\n     *             field are not set.\n     */\n    public abstract BaseFeed getFeed(ServerBaseFeed feed)\n            throws StorageException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/Storage#getFeed(ServerBaseFeed).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/Storage#getFeed(ServerBaseFeed).mjava","sourceNew":"    /**\n     * Retrieves the requested feed from the storage. The given ServerBaseFeed\n     * must provide information about the feed id, max-result count and the\n     * start index. To create feeds and entries also the service type must be\n     * provided.\n     * \n     * @param feed -\n     *            the to retieve from the storage\n     * @return the requested feed\n     * @throws StorageException -\n     *             the feed does not exist or can not be retrieved or required\n     *             field are not set.\n     */\n    public abstract BaseFeed getFeed(ServerBaseFeed feed)\n            throws StorageException;\n\n","sourceOld":"    /**\n     * Retrieves the requested feed from the storage. The given ServerBaseFeed\n     * must provide information about the feed id, max-result count and the\n     * start index. To create feeds and entries also the service type must be\n     * provided.\n     * \n     * @param feed -\n     *            the to retieve from the storage\n     * @return the requested feed\n     * @throws StorageException -\n     *             the feed does not exist or can not be retrieved or required\n     *             field are not set.\n     */\n    public abstract BaseFeed getFeed(ServerBaseFeed feed)\n            throws StorageException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["52754a40a1550056d5637c8992b4076b5ed77328"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52754a40a1550056d5637c8992b4076b5ed77328"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52754a40a1550056d5637c8992b4076b5ed77328":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}