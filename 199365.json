{"path":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(IndexDocValues).mjava","commits":[{"id":"41e5bbad683f7546e96f08ffe8bc50cf447f2586","date":1307113213,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(IndexDocValues).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(DocValues).mjava","sourceNew":"  private DocValuesEnum getValuesEnum(IndexDocValues values) throws IOException {\n    DocValuesEnum valuesEnum;\n    if (!(values instanceof MultiDocValues) && random.nextInt(10) == 0) {\n      // TODO not supported by MultiDocValues yet!\n      valuesEnum = getSource(values).getEnum();\n    } else {\n      valuesEnum = values.getEnum();\n\n    }\n    assertNotNull(valuesEnum);\n    return valuesEnum;\n  }\n\n","sourceOld":"  private DocValuesEnum getValuesEnum(DocValues values) throws IOException {\n    DocValuesEnum valuesEnum;\n    if (!(values instanceof MultiDocValues) && random.nextInt(10) == 0) {\n      // TODO not supported by MultiDocValues yet!\n      valuesEnum = getSource(values).getEnum();\n    } else {\n      valuesEnum = values.getEnum();\n\n    }\n    assertNotNull(valuesEnum);\n    return valuesEnum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"605b061fadf71aa6458c0005eaae83a98350c403","date":1307117658,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(IndexDocValues).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(IndexDocValues).mjava","sourceNew":"  private ValuesEnum getValuesEnum(IndexDocValues values) throws IOException {\n    ValuesEnum valuesEnum;\n    if (!(values instanceof MultiIndexDocValues) && random.nextInt(10) == 0) {\n      // TODO not supported by MultiDocValues yet!\n      valuesEnum = getSource(values).getEnum();\n    } else {\n      valuesEnum = values.getEnum();\n\n    }\n    assertNotNull(valuesEnum);\n    return valuesEnum;\n  }\n\n","sourceOld":"  private DocValuesEnum getValuesEnum(IndexDocValues values) throws IOException {\n    DocValuesEnum valuesEnum;\n    if (!(values instanceof MultiDocValues) && random.nextInt(10) == 0) {\n      // TODO not supported by MultiDocValues yet!\n      valuesEnum = getSource(values).getEnum();\n    } else {\n      valuesEnum = values.getEnum();\n\n    }\n    assertNotNull(valuesEnum);\n    return valuesEnum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(IndexDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private ValuesEnum getValuesEnum(IndexDocValues values) throws IOException {\n    ValuesEnum valuesEnum;\n    if (!(values instanceof MultiIndexDocValues) && random.nextInt(10) == 0) {\n      // TODO not supported by MultiDocValues yet!\n      valuesEnum = getSource(values).getEnum();\n    } else {\n      valuesEnum = values.getEnum();\n\n    }\n    assertNotNull(valuesEnum);\n    return valuesEnum;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(IndexDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private ValuesEnum getValuesEnum(IndexDocValues values) throws IOException {\n    ValuesEnum valuesEnum;\n    if (!(values instanceof MultiIndexDocValues) && random.nextInt(10) == 0) {\n      // TODO not supported by MultiDocValues yet!\n      valuesEnum = getSource(values).getEnum();\n    } else {\n      valuesEnum = values.getEnum();\n\n    }\n    assertNotNull(valuesEnum);\n    return valuesEnum;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#getValuesEnum(IndexDocValues).mjava","sourceNew":null,"sourceOld":"  private ValuesEnum getValuesEnum(IndexDocValues values) throws IOException {\n    ValuesEnum valuesEnum;\n    if (!(values instanceof MultiIndexDocValues) && random.nextInt(10) == 0) {\n      // TODO not supported by MultiDocValues yet!\n      valuesEnum = getSource(values).getEnum();\n    } else {\n      valuesEnum = values.getEnum();\n\n    }\n    assertNotNull(valuesEnum);\n    return valuesEnum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","605b061fadf71aa6458c0005eaae83a98350c403"],"605b061fadf71aa6458c0005eaae83a98350c403":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e128967bca58657bc0039d4bfe631e63e81f1977":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e128967bca58657bc0039d4bfe631e63e81f1977"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","e128967bca58657bc0039d4bfe631e63e81f1977"],"605b061fadf71aa6458c0005eaae83a98350c403":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["605b061fadf71aa6458c0005eaae83a98350c403"],"e128967bca58657bc0039d4bfe631e63e81f1977":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}