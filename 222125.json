{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration#assertAutoscalingUpdateComplete().mjava","commits":[{"id":"35b336749840ccc5e7c88aa0a787fc6e3730d6e7","date":1546960615,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration#assertAutoscalingUpdateComplete().mjava","pathOld":"/dev/null","sourceNew":"  private static void assertAutoscalingUpdateComplete() throws Exception {\n    (new TimeOut(30, TimeUnit.SECONDS, cluster.getTimeSource()))\n        .waitFor(\"OverseerTriggerThread never caught up to the latest znodeVersion\", () -> {\n          try {\n            AutoScalingConfig autoscalingConfig = cluster.getDistribStateManager().getAutoScalingConfig();\n            return autoscalingConfig.getZkVersion() == cluster.getOverseerTriggerThread().getProcessedZnodeVersion();\n          } catch (Exception e) {\n            throw new RuntimeException(\"FAILED\", e);\n          }\n        });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce85ed088dcf7aa1742105d4a8caa9aab3b491c1","date":1546971158,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#assertAutoscalingUpdateComplete().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration#assertAutoscalingUpdateComplete().mjava","sourceNew":"  protected static void assertAutoscalingUpdateComplete() throws Exception {\n    (new TimeOut(30, TimeUnit.SECONDS, cluster.getTimeSource()))\n        .waitFor(\"OverseerTriggerThread never caught up to the latest znodeVersion\", () -> {\n          try {\n            AutoScalingConfig autoscalingConfig = cluster.getDistribStateManager().getAutoScalingConfig();\n            return autoscalingConfig.getZkVersion() == cluster.getOverseerTriggerThread().getProcessedZnodeVersion();\n          } catch (Exception e) {\n            throw new RuntimeException(\"FAILED\", e);\n          }\n        });\n  }\n\n","sourceOld":"  private static void assertAutoscalingUpdateComplete() throws Exception {\n    (new TimeOut(30, TimeUnit.SECONDS, cluster.getTimeSource()))\n        .waitFor(\"OverseerTriggerThread never caught up to the latest znodeVersion\", () -> {\n          try {\n            AutoScalingConfig autoscalingConfig = cluster.getDistribStateManager().getAutoScalingConfig();\n            return autoscalingConfig.getZkVersion() == cluster.getOverseerTriggerThread().getProcessedZnodeVersion();\n          } catch (Exception e) {\n            throw new RuntimeException(\"FAILED\", e);\n          }\n        });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35b336749840ccc5e7c88aa0a787fc6e3730d6e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ce85ed088dcf7aa1742105d4a8caa9aab3b491c1":["35b336749840ccc5e7c88aa0a787fc6e3730d6e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ce85ed088dcf7aa1742105d4a8caa9aab3b491c1"]},"commit2Childs":{"35b336749840ccc5e7c88aa0a787fc6e3730d6e7":["ce85ed088dcf7aa1742105d4a8caa9aab3b491c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35b336749840ccc5e7c88aa0a787fc6e3730d6e7"],"ce85ed088dcf7aa1742105d4a8caa9aab3b491c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}