{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public void callStatement() throws Throwable {\n        fixShardCount(numShards);\n        createServers(numShards);\n        RandVal.uniqueValues = new HashSet(); //reset random values\n        statement.evaluate();\n        destroyServers();\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"536b47681314488eb94706248be6047a3f142841","date":1450372090,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","sourceNew":"      @Override\n      public void callStatement() throws Throwable {\n        fixShardCount(numShards);\n        createServers(numShards);\n        RandVal.uniqueValues = new HashSet(); //reset random values\n        statement.evaluate();\n        try {\n          destroyServers();\n        } catch (Throwable t) {\n          log.error(\"Error while shutting down servers\", t);\n        }\n      }\n\n","sourceOld":"      @Override\n      public void callStatement() throws Throwable {\n        fixShardCount(numShards);\n        createServers(numShards);\n        RandVal.uniqueValues = new HashSet(); //reset random values\n        statement.evaluate();\n        destroyServers();\n      }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","sourceNew":"      @Override\n      public void callStatement() throws Throwable {\n        RandVal.uniqueValues = new HashSet(); // reset random values\n        fixShardCount(numShards);\n        \n        try {\n          createServers(numShards);\n          \n          statement.evaluate();\n        } finally {\n          destroyServers();\n        }\n      }\n\n","sourceOld":"      @Override\n      public void callStatement() throws Throwable {\n        fixShardCount(numShards);\n        createServers(numShards);\n        RandVal.uniqueValues = new HashSet(); //reset random values\n        statement.evaluate();\n        try {\n          destroyServers();\n        } catch (Throwable t) {\n          log.error(\"Error while shutting down servers\", t);\n        }\n      }\n\n","bugFix":["536b47681314488eb94706248be6047a3f142841","abb23fcc2461782ab204e61213240feb77d355aa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6809a6d7924df2c864d6a5863944aff9dfeb372c","date":1591826750,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.ShardsRepeatRule.ShardsFixedStatement#callStatement().mjava","sourceNew":"      @Override\n      @SuppressWarnings({\"rawtypes\"})\n      public void callStatement() throws Throwable {\n        RandVal.uniqueValues = new HashSet(); // reset random values\n        fixShardCount(numShards);\n        \n        try {\n          createServers(numShards);\n          \n          statement.evaluate();\n        } finally {\n          destroyServers();\n        }\n      }\n\n","sourceOld":"      @Override\n      public void callStatement() throws Throwable {\n        RandVal.uniqueValues = new HashSet(); // reset random values\n        fixShardCount(numShards);\n        \n        try {\n          createServers(numShards);\n          \n          statement.evaluate();\n        } finally {\n          destroyServers();\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"536b47681314488eb94706248be6047a3f142841":["abb23fcc2461782ab204e61213240feb77d355aa"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["536b47681314488eb94706248be6047a3f142841"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6809a6d7924df2c864d6a5863944aff9dfeb372c"]},"commit2Childs":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"536b47681314488eb94706248be6047a3f142841":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"abb23fcc2461782ab204e61213240feb77d355aa":["536b47681314488eb94706248be6047a3f142841"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}