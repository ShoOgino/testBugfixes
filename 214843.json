{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37087ea13c0fde1ce1a3b5579f60f827414045a9","date":1279206637,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    seed = Long.valueOf(TEST_SEED.equals(\"random\") ? seedRnd.nextLong() : Long.parseLong(TEST_SEED));\n    random = new Random(seed);\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    seed = Long.valueOf(TEST_SEED.equals(\"random\") ? seedRnd.nextLong() : Long.parseLong(TEST_SEED));\n    random = new Random(seed);\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ca38aecd0204be91049ec782668f642a68d9935","date":1292975343,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#setUp().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ca38aecd0204be91049ec782668f642a68d9935":["5f4e87790277826a2aea119328600dfb07761f32"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["37087ea13c0fde1ce1a3b5579f60f827414045a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","37087ea13c0fde1ce1a3b5579f60f827414045a9"],"37087ea13c0fde1ce1a3b5579f60f827414045a9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43b04c27924fe393e38e9f0986e32c634f261859"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1ca38aecd0204be91049ec782668f642a68d9935":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":["1ca38aecd0204be91049ec782668f642a68d9935"],"37087ea13c0fde1ce1a3b5579f60f827414045a9":["1f653cfcf159baeaafe5d01682a911e95bba4012","5f4e87790277826a2aea119328600dfb07761f32"],"43b04c27924fe393e38e9f0986e32c634f261859":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5f4e87790277826a2aea119328600dfb07761f32","37087ea13c0fde1ce1a3b5579f60f827414045a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1ca38aecd0204be91049ec782668f642a68d9935","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}