{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","sourceNew":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  private boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull( fieldName );\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool( fieldName, HighlightParams.USE_FVH, false );\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","sourceOld":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  private boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull( fieldName );\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool( fieldName, HighlightParams.USE_FVH, false );\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","sourceNew":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  private boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull( fieldName );\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool( fieldName, HighlightParams.USE_FVH, false );\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","sourceOld":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  private boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull( fieldName );\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool( fieldName, HighlightParams.USE_FVH, false );\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","sourceNew":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  private boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull( fieldName );\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool( fieldName, HighlightParams.USE_FVH, false );\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","sourceOld":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  private boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull( fieldName );\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool( fieldName, HighlightParams.USE_FVH, false );\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12aef50f649e6f5f9689970748f96e3f1ca6104e","date":1428932135,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","sourceNew":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  protected boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull(fieldName);\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool(fieldName, HighlightParams.USE_FVH, false);\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","sourceOld":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  private boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull( fieldName );\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool( fieldName, HighlightParams.USE_FVH, false );\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19be870dbbc5366138e3d1f4e6e038f2f5e167cd","date":1428973440,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","sourceNew":"  /**\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  protected boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull(fieldName);\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool(fieldName, HighlightParams.USE_FVH, false);\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","sourceOld":"  /*\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  protected boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull(fieldName);\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool(fieldName, HighlightParams.USE_FVH, false);\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ba83a7997a13459d756c436cc76ee2570d2128f","date":1432215022,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#useFastVectorHighlighter(SolrParams,IndexSchema,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * If fieldName is undefined, this method returns false, then\n   * doHighlightingByHighlighter() will do nothing for the field.\n   */\n  protected boolean useFastVectorHighlighter( SolrParams params, IndexSchema schema, String fieldName ){\n    SchemaField schemaField = schema.getFieldOrNull(fieldName);\n    if( schemaField == null ) return false;\n    boolean useFvhParam = params.getFieldBool(fieldName, HighlightParams.USE_FVH, false);\n    if( !useFvhParam ) return false;\n    boolean termPosOff = schemaField.storeTermPositions() && schemaField.storeTermOffsets();\n    if( !termPosOff ) {\n      log.warn( \"Solr will use Highlighter instead of FastVectorHighlighter because {} field does not store TermPositions and TermOffsets.\", fieldName );\n    }\n    return termPosOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19be870dbbc5366138e3d1f4e6e038f2f5e167cd":["12aef50f649e6f5f9689970748f96e3f1ca6104e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"1ba83a7997a13459d756c436cc76ee2570d2128f":["19be870dbbc5366138e3d1f4e6e038f2f5e167cd"],"12aef50f649e6f5f9689970748f96e3f1ca6104e":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ba83a7997a13459d756c436cc76ee2570d2128f"]},"commit2Childs":{"19be870dbbc5366138e3d1f4e6e038f2f5e167cd":["1ba83a7997a13459d756c436cc76ee2570d2128f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["12aef50f649e6f5f9689970748f96e3f1ca6104e"],"12aef50f649e6f5f9689970748f96e3f1ca6104e":["19be870dbbc5366138e3d1f4e6e038f2f5e167cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"1ba83a7997a13459d756c436cc76ee2570d2128f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}