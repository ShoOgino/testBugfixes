{"path":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","commits":[{"id":"6585acee8c9458b9745b49462abd05c2aa4f23d5","date":1012057292,"type":1,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","pathOld":"src/demo/org/apache/lucene/HTMLDocument#uid(File).mjava","sourceNew":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateField.timeToString(f.lastModified());\n  }\n\n","sourceOld":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateField.timeToString(f.lastModified());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a673eb3ffe8b2773b1571362a9b089d3052b63fb","date":1104408369,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","pathOld":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","sourceNew":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateTools.timeToString(f.lastModified(), DateTools.Resolution.SECOND);\n  }\n\n","sourceOld":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateField.timeToString(f.lastModified());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c15902734eacd2b6a6c2d08ea6ee1185a0e9366","date":1104621180,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","pathOld":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","sourceNew":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateTools.timeToString(f.lastModified(), DateTools.Resolution.MINUTE);\n  }\n\n","sourceOld":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateTools.timeToString(f.lastModified(), DateTools.Resolution.SECOND);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6908cc0183e12f0fddac2e650b304176fe5aa7a","date":1121458955,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","pathOld":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","sourceNew":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateTools.timeToString(f.lastModified(), DateTools.Resolution.SECOND);\n  }\n\n","sourceOld":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateTools.timeToString(f.lastModified(), DateTools.Resolution.MINUTE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","pathOld":"src/demo/org/apache/lucene/demo/HTMLDocument#uid(File).mjava","sourceNew":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateTools.timeToString(f.lastModified(), DateTools.Resolution.SECOND);\n  }\n\n","sourceOld":"  public static String uid(File f) {\n    // Append path and date into a string in such a way that lexicographic\n    // sorting gives the same results as a walk of the file hierarchy.  Thus\n    // null (\\u0000) is used both to separate directory components and to\n    // separate the path from the date.\n    return f.getPath().replace(dirSep, '\\u0000') +\n      \"\\u0000\" +\n      DateTools.timeToString(f.lastModified(), DateTools.Resolution.SECOND);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e6908cc0183e12f0fddac2e650b304176fe5aa7a":["7c15902734eacd2b6a6c2d08ea6ee1185a0e9366"],"7c15902734eacd2b6a6c2d08ea6ee1185a0e9366":["a673eb3ffe8b2773b1571362a9b089d3052b63fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a673eb3ffe8b2773b1571362a9b089d3052b63fb":["6585acee8c9458b9745b49462abd05c2aa4f23d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e6908cc0183e12f0fddac2e650b304176fe5aa7a"]},"commit2Childs":{"e6908cc0183e12f0fddac2e650b304176fe5aa7a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c15902734eacd2b6a6c2d08ea6ee1185a0e9366":["e6908cc0183e12f0fddac2e650b304176fe5aa7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6585acee8c9458b9745b49462abd05c2aa4f23d5"],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["a673eb3ffe8b2773b1571362a9b089d3052b63fb"],"a673eb3ffe8b2773b1571362a9b089d3052b63fb":["7c15902734eacd2b6a6c2d08ea6ee1185a0e9366"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}