{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","commits":[{"id":"5b15576cafd8b5d06857055c28f26912321937e3","date":1396452121,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"/dev/null","sourceNew":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      Map m = (Map) ZkStateReader.fromJSON(data);\n      String id = (String) m.get(\"id\");\n      if(overseerCollectionProcessor.getId().equals(id)){\n        try {\n          log.info(\"I'm exiting , but I'm still the leader\");\n          zkClient.delete(path,stat.getVersion(),true);\n        } catch (KeeperException.BadVersionException e) {\n          //no problem ignore it some other Overseer has already taken over\n        } catch (Exception e) {\n          log.error(\"Could not delete my leader node \", e);\n        } finally {\n          try {\n            if(zkController !=null && !zkController.getCoreContainer().isShutDown()){\n              zkController.rejoinOverseerElection();\n            }\n\n          } catch (Exception e) {\n            log.error(\"error canceling overseer election election  \",e);\n          }\n        }\n\n      } else{\n        log.info(\"somebody else has already taken up the overseer position\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"/dev/null","sourceNew":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      Map m = (Map) ZkStateReader.fromJSON(data);\n      String id = (String) m.get(\"id\");\n      if(overseerCollectionProcessor.getId().equals(id)){\n        try {\n          log.info(\"I'm exiting , but I'm still the leader\");\n          zkClient.delete(path,stat.getVersion(),true);\n        } catch (KeeperException.BadVersionException e) {\n          //no problem ignore it some other Overseer has already taken over\n        } catch (Exception e) {\n          log.error(\"Could not delete my leader node \", e);\n        } finally {\n          try {\n            if(zkController !=null && !zkController.getCoreContainer().isShutDown()){\n              zkController.rejoinOverseerElection();\n            }\n\n          } catch (Exception e) {\n            log.error(\"error canceling overseer election election  \",e);\n          }\n        }\n\n      } else{\n        log.info(\"somebody else has already taken up the overseer position\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d996c36bf85996da326201b915c87d41449d7f5","date":1403084374,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) ZkStateReader.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n          zkController.rejoinOverseerElection(null, false);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      Map m = (Map) ZkStateReader.fromJSON(data);\n      String id = (String) m.get(\"id\");\n      if(overseerCollectionProcessor.getId().equals(id)){\n        try {\n          log.info(\"I'm exiting , but I'm still the leader\");\n          zkClient.delete(path,stat.getVersion(),true);\n        } catch (KeeperException.BadVersionException e) {\n          //no problem ignore it some other Overseer has already taken over\n        } catch (Exception e) {\n          log.error(\"Could not delete my leader node \", e);\n        } finally {\n          try {\n            if(zkController !=null && !zkController.getCoreContainer().isShutDown()){\n              zkController.rejoinOverseerElection();\n            }\n\n          } catch (Exception e) {\n            log.error(\"error canceling overseer election election  \",e);\n          }\n        }\n\n      } else{\n        log.info(\"somebody else has already taken up the overseer position\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"971bee6953ba9cdd70044c32ac33a0985ca6582e","date":1403102798,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) ZkStateReader.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) ZkStateReader.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n          zkController.rejoinOverseerElection(null, false);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) ZkStateReader.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      Map m = (Map) ZkStateReader.fromJSON(data);\n      String id = (String) m.get(\"id\");\n      if(overseerCollectionProcessor.getId().equals(id)){\n        try {\n          log.info(\"I'm exiting , but I'm still the leader\");\n          zkClient.delete(path,stat.getVersion(),true);\n        } catch (KeeperException.BadVersionException e) {\n          //no problem ignore it some other Overseer has already taken over\n        } catch (Exception e) {\n          log.error(\"Could not delete my leader node \", e);\n        } finally {\n          try {\n            if(zkController !=null && !zkController.getCoreContainer().isShutDown()){\n              zkController.rejoinOverseerElection();\n            }\n\n          } catch (Exception e) {\n            log.error(\"error canceling overseer election election  \",e);\n          }\n        }\n\n      } else{\n        log.info(\"somebody else has already taken up the overseer position\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40438f1e839b26e683a2d61bca0cd756a60c5879","date":1411571656,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) ZkStateReader.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) ZkStateReader.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["5a76e7b04eb7123d4c6b8b6adbde78dd115f220c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) ZkStateReader.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5551d21c759979ad637581208f5ff5bd7497b5d7","date":1447783672,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = \"/overseer_elect/leader\";\n      byte[] data = null;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962cd4f5e313777f35da8f521265323e84184929","date":1474533758,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.info(\"I'm exiting , but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.info(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OverseerElectionContext.OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6d2dadc1f5ca8703d8659f4964961f9967935d75","date":1490231750,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e5fa6615014cd2288fe930f8c8bb726f9504961d","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(\"id\");\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a76e7b04eb7123d4c6b8b6adbde78dd115f220c","date":1526465516,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && zkController.getCoreContainer().isShutDown()) return;//shutting down no need to go further\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":["40438f1e839b26e683a2d61bca0cd756a60c5879"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27e471964e04aba0265130e510f878b1a91d4c7a","date":1531854971,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the \"+path+\" data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \"+path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the \"+path+\" data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \"+path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I'm exiting, but I'm still the leader\");\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \", e);\n          }\n\n        } else{\n          log.debug(\"somebody else has already taken up the overseer position\");\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (AlreadyClosedException e) {\n        return;\n      } catch (Exception e) {\n        log.warn(\"Error communicating with ZooKeeper\", e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \"+path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (Exception e) {\n        log.error(\"could not read the \"+path+\" data\" ,e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \"+path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":["27e471964e04aba0265130e510f878b1a91d4c7a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4957cde742defe6db19689abdc267c5d948066","date":1587990850,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (AlreadyClosedException e) {\n        return;\n      } catch (Exception e) {\n        log.warn(\"Error communicating with ZooKeeper\", e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node {}\", path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (AlreadyClosedException e) {\n        return;\n      } catch (Exception e) {\n        log.warn(\"Error communicating with ZooKeeper\", e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node \"+path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#checkIfIamStillLeader().mjava","sourceNew":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (AlreadyClosedException e) {\n        return;\n      } catch (Exception e) {\n        log.warn(\"Error communicating with ZooKeeper\", e);\n        return;\n      }\n      try {\n        @SuppressWarnings({\"rawtypes\"})\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node {}\", path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","sourceOld":"    private void checkIfIamStillLeader() {\n      if (zkController != null && (zkController.getCoreContainer().isShutDown() || zkController.isClosed())) {\n        return;//shutting down no need to go further\n      }\n      org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n      final String path = OVERSEER_ELECT + \"/leader\";\n      byte[] data;\n      try {\n        data = zkClient.getData(path, null, stat, true);\n      } catch (AlreadyClosedException e) {\n        return;\n      } catch (Exception e) {\n        log.warn(\"Error communicating with ZooKeeper\", e);\n        return;\n      }\n      try {\n        Map m = (Map) Utils.fromJSON(data);\n        String id = (String) m.get(ID);\n        if(overseerCollectionConfigSetProcessor.getId().equals(id)){\n          try {\n            log.warn(\"I (id={}) am exiting, but I'm still the leader\",\n                overseerCollectionConfigSetProcessor.getId());\n            zkClient.delete(path,stat.getVersion(),true);\n          } catch (KeeperException.BadVersionException e) {\n            //no problem ignore it some other Overseer has already taken over\n          } catch (Exception e) {\n            log.error(\"Could not delete my leader node {}\", path, e);\n          }\n\n        } else{\n          log.info(\"somebody else (id={}) has already taken up the overseer position\", id);\n        }\n      } finally {\n        //if I am not shutting down, Then I need to rejoin election\n        try {\n          if (zkController != null && !zkController.getCoreContainer().isShutDown()) {\n            zkController.rejoinOverseerElection(null, false);\n          }\n        } catch (Exception e) {\n          log.warn(\"Unable to rejoinElection \",e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5551d21c759979ad637581208f5ff5bd7497b5d7":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b15576cafd8b5d06857055c28f26912321937e3"],"7d996c36bf85996da326201b915c87d41449d7f5":["5b15576cafd8b5d06857055c28f26912321937e3"],"962cd4f5e313777f35da8f521265323e84184929":["5551d21c759979ad637581208f5ff5bd7497b5d7"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["27e471964e04aba0265130e510f878b1a91d4c7a"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["5b15576cafd8b5d06857055c28f26912321937e3","971bee6953ba9cdd70044c32ac33a0985ca6582e"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"5a76e7b04eb7123d4c6b8b6adbde78dd115f220c":["6d2dadc1f5ca8703d8659f4964961f9967935d75"],"ad4957cde742defe6db19689abdc267c5d948066":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["40438f1e839b26e683a2d61bca0cd756a60c5879"],"40438f1e839b26e683a2d61bca0cd756a60c5879":["971bee6953ba9cdd70044c32ac33a0985ca6582e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5551d21c759979ad637581208f5ff5bd7497b5d7","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"e5fa6615014cd2288fe930f8c8bb726f9504961d":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["5a76e7b04eb7123d4c6b8b6adbde78dd115f220c","27e471964e04aba0265130e510f878b1a91d4c7a"],"5b15576cafd8b5d06857055c28f26912321937e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"27e471964e04aba0265130e510f878b1a91d4c7a":["5a76e7b04eb7123d4c6b8b6adbde78dd115f220c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["5551d21c759979ad637581208f5ff5bd7497b5d7","962cd4f5e313777f35da8f521265323e84184929"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["ad4957cde742defe6db19689abdc267c5d948066"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"971bee6953ba9cdd70044c32ac33a0985ca6582e":["7d996c36bf85996da326201b915c87d41449d7f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"5551d21c759979ad637581208f5ff5bd7497b5d7":["962cd4f5e313777f35da8f521265323e84184929","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"7d996c36bf85996da326201b915c87d41449d7f5":["971bee6953ba9cdd70044c32ac33a0985ca6582e"],"962cd4f5e313777f35da8f521265323e84184929":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["5551d21c759979ad637581208f5ff5bd7497b5d7"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["ad4957cde742defe6db19689abdc267c5d948066"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["5a76e7b04eb7123d4c6b8b6adbde78dd115f220c"],"5a76e7b04eb7123d4c6b8b6adbde78dd115f220c":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","27e471964e04aba0265130e510f878b1a91d4c7a"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"ad4957cde742defe6db19689abdc267c5d948066":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"40438f1e839b26e683a2d61bca0cd756a60c5879":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e5fa6615014cd2288fe930f8c8bb726f9504961d":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"5b15576cafd8b5d06857055c28f26912321937e3":["5eb2511ababf862ea11e10761c70ee560cd84510","7d996c36bf85996da326201b915c87d41449d7f5","e57c73924f3b8c19defa62e96bfa34a4922d49c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","5b15576cafd8b5d06857055c28f26912321937e3"],"27e471964e04aba0265130e510f878b1a91d4c7a":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["6d2dadc1f5ca8703d8659f4964961f9967935d75","e5fa6615014cd2288fe930f8c8bb726f9504961d"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"971bee6953ba9cdd70044c32ac33a0985ca6582e":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","40438f1e839b26e683a2d61bca0cd756a60c5879"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","e57c73924f3b8c19defa62e96bfa34a4922d49c2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e5fa6615014cd2288fe930f8c8bb726f9504961d","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}