{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestCharArraySet#testUnmodifiableSet().mjava","commits":[{"id":"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","date":1465936684,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestCharArraySet#testUnmodifiableSet().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArraySet#testUnmodifiableSet().mjava","sourceNew":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    expectThrows(NullPointerException.class, () -> {\n      CharArraySet.unmodifiableSet(null);\n    });\n  }\n\n","sourceOld":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    expectThrows(NullPointerException.class, () -> {\n      CharArraySet.unmodifiableSet(null);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestCharArraySet#testUnmodifiableSet().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArraySet#testUnmodifiableSet().mjava","sourceNew":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    expectThrows(NullPointerException.class, () -> {\n      CharArraySet.unmodifiableSet(null);\n    });\n  }\n\n","sourceOld":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    expectThrows(NullPointerException.class, () -> {\n      CharArraySet.unmodifiableSet(null);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}