{"path":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","sourceNew":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","sourceNew":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","sourceNew":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","sourceNew":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":["97fc5a00245e9b31c118c53df88b1376237ea87b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","sourceNew":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","sourceNew":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",version=\").append(commit.getVersion());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0b323190a01ef99516cc372f1ac90ac6e467501","date":1366744839,"type":5,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy.CommitsLoggingInfo#appendDetails(StringBuilder,IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#str(IndexCommit).mjava","sourceNew":"    protected void appendDetails(StringBuilder sb, IndexCommit c) {\n      Directory dir = c.getDirectory();\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n      sb.append(\",segFN=\").append(c.getSegmentsFileName());\n      sb.append(\",generation=\").append(c.getGeneration());\n    }\n\n","sourceOld":"  static String str(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      sb.append(\"commit{\");\n\n      Directory dir = commit.getDirectory();\n\n      if (dir instanceof FSDirectory) {\n        FSDirectory fsd = (FSDirectory) dir;\n        sb.append(\"dir=\").append(fsd.getDirectory());\n      } else {\n        sb.append(\"dir=\").append(dir);\n      }\n\n      sb.append(\",segFN=\").append(commit.getSegmentsFileName());\n      sb.append(\",generation=\").append(commit.getGeneration());\n      sb.append(\",filenames=\").append(commit.getFileNames());\n    } catch (Exception e) {\n      sb.append(e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0b323190a01ef99516cc372f1ac90ac6e467501":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e0b323190a01ef99516cc372f1ac90ac6e467501"]},"commit2Childs":{"e0b323190a01ef99516cc372f1ac90ac6e467501":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["e0b323190a01ef99516cc372f1ac90ac6e467501","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"c26f00b574427b55127e869b935845554afde1fa":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}