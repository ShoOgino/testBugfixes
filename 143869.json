{"path":"src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","sourceNew":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","sourceOld":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7a21951a44948544c782d645588d404cace61","date":1259040420,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","sourceNew":null,"sourceOld":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"170776e750c3544b9df7c9d4454d4273efa9ff21","date":1259040595,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","pathOld":"/dev/null","sourceNew":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","pathOld":"src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","sourceNew":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","sourceOld":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"170776e750c3544b9df7c9d4454d4273efa9ff21":["52c7a21951a44948544c782d645588d404cace61"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["170776e750c3544b9df7c9d4454d4273efa9ff21"],"52c7a21951a44948544c782d645588d404cace61":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["52c7a21951a44948544c782d645588d404cace61"],"170776e750c3544b9df7c9d4454d4273efa9ff21":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"52c7a21951a44948544c782d645588d404cace61":["170776e750c3544b9df7c9d4454d4273efa9ff21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}