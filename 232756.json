{"path":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#postings(PostingsEnum).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#postings(PostingsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#postings(Bits,PostingsEnum).mjava","sourceNew":"  /** Get {@link PostingsEnum} for the current term.  Do not\n   *  call this when the enum is unpositioned.  This method\n   *  will not return null.\n   *  <p>\n   *  <b>NOTE</b>: the returned iterator may return deleted documents, so\n   *  deleted documents have to be checked on top of the {@link PostingsEnum}.\n   *  <p>\n   *  Use this method if you only require documents and frequencies,\n   *  and do not need any proximity data.\n   *  This method is equivalent to \n   *  {@link #postings(PostingsEnum, int) postings(reuse, PostingsEnum.FREQS)}\n   *\n   * @param reuse pass a prior PostingsEnum for possible reuse \n   * @see #postings(PostingsEnum, int)\n   */\n  public final PostingsEnum postings(PostingsEnum reuse) throws IOException {\n    return postings(reuse, PostingsEnum.FREQS);\n  }\n\n","sourceOld":"  /** Get {@link PostingsEnum} for the current term.  Do not\n   *  call this when the enum is unpositioned.  This method\n   *  will not return null.\n   *  <p>\n   *  Use this method if you only require documents and frequencies,\n   *  and do not need any proximity data.\n   *  This method is equivalent to \n   *  {@link #postings(Bits, PostingsEnum, int) postings(liveDocs, reuse, PostingsEnum.FREQS)}\n   *  \n   * @param liveDocs unset bits are documents that should not\n   * be returned\n   * @param reuse pass a prior PostingsEnum for possible reuse \n   * @see #postings(Bits, PostingsEnum, int)\n   */\n  public final PostingsEnum postings(Bits liveDocs, PostingsEnum reuse) throws IOException {\n    return postings(liveDocs, reuse, PostingsEnum.FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}