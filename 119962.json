{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations.LightPathNode#nextLabel(LightAutomaton).mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations.LightPathNode#nextLabel(LightAutomaton).mjava","pathOld":"/dev/null","sourceNew":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(LightAutomaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations.PathNode#nextLabel(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations.LightPathNode#nextLabel(LightAutomaton).mjava","sourceNew":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(Automaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","sourceOld":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(LightAutomaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}