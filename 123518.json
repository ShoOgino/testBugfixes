{"path":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testLongFields().mjava","commits":[{"id":"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","date":1406137403,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testLongFields().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLongFields() {\n    assertU(adoc(\"id\", \"1\", \"test_l_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_l_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_l_dv\", \"2\"));\n    assertU(adoc(\"id\", \"4\", \"test_l_dv\", \"3\"));\n    assertU(adoc(\"id\", \"5\", \"test_l_dv\", \"4\"));\n    assertU(adoc(\"id\", \"6\", \"test_l_dv\", \"5\"));\n    assertU(adoc(\"id\", \"7\", \"test_l_dv\", \"6\"));\n    assertU(adoc(\"id\", \"8\", \"test_l_dv\", \"7\"));\n    assertU(adoc(\"id\", \"9\", \"test_l_dv\", \"8\"));\n    assertU(adoc(\"id\", \"10\"));\n    assertU(adoc(\"id\", \"11\", \"test_l_dv\", \"10\"));\n    assertU(commit());\n\n    assertIntervalQueriesNumeric(\"test_l_dv\");\n    assertU(adoc(\"id\", \"12\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 3)));\n    assertU(adoc(\"id\", \"13\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 2)));\n    assertU(adoc(\"id\", \"14\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 1)));\n    assertU(commit());\n\n    assertIntervalQuery(\"test_l_dv\", \"[0,\" + Integer.MAX_VALUE + \"]\", \"10\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Integer.MAX_VALUE + \",\" + Long.MAX_VALUE + \"]\", \"3\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Integer.MAX_VALUE + \",*]\", \"3\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d91746c67539428e26abf078daf1d830c2dec3f4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d91746c67539428e26abf078daf1d830c2dec3f4","date":1500321307,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testLongFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testLongFields().mjava","sourceNew":"  @Test\n  public void testLongFields() {\n    assertU(adoc(\"id\", \"1\", \"test_l_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_l_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_l_dv\", \"2\"));\n    assertU(adoc(\"id\", \"4\", \"test_l_dv\", \"3\"));\n    assertU(adoc(\"id\", \"5\", \"test_l_dv\", \"4\"));\n    assertU(adoc(\"id\", \"6\", \"test_l_dv\", \"5\"));\n    assertU(adoc(\"id\", \"7\", \"test_l_dv\", \"6\"));\n    assertU(adoc(\"id\", \"8\", \"test_l_dv\", \"7\"));\n    assertU(adoc(\"id\", \"9\", \"test_l_dv\", \"8\"));\n    assertU(adoc(\"id\", \"10\"));\n    assertU(adoc(\"id\", \"11\", \"test_l_dv\", \"10\"));\n    assertU(commit());\n\n    assertIntervalQueriesNumeric(\"test_l_dv\");\n    assertU(adoc(\"id\", \"12\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 3)));\n    assertU(adoc(\"id\", \"13\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 2)));\n    assertU(adoc(\"id\", \"14\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 1)));\n    assertU(adoc(\"id\", \"15\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE)));\n    assertU(adoc(\"id\", \"16\", \"test_l_dv\", String.valueOf(Long.MIN_VALUE)));\n    assertU(commit());\n\n    assertIntervalQuery(\"test_l_dv\", \"[0,\" + Integer.MAX_VALUE + \"]\", \"10\");\n    assertIntervalQuery(\"test_l_dv\", \"(10,\" + Long.MAX_VALUE + \"]\", \"4\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Long.MAX_VALUE + \",\" + Long.MAX_VALUE + \"]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Long.MAX_VALUE + \",*]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"(\" + Long.MAX_VALUE + \",*]\", \"0\");\n    assertIntervalQuery(\"test_l_dv\", \"(*, \" + Long.MIN_VALUE + \"]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"(*, \" + Long.MIN_VALUE + \")\", \"0\");\n    assertIntervalQuery(\"test_l_dv\", \"(\" + (Long.MAX_VALUE - 1) + \",*]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + (Long.MAX_VALUE - 1) + \",*]\", \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testLongFields() {\n    assertU(adoc(\"id\", \"1\", \"test_l_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_l_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_l_dv\", \"2\"));\n    assertU(adoc(\"id\", \"4\", \"test_l_dv\", \"3\"));\n    assertU(adoc(\"id\", \"5\", \"test_l_dv\", \"4\"));\n    assertU(adoc(\"id\", \"6\", \"test_l_dv\", \"5\"));\n    assertU(adoc(\"id\", \"7\", \"test_l_dv\", \"6\"));\n    assertU(adoc(\"id\", \"8\", \"test_l_dv\", \"7\"));\n    assertU(adoc(\"id\", \"9\", \"test_l_dv\", \"8\"));\n    assertU(adoc(\"id\", \"10\"));\n    assertU(adoc(\"id\", \"11\", \"test_l_dv\", \"10\"));\n    assertU(commit());\n\n    assertIntervalQueriesNumeric(\"test_l_dv\");\n    assertU(adoc(\"id\", \"12\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 3)));\n    assertU(adoc(\"id\", \"13\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 2)));\n    assertU(adoc(\"id\", \"14\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 1)));\n    assertU(commit());\n\n    assertIntervalQuery(\"test_l_dv\", \"[0,\" + Integer.MAX_VALUE + \"]\", \"10\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Integer.MAX_VALUE + \",\" + Long.MAX_VALUE + \"]\", \"3\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Integer.MAX_VALUE + \",*]\", \"3\");\n  }\n\n","bugFix":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testLongFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testLongFields().mjava","sourceNew":"  @Test\n  public void testLongFields() {\n    assertU(adoc(\"id\", \"1\", \"test_l_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_l_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_l_dv\", \"2\"));\n    assertU(adoc(\"id\", \"4\", \"test_l_dv\", \"3\"));\n    assertU(adoc(\"id\", \"5\", \"test_l_dv\", \"4\"));\n    assertU(adoc(\"id\", \"6\", \"test_l_dv\", \"5\"));\n    assertU(adoc(\"id\", \"7\", \"test_l_dv\", \"6\"));\n    assertU(adoc(\"id\", \"8\", \"test_l_dv\", \"7\"));\n    assertU(adoc(\"id\", \"9\", \"test_l_dv\", \"8\"));\n    assertU(adoc(\"id\", \"10\"));\n    assertU(adoc(\"id\", \"11\", \"test_l_dv\", \"10\"));\n    assertU(commit());\n\n    assertIntervalQueriesNumeric(\"test_l_dv\");\n    assertU(adoc(\"id\", \"12\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 3)));\n    assertU(adoc(\"id\", \"13\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 2)));\n    assertU(adoc(\"id\", \"14\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 1)));\n    assertU(adoc(\"id\", \"15\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE)));\n    assertU(adoc(\"id\", \"16\", \"test_l_dv\", String.valueOf(Long.MIN_VALUE)));\n    assertU(commit());\n\n    assertIntervalQuery(\"test_l_dv\", \"[0,\" + Integer.MAX_VALUE + \"]\", \"10\");\n    assertIntervalQuery(\"test_l_dv\", \"(10,\" + Long.MAX_VALUE + \"]\", \"4\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Long.MAX_VALUE + \",\" + Long.MAX_VALUE + \"]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Long.MAX_VALUE + \",*]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"(\" + Long.MAX_VALUE + \",*]\", \"0\");\n    assertIntervalQuery(\"test_l_dv\", \"(*, \" + Long.MIN_VALUE + \"]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"(*, \" + Long.MIN_VALUE + \")\", \"0\");\n    assertIntervalQuery(\"test_l_dv\", \"(\" + (Long.MAX_VALUE - 1) + \",*]\", \"1\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + (Long.MAX_VALUE - 1) + \",*]\", \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testLongFields() {\n    assertU(adoc(\"id\", \"1\", \"test_l_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_l_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_l_dv\", \"2\"));\n    assertU(adoc(\"id\", \"4\", \"test_l_dv\", \"3\"));\n    assertU(adoc(\"id\", \"5\", \"test_l_dv\", \"4\"));\n    assertU(adoc(\"id\", \"6\", \"test_l_dv\", \"5\"));\n    assertU(adoc(\"id\", \"7\", \"test_l_dv\", \"6\"));\n    assertU(adoc(\"id\", \"8\", \"test_l_dv\", \"7\"));\n    assertU(adoc(\"id\", \"9\", \"test_l_dv\", \"8\"));\n    assertU(adoc(\"id\", \"10\"));\n    assertU(adoc(\"id\", \"11\", \"test_l_dv\", \"10\"));\n    assertU(commit());\n\n    assertIntervalQueriesNumeric(\"test_l_dv\");\n    assertU(adoc(\"id\", \"12\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 3)));\n    assertU(adoc(\"id\", \"13\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 2)));\n    assertU(adoc(\"id\", \"14\", \"test_l_dv\", String.valueOf(Long.MAX_VALUE - 1)));\n    assertU(commit());\n\n    assertIntervalQuery(\"test_l_dv\", \"[0,\" + Integer.MAX_VALUE + \"]\", \"10\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Integer.MAX_VALUE + \",\" + Long.MAX_VALUE + \"]\", \"3\");\n    assertIntervalQuery(\"test_l_dv\", \"[\" + Integer.MAX_VALUE + \",*]\", \"3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aaf90fc29510e72665ac7934f34c3d1c25efad64":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","d91746c67539428e26abf078daf1d830c2dec3f4"],"d91746c67539428e26abf078daf1d830c2dec3f4":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d91746c67539428e26abf078daf1d830c2dec3f4"]},"commit2Childs":{"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"d91746c67539428e26abf078daf1d830c2dec3f4":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["aaf90fc29510e72665ac7934f34c3d1c25efad64","d91746c67539428e26abf078daf1d830c2dec3f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}