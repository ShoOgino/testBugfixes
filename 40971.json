{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream#toExpression(StreamFactory).mjava","commits":[{"id":"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","date":1470238980,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream#toExpression(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    // functionName(collectionName, param1, param2, ..., paramN, sort=\"comp\", [aliases=\"field=alias,...\"])\n\n    // function name\n    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));\n\n    // collection\n    expression.addParameter(collection);\n\n    // parameters\n    for(Map.Entry<String,String> param : params.entrySet()){\n      expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), param.getValue()));\n    }\n\n    expression.addParameter(new StreamExpressionNamedParameter(\"field\", field));\n    expression.addParameter(new StreamExpressionNamedParameter(\"outcome\", outcome));\n    expression.addParameter(new StreamExpressionNamedParameter(\"featureSet\", featureSet));\n    expression.addParameter(new StreamExpressionNamedParameter(\"positiveLabel\", String.valueOf(positiveLabel)));\n    expression.addParameter(new StreamExpressionNamedParameter(\"numTerms\", String.valueOf(numTerms)));\n\n    // zkHost\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream#toExpression(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    // functionName(collectionName, param1, param2, ..., paramN, sort=\"comp\", [aliases=\"field=alias,...\"])\n\n    // function name\n    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));\n\n    // collection\n    expression.addParameter(collection);\n\n    // parameters\n    for(Map.Entry<String,String> param : params.entrySet()){\n      expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), param.getValue()));\n    }\n\n    expression.addParameter(new StreamExpressionNamedParameter(\"field\", field));\n    expression.addParameter(new StreamExpressionNamedParameter(\"outcome\", outcome));\n    expression.addParameter(new StreamExpressionNamedParameter(\"featureSet\", featureSet));\n    expression.addParameter(new StreamExpressionNamedParameter(\"positiveLabel\", String.valueOf(positiveLabel)));\n    expression.addParameter(new StreamExpressionNamedParameter(\"numTerms\", String.valueOf(numTerms)));\n\n    // zkHost\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream#toExpression(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    // functionName(collectionName, param1, param2, ..., paramN, sort=\"comp\", [aliases=\"field=alias,...\"])\n\n    // function name\n    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));\n\n    // collection\n    expression.addParameter(collection);\n\n    // parameters\n    for(Map.Entry<String,String> param : params.entrySet()){\n      expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), param.getValue()));\n    }\n\n    expression.addParameter(new StreamExpressionNamedParameter(\"field\", field));\n    expression.addParameter(new StreamExpressionNamedParameter(\"outcome\", outcome));\n    expression.addParameter(new StreamExpressionNamedParameter(\"featureSet\", featureSet));\n    expression.addParameter(new StreamExpressionNamedParameter(\"positiveLabel\", String.valueOf(positiveLabel)));\n    expression.addParameter(new StreamExpressionNamedParameter(\"numTerms\", String.valueOf(numTerms)));\n\n    // zkHost\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"]},"commit2Childs":{"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}