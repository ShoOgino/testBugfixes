{"path":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","sourceNew":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, IOUtils.CHARSET_UTF_8);\n        return new UserDictionary(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, IOUtils.CHARSET_UTF_8);\n        return new UserDictionary(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","sourceNew":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, StandardCharsets.UTF_8);\n        return new UserDictionary(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, IOUtils.CHARSET_UTF_8);\n        return new UserDictionary(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","sourceNew":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, StandardCharsets.UTF_8);\n        return new UserDictionary(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, IOUtils.CHARSET_UTF_8);\n        return new UserDictionary(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e0e5dacb8158de7670b41d1a749a4b7487e6acf","date":1431331436,"type":3,"author":"Christian Moen","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","sourceNew":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, StandardCharsets.UTF_8);\n        return UserDictionary.open(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, StandardCharsets.UTF_8);\n        return new UserDictionary(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":["0984ad47974c2d5d354519ddb2aa8358973a6271"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b","date":1583461779,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#readDict().mjava","sourceNew":"  public static UserDictionary readDict() {\n    try (InputStream stream = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n         Reader reader = new InputStreamReader(stream, StandardCharsets.UTF_8)) {\n      return UserDictionary.open(reader);\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary readDict() {\n    InputStream is = TestJapaneseTokenizer.class.getResourceAsStream(\"userdict.txt\");\n    if (is == null) {\n      throw new RuntimeException(\"Cannot find userdict.txt in test classpath!\");\n    }\n    try {\n      try {\n        Reader reader = new InputStreamReader(is, StandardCharsets.UTF_8);\n        return UserDictionary.open(reader);\n      } finally {\n        is.close();\n      }\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7d89d7e4e5101347833eea558851bf4209218619"],"3e0e5dacb8158de7670b41d1a749a4b7487e6acf":["7d89d7e4e5101347833eea558851bf4209218619"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d89d7e4e5101347833eea558851bf4209218619":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["3e0e5dacb8158de7670b41d1a749a4b7487e6acf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"3e0e5dacb8158de7670b41d1a749a4b7487e6acf":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","3e0e5dacb8158de7670b41d1a749a4b7487e6acf"],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}