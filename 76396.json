{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#getRandomSort(boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#getRandomSort(boolean).mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#getRandomSort(boolean).mjava","sourceNew":"  private Sort getRandomSort(boolean scoreOnly) {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random().nextInt(7) == 2 || scoreOnly) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random().nextBoolean()) {\n        if (random().nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n        }\n      } else if (random().nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n      }\n    }\n    // Break ties:\n    if (random().nextBoolean() && !scoreOnly) {\n      sortFields.add(new SortField(\"sort3\", SortField.Type.STRING));\n    } else if (!scoreOnly) {\n      sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    }\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort(boolean scoreOnly) {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random().nextInt(7) == 2 || scoreOnly) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random().nextBoolean()) {\n        if (random().nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n        }\n      } else if (random().nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n      }\n    }\n    // Break ties:\n    if (random().nextBoolean() && !scoreOnly) {\n      sortFields.add(new SortField(\"sort3\", SortField.Type.STRING));\n    } else if (!scoreOnly) {\n      sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    }\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97d4692d0c601ff773f0a2231967312428a904e4","date":1366026608,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#getRandomSort(boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#getRandomSort(boolean).mjava","sourceNew":"  private Sort getRandomSort(boolean scoreOnly) {\n    final List<SortField> sortFields = new ArrayList<>();\n    if (random().nextInt(7) == 2 || scoreOnly) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random().nextBoolean()) {\n        if (random().nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n        }\n      } else if (random().nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n      }\n    }\n    // Break ties:\n    if (random().nextBoolean() && !scoreOnly) {\n      sortFields.add(new SortField(\"sort3\", SortField.Type.STRING));\n    } else if (!scoreOnly) {\n      sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    }\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort(boolean scoreOnly) {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random().nextInt(7) == 2 || scoreOnly) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random().nextBoolean()) {\n        if (random().nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n        }\n      } else if (random().nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n      }\n    }\n    // Break ties:\n    if (random().nextBoolean() && !scoreOnly) {\n      sortFields.add(new SortField(\"sort3\", SortField.Type.STRING));\n    } else if (!scoreOnly) {\n      sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    }\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"97d4692d0c601ff773f0a2231967312428a904e4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97d4692d0c601ff773f0a2231967312428a904e4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["97d4692d0c601ff773f0a2231967312428a904e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"97d4692d0c601ff773f0a2231967312428a904e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}