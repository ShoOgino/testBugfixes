{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#binarySearch(BytesRef,DocTermsIndex,BytesRef,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#binarySearch(BytesRef,DocTermsIndex,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator#binarySearch(BytesRef,DocTermsIndex,BytesRef,int,int).mjava","sourceNew":"  final protected static int binarySearch(BytesRef br, DocTermsIndex a, BytesRef key, int low, int high) {\n\n    while (low <= high) {\n      int mid = (low + high) >>> 1;\n      BytesRef midVal = a.lookup(mid, br);\n      int cmp;\n      if (midVal != null) {\n        cmp = midVal.compareTo(key);\n      } else {\n        cmp = -1;\n      }\n\n      if (cmp < 0)\n        low = mid + 1;\n      else if (cmp > 0)\n        high = mid - 1;\n      else\n        return mid;\n    }\n    return -(low + 1);\n  }\n\n","sourceOld":"  final protected static int binarySearch(BytesRef br, DocTermsIndex a, BytesRef key, int low, int high) {\n\n    while (low <= high) {\n      int mid = (low + high) >>> 1;\n      BytesRef midVal = a.lookup(mid, br);\n      int cmp;\n      if (midVal != null) {\n        cmp = midVal.compareTo(key);\n      } else {\n        cmp = -1;\n      }\n\n      if (cmp < 0)\n        low = mid + 1;\n      else if (cmp > 0)\n        high = mid - 1;\n      else\n        return mid;\n    }\n    return -(low + 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#binarySearch(BytesRef,DocTermsIndex,BytesRef,int,int).mjava","sourceNew":null,"sourceOld":"  final protected static int binarySearch(BytesRef br, DocTermsIndex a, BytesRef key, int low, int high) {\n\n    while (low <= high) {\n      int mid = (low + high) >>> 1;\n      BytesRef midVal = a.lookup(mid, br);\n      int cmp;\n      if (midVal != null) {\n        cmp = midVal.compareTo(key);\n      } else {\n        cmp = -1;\n      }\n\n      if (cmp < 0)\n        low = mid + 1;\n      else if (cmp > 0)\n        high = mid - 1;\n      else\n        return mid;\n    }\n    return -(low + 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#binarySearch(BytesRef,DocTermsIndex,BytesRef,int,int).mjava","sourceNew":null,"sourceOld":"  final protected static int binarySearch(BytesRef br, DocTermsIndex a, BytesRef key, int low, int high) {\n\n    while (low <= high) {\n      int mid = (low + high) >>> 1;\n      BytesRef midVal = a.lookup(mid, br);\n      int cmp;\n      if (midVal != null) {\n        cmp = midVal.compareTo(key);\n      } else {\n        cmp = -1;\n      }\n\n      if (cmp < 0)\n        low = mid + 1;\n      else if (cmp > 0)\n        high = mid - 1;\n      else\n        return mid;\n    }\n    return -(low + 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4d69c535930b5cce125cff868d40f6373dc27d4","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}