{"path":"src/java/org/apache/lucene/search/FuzzyTermEnum#calculateMaxDistance(int).mjava","commits":[{"id":"b3af9908203648fa4313aca6c4913cb4864014bb","date":1099870044,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyTermEnum#calculateMaxDistance(int).mjava","pathOld":"/dev/null","sourceNew":"  private int calculateMaxDistance(int m) {\n    return (int) ((1-minimumSimilarity) * (Math.min(text.length(), m) + prefix.length()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea62f19ad1b43de1b0fc5b86e9ec196e5e504092","date":1256073772,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyTermEnum#calculateMaxDistance(int).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyTermEnum#calculateMaxDistance(int).mjava","sourceNew":"  /**\n   * The max Distance is the maximum Levenshtein distance for the text\n   * compared to some other value that results in score that is\n   * better than the minimum similarity.\n   * @param m the length of the \"other value\"\n   * @return the maximum levenshtein distance that we care about\n   */\n  private int calculateMaxDistance(int m) {\n    return (int) ((1-minimumSimilarity) * (Math.min(text.length(), m) + prefix.length()));\n  }\n\n","sourceOld":"  private int calculateMaxDistance(int m) {\n    return (int) ((1-minimumSimilarity) * (Math.min(text.length(), m) + prefix.length()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermEnum#calculateMaxDistance(int).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyTermEnum#calculateMaxDistance(int).mjava","sourceNew":"  /**\n   * The max Distance is the maximum Levenshtein distance for the text\n   * compared to some other value that results in score that is\n   * better than the minimum similarity.\n   * @param m the length of the \"other value\"\n   * @return the maximum levenshtein distance that we care about\n   */\n  private int calculateMaxDistance(int m) {\n    return (int) ((1-minimumSimilarity) * (Math.min(text.length(), m) + prefix.length()));\n  }\n\n","sourceOld":"  /**\n   * The max Distance is the maximum Levenshtein distance for the text\n   * compared to some other value that results in score that is\n   * better than the minimum similarity.\n   * @param m the length of the \"other value\"\n   * @return the maximum levenshtein distance that we care about\n   */\n  private int calculateMaxDistance(int m) {\n    return (int) ((1-minimumSimilarity) * (Math.min(text.length(), m) + prefix.length()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea62f19ad1b43de1b0fc5b86e9ec196e5e504092":["b3af9908203648fa4313aca6c4913cb4864014bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3af9908203648fa4313aca6c4913cb4864014bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ea62f19ad1b43de1b0fc5b86e9ec196e5e504092"]},"commit2Childs":{"ea62f19ad1b43de1b0fc5b86e9ec196e5e504092":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3af9908203648fa4313aca6c4913cb4864014bb"],"b3af9908203648fa4313aca6c4913cb4864014bb":["ea62f19ad1b43de1b0fc5b86e9ec196e5e504092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}