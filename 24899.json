{"path":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","commits":[{"id":"db1392222972bed979defb7b7df4ce46320e36d0","date":1488391934,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(cacheHelper.getKey());\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrow(th);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","date":1493374641,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  @Override\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(cacheHelper.getKey());\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      \n      if (th != null) {\n        throw IOUtils.rethrowAlways(th);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(cacheHelper.getKey());\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrow(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  @Override\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(cacheHelper.getKey());\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      \n      if (th != null) {\n        throw IOUtils.rethrowAlways(th);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(cacheHelper.getKey());\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrow(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14d66d86a8b184a86bcaebcf6e15fcef486e0876","date":1521539412,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":null,"sourceOld":"  @Override\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(cacheHelper.getKey());\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      \n      if (th != null) {\n        throw IOUtils.rethrowAlways(th);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/OwnCacheKeyMultiReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":null,"sourceOld":"  @Override\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(cacheHelper.getKey());\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      \n      if (th != null) {\n        throw IOUtils.rethrowAlways(th);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","14d66d86a8b184a86bcaebcf6e15fcef486e0876"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["db1392222972bed979defb7b7df4ce46320e36d0","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["db1392222972bed979defb7b7df4ce46320e36d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db1392222972bed979defb7b7df4ce46320e36d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"14d66d86a8b184a86bcaebcf6e15fcef486e0876":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"]},"commit2Childs":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","e9017cf144952056066919f1ebc7897ff9bd71b1","14d66d86a8b184a86bcaebcf6e15fcef486e0876"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db1392222972bed979defb7b7df4ce46320e36d0"],"db1392222972bed979defb7b7df4ce46320e36d0":["e9017cf144952056066919f1ebc7897ff9bd71b1","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"14d66d86a8b184a86bcaebcf6e15fcef486e0876":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}