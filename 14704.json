{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","commits":[{"id":"4159c807d1d3d9b2f9221ee71879b62f5f5641e0","date":1397755681,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @SuppressWarnings(\"deprecation\")\n  public void testSSLSystemProperties() {\n    try {\n      SSLTestConfig.setSSLSystemProperties();\n      assertNotNull(\"HTTPS scheme could not be created using the javax.net.ssl.* system properties.\", \n          HttpClientUtil.createClient(null).getConnectionManager().getSchemeRegistry().get(\"https\"));\n      \n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n      assertEquals(AllowAllHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n    } finally {\n      SSLTestConfig.clearSSLSystemProperties();\n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"deprecation\")\n  public void testSSLSystemProperties() throws IOException {\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      SSLTestConfig.setSSLSystemProperties();\n      assertNotNull(\"HTTPS scheme could not be created using the javax.net.ssl.* system properties.\", \n          client.getConnectionManager().getSchemeRegistry().get(\"https\"));\n      \n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(client).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(client).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(client).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(AllowAllHostnameVerifier.class, getHostnameVerifier(client).getClass());\n    } finally {\n      SSLTestConfig.clearSSLSystemProperties();\n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n      client.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"deprecation\")\n  public void testSSLSystemProperties() {\n    try {\n      SSLTestConfig.setSSLSystemProperties();\n      assertNotNull(\"HTTPS scheme could not be created using the javax.net.ssl.* system properties.\", \n          HttpClientUtil.createClient(null).getConnectionManager().getSchemeRegistry().get(\"https\"));\n      \n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n      assertEquals(AllowAllHostnameVerifier.class, getHostnameVerifier(HttpClientUtil.createClient(null)).getClass());\n    } finally {\n      SSLTestConfig.clearSSLSystemProperties();\n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    }\n  }\n\n","bugFix":["4159c807d1d3d9b2f9221ee71879b62f5f5641e0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","sourceNew":null,"sourceOld":"  @Test\n  @SuppressWarnings(\"deprecation\")\n  public void testSSLSystemProperties() throws IOException {\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      SSLTestConfig.setSSLSystemProperties();\n      assertNotNull(\"HTTPS scheme could not be created using the javax.net.ssl.* system properties.\", \n          client.getConnectionManager().getSchemeRegistry().get(\"https\"));\n      \n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(client).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(client).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(BrowserCompatHostnameVerifier.class, getHostnameVerifier(client).getClass());\n      \n      System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n      client.close();\n      client = HttpClientUtil.createClient(null);\n      assertEquals(AllowAllHostnameVerifier.class, getHostnameVerifier(client).getClass());\n    } finally {\n      SSLTestConfig.clearSSLSystemProperties();\n      System.clearProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n      client.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5","date":1524429517,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","pathOld":"/dev/null","sourceNew":"  public void testSSLSystemProperties() throws IOException {\n    \n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSSLSystemProperties() throws IOException {\n    \n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","sourceOld":"  public void testSSLSystemProperties() throws IOException {\n    \n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSSLSystemProperties() throws IOException {\n    \n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSSLSystemProperties() throws IOException {\n    \n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b09263a529ccc99634e455697c798287b964dcb","date":1552241100,"type":3,"author":"erick","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSSLSystemProperties() throws IOException {\n\n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","sourceOld":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSSLSystemProperties() throws IOException {\n    \n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e856e5ac973044540959acff90fa900278d2692","date":1585275350,"type":3,"author":"Andy Throgmorton","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSSLSystemProperties().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSSLSystemProperties() throws IOException {\n\n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSocketFactoryRegistryProvider().getSocketFactoryRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSocketFactoryRegistryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSocketFactoryRegistryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSocketFactoryRegistryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSocketFactoryRegistryProvider());\n  }\n\n","sourceOld":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSSLSystemProperties() throws IOException {\n\n    assertNotNull(\"HTTPS scheme could not be created using system defaults\",\n                  HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\"));\n\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"true\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n\n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(DefaultHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n    \n    System.setProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME, \"false\");\n    resetHttpClientBuilder();\n    assertSSLHostnameVerifier(NoopHostnameVerifier.class, HttpClientUtil.getSchemaRegisteryProvider());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b09263a529ccc99634e455697c798287b964dcb":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"859081acf00749f5dd462772c571d611d4a4d2db":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5":["859081acf00749f5dd462772c571d611d4a4d2db"],"9e856e5ac973044540959acff90fa900278d2692":["7b09263a529ccc99634e455697c798287b964dcb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cba13865da71de3b9b0937fcbc66d726089356d":["e67ae138c1173c6193dbcfd9a94142b99ed2a0c5"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["4159c807d1d3d9b2f9221ee71879b62f5f5641e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e856e5ac973044540959acff90fa900278d2692"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"],"4159c807d1d3d9b2f9221ee71879b62f5f5641e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b09263a529ccc99634e455697c798287b964dcb":["9e856e5ac973044540959acff90fa900278d2692"],"859081acf00749f5dd462772c571d611d4a4d2db":["e67ae138c1173c6193dbcfd9a94142b99ed2a0c5"],"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5":["4cba13865da71de3b9b0937fcbc66d726089356d"],"9e856e5ac973044540959acff90fa900278d2692":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4159c807d1d3d9b2f9221ee71879b62f5f5641e0"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["859081acf00749f5dd462772c571d611d4a4d2db"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["7b09263a529ccc99634e455697c798287b964dcb"],"4159c807d1d3d9b2f9221ee71879b62f5f5641e0":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}