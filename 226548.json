{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Node> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Node> cells = new ArrayList<Node>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Node> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Node> cells = new ArrayList<Node>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8259c159da2de2e8528524fb76b244b46cbded59","date":1364478249,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Cell> cells = new ArrayList<Cell>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Node> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Node> cells = new ArrayList<Node>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Cell> cells = new ArrayList<>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Cell> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Cell> cells = new ArrayList<Cell>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Cell> cells = new ArrayList<>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Cell> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Cell> cells = new ArrayList<>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Cell> cells = new ArrayList<>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Cell> getSubCells() {\n      String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());//sorted\n      List<Cell> cells = new ArrayList<>(hashes.length);\n      for (String hash : hashes) {\n        cells.add(new GhCell(hash));\n      }\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8259c159da2de2e8528524fb76b244b46cbded59"],"af2638813028b254a88b418ebeafb541afb49653":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","112d77ac8d3e10a362516ad834c9a11d35c94234"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"8259c159da2de2e8528524fb76b244b46cbded59":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8259c159da2de2e8528524fb76b244b46cbded59"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8259c159da2de2e8528524fb76b244b46cbded59":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}