{"path":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34c293e9c1585a07c0532058631196bcd9a6cbfe","date":1341849837,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.shutdown();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.shutdown();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2fb55c0777755badd3b46d8140f3d4301febed","date":1398881584,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.shutdown();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.INSTANCE));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.shutdown();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.shutdown();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.shutdown();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.shutdown();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.INSTANCE));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.shutdown();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.shutdown();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.INSTANCE));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.shutdown();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.INSTANCE));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.shutdown();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.INSTANCE));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.shutdown();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"34c293e9c1585a07c0532058631196bcd9a6cbfe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","34c293e9c1585a07c0532058631196bcd9a6cbfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["34c293e9c1585a07c0532058631196bcd9a6cbfe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","34c293e9c1585a07c0532058631196bcd9a6cbfe"]},"commit2Childs":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["34c293e9c1585a07c0532058631196bcd9a6cbfe","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"34c293e9c1585a07c0532058631196bcd9a6cbfe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ae14298f4eec6d5faee6a149f88ba57d14a6f21a","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}