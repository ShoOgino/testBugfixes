{"path":"src/java/org/apache/solr/search/function/distance/DistanceUtils#vectorDistance(double[],double[],double).mjava","commits":[{"id":"705f33e5fdd5faefb06e318ed968763f66e8a2b0","date":1262624396,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/distance/DistanceUtils#vectorDistance(double[],double[],double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calculate the p-norm (i.e. length) between two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/DistanceUtils#vectorDistance(double[],double[],double).mjava","pathOld":"src/java/org/apache/solr/search/function/distance/DistanceUtils#vectorDistance(double[],double[],double).mjava","sourceNew":"  /**\n   * Calculate the p-norm (i.e. length) between two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","sourceOld":"  /**\n   * Calculate the p-norm (i.e. length) between two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"705f33e5fdd5faefb06e318ed968763f66e8a2b0":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["705f33e5fdd5faefb06e318ed968763f66e8a2b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"705f33e5fdd5faefb06e318ed968763f66e8a2b0":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["705f33e5fdd5faefb06e318ed968763f66e8a2b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}