{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeBytes().mjava","commits":[{"id":"2ec08217282b5e9df023dcdff55c745ff68b1c7d","date":1359392781,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testTooLargeBytes().mjava","sourceNew":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeBytes().mjava","pathOld":"/dev/null","sourceNew":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c024a3e8fec0a081cbf9539845db12f0dc84d029","date":1376654698,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeBytes().mjava","sourceNew":null,"sourceOld":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ceca04c06658aeb20e0a319ade784ad9a0576dd","date":1376662287,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeBytes().mjava","sourceNew":null,"sourceOld":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeBytes().mjava","sourceNew":null,"sourceOld":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","c024a3e8fec0a081cbf9539845db12f0dc84d029"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c024a3e8fec0a081cbf9539845db12f0dc84d029":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"2ceca04c06658aeb20e0a319ade784ad9a0576dd":["d4d69c535930b5cce125cff868d40f6373dc27d4","c024a3e8fec0a081cbf9539845db12f0dc84d029"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c024a3e8fec0a081cbf9539845db12f0dc84d029"],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c024a3e8fec0a081cbf9539845db12f0dc84d029","2ceca04c06658aeb20e0a319ade784ad9a0576dd"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"c024a3e8fec0a081cbf9539845db12f0dc84d029":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","2ceca04c06658aeb20e0a319ade784ad9a0576dd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2ceca04c06658aeb20e0a319ade784ad9a0576dd":[],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","2ceca04c06658aeb20e0a319ade784ad9a0576dd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}