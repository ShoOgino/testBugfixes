{"path":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#computeNorm(FieldInvertState).mjava","commits":[{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#computeNorm(FieldInvertState).mjava","pathOld":"/dev/null","sourceNew":"  /** Encodes the document length in the same way as {@link TFIDFSimilarity}. */\n  @Override\n  public byte computeNorm(FieldInvertState state) {\n    final float numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength() / state.getBoost();\n    return encodeNormValue(state.getBoost(), numTerms);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#computeNorm(FieldInvertState,Norm).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#computeNorm(FieldInvertState).mjava","sourceNew":"  /** Encodes the document length in the same way as {@link TFIDFSimilarity}. */\n  @Override\n  public void computeNorm(FieldInvertState state, Norm norm) {\n    final float numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength() / state.getBoost();\n    norm.setByte(encodeNormValue(state.getBoost(), numTerms));\n  }\n\n","sourceOld":"  /** Encodes the document length in the same way as {@link TFIDFSimilarity}. */\n  @Override\n  public byte computeNorm(FieldInvertState state) {\n    final float numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength() / state.getBoost();\n    return encodeNormValue(state.getBoost(), numTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}