{"path":"lucene/sandbox/src/java/org/apache/lucene/search/MultiNormsLeafSimScorer#MultiNormsLeafSimScorer(SimScorer,LeafReader,Collection[FieldAndWeight],boolean).mjava","commits":[{"id":"15c07295375e0ec8be1c0ec46de21292455b3af8","date":1542792270,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/MultiNormsLeafSimScorer#MultiNormsLeafSimScorer(SimScorer,LeafReader,Collection[FieldAndWeight],boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   *\n   */\n  MultiNormsLeafSimScorer(SimScorer scorer, LeafReader reader, Collection<FieldAndWeight> normFields, boolean needsScores) throws IOException {\n    this.scorer = Objects.requireNonNull(scorer);\n    if (needsScores) {\n      final List<NumericDocValues> normsList = new ArrayList<>();\n      final List<Float> weightList = new ArrayList<>();\n      for (FieldAndWeight field : normFields) {\n        NumericDocValues norms = reader.getNormValues(field.field);\n        if (norms != null) {\n          normsList.add(norms);\n          weightList.add(field.weight);\n        }\n      }\n      if (normsList.isEmpty()) {\n        norms = null;\n      } else if (normsList.size() == 1) {\n        norms = normsList.get(0);\n      } else {\n        final NumericDocValues[] normsArr = normsList.toArray(new NumericDocValues[0]);\n        final float[] weightArr = new float[normsList.size()];\n        for (int i = 0; i < weightList.size(); i++) {\n          weightArr[i] = weightList.get(i);\n        }\n        norms = new MultiFieldNormValues(normsArr, weightArr);\n      }\n    } else {\n      norms = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"15c07295375e0ec8be1c0ec46de21292455b3af8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15c07295375e0ec8be1c0ec46de21292455b3af8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15c07295375e0ec8be1c0ec46de21292455b3af8"],"15c07295375e0ec8be1c0ec46de21292455b3af8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}