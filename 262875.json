{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsWriter#finish().mjava","commits":[{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsWriter#finish().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointWriter#finish().mjava","sourceNew":"  @Override\n  public void finish() throws IOException {\n    if (finished) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    finished = true;\n    CodecUtil.writeFooter(dataOut);\n\n    String indexFileName = IndexFileNames.segmentFileName(writeState.segmentInfo.name,\n                                                          writeState.segmentSuffix,\n                                                          Lucene60PointsFormat.INDEX_EXTENSION);\n    // Write index file\n    try (IndexOutput indexOut = writeState.directory.createOutput(indexFileName, writeState.context)) {\n      CodecUtil.writeIndexHeader(indexOut,\n                                 Lucene60PointsFormat.META_CODEC_NAME,\n                                 Lucene60PointsFormat.INDEX_VERSION_CURRENT,\n                                 writeState.segmentInfo.getId(),\n                                 writeState.segmentSuffix);\n      int count = indexFPs.size();\n      indexOut.writeVInt(count);\n      for(Map.Entry<String,Long> ent : indexFPs.entrySet()) {\n        FieldInfo fieldInfo = writeState.fieldInfos.fieldInfo(ent.getKey());\n        if (fieldInfo == null) {\n          throw new IllegalStateException(\"wrote field=\\\"\" + ent.getKey() + \"\\\" but that field doesn't exist in FieldInfos\");\n        }\n        indexOut.writeVInt(fieldInfo.number);\n        indexOut.writeVLong(ent.getValue());\n      }\n      CodecUtil.writeFooter(indexOut);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finish() throws IOException {\n    if (finished) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    finished = true;\n    CodecUtil.writeFooter(dataOut);\n\n    String indexFileName = IndexFileNames.segmentFileName(writeState.segmentInfo.name,\n                                                          writeState.segmentSuffix,\n                                                          Lucene60PointFormat.INDEX_EXTENSION);\n    // Write index file\n    try (IndexOutput indexOut = writeState.directory.createOutput(indexFileName, writeState.context)) {\n      CodecUtil.writeIndexHeader(indexOut,\n                                 Lucene60PointFormat.META_CODEC_NAME,\n                                 Lucene60PointFormat.INDEX_VERSION_CURRENT,\n                                 writeState.segmentInfo.getId(),\n                                 writeState.segmentSuffix);\n      int count = indexFPs.size();\n      indexOut.writeVInt(count);\n      for(Map.Entry<String,Long> ent : indexFPs.entrySet()) {\n        FieldInfo fieldInfo = writeState.fieldInfos.fieldInfo(ent.getKey());\n        if (fieldInfo == null) {\n          throw new IllegalStateException(\"wrote field=\\\"\" + ent.getKey() + \"\\\" but that field doesn't exist in FieldInfos\");\n        }\n        indexOut.writeVInt(fieldInfo.number);\n        indexOut.writeVLong(ent.getValue());\n      }\n      CodecUtil.writeFooter(indexOut);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78e689a3b60e84c75dc6dd7b181a71fc19ef8482","date":1591689554,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene60/Lucene60PointsWriter#finish().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsWriter#finish().mjava","sourceNew":"  @Override\n  public void finish() throws IOException {\n    if (finished) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    finished = true;\n    CodecUtil.writeFooter(dataOut);\n\n    String indexFileName = IndexFileNames.segmentFileName(writeState.segmentInfo.name,\n                                                          writeState.segmentSuffix,\n                                                          Lucene60PointsFormat.INDEX_EXTENSION);\n    // Write index file\n    try (IndexOutput indexOut = writeState.directory.createOutput(indexFileName, writeState.context)) {\n      CodecUtil.writeIndexHeader(indexOut,\n                                 Lucene60PointsFormat.META_CODEC_NAME,\n                                 Lucene60PointsFormat.INDEX_VERSION_CURRENT,\n                                 writeState.segmentInfo.getId(),\n                                 writeState.segmentSuffix);\n      int count = indexFPs.size();\n      indexOut.writeVInt(count);\n      for(Map.Entry<String,Long> ent : indexFPs.entrySet()) {\n        FieldInfo fieldInfo = writeState.fieldInfos.fieldInfo(ent.getKey());\n        if (fieldInfo == null) {\n          throw new IllegalStateException(\"wrote field=\\\"\" + ent.getKey() + \"\\\" but that field doesn't exist in FieldInfos\");\n        }\n        indexOut.writeVInt(fieldInfo.number);\n        indexOut.writeVLong(ent.getValue());\n      }\n      CodecUtil.writeFooter(indexOut);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finish() throws IOException {\n    if (finished) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    finished = true;\n    CodecUtil.writeFooter(dataOut);\n\n    String indexFileName = IndexFileNames.segmentFileName(writeState.segmentInfo.name,\n                                                          writeState.segmentSuffix,\n                                                          Lucene60PointsFormat.INDEX_EXTENSION);\n    // Write index file\n    try (IndexOutput indexOut = writeState.directory.createOutput(indexFileName, writeState.context)) {\n      CodecUtil.writeIndexHeader(indexOut,\n                                 Lucene60PointsFormat.META_CODEC_NAME,\n                                 Lucene60PointsFormat.INDEX_VERSION_CURRENT,\n                                 writeState.segmentInfo.getId(),\n                                 writeState.segmentSuffix);\n      int count = indexFPs.size();\n      indexOut.writeVInt(count);\n      for(Map.Entry<String,Long> ent : indexFPs.entrySet()) {\n        FieldInfo fieldInfo = writeState.fieldInfos.fieldInfo(ent.getKey());\n        if (fieldInfo == null) {\n          throw new IllegalStateException(\"wrote field=\\\"\" + ent.getKey() + \"\\\" but that field doesn't exist in FieldInfos\");\n        }\n        indexOut.writeVInt(fieldInfo.number);\n        indexOut.writeVLong(ent.getValue());\n      }\n      CodecUtil.writeFooter(indexOut);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}