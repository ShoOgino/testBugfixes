{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","commits":[{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","pathOld":"/dev/null","sourceNew":"    // used by assert\n    boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","pathOld":"/dev/null","sourceNew":"    // used by assert\n    boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","pathOld":"/dev/null","sourceNew":"    // used by assert\n    boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7aedb1a383e7bd650e195fd3d2a9fcdb1f2d5b07","date":1301601555,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","sourceNew":"    // used by assert\n    synchronized boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","sourceOld":"    // used by assert\n    boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","sourceNew":"    // used by assert\n    synchronized boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","sourceOld":"    // used by assert\n    boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","sourceNew":"    // used by assert\n    synchronized boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","sourceOld":"    // used by assert\n    boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#containsConsistent(Integer,String).mjava","sourceNew":"    // used by assert\n    synchronized boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","sourceOld":"    // used by assert\n    synchronized boolean containsConsistent(Integer number, String name) {\n      return name.equals(numberToName.get(number))\n          && number.equals(nameToNumber.get(name));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1224a4027481acce15495b03bce9b48b93b42722"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7aedb1a383e7bd650e195fd3d2a9fcdb1f2d5b07"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","7aedb1a383e7bd650e195fd3d2a9fcdb1f2d5b07"],"7aedb1a383e7bd650e195fd3d2a9fcdb1f2d5b07":["1224a4027481acce15495b03bce9b48b93b42722"],"45669a651c970812a680841b97a77cce06af559f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","7aedb1a383e7bd650e195fd3d2a9fcdb1f2d5b07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["45669a651c970812a680841b97a77cce06af559f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","1224a4027481acce15495b03bce9b48b93b42722"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"7aedb1a383e7bd650e195fd3d2a9fcdb1f2d5b07":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f"],"45669a651c970812a680841b97a77cce06af559f":[],"1224a4027481acce15495b03bce9b48b93b42722":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","7aedb1a383e7bd650e195fd3d2a9fcdb1f2d5b07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}