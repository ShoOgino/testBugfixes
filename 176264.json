{"path":"modules/join/src/java/org/apache/lucene/search/join/JoinUtil#createJoinQuery(String,boolean,String,Query,IndexSearcher).mjava","commits":[{"id":"3cd7782b032787117c986a2278d05b25056b2eba","date":1326755795,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/JoinUtil#createJoinQuery(String,boolean,String,Query,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Method for query time joining.\n   * <p/>\n   * Execute the returned query with a {@link IndexSearcher} to retrieve all documents that have the same terms in the\n   * to field that match with documents matching the specified fromQuery and have the same terms in the from field.\n   *\n   * @param fromField                 The from field to join from\n   * @param multipleValuesPerDocument Whether the from field has multiple terms per document\n   * @param toField                   The to field to join to\n   * @param fromQuery                 The query to match documents on the from side\n   * @param fromSearcher              The searcher that executed the specified fromQuery\n   * @return a {@link Query} instance that can be used to join documents based on the\n   *         terms in the from and to field\n   * @throws IOException If I/O related errors occur\n   */\n  public static Query createJoinQuery(String fromField,\n                                      boolean multipleValuesPerDocument,\n                                      String toField,\n                                      Query fromQuery,\n                                      IndexSearcher fromSearcher) throws IOException {\n    TermsCollector termsCollector = TermsCollector.create(fromField, multipleValuesPerDocument);\n    fromSearcher.search(fromQuery, termsCollector);\n    return new TermsQuery(toField, termsCollector.getCollectorTerms());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/JoinUtil#createJoinQuery(String,boolean,String,Query,IndexSearcher).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/JoinUtil#createJoinQuery(String,boolean,String,Query,IndexSearcher).mjava","sourceNew":"  /**\n   * Method for query time joining.\n   * <p/>\n   * Execute the returned query with a {@link IndexSearcher} to retrieve all documents that have the same terms in the\n   * to field that match with documents matching the specified fromQuery and have the same terms in the from field.\n   *\n   * @param fromField                 The from field to join from\n   * @param multipleValuesPerDocument Whether the from field has multiple terms per document\n   * @param toField                   The to field to join to\n   * @param fromQuery                 The query to match documents on the from side\n   * @param fromSearcher              The searcher that executed the specified fromQuery\n   * @return a {@link Query} instance that can be used to join documents based on the\n   *         terms in the from and to field\n   * @throws IOException If I/O related errors occur\n   */\n  public static Query createJoinQuery(String fromField,\n                                      boolean multipleValuesPerDocument,\n                                      String toField,\n                                      Query fromQuery,\n                                      IndexSearcher fromSearcher) throws IOException {\n    TermsCollector termsCollector = TermsCollector.create(fromField, multipleValuesPerDocument);\n    fromSearcher.search(fromQuery, termsCollector);\n    return new TermsQuery(toField, termsCollector.getCollectorTerms());\n  }\n\n","sourceOld":"  /**\n   * Method for query time joining.\n   * <p/>\n   * Execute the returned query with a {@link IndexSearcher} to retrieve all documents that have the same terms in the\n   * to field that match with documents matching the specified fromQuery and have the same terms in the from field.\n   *\n   * @param fromField                 The from field to join from\n   * @param multipleValuesPerDocument Whether the from field has multiple terms per document\n   * @param toField                   The to field to join to\n   * @param fromQuery                 The query to match documents on the from side\n   * @param fromSearcher              The searcher that executed the specified fromQuery\n   * @return a {@link Query} instance that can be used to join documents based on the\n   *         terms in the from and to field\n   * @throws IOException If I/O related errors occur\n   */\n  public static Query createJoinQuery(String fromField,\n                                      boolean multipleValuesPerDocument,\n                                      String toField,\n                                      Query fromQuery,\n                                      IndexSearcher fromSearcher) throws IOException {\n    TermsCollector termsCollector = TermsCollector.create(fromField, multipleValuesPerDocument);\n    fromSearcher.search(fromQuery, termsCollector);\n    return new TermsQuery(toField, termsCollector.getCollectorTerms());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cd7782b032787117c986a2278d05b25056b2eba"],"3cd7782b032787117c986a2278d05b25056b2eba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cd7782b032787117c986a2278d05b25056b2eba":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cd7782b032787117c986a2278d05b25056b2eba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}