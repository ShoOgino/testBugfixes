{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#startTerm(NumericDocValues).mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#startTerm(NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#startTerm().mjava","sourceNew":"  @Override\n  public void startTerm(NumericDocValues norms) {\n    docStartFP = docOut.getFilePointer();\n    if (writePositions) {\n      posStartFP = posOut.getFilePointer();\n      if (writePayloads || writeOffsets) {\n        payStartFP = payOut.getFilePointer();\n      }\n    }\n    lastDocID = 0;\n    lastBlockDocID = -1;\n    skipWriter.resetSkip();\n    this.norms = norms;\n    competitiveFreqNormAccumulator.clear();\n  }\n\n","sourceOld":"  @Override\n  public void startTerm() {\n    docStartFP = docOut.getFilePointer();\n    if (writePositions) {\n      posStartFP = posOut.getFilePointer();\n      if (writePayloads || writeOffsets) {\n        payStartFP = payOut.getFilePointer();\n      }\n    }\n    lastDocID = 0;\n    lastBlockDocID = -1;\n    skipWriter.resetSkip();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":6,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#startTerm(NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#startTerm(NumericDocValues).mjava","sourceNew":"  @Override\n  public void startTerm(NumericDocValues norms) {\n    docStartFP = docOut.getFilePointer();\n    if (writePositions) {\n      posStartFP = posOut.getFilePointer();\n      if (writePayloads || writeOffsets) {\n        payStartFP = payOut.getFilePointer();\n      }\n    }\n    lastDocID = 0;\n    lastBlockDocID = -1;\n    skipWriter.resetSkip();\n    this.norms = norms;\n    competitiveFreqNormAccumulator.clear();\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(NumericDocValues norms) {\n    docStartFP = docOut.getFilePointer();\n    if (writePositions) {\n      posStartFP = posOut.getFilePointer();\n      if (writePayloads || writeOffsets) {\n        payStartFP = payOut.getFilePointer();\n      }\n    }\n    lastDocID = 0;\n    lastBlockDocID = -1;\n    skipWriter.resetSkip();\n    this.norms = norms;\n    competitiveFreqNormAccumulator.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/Lucene84PostingsWriter#startTerm(NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#startTerm(NumericDocValues).mjava","sourceNew":"  @Override\n  public void startTerm(NumericDocValues norms) {\n    docStartFP = docOut.getFilePointer();\n    if (writePositions) {\n      posStartFP = posOut.getFilePointer();\n      if (writePayloads || writeOffsets) {\n        payStartFP = payOut.getFilePointer();\n      }\n    }\n    lastDocID = 0;\n    lastBlockDocID = -1;\n    skipWriter.resetSkip();\n    this.norms = norms;\n    competitiveFreqNormAccumulator.clear();\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(NumericDocValues norms) {\n    docStartFP = docOut.getFilePointer();\n    if (writePositions) {\n      posStartFP = posOut.getFilePointer();\n      if (writePayloads || writeOffsets) {\n        payStartFP = payOut.getFilePointer();\n      }\n    }\n    lastDocID = 0;\n    lastBlockDocID = -1;\n    skipWriter.resetSkip();\n    this.norms = norms;\n    competitiveFreqNormAccumulator.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["622a708571e534680618b3c5e0c28ac539a47776"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}