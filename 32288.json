{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","commits":[{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", KerberosPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(KerberosPlugin.AUTH_HANDLER_PARAM,\n        HttpParamDelegationTokenAuthenticationHandler.class.getName());\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3d73ce4049cb1520abaaae57fe8267639bda1d","date":1470181330,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", KerberosPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(KerberosPlugin.AUTH_HANDLER_PARAM,\n        HttpParamDelegationTokenAuthenticationHandler.class.getName());\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9258f3da690b07cc6ca7144a40075b715169388a","date":1498311300,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    assumeFalse(\"SOLR-10951: Hadoop does not work on Java 9\", Constants.JRE_IS_MINIMUM_JAVA9);\n    \n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    assumeFalse(\"SOLR-10951: Hadoop does not work on Java 9\", Constants.JRE_IS_MINIMUM_JAVA9);\n    \n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15f356f6d3de89a527f853f2d8411795120120d7","date":1498664249,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void startup() throws Exception {\n    assumeFalse(\"SOLR-10951: Hadoop does not work on Java 9\", Constants.JRE_IS_MINIMUM_JAVA9);\n    \n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#startup().mjava","sourceNew":"  @BeforeClass\n  public static void startup() throws Exception {\n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void startup() throws Exception {\n    assumeFalse(\"SOLR-10951: Hadoop does not work on Java 9\", Constants.JRE_IS_MINIMUM_JAVA9);\n    \n    System.setProperty(\"authenticationPlugin\", HttpParamDelegationTokenPlugin.class.getName());\n    System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED, \"true\");\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n\n    miniCluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir(), buildJettyConfig(\"/solr\"));\n    JettySolrRunner runnerPrimary = miniCluster.getJettySolrRunners().get(0);\n    solrClientPrimary =\n        new HttpSolrClient.Builder(runnerPrimary.getBaseUrl().toString())\n            .build();\n    JettySolrRunner runnerSecondary = miniCluster.getJettySolrRunners().get(1);\n    solrClientSecondary =\n        new HttpSolrClient.Builder(runnerSecondary.getBaseUrl().toString())\n            .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["20be168d828ac40d262f85364d02f15b491dd88b"],"15f356f6d3de89a527f853f2d8411795120120d7":["9258f3da690b07cc6ca7144a40075b715169388a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"20be168d828ac40d262f85364d02f15b491dd88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","9258f3da690b07cc6ca7144a40075b715169388a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"9258f3da690b07cc6ca7144a40075b715169388a":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"]},"commit2Childs":{"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["30c8e5574b55d57947e989443dfde611646530ee","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817","9258f3da690b07cc6ca7144a40075b715169388a"],"15f356f6d3de89a527f853f2d8411795120120d7":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20be168d828ac40d262f85364d02f15b491dd88b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"30c8e5574b55d57947e989443dfde611646530ee":[],"20be168d828ac40d262f85364d02f15b491dd88b":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["30c8e5574b55d57947e989443dfde611646530ee"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"9258f3da690b07cc6ca7144a40075b715169388a":["15f356f6d3de89a527f853f2d8411795120120d7","b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15f356f6d3de89a527f853f2d8411795120120d7","30c8e5574b55d57947e989443dfde611646530ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}