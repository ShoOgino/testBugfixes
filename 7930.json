{"path":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","commits":[{"id":"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656","date":1383680488,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBogusEnumSearch() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"Low\"));\n    assertU(adoc(\"id\", \"2\", FIELD_NAME, \"Medium\"));\n    assertU(adoc(\"id\", \"3\", FIELD_NAME, \"High\"));\n    assertU(adoc(\"id\", \"4\", FIELD_NAME, \"Critical\"));\n\n    // two docs w/o values\n    for (int i = 8; i <= 9; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n\n    SolrQueryRequest eoe = req(\"fl\", \"\" + FIELD_NAME, \"q\",\n        FIELD_NAME + \":bla\");\n    String eoe1 = eoe.toString();\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":bla\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":7\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":\\\"-3\\\"\"),\n            \"//*[@numFound='0']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb3ff3f518f72757e55e5bf51853b02411452d30","date":1448985967,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","sourceNew":"  @Test\n  public void testBogusEnumSearch() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"Low\"));\n    assertU(adoc(\"id\", \"2\", FIELD_NAME, \"Medium\"));\n    assertU(adoc(\"id\", \"3\", FIELD_NAME, \"High\"));\n    assertU(adoc(\"id\", \"4\", FIELD_NAME, \"Critical\"));\n\n    // two docs w/o values\n    for (int i = 8; i <= 9; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":bla\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":7\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":\\\"-3\\\"\"),\n            \"//*[@numFound='0']\");\n  }\n\n","sourceOld":"  @Test\n  public void testBogusEnumSearch() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"Low\"));\n    assertU(adoc(\"id\", \"2\", FIELD_NAME, \"Medium\"));\n    assertU(adoc(\"id\", \"3\", FIELD_NAME, \"High\"));\n    assertU(adoc(\"id\", \"4\", FIELD_NAME, \"Critical\"));\n\n    // two docs w/o values\n    for (int i = 8; i <= 9; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n\n    SolrQueryRequest eoe = req(\"fl\", \"\" + FIELD_NAME, \"q\",\n        FIELD_NAME + \":bla\");\n    String eoe1 = eoe.toString();\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":bla\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":7\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":\\\"-3\\\"\"),\n            \"//*[@numFound='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ad8c9e9210e008dc7b8ad5a037ff20879150ea","date":1501889566,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","sourceNew":"  @Test\n  public void testBogusEnumSearch() throws Exception {\n    assumeFalse(\"Skipping testing of EnumFieldType without docValues, which is unsupported.\",\n        System.getProperty(\"solr.tests.EnumFieldType\").equals(\"solr.EnumFieldType\")\n            && System.getProperty(\"solr.tests.numeric.dv\").equals(\"false\"));\n\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"Low\"));\n    assertU(adoc(\"id\", \"2\", FIELD_NAME, \"Medium\"));\n    assertU(adoc(\"id\", \"3\", FIELD_NAME, \"High\"));\n    assertU(adoc(\"id\", \"4\", FIELD_NAME, \"Critical\"));\n\n    // two docs w/o values\n    for (int i = 8; i <= 9; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", FIELD_NAME + \":bla\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", FIELD_NAME + \":7\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", FIELD_NAME + \":\\\"-3\\\"\"),\n            \"//*[@numFound='0']\");\n  }\n\n","sourceOld":"  @Test\n  public void testBogusEnumSearch() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"Low\"));\n    assertU(adoc(\"id\", \"2\", FIELD_NAME, \"Medium\"));\n    assertU(adoc(\"id\", \"3\", FIELD_NAME, \"High\"));\n    assertU(adoc(\"id\", \"4\", FIELD_NAME, \"Critical\"));\n\n    // two docs w/o values\n    for (int i = 8; i <= 9; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":bla\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":7\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":\\\"-3\\\"\"),\n            \"//*[@numFound='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testBogusEnumSearch().mjava","sourceNew":"  @Test\n  public void testBogusEnumSearch() throws Exception {\n    assumeFalse(\"Skipping testing of EnumFieldType without docValues, which is unsupported.\",\n        System.getProperty(\"solr.tests.EnumFieldType\").equals(\"solr.EnumFieldType\")\n            && System.getProperty(\"solr.tests.numeric.dv\").equals(\"false\"));\n\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"Low\"));\n    assertU(adoc(\"id\", \"2\", FIELD_NAME, \"Medium\"));\n    assertU(adoc(\"id\", \"3\", FIELD_NAME, \"High\"));\n    assertU(adoc(\"id\", \"4\", FIELD_NAME, \"Critical\"));\n\n    // two docs w/o values\n    for (int i = 8; i <= 9; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", FIELD_NAME + \":bla\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", FIELD_NAME + \":7\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\", FIELD_NAME + \":\\\"-3\\\"\"),\n            \"//*[@numFound='0']\");\n  }\n\n","sourceOld":"  @Test\n  public void testBogusEnumSearch() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", FIELD_NAME, \"Low\"));\n    assertU(adoc(\"id\", \"2\", FIELD_NAME, \"Medium\"));\n    assertU(adoc(\"id\", \"3\", FIELD_NAME, \"High\"));\n    assertU(adoc(\"id\", \"4\", FIELD_NAME, \"Critical\"));\n\n    // two docs w/o values\n    for (int i = 8; i <= 9; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":bla\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":7\"),\n            \"//*[@numFound='0']\");\n\n    assertQ(req(\"fl\", \"\" + FIELD_NAME, \"q\",\n            FIELD_NAME + \":\\\"-3\\\"\"),\n            \"//*[@numFound='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["bb3ff3f518f72757e55e5bf51853b02411452d30","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["bb3ff3f518f72757e55e5bf51853b02411452d30"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"bb3ff3f518f72757e55e5bf51853b02411452d30":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["bb3ff3f518f72757e55e5bf51853b02411452d30"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb3ff3f518f72757e55e5bf51853b02411452d30":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}