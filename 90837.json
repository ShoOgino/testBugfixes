{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","commits":[{"id":"79b567157855b86f9f11384706e3d2a5544660ce","date":1202393618,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"79b567157855b86f9f11384706e3d2a5544660ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["79b567157855b86f9f11384706e3d2a5544660ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"79b567157855b86f9f11384706e3d2a5544660ce":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["79b567157855b86f9f11384706e3d2a5544660ce"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}