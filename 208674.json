{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","commits":[{"id":"f2e9861e4a2b724d9fc51b618714c579491b78d7","date":1479244606,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.TokenStreamPostingsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1ef55e1fff7ff44354432770ad8bc19be1fcc75","date":1479266056,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.TokenStreamPostingsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f714d649962c934166dedd1e83173e36356b328","date":1479399594,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","sourceNew":"    // TOTAL HACK; used in OffsetsEnum.getTerm()\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","sourceNew":"    // TOTAL HACK; used in OffsetsEnum.getTerm()\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","date":1515642580,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamOffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getTerm() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        // these CharRunAutomata are subclassed so that toString() returns the query\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","sourceOld":"    // TOTAL HACK; used in OffsetsEnum.getTerm()\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#getPayload().mjava","sourceNew":null,"sourceOld":"    // TOTAL HACK; used in OffsetsEnum.getTerm()\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (matchDescriptions[currentMatch] == null) {\n        matchDescriptions[currentMatch] = new BytesRef(matchers[currentMatch].toString());\n      }\n      return matchDescriptions[currentMatch];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["1f714d649962c934166dedd1e83173e36356b328","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"f2e9861e4a2b724d9fc51b618714c579491b78d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f2e9861e4a2b724d9fc51b618714c579491b78d7"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["1f714d649962c934166dedd1e83173e36356b328"],"1f714d649962c934166dedd1e83173e36356b328":["f2e9861e4a2b724d9fc51b618714c579491b78d7"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","1f714d649962c934166dedd1e83173e36356b328"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2e9861e4a2b724d9fc51b618714c579491b78d7":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","1f714d649962c934166dedd1e83173e36356b328"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2e9861e4a2b724d9fc51b618714c579491b78d7","a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["2e859e664a65796dadf8aaf65db6f66f3a885368"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["b94236357aaa22b76c10629851fe4e376e0cea82"],"1f714d649962c934166dedd1e83173e36356b328":["b94236357aaa22b76c10629851fe4e376e0cea82","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","2e859e664a65796dadf8aaf65db6f66f3a885368"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}