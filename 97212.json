{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = args.remove(\"words\");\n    format = args.remove(\"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(args, \"enablePositionIncrements\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(args, \"enablePositionIncrements\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = args.remove(\"words\");\n    format = args.remove(\"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(args, \"enablePositionIncrements\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":["febd00ace8921b742cf22d7679207562fa752b1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(args, \"enablePositionIncrements\", true);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(args, \"enablePositionIncrements\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"192e49c0445803405b0bc0eebc8b758485480c21","date":1367699151,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(args, \"enablePositionIncrements\", true);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"febd00ace8921b742cf22d7679207562fa752b1f","date":1379617597,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\", (null == stopWordFiles ? null : FORMAT_WORDSET));\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\");\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\", (null == stopWordFiles ? null : FORMAT_WORDSET));\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\", (null == stopWordFiles ? null : FORMAT_WORDSET));\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\", (null == stopWordFiles ? null : FORMAT_WORDSET));\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\", (null == stopWordFiles ? null : FORMAT_WORDSET));\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilterFactory#StopFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\", (null == stopWordFiles ? null : FORMAT_WORDSET));\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StopFilterFactory */\n  public StopFilterFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    stopWordFiles = get(args, \"words\");\n    format = get(args, \"format\", (null == stopWordFiles ? null : FORMAT_WORDSET));\n    ignoreCase = getBoolean(args, \"ignoreCase\", false);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"192e49c0445803405b0bc0eebc8b758485480c21":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"ff4227bb146f97aabae888091c19e48c88dbb0db":["febd00ace8921b742cf22d7679207562fa752b1f"],"febd00ace8921b742cf22d7679207562fa752b1f":["192e49c0445803405b0bc0eebc8b758485480c21"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"192e49c0445803405b0bc0eebc8b758485480c21":["febd00ace8921b742cf22d7679207562fa752b1f"],"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"febd00ace8921b742cf22d7679207562fa752b1f":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["192e49c0445803405b0bc0eebc8b758485480c21"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}