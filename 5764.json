{"path":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#internalTrieCodedToLong(String).mjava","commits":[{"id":"29191e6ce86bfcd231cd069834a87833fa4079c1","date":1228333111,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#internalTrieCodedToLong(String).mjava","pathOld":"/dev/null","sourceNew":"\tprivate final long internalTrieCodedToLong(final String s) {\n\t\tif (s==null) throw new NullPointerException(\"Trie encoded string may not be NULL\");\n\t\tfinal int len=s.length();\n\t\tif (len!=TRIE_CODED_LENGTH) throw new NumberFormatException(\n\t\t\t\"Invalid trie encoded numerical value representation (incompatible length, must be \"+TRIE_CODED_LENGTH+\")\"\n\t\t);\n\t\tlong l=0L;\n\t\tfor (int i=0; i<len; i++) {\n\t\t\tchar ch=s.charAt(i);\n\t\t\tif (ch>=TRIE_CODED_SYMBOL_MIN && ch<=TRIE_CODED_SYMBOL_MAX) {\n\t\t\t\tl = (l << TRIE_BITS) | (long)(ch-TRIE_CODED_SYMBOL_MIN);\n\t\t\t} else {\n\t\t\t\tthrow new NumberFormatException(\n\t\t\t\t\t\"Invalid trie encoded numerical value representation (char \"+\n\t\t\t\t\tInteger.toHexString((int)ch)+\" at position \"+i+\" is invalid)\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn l;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef14ec05032a847f9ce1820055c6c29f72d771a","date":1231669514,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#internalTrieCodedToLong(String).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#internalTrieCodedToLong(String).mjava","sourceNew":"  private final long internalTrieCodedToLong(final String s) {\n    if (s==null) throw new NullPointerException(\"Trie encoded string may not be NULL\");\n    final int len=s.length();\n    if (len!=TRIE_CODED_LENGTH) throw new NumberFormatException(\n      \"Invalid trie encoded numerical value representation (incompatible length, must be \"+TRIE_CODED_LENGTH+\")\"\n    );\n    long l=0L;\n    for (int i=0; i<len; i++) {\n      char ch=s.charAt(i);\n      if (ch>=TRIE_CODED_SYMBOL_MIN && ch<=TRIE_CODED_SYMBOL_MAX) {\n        l = (l << TRIE_BITS) | (long)(ch-TRIE_CODED_SYMBOL_MIN);\n      } else {\n        throw new NumberFormatException(\n          \"Invalid trie encoded numerical value representation (char \"+\n          Integer.toHexString((int)ch)+\" at position \"+i+\" is invalid)\"\n        );\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"\tprivate final long internalTrieCodedToLong(final String s) {\n\t\tif (s==null) throw new NullPointerException(\"Trie encoded string may not be NULL\");\n\t\tfinal int len=s.length();\n\t\tif (len!=TRIE_CODED_LENGTH) throw new NumberFormatException(\n\t\t\t\"Invalid trie encoded numerical value representation (incompatible length, must be \"+TRIE_CODED_LENGTH+\")\"\n\t\t);\n\t\tlong l=0L;\n\t\tfor (int i=0; i<len; i++) {\n\t\t\tchar ch=s.charAt(i);\n\t\t\tif (ch>=TRIE_CODED_SYMBOL_MIN && ch<=TRIE_CODED_SYMBOL_MAX) {\n\t\t\t\tl = (l << TRIE_BITS) | (long)(ch-TRIE_CODED_SYMBOL_MIN);\n\t\t\t} else {\n\t\t\t\tthrow new NumberFormatException(\n\t\t\t\t\t\"Invalid trie encoded numerical value representation (char \"+\n\t\t\t\t\tInteger.toHexString((int)ch)+\" at position \"+i+\" is invalid)\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn l;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0","date":1234549621,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#internalTrieCodedToLong(String).mjava","sourceNew":null,"sourceOld":"  private final long internalTrieCodedToLong(final String s) {\n    if (s==null) throw new NullPointerException(\"Trie encoded string may not be NULL\");\n    final int len=s.length();\n    if (len!=TRIE_CODED_LENGTH) throw new NumberFormatException(\n      \"Invalid trie encoded numerical value representation (incompatible length, must be \"+TRIE_CODED_LENGTH+\")\"\n    );\n    long l=0L;\n    for (int i=0; i<len; i++) {\n      char ch=s.charAt(i);\n      if (ch>=TRIE_CODED_SYMBOL_MIN && ch<=TRIE_CODED_SYMBOL_MAX) {\n        l = (l << TRIE_BITS) | (long)(ch-TRIE_CODED_SYMBOL_MIN);\n      } else {\n        throw new NumberFormatException(\n          \"Invalid trie encoded numerical value representation (char \"+\n          Integer.toHexString((int)ch)+\" at position \"+i+\" is invalid)\"\n        );\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29191e6ce86bfcd231cd069834a87833fa4079c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"]},"commit2Childs":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"29191e6ce86bfcd231cd069834a87833fa4079c1":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}