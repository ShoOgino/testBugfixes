{"path":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetFeedLastModified().mjava","commits":[{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetFeedLastModified().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.storage.lucenestorage.StorageBuffer.getFeedLastModified(String)'\n     */\n    public void testGetFeedLastModified() throws IOException, InterruptedException {\n        ServerBaseEntry e = createServerBaseEntry(ENTRYID,FEEDID);\n        e.setUpdated(new DateTime(System.currentTimeMillis()-200,0));\n        StorageEntryWrapper wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(FEEDID));\n        //test update\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-180,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.UPDATE);\n        this.buffer.addEntry(wrapper);\n        Long firstAddTimestamp = new Long(e.getUpdated().getValue());\n        assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-160,0));\n        assertFalse(\"updated after add\" ,e.getUpdated().equals(this.buffer.getFeedLastModified(FEEDID)));\n        \n        //insert for other feed\n        String otherID = \"someOtherFeedID\";\n        e.setFeedId(otherID);\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-140,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(otherID));\n        assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));\n        \n        assertTrue(firstAddTimestamp.equals(this.buffer.getFeedLastModified(FEEDID)));\n        this.buffer.addDeleted(e.getId(),FEEDID);\n        // time will be set inside the buffer\n        assertTrue(firstAddTimestamp < this.buffer.getFeedLastModified(FEEDID));\n        \n        \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetFeedLastModified().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetFeedLastModified().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.storage.lucenestorage.StorageBuffer.getFeedLastModified(String)'\n     */\n    public void testGetFeedLastModified() throws IOException, InterruptedException {\n        ServerBaseEntry e = createServerBaseEntry(ENTRYID,FEEDID);\n        e.setUpdated(new DateTime(System.currentTimeMillis()-200,0));\n        StorageEntryWrapper wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(FEEDID));\n        //test update\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-180,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.UPDATE);\n        this.buffer.addEntry(wrapper);\n        Long firstAddTimestamp = new Long(e.getUpdated().getValue());\n        assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-160,0));\n        assertFalse(\"updated after add\" ,e.getUpdated().equals(this.buffer.getFeedLastModified(FEEDID)));\n        \n        //insert for other feed\n        String otherID = \"someOtherFeedID\";\n        e.setFeedId(otherID);\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-140,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(otherID));\n        assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));\n        \n        assertTrue(firstAddTimestamp.equals(this.buffer.getFeedLastModified(FEEDID)));\n        this.buffer.addDeleted(e.getId(),FEEDID);\n        // time will be set inside the buffer\n        assertTrue(firstAddTimestamp < this.buffer.getFeedLastModified(FEEDID));\n        \n        \n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.storage.lucenestorage.StorageBuffer.getFeedLastModified(String)'\n     */\n    public void testGetFeedLastModified() throws IOException, InterruptedException {\n        ServerBaseEntry e = createServerBaseEntry(ENTRYID,FEEDID);\n        e.setUpdated(new DateTime(System.currentTimeMillis()-200,0));\n        StorageEntryWrapper wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(FEEDID));\n        //test update\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-180,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.UPDATE);\n        this.buffer.addEntry(wrapper);\n        Long firstAddTimestamp = new Long(e.getUpdated().getValue());\n        assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-160,0));\n        assertFalse(\"updated after add\" ,e.getUpdated().equals(this.buffer.getFeedLastModified(FEEDID)));\n        \n        //insert for other feed\n        String otherID = \"someOtherFeedID\";\n        e.setFeedId(otherID);\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-140,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(otherID));\n        assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));\n        \n        assertTrue(firstAddTimestamp.equals(this.buffer.getFeedLastModified(FEEDID)));\n        this.buffer.addDeleted(e.getId(),FEEDID);\n        // time will be set inside the buffer\n        assertTrue(firstAddTimestamp < this.buffer.getFeedLastModified(FEEDID));\n        \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}