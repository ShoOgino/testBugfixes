{"path":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","commits":[{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCaseJ4.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","sourceNew":"    private void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCaseJ4.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCaseJ4.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","sourceNew":"    private void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCase.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCaseJ4.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","pathOld":"/dev/null","sourceNew":"    private void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCase.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","sourceNew":null,"sourceOld":"    private void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCase.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","sourceNew":null,"sourceOld":"    private void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCase.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","sourceNew":null,"sourceOld":"    private void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, LuceneTestCase.newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["43b04c27924fe393e38e9f0986e32c634f261859","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["43b04c27924fe393e38e9f0986e32c634f261859"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","43b04c27924fe393e38e9f0986e32c634f261859"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"43b04c27924fe393e38e9f0986e32c634f261859":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}