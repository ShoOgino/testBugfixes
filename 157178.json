{"path":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","sourceNew":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random.nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n      \taa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random.nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n      \taa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","sourceNew":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n      \taa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random.nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n      \taa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","sourceNew":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n      \taa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4","date":1413466868,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","sourceNew":null,"sourceOld":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doPrevSetBitLong(BitSet,OpenBitSet).mjava","sourceNew":null,"sourceOld":"  void doPrevSetBitLong(BitSet a, OpenBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      bb = (int) b.prevSetBit((long) (bb-1));\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}