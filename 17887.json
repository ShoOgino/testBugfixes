{"path":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#checkFieldValueOrdering(String,float).mjava","commits":[{"id":"12d992a6ff17cea2ad8190a850bbd64305123d06","date":1393449974,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#checkFieldValueOrdering(String,float).mjava","pathOld":"/dev/null","sourceNew":"  private void checkFieldValueOrdering(String rawJson, float fBoost) throws Exception {\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(rawJson), p);\n    assertEquals( 2, p.addCommands.size() );\n\n    SolrInputDocument d = p.addCommands.get(0).solrDoc;\n    assertEquals(2, d.getFieldNames().size());\n    assertEquals(\"1\", d.getFieldValue(\"id\"));\n    assertEquals(new Object[] {45L, 67L, 89L} , d.getFieldValues(\"f\").toArray());\n    assertEquals(0.0F, fBoost, d.getField(\"f\").getBoost());\n\n    d = p.addCommands.get(1).solrDoc;\n    assertEquals(1, d.getFieldNames().size());\n    assertEquals(\"2\", d.getFieldValue(\"id\"));\n\n    req.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","date":1393532551,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#checkFieldValueOrdering(String,float).mjava","pathOld":"/dev/null","sourceNew":"  private void checkFieldValueOrdering(String rawJson, float fBoost) throws Exception {\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(rawJson), p);\n    assertEquals( 2, p.addCommands.size() );\n\n    SolrInputDocument d = p.addCommands.get(0).solrDoc;\n    assertEquals(2, d.getFieldNames().size());\n    assertEquals(\"1\", d.getFieldValue(\"id\"));\n    assertEquals(new Object[] {45L, 67L, 89L} , d.getFieldValues(\"f\").toArray());\n    assertEquals(0.0F, fBoost, d.getField(\"f\").getBoost());\n\n    d = p.addCommands.get(1).solrDoc;\n    assertEquals(1, d.getFieldNames().size());\n    assertEquals(\"2\", d.getFieldValue(\"id\"));\n\n    req.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#checkFieldValueOrdering(String,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#checkFieldValueOrdering(String,float).mjava","sourceNew":"  private void checkFieldValueOrdering(String rawJson, float fBoost) throws Exception {\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(rawJson), p);\n    assertEquals( 2, p.addCommands.size() );\n\n    SolrInputDocument d = p.addCommands.get(0).solrDoc;\n    assertEquals(2, d.getFieldNames().size());\n    assertEquals(\"1\", d.getFieldValue(\"id\"));\n    assertEquals(new Object[] {45L, 67L, 89L} , d.getFieldValues(\"f\").toArray());\n\n    d = p.addCommands.get(1).solrDoc;\n    assertEquals(1, d.getFieldNames().size());\n    assertEquals(\"2\", d.getFieldValue(\"id\"));\n\n    req.close();\n  }\n\n","sourceOld":"  private void checkFieldValueOrdering(String rawJson, float fBoost) throws Exception {\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(rawJson), p);\n    assertEquals( 2, p.addCommands.size() );\n\n    SolrInputDocument d = p.addCommands.get(0).solrDoc;\n    assertEquals(2, d.getFieldNames().size());\n    assertEquals(\"1\", d.getFieldValue(\"id\"));\n    assertEquals(new Object[] {45L, 67L, 89L} , d.getFieldValues(\"f\").toArray());\n    assertEquals(0.0F, fBoost, d.getField(\"f\").getBoost());\n\n    d = p.addCommands.get(1).solrDoc;\n    assertEquals(1, d.getFieldNames().size());\n    assertEquals(\"2\", d.getFieldValue(\"id\"));\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"204f8269a4f7b5b254cc893f7ae9be8405854fcb","date":1545835182,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#checkFieldValueOrdering(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#checkFieldValueOrdering(String,float).mjava","sourceNew":"  private void checkFieldValueOrdering(String rawJson) throws Exception {\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(rawJson), p);\n    assertEquals( 2, p.addCommands.size() );\n\n    SolrInputDocument d = p.addCommands.get(0).solrDoc;\n    assertEquals(2, d.getFieldNames().size());\n    assertEquals(\"1\", d.getFieldValue(\"id\"));\n    assertArrayEquals(new Object[] {45L, 67L, 89L} , d.getFieldValues(\"f\").toArray());\n\n    d = p.addCommands.get(1).solrDoc;\n    assertEquals(1, d.getFieldNames().size());\n    assertEquals(\"2\", d.getFieldValue(\"id\"));\n\n    req.close();\n  }\n\n","sourceOld":"  private void checkFieldValueOrdering(String rawJson, float fBoost) throws Exception {\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(rawJson), p);\n    assertEquals( 2, p.addCommands.size() );\n\n    SolrInputDocument d = p.addCommands.get(0).solrDoc;\n    assertEquals(2, d.getFieldNames().size());\n    assertEquals(\"1\", d.getFieldValue(\"id\"));\n    assertEquals(new Object[] {45L, 67L, 89L} , d.getFieldValues(\"f\").toArray());\n\n    d = p.addCommands.get(1).solrDoc;\n    assertEquals(1, d.getFieldNames().size());\n    assertEquals(\"2\", d.getFieldValue(\"id\"));\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12d992a6ff17cea2ad8190a850bbd64305123d06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"204f8269a4f7b5b254cc893f7ae9be8405854fcb":["acd9883560fd89e6448b2b447302fe543040cd4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["12d992a6ff17cea2ad8190a850bbd64305123d06"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","12d992a6ff17cea2ad8190a850bbd64305123d06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["204f8269a4f7b5b254cc893f7ae9be8405854fcb"]},"commit2Childs":{"12d992a6ff17cea2ad8190a850bbd64305123d06":["acd9883560fd89e6448b2b447302fe543040cd4f","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"204f8269a4f7b5b254cc893f7ae9be8405854fcb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12d992a6ff17cea2ad8190a850bbd64305123d06","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"acd9883560fd89e6448b2b447302fe543040cd4f":["204f8269a4f7b5b254cc893f7ae9be8405854fcb"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}