{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testFunctionsOnDate().mjava","commits":[{"id":"64ff6b743fd4051da7ebb3d397d1ef80833a741a","date":1492023891,"type":1,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testFunctionsOnDate().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testFunctionsOnDate().mjava","sourceNew":"  @Test\n  public void testFunctionsOnDate() throws Exception {\n    Calendar calendar = new GregorianCalendar(2017,12,5, 23, 59);\n    calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    Date aDate = calendar.getTime();\n    testFunction(\"year(a)\", aDate, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", aDate, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", aDate, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", aDate, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", aDate, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", aDate, aDate.getTime());\n  }\n\n","sourceOld":"  @Test\n  public void testFunctionsOnDate() throws Exception {\n    Calendar calendar = new GregorianCalendar(2017,12,5, 23, 59);\n    calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    Date aDate = calendar.getTime();\n    testFunction(\"year(a)\", aDate, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", aDate, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", aDate, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", aDate, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", aDate, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", aDate, aDate.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b105a3b8014c239f50ed5ea326b5959d4c1a9bd","date":1492023892,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testFunctionsOnDate().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testFunctionsOnDate().mjava","sourceNew":"  @Test\n  public void testFunctionsOnDate() throws Exception {\n    Calendar calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"), Locale.ROOT);\n    calendar.set(2017, 12, 5, 23, 59);\n    Date aDate = calendar.getTime();\n    testFunction(\"year(a)\", aDate, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", aDate, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", aDate, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", aDate, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", aDate, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", aDate, aDate.getTime());\n  }\n\n","sourceOld":"  @Test\n  public void testFunctionsOnDate() throws Exception {\n    Calendar calendar = new GregorianCalendar(2017,12,5, 23, 59);\n    calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    Date aDate = calendar.getTime();\n    testFunction(\"year(a)\", aDate, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", aDate, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", aDate, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", aDate, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", aDate, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", aDate, aDate.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testFunctionsOnDate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFunctionsOnDate() throws Exception {\n    Calendar calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"), Locale.ROOT);\n    calendar.set(2017, 12, 5, 23, 59);\n    Date aDate = calendar.getTime();\n    testFunction(\"year(a)\", aDate, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", aDate, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", aDate, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", aDate, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", aDate, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", aDate, aDate.getTime());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6b105a3b8014c239f50ed5ea326b5959d4c1a9bd":["64ff6b743fd4051da7ebb3d397d1ef80833a741a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b105a3b8014c239f50ed5ea326b5959d4c1a9bd"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["6b105a3b8014c239f50ed5ea326b5959d4c1a9bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","64ff6b743fd4051da7ebb3d397d1ef80833a741a"],"6b105a3b8014c239f50ed5ea326b5959d4c1a9bd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}