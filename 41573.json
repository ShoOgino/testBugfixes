{"path":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","commits":[{"id":"627e70d5711ab39d080a080f089685268525f54d","date":1560754171,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private ByteBuffer fetchBlobAndVerify(String key, String url, String sha512) {\n    ByteBuffer byteBuffer = fetchFromUrl(key, url);\n    String computedDigest = sha512Digest(byteBuffer);\n    if (!computedDigest.equals(sha512)) {\n      throw new SolrException(SERVER_ERROR, StrUtils.formatString(INVALID_JAR_MSG, url, sha512, computedDigest));\n\n    }\n    return byteBuffer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99d6782cf9de8c5ffeb8d0b0f103b578205af068","date":1566878682,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","sourceNew":"  private ByteBuffer fetchBlobAndVerify(String key, String url, String sha256) throws IOException {\n    ByteBuffer byteBuffer = null;\n    if (sha256 != null) {\n      byteBuffer = getFromLocalFs(sha256);\n    }\n    if (byteBuffer == null) byteBuffer = getAndValidate(key, url, sha256);\n    return byteBuffer;\n  }\n\n","sourceOld":"  private ByteBuffer fetchBlobAndVerify(String key, String url, String sha512) {\n    ByteBuffer byteBuffer = fetchFromUrl(key, url);\n    String computedDigest = sha512Digest(byteBuffer);\n    if (!computedDigest.equals(sha512)) {\n      throw new SolrException(SERVER_ERROR, StrUtils.formatString(INVALID_JAR_MSG, url, sha512, computedDigest));\n\n    }\n    return byteBuffer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","sourceNew":"  private ByteBuffer fetchBlobAndVerify(String key, String url, String sha512) {\n    ByteBuffer byteBuffer = fetchFromUrl(key, url);\n    String computedDigest = sha512Digest(byteBuffer);\n    if (!computedDigest.equals(sha512)) {\n      throw new SolrException(SERVER_ERROR, StrUtils.formatString(INVALID_JAR_MSG, url, sha512, computedDigest));\n\n    }\n    return byteBuffer;\n  }\n\n","sourceOld":"  private ByteBuffer fetchBlobAndVerify(String key, String url, String sha256) throws IOException {\n    ByteBuffer byteBuffer = null;\n    if (sha256 != null) {\n      byteBuffer = getFromLocalFs(sha256);\n    }\n    if (byteBuffer == null) byteBuffer = getAndValidate(key, url, sha256);\n    return byteBuffer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#fetchBlobAndVerify(String,String,String).mjava","sourceNew":"  private ByteBuffer fetchBlobAndVerify(String key, String url, String sha512) {\n    ByteBuffer byteBuffer = fetchFromUrl(key, url);\n    String computedDigest = sha512Digest(byteBuffer);\n    if (!computedDigest.equals(sha512)) {\n      throw new SolrException(SERVER_ERROR, StrUtils.formatString(INVALID_JAR_MSG, url, sha512, computedDigest));\n\n    }\n    return byteBuffer;\n  }\n\n","sourceOld":"  private ByteBuffer fetchBlobAndVerify(String key, String url, String sha256) throws IOException {\n    ByteBuffer byteBuffer = null;\n    if (sha256 != null) {\n      byteBuffer = getFromLocalFs(sha256);\n    }\n    if (byteBuffer == null) byteBuffer = getAndValidate(key, url, sha256);\n    return byteBuffer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"627e70d5711ab39d080a080f089685268525f54d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["627e70d5711ab39d080a080f089685268525f54d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c44cc06c26e456fe9c215072b79fce30babe3975"],"b0b597c65628ca9e73913a07e81691f8229bae35":["99d6782cf9de8c5ffeb8d0b0f103b578205af068","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"627e70d5711ab39d080a080f089685268525f54d":["99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["627e70d5711ab39d080a080f089685268525f54d"],"c44cc06c26e456fe9c215072b79fce30babe3975":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}