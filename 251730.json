{"path":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testCreateTempFiles().mjava","commits":[{"id":"3019f3911bb78350685571486c3555df7cb8678c","date":1580917133,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testCreateTempFiles().mjava","pathOld":"/dev/null","sourceNew":"  public void testCreateTempFiles() throws IOException {\n    String file1;\n    try (Directory dir = new HdfsDirectory(directoryPath, directoryConf);\n        IndexOutput out = dir.createTempOutput(\"foo\", \"bar\", IOContext.DEFAULT)) {\n      out.writeByte((byte) 42);\n      file1 = out.getName();\n    }\n    assertTrue(file1.startsWith(\"foo_bar\"));\n    assertTrue(file1.endsWith(\".tmp\"));\n    // Create the directory again to force the counter to be reset\n    String file2;\n    try (Directory dir = new HdfsDirectory(directoryPath, directoryConf);\n        IndexOutput out = dir.createTempOutput(\"foo\", \"bar\", IOContext.DEFAULT)) {\n      out.writeByte((byte) 42);\n      file2 = out.getName();\n    }\n    assertTrue(file2.startsWith(\"foo_bar\"));\n    assertTrue(file2.endsWith(\".tmp\"));\n    assertNotEquals(file1, file2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3019f3911bb78350685571486c3555df7cb8678c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3019f3911bb78350685571486c3555df7cb8678c"]},"commit2Childs":{"3019f3911bb78350685571486c3555df7cb8678c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3019f3911bb78350685571486c3555df7cb8678c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}