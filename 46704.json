{"path":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ROOT)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":["5900dae52fbe93ce3a6f08ebe51bc74e04e783fd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ROOT)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ROOT)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ROOT)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ENGLISH)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5900dae52fbe93ce3a6f08ebe51bc74e04e783fd","date":1361566337,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml schema.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"schema.xml\".toUpperCase(Locale.ROOT)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase(Locale.ROOT)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":["5dc524639edfdfa4edfb67ae889c2b6029f9314c","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf","date":1416997673,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  @Test\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml schema.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"schema.xml\".toUpperCase(Locale.ROOT)));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5900dae52fbe93ce3a6f08ebe51bc74e04e783fd":["2acf500f78aa12b92e371fd89c719291986b6b90"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf":["5900dae52fbe93ce3a6f08ebe51bc74e04e783fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e56881a4ebc3438313e3c008a7124ba0f8ecc7bf"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"5900dae52fbe93ce3a6f08ebe51bc74e04e783fd":["e56881a4ebc3438313e3c008a7124ba0f8ecc7bf"],"c26f00b574427b55127e869b935845554afde1fa":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2acf500f78aa12b92e371fd89c719291986b6b90":["5900dae52fbe93ce3a6f08ebe51bc74e04e783fd","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}