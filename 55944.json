{"path":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesRewriteMethod#setUp().mjava","commits":[{"id":"2713584a660051cd646423be682771e3bbd99985","date":1425046322,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesRewriteMethod#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDocTermOrdsRewriteMethod#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    fieldName = random().nextBoolean() ? \"field\" : \"\"; // sometimes use an empty string as field name\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    List<String> terms = new ArrayList<>();\n    int num = atLeast(200);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", Integer.toString(i), Field.Store.NO));\n      int numTerms = random().nextInt(4);\n      for (int j = 0; j < numTerms; j++) {\n        String s = TestUtil.randomUnicodeString(random());\n        doc.add(newStringField(fieldName, s, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(fieldName, new BytesRef(s)));\n        terms.add(s);\n      }\n      writer.addDocument(doc);\n    }\n    \n    if (VERBOSE) {\n      // utf16 order\n      Collections.sort(terms);\n      System.out.println(\"UTF16 order:\");\n      for(String s : terms) {\n        System.out.println(\"  \" + UnicodeUtil.toHexString(s) + \" \" + s);\n      }\n    }\n    \n    int numDeletions = random().nextInt(num/10);\n    for (int i = 0; i < numDeletions; i++) {\n      writer.deleteDocuments(new Term(\"id\", Integer.toString(random().nextInt(num))));\n    }\n    \n    reader = writer.getReader();\n    searcher1 = newSearcher(reader);\n    searcher2 = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    fieldName = random().nextBoolean() ? \"field\" : \"\"; // sometimes use an empty string as field name\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    List<String> terms = new ArrayList<>();\n    int num = atLeast(200);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", Integer.toString(i), Field.Store.NO));\n      int numTerms = random().nextInt(4);\n      for (int j = 0; j < numTerms; j++) {\n        String s = TestUtil.randomUnicodeString(random());\n        doc.add(newStringField(fieldName, s, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(fieldName, new BytesRef(s)));\n        terms.add(s);\n      }\n      writer.addDocument(doc);\n    }\n    \n    if (VERBOSE) {\n      // utf16 order\n      Collections.sort(terms);\n      System.out.println(\"UTF16 order:\");\n      for(String s : terms) {\n        System.out.println(\"  \" + UnicodeUtil.toHexString(s) + \" \" + s);\n      }\n    }\n    \n    int numDeletions = random().nextInt(num/10);\n    for (int i = 0; i < numDeletions; i++) {\n      writer.deleteDocuments(new Term(\"id\", Integer.toString(random().nextInt(num))));\n    }\n    \n    reader = writer.getReader();\n    searcher1 = newSearcher(reader);\n    searcher2 = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesRewriteMethod#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDocTermOrdsRewriteMethod#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    fieldName = random().nextBoolean() ? \"field\" : \"\"; // sometimes use an empty string as field name\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    List<String> terms = new ArrayList<>();\n    int num = atLeast(200);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", Integer.toString(i), Field.Store.NO));\n      int numTerms = random().nextInt(4);\n      for (int j = 0; j < numTerms; j++) {\n        String s = TestUtil.randomUnicodeString(random());\n        doc.add(newStringField(fieldName, s, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(fieldName, new BytesRef(s)));\n        terms.add(s);\n      }\n      writer.addDocument(doc);\n    }\n    \n    if (VERBOSE) {\n      // utf16 order\n      Collections.sort(terms);\n      System.out.println(\"UTF16 order:\");\n      for(String s : terms) {\n        System.out.println(\"  \" + UnicodeUtil.toHexString(s) + \" \" + s);\n      }\n    }\n    \n    int numDeletions = random().nextInt(num/10);\n    for (int i = 0; i < numDeletions; i++) {\n      writer.deleteDocuments(new Term(\"id\", Integer.toString(random().nextInt(num))));\n    }\n    \n    reader = writer.getReader();\n    searcher1 = newSearcher(reader);\n    searcher2 = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    fieldName = random().nextBoolean() ? \"field\" : \"\"; // sometimes use an empty string as field name\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    List<String> terms = new ArrayList<>();\n    int num = atLeast(200);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", Integer.toString(i), Field.Store.NO));\n      int numTerms = random().nextInt(4);\n      for (int j = 0; j < numTerms; j++) {\n        String s = TestUtil.randomUnicodeString(random());\n        doc.add(newStringField(fieldName, s, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(fieldName, new BytesRef(s)));\n        terms.add(s);\n      }\n      writer.addDocument(doc);\n    }\n    \n    if (VERBOSE) {\n      // utf16 order\n      Collections.sort(terms);\n      System.out.println(\"UTF16 order:\");\n      for(String s : terms) {\n        System.out.println(\"  \" + UnicodeUtil.toHexString(s) + \" \" + s);\n      }\n    }\n    \n    int numDeletions = random().nextInt(num/10);\n    for (int i = 0; i < numDeletions; i++) {\n      writer.deleteDocuments(new Term(\"id\", Integer.toString(random().nextInt(num))));\n    }\n    \n    reader = writer.getReader();\n    searcher1 = newSearcher(reader);\n    searcher2 = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2713584a660051cd646423be682771e3bbd99985"],"2713584a660051cd646423be682771e3bbd99985":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2713584a660051cd646423be682771e3bbd99985"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2713584a660051cd646423be682771e3bbd99985":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2713584a660051cd646423be682771e3bbd99985"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}