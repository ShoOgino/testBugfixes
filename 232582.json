{"path":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","commits":[{"id":"056868364d4e4a9ab9351ae5cc55e0506fe19769","date":1473148338,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","sourceOld":"  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19eeb5bbd032a02cb82a253c4c9ae35863ea2dc","date":1591973782,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXWriter[XLSXResponseWriter]#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","sourceOld":"  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        // normalize to a collection\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        // normalize to first value\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"056868364d4e4a9ab9351ae5cc55e0506fe19769":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89424def13674ea17829b41c5883c54ecc31a132"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"c19eeb5bbd032a02cb82a253c4c9ae35863ea2dc":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c19eeb5bbd032a02cb82a253c4c9ae35863ea2dc"],"89424def13674ea17829b41c5883c54ecc31a132":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","056868364d4e4a9ab9351ae5cc55e0506fe19769"]},"commit2Childs":{"056868364d4e4a9ab9351ae5cc55e0506fe19769":["89424def13674ea17829b41c5883c54ecc31a132"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["056868364d4e4a9ab9351ae5cc55e0506fe19769","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["c19eeb5bbd032a02cb82a253c4c9ae35863ea2dc"],"c19eeb5bbd032a02cb82a253c4c9ae35863ea2dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}