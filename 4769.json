{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","commits":[{"id":"10d7742d5e77046179aac47b48b3e254d1621b44","date":1219897795,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#rumCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw,\n              Map<String, String> variables) {\n    String command = reqParams.command;\n    if (command.equals(\"full-import\")) {\n      doFullImport(sw, reqParams, variables);\n    } else if (command.equals(DELTA_IMPORT_CMD)) {\n      doDeltaImport(sw, reqParams, variables);\n    } else if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null)\n        docBuilder.abort();\n    }\n  }\n\n","sourceOld":"  void rumCmd(RequestParams reqParams, SolrWriter sw,\n              Map<String, String> variables) {\n    String command = reqParams.command;\n    if (command.equals(\"full-import\")) {\n      doFullImport(sw, reqParams, variables);\n    } else if (command.equals(DELTA_IMPORT_CMD)) {\n      doDeltaImport(sw, reqParams, variables);\n    } else if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null)\n        docBuilder.abort();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f41b3c2ffecbc283ba0b4d8a0ba9fd10df0e7b5","date":1221922134,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw,\n              Map<String, String> variables) {\n    String command = reqParams.command;\n    Date lastModified = sw.loadIndexStartTime();\n    setLastIndexTime(lastModified);\n    if (command.equals(\"full-import\")) {\n      doFullImport(sw, reqParams, variables);\n    } else if (command.equals(DELTA_IMPORT_CMD)) {\n      doDeltaImport(sw, reqParams, variables);\n    } else if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null)\n        docBuilder.abort();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw,\n              Map<String, String> variables) {\n    String command = reqParams.command;\n    if (command.equals(\"full-import\")) {\n      doFullImport(sw, reqParams, variables);\n    } else if (command.equals(DELTA_IMPORT_CMD)) {\n      doDeltaImport(sw, reqParams, variables);\n    } else if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null)\n        docBuilder.abort();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b1ee536d334cbe10d86672b8fc5e095cc6ec180","date":1224744896,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (importLock.isLocked())\n      return;\n    importLock.lock();\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw,\n              Map<String, String> variables) {\n    String command = reqParams.command;\n    Date lastModified = sw.loadIndexStartTime();\n    setLastIndexTime(lastModified);\n    if (command.equals(\"full-import\")) {\n      doFullImport(sw, reqParams, variables);\n    } else if (command.equals(DELTA_IMPORT_CMD)) {\n      doDeltaImport(sw, reqParams, variables);\n    } else if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null)\n        docBuilder.abort();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f50f4934fb2ebcf0c3a359cc848f71133c4db0f0","date":1225184714,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (importLock.tryLock())\n      return;\n    importLock.lock();\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (importLock.isLocked())\n      return;\n    importLock.lock();\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50d263eeabf6b882b8fb1a62c55d83dc2accc1b2","date":1225186233,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (importLock.tryLock())\n      return;\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (importLock.tryLock())\n      return;\n    importLock.lock();\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36478a474566f52276a5c554064bd49aa406e6a6","date":1225189628,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (!importLock.tryLock())\n      return;\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (importLock.tryLock())\n      return;\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5008556bf077b58087de33d0bf40c1c6cc021187","date":1225264602,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock())\n      return;\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    if (!importLock.tryLock())\n      return;\n    try {\n      String command = reqParams.command;\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      } else if (command.equals(ABORT_CMD)) {\n        if (docBuilder != null)\n          docBuilder.abort();\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db6dfac30d1553e9356900c2b76b768139483a62","date":1230619368,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock())\n      return;\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock())\n      return;\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"10d7742d5e77046179aac47b48b3e254d1621b44":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5008556bf077b58087de33d0bf40c1c6cc021187":["36478a474566f52276a5c554064bd49aa406e6a6"],"50d263eeabf6b882b8fb1a62c55d83dc2accc1b2":["f50f4934fb2ebcf0c3a359cc848f71133c4db0f0"],"1b1ee536d334cbe10d86672b8fc5e095cc6ec180":["9f41b3c2ffecbc283ba0b4d8a0ba9fd10df0e7b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"36478a474566f52276a5c554064bd49aa406e6a6":["50d263eeabf6b882b8fb1a62c55d83dc2accc1b2"],"db6dfac30d1553e9356900c2b76b768139483a62":["5008556bf077b58087de33d0bf40c1c6cc021187"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f50f4934fb2ebcf0c3a359cc848f71133c4db0f0":["1b1ee536d334cbe10d86672b8fc5e095cc6ec180"],"9f41b3c2ffecbc283ba0b4d8a0ba9fd10df0e7b5":["10d7742d5e77046179aac47b48b3e254d1621b44"]},"commit2Childs":{"10d7742d5e77046179aac47b48b3e254d1621b44":["9f41b3c2ffecbc283ba0b4d8a0ba9fd10df0e7b5"],"5008556bf077b58087de33d0bf40c1c6cc021187":["db6dfac30d1553e9356900c2b76b768139483a62"],"50d263eeabf6b882b8fb1a62c55d83dc2accc1b2":["36478a474566f52276a5c554064bd49aa406e6a6"],"1b1ee536d334cbe10d86672b8fc5e095cc6ec180":["f50f4934fb2ebcf0c3a359cc848f71133c4db0f0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["10d7742d5e77046179aac47b48b3e254d1621b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36478a474566f52276a5c554064bd49aa406e6a6":["5008556bf077b58087de33d0bf40c1c6cc021187"],"db6dfac30d1553e9356900c2b76b768139483a62":[],"f50f4934fb2ebcf0c3a359cc848f71133c4db0f0":["50d263eeabf6b882b8fb1a62c55d83dc2accc1b2"],"9f41b3c2ffecbc283ba0b4d8a0ba9fd10df0e7b5":["1b1ee536d334cbe10d86672b8fc5e095cc6ec180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db6dfac30d1553e9356900c2b76b768139483a62","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}