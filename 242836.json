{"path":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#indexDoc(List[CloudJettyRunner],Object...).mjava","commits":[{"id":"1cfa38e36fa296bb93d77df7d5556257dffa4535","date":1362635543,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#indexDoc(List[CloudJettyRunner],Object...).mjava","pathOld":"/dev/null","sourceNew":"  protected void indexDoc(List<CloudJettyRunner> skipServers, Object... fields) throws IOException,\n      SolrServerException {\n    SolrInputDocument doc = new SolrInputDocument();\n    \n    addFields(doc, fields);\n    addFields(doc, \"rnd_b\", true);\n    \n    controlClient.add(doc);\n    \n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (CloudJettyRunner skip : skipServers) {\n      params.add(\"test.distrib.skip.servers\", skip.url + \"/\");\n    }\n    ureq.setParams(params);\n    ureq.process(cloudClient);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a02c54923e5f4de08097fa9028e09e8cf5caa82","date":1475573567,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#indexDoc(List[CloudJettyRunner],Object...).mjava","sourceNew":null,"sourceOld":"  protected void indexDoc(List<CloudJettyRunner> skipServers, Object... fields) throws IOException,\n      SolrServerException {\n    SolrInputDocument doc = new SolrInputDocument();\n    \n    addFields(doc, fields);\n    addFields(doc, \"rnd_b\", true);\n    \n    controlClient.add(doc);\n    \n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (CloudJettyRunner skip : skipServers) {\n      params.add(\"test.distrib.skip.servers\", skip.url + \"/\");\n    }\n    ureq.setParams(params);\n    ureq.process(cloudClient);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#indexDoc(List[CloudJettyRunner],Object...).mjava","sourceNew":null,"sourceOld":"  protected void indexDoc(List<CloudJettyRunner> skipServers, Object... fields) throws IOException,\n      SolrServerException {\n    SolrInputDocument doc = new SolrInputDocument();\n    \n    addFields(doc, fields);\n    addFields(doc, \"rnd_b\", true);\n    \n    controlClient.add(doc);\n    \n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (CloudJettyRunner skip : skipServers) {\n      params.add(\"test.distrib.skip.servers\", skip.url + \"/\");\n    }\n    ureq.setParams(params);\n    ureq.process(cloudClient);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#indexDoc(List[CloudJettyRunner],Object...).mjava","sourceNew":null,"sourceOld":"  protected void indexDoc(List<CloudJettyRunner> skipServers, Object... fields) throws IOException,\n      SolrServerException {\n    SolrInputDocument doc = new SolrInputDocument();\n    \n    addFields(doc, fields);\n    addFields(doc, \"rnd_b\", true);\n    \n    controlClient.add(doc);\n    \n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (CloudJettyRunner skip : skipServers) {\n      params.add(\"test.distrib.skip.servers\", skip.url + \"/\");\n    }\n    ureq.setParams(params);\n    ureq.process(cloudClient);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["1cfa38e36fa296bb93d77df7d5556257dffa4535","5a02c54923e5f4de08097fa9028e09e8cf5caa82"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["1cfa38e36fa296bb93d77df7d5556257dffa4535","1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1967bed916cc89da82a1c2085f27976da6d08cbd"]},"commit2Childs":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["1967bed916cc89da82a1c2085f27976da6d08cbd","5a02c54923e5f4de08097fa9028e09e8cf5caa82","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}