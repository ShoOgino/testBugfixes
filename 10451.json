{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","commits":[{"id":"0e748132a1ca480bd503ee795aee58f5765809a6","date":1331838761,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","sourceNew":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","sourceNew":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","sourceNew":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35fb92999b9df7df2ce2b35b83a044cbede61f45","date":1429037650,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testIllegalPositions().mjava","sourceNew":null,"sourceOld":"  public void testIllegalPositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE);\n    Token t2 = new Token(\"bar\", 4, 7);\n    t2.setPositionIncrement(200);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1, t2 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    try {\n      iw.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected exception\n    }\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["0e748132a1ca480bd503ee795aee58f5765809a6"],"0e748132a1ca480bd503ee795aee58f5765809a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35fb92999b9df7df2ce2b35b83a044cbede61f45"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e748132a1ca480bd503ee795aee58f5765809a6"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"0e748132a1ca480bd503ee795aee58f5765809a6":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}