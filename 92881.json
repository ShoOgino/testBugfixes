{"path":"solr/core/src/java/org/apache/solr/metrics/reporters/SolrJmxReporter.MetricsMapListener#onGaugeAdded(String,Gauge[#]).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/SolrJmxReporter.MetricsMapListener#onGaugeAdded(String,Gauge[#]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      if (!(gauge instanceof MetricsMap)) {\n        return;\n      }\n      synchronized (server) {\n        try {\n          ObjectName objectName = nameFactory.createName(\"gauges\", nameFactory.getDomain(), name);\n          log.debug(\"REGISTER \" + objectName);\n          if (registered.contains(objectName) || server.isRegistered(objectName)) {\n            log.debug(\"-unregistering old instance of \" + objectName);\n            try {\n              server.unregisterMBean(objectName);\n            } catch (InstanceNotFoundException e) {\n              // ignore\n            }\n          }\n          // some MBean servers re-write object name to include additional properties\n          ObjectInstance instance = server.registerMBean(gauge, objectName);\n          if (instance != null) {\n            registered.add(instance.getObjectName());\n          }\n        } catch (Exception e) {\n          log.warn(\"bean registration error\", e);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/SolrJmxReporter.MetricsMapListener#onGaugeAdded(String,Gauge[#]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      if (!(gauge instanceof MetricsMap)) {\n        return;\n      }\n      synchronized (server) {\n        try {\n          ObjectName objectName = nameFactory.createName(\"gauges\", nameFactory.getDomain(), name);\n          log.debug(\"REGISTER \" + objectName);\n          if (registered.contains(objectName) || server.isRegistered(objectName)) {\n            log.debug(\"-unregistering old instance of \" + objectName);\n            try {\n              server.unregisterMBean(objectName);\n            } catch (InstanceNotFoundException e) {\n              // ignore\n            }\n          }\n          // some MBean servers re-write object name to include additional properties\n          ObjectInstance instance = server.registerMBean(gauge, objectName);\n          if (instance != null) {\n            registered.add(instance.getObjectName());\n          }\n        } catch (Exception e) {\n          log.warn(\"bean registration error\", e);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"122c889ac8944e19f984ba4306b02a8742e914a7","date":1502707353,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/SolrJmxReporter.MetricsMapListener#onGaugeAdded(String,Gauge[#]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      if (!(gauge instanceof MetricsMap)) {\n        return;\n      }\n      synchronized (server) {\n        try {\n          ObjectName objectName = nameFactory.createName(\"gauges\", nameFactory.getDomain(), name);\n          log.debug(\"REGISTER \" + objectName);\n          if (registered.contains(objectName) || server.isRegistered(objectName)) {\n            log.debug(\"-unregistering old instance of \" + objectName);\n            try {\n              server.unregisterMBean(objectName);\n            } catch (InstanceNotFoundException e) {\n              // ignore\n            }\n          }\n          // some MBean servers re-write object name to include additional properties\n          ObjectInstance instance = server.registerMBean(gauge, objectName);\n          if (instance != null) {\n            registered.add(instance.getObjectName());\n          }\n        } catch (Exception e) {\n          log.warn(\"bean registration error\", e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c00aac053fdd75193eb8b6d45b64c26c3b586d5b","date":1503143818,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/SolrJmxReporter.MetricsMapListener#onGaugeAdded(String,Gauge[#]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      if (!(gauge instanceof MetricsMap)) {\n        return;\n      }\n      synchronized (server) {\n        try {\n          ObjectName objectName = nameFactory.createName(\"gauges\", nameFactory.getDomain(), name);\n          log.debug(\"REGISTER \" + objectName);\n          if (registered.contains(objectName) || server.isRegistered(objectName)) {\n            log.debug(\"-unregistering old instance of \" + objectName);\n            try {\n              server.unregisterMBean(objectName);\n            } catch (InstanceNotFoundException e) {\n              // ignore\n            }\n          }\n          // some MBean servers re-write object name to include additional properties\n          ObjectInstance instance = server.registerMBean(gauge, objectName);\n          if (instance != null) {\n            registered.add(instance.getObjectName());\n          }\n        } catch (Exception e) {\n          log.warn(\"bean registration error\", e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c00aac053fdd75193eb8b6d45b64c26c3b586d5b":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","122c889ac8944e19f984ba4306b02a8742e914a7"],"122c889ac8944e19f984ba4306b02a8742e914a7":["816521ebaad5add9cb96bb88c577394e2938c40b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["122c889ac8944e19f984ba4306b02a8742e914a7"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b"],"c00aac053fdd75193eb8b6d45b64c26c3b586d5b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"122c889ac8944e19f984ba4306b02a8742e914a7":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"816521ebaad5add9cb96bb88c577394e2938c40b":["122c889ac8944e19f984ba4306b02a8742e914a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}