{"path":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","commits":[{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"/dev/null","sourceNew":"  protected Weight createWeight(Searcher searcher) {\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"917a0c943aa5659b50fffad7167c838653bd809d","date":1042572030,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  protected Weight createWeight(Searcher searcher) {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.elementAt(0);\n      return new TermQuery(term).createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  protected Weight createWeight(Searcher searcher) {\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53bfe453eca2201fdccfb5aede25065f10acc00e","date":1042581450,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  protected Weight createWeight(Searcher searcher) {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.elementAt(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  protected Weight createWeight(Searcher searcher) {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.elementAt(0);\n      return new TermQuery(term).createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402061809f3a4629ea0c449e33e9f94a9772f3c3","date":1113967712,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  protected Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.elementAt(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  protected Weight createWeight(Searcher searcher) {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.elementAt(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19f758d6efad251890e720eb5370329f6ab5b509","date":1217253519,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  protected Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  protected Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.elementAt(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createQueryWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createQueryWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  protected Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createQueryWeight(Searcher).mjava","sourceNew":"  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createQueryWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = (Term)terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"486cfd5a3f7481938475c113415d896f7a74a4a9","date":1256682581,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["ef82ff03e4016c705811b2658e81471a645c0e49"],"19f758d6efad251890e720eb5370329f6ab5b509":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["53bfe453eca2201fdccfb5aede25065f10acc00e"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ef82ff03e4016c705811b2658e81471a645c0e49":["fe941135bdfc28c81e20b4d21422f8726af34925"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"53bfe453eca2201fdccfb5aede25065f10acc00e":["917a0c943aa5659b50fffad7167c838653bd809d"],"052fac7830290bd38a04cddee1a121ee07656b56":["19f758d6efad251890e720eb5370329f6ab5b509"],"917a0c943aa5659b50fffad7167c838653bd809d":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["486cfd5a3f7481938475c113415d896f7a74a4a9"]},"commit2Childs":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"19f758d6efad251890e720eb5370329f6ab5b509":["052fac7830290bd38a04cddee1a121ee07656b56"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["19f758d6efad251890e720eb5370329f6ab5b509"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["917a0c943aa5659b50fffad7167c838653bd809d"],"ef82ff03e4016c705811b2658e81471a645c0e49":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"fe941135bdfc28c81e20b4d21422f8726af34925":["ef82ff03e4016c705811b2658e81471a645c0e49"],"53bfe453eca2201fdccfb5aede25065f10acc00e":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"917a0c943aa5659b50fffad7167c838653bd809d":["53bfe453eca2201fdccfb5aede25065f10acc00e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}