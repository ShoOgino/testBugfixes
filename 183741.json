{"path":"solr/core/src/java/org/apache/solr/core/backup/repository/BackupRepository#getBackupLocation(String).mjava","commits":[{"id":"4c623a7f72be34d6c45bee682028c50327d9e4b7","date":1467791293,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/backup/repository/BackupRepository#getBackupLocation(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method returns the location where the backup should be stored (or restored from).\n   *\n   * @param override The location parameter supplied by the user.\n   * @return If <code>override</code> is not null then return the same value\n   *         Otherwise return the default configuration value for the {@linkplain CoreAdminParams#BACKUP_LOCATION} parameter.\n   */\n  default String getBackupLocation(String override) {\n    return Optional.ofNullable(override).orElse(getConfigProperty(CoreAdminParams.BACKUP_LOCATION));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/backup/repository/BackupRepository#getBackupLocation(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method returns the location where the backup should be stored (or restored from).\n   *\n   * @param override The location parameter supplied by the user.\n   * @return If <code>override</code> is not null then return the same value\n   *         Otherwise return the default configuration value for the {@linkplain CoreAdminParams#BACKUP_LOCATION} parameter.\n   */\n  default String getBackupLocation(String override) {\n    return Optional.ofNullable(override).orElse(getConfigProperty(CoreAdminParams.BACKUP_LOCATION));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58dba38d0c9777f300cca9dd3c150fe2d244742","date":1599661188,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/backup/repository/BackupRepository#getBackupLocation(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/backup/repository/BackupRepository#getBackupLocation(String).mjava","sourceNew":"  /**\n   * This method returns the location where the backup should be stored (or restored from).\n   *\n   * @param override The location parameter supplied by the user.\n   * @return If <code>override</code> is not null then return the same value\n   *         Otherwise return the default configuration value for the {@linkplain CoreAdminParams#BACKUP_LOCATION} parameter.\n   */\n  default String getBackupLocation(String override) {\n    // If override is null and default backup location is unset, what do we do?\n    return override != null ? override : getConfigProperty(CoreAdminParams.BACKUP_LOCATION);\n  }\n\n","sourceOld":"  /**\n   * This method returns the location where the backup should be stored (or restored from).\n   *\n   * @param override The location parameter supplied by the user.\n   * @return If <code>override</code> is not null then return the same value\n   *         Otherwise return the default configuration value for the {@linkplain CoreAdminParams#BACKUP_LOCATION} parameter.\n   */\n  default String getBackupLocation(String override) {\n    return Optional.ofNullable(override).orElse(getConfigProperty(CoreAdminParams.BACKUP_LOCATION));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c623a7f72be34d6c45bee682028c50327d9e4b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d58dba38d0c9777f300cca9dd3c150fe2d244742":["4c623a7f72be34d6c45bee682028c50327d9e4b7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4c623a7f72be34d6c45bee682028c50327d9e4b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d58dba38d0c9777f300cca9dd3c150fe2d244742"]},"commit2Childs":{"4c623a7f72be34d6c45bee682028c50327d9e4b7":["d58dba38d0c9777f300cca9dd3c150fe2d244742","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c623a7f72be34d6c45bee682028c50327d9e4b7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d58dba38d0c9777f300cca9dd3c150fe2d244742":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}