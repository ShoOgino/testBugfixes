{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResult#toString(String).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResult#toString(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResult#toString(String).mjava","sourceNew":"  /**\n   * String representation of this facet result.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   * @see #toString()\n   */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder();\n    String nl = \"\";\n    \n    // request\n    if (this.facetRequest != null) {\n      sb.append(nl).append(prefix).append(\"Request: \").append(\n          this.facetRequest.toString());\n      nl = \"\\n\";\n    }\n    \n    // total facets\n    sb.append(nl).append(prefix).append(\"Num valid Descendants (up to specified depth): \").append(\n        this.numValidDescendants);\n    nl = \"\\n\";\n    \n    // result node\n    if (this.rootNode != null) {\n      sb.append(nl).append(this.rootNode.toString(prefix + \"\\t\"));\n    }\n    \n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * String representation of this facet result.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   * @see #toString()\n   */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder();\n    String nl = \"\";\n    \n    // request\n    if (this.facetRequest != null) {\n      sb.append(nl).append(prefix).append(\"Request: \").append(\n          this.facetRequest.toString());\n      nl = \"\\n\";\n    }\n    \n    // total facets\n    sb.append(nl).append(prefix).append(\"Num valid Descendants (up to specified depth): \").append(\n        this.numValidDescendants);\n    nl = \"\\n\";\n    \n    // result node\n    if (this.rootNode != null) {\n      sb.append(nl).append(this.rootNode.toString(prefix + \"\\t\"));\n    }\n    \n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResult#toString(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * String representation of this facet result.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   * @see #toString()\n   */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder();\n    String nl = \"\";\n    \n    // request\n    if (this.facetRequest != null) {\n      sb.append(nl).append(prefix).append(\"Request: \").append(\n          this.facetRequest.toString());\n      nl = \"\\n\";\n    }\n    \n    // total facets\n    sb.append(nl).append(prefix).append(\"Num valid Descendants (up to specified depth): \").append(\n        this.numValidDescendants);\n    nl = \"\\n\";\n    \n    // result node\n    if (this.rootNode != null) {\n      sb.append(nl).append(this.rootNode.toString(prefix + \"\\t\"));\n    }\n    \n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResult#toString(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * String representation of this facet result.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   * @see #toString()\n   */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder();\n    String nl = \"\";\n    \n    // request\n    if (this.facetRequest != null) {\n      sb.append(nl).append(prefix).append(\"Request: \").append(\n          this.facetRequest.toString());\n      nl = \"\\n\";\n    }\n    \n    // total facets\n    sb.append(nl).append(prefix).append(\"Num valid Descendants (up to specified depth): \").append(\n        this.numValidDescendants);\n    nl = \"\\n\";\n    \n    // result node\n    if (this.rootNode != null) {\n      sb.append(nl).append(this.rootNode.toString(prefix + \"\\t\"));\n    }\n    \n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["607428da722dcb3e86bbd11c63de8986e6275c36","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}