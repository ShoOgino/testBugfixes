{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","commits":[{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"/dev/null","sourceNew":"  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f4cae61e16730201371ab7e9912721c19324e7","date":1303199575,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","sourceNew":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    return true;\n  }\n\n","sourceOld":"  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"/dev/null","sourceNew":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"/dev/null","sourceNew":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32f306edd62f81390a6e263e8b913f089f3e98a1","date":1305615519,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","sourceNew":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    peakDelta = Math.max(peakDelta, delta);\n    \n    return true;\n  }\n\n","sourceOld":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","sourceNew":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    peakDelta = Math.max(peakDelta, delta);\n    \n    return true;\n  }\n\n","sourceOld":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"/dev/null","sourceNew":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    peakDelta = Math.max(peakDelta, delta);\n    \n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#updatePeaks(long).mjava","sourceNew":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    peakDelta = Math.max(peakDelta, delta);\n    \n    return true;\n  }\n\n","sourceOld":"  // only for asserts\n  private boolean updatePeaks(long delta) {\n    peakActiveBytes = Math.max(peakActiveBytes, activeBytes);\n    peakFlushBytes = Math.max(peakFlushBytes, flushBytes);\n    peakNetBytes = Math.max(peakNetBytes, netBytes());\n    peakDelta = Math.max(peakDelta, delta);\n    \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","32f306edd62f81390a6e263e8b913f089f3e98a1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32f306edd62f81390a6e263e8b913f089f3e98a1"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f4cae61e16730201371ab7e9912721c19324e7"],"f6f4cae61e16730201371ab7e9912721c19324e7":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["f6f4cae61e16730201371ab7e9912721c19324e7"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["c3a8a449466c1ff7ce2274fe73dab487256964b4","3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["32f306edd62f81390a6e263e8b913f089f3e98a1","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"f6f4cae61e16730201371ab7e9912721c19324e7":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}