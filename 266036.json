{"path":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#read(Reader,char[],int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#read(Reader,char[],int,int).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#read(Reader,char[],int,int).mjava","sourceNew":"  // TODO: refactor to a shared readFully somewhere\n  // (NGramTokenizer does this too):\n  /** commons-io's readFully, but without bugs if offset != 0 */\n  private static int read(Reader input, char[] buffer, int offset, int length) throws IOException {\n    assert length >= 0 : \"length must not be negative: \" + length;\n \n    int remaining = length;\n    while ( remaining > 0 ) {\n      int location = length - remaining;\n      int count = input.read( buffer, offset + location, remaining );\n      if ( -1 == count ) { // EOF\n        break;\n      }\n      remaining -= count;\n    }\n    return length - remaining;\n  }\n\n","sourceOld":"  // TODO: refactor to a shared readFully somewhere\n  // (NGramTokenizer does this too):\n  /** commons-io's readFully, but without bugs if offset != 0 */\n  private static int read(Reader input, char[] buffer, int offset, int length) throws IOException {\n    assert length >= 0 : \"length must not be negative: \" + length;\n \n    int remaining = length;\n    while ( remaining > 0 ) {\n      int location = length - remaining;\n      int count = input.read( buffer, offset + location, remaining );\n      if ( -1 == count ) { // EOF\n        break;\n      }\n      remaining -= count;\n    }\n    return length - remaining;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}