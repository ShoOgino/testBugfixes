{"path":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","commits":[{"id":"6d061c6ac0252e445714563a37eb8aa9816ce369","date":1341880528,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DefaultCodecFactory#create(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene40Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Codec create(final IndexSchema schema) {\n    return new Lucene40Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene40Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene40Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"879f5e74b68e6faa45251db337bb1e1a9e9be647","date":1350008268,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene41Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene40Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene41Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene40Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene41Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene40Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","date":1358793943,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      // nocommit: dv too\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene41Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"caa40272511a69bd4ad04b8242ae420932f5799b","date":1359341326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      // TODO: when dv support is added to solr, add it here too\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      // nocommit: dv too\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","date":1359743129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene41Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      // TODO: when dv support is added to solr, add it here too\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String docValuesFormatName = fieldOrNull.getType().getDocValuesFormat();\n        if (docValuesFormatName != null) {\n          return DocValuesFormat.forName(docValuesFormatName);\n        }\n        return super.getDocValuesFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      // TODO: when dv support is added to solr, add it here too\n    };\n  }\n\n","bugFix":null,"bugIntro":["13c0d2271b68b77948ffb1638422f718c79778c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String docValuesFormatName = fieldOrNull.getType().getDocValuesFormat();\n        if (docValuesFormatName != null) {\n          return DocValuesFormat.forName(docValuesFormatName);\n        }\n        return super.getDocValuesFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      // TODO: when dv support is added to solr, add it here too\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SchemaCodecFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = core.getLatestSchema().getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        final SchemaField fieldOrNull = core.getLatestSchema().getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String docValuesFormatName = fieldOrNull.getType().getDocValuesFormat();\n        if (docValuesFormatName != null) {\n          return DocValuesFormat.forName(docValuesFormatName);\n        }\n        return super.getDocValuesFormatForField(field);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    codec = new Lucene42Codec() {\n      @Override\n      public PostingsFormat getPostingsFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String postingsFormatName = fieldOrNull.getType().getPostingsFormat();\n        if (postingsFormatName != null) {\n          return PostingsFormat.forName(postingsFormatName);\n        }\n        return super.getPostingsFormatForField(field);\n      }\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        final SchemaField fieldOrNull = schema.getFieldOrNull(field);\n        if (fieldOrNull == null) {\n          throw new IllegalArgumentException(\"no such field \" + field);\n        }\n        String docValuesFormatName = fieldOrNull.getType().getDocValuesFormat();\n        if (docValuesFormatName != null) {\n          return DocValuesFormat.forName(docValuesFormatName);\n        }\n        return super.getDocValuesFormatForField(field);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["13c0d2271b68b77948ffb1638422f718c79778c0"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"caa40272511a69bd4ad04b8242ae420932f5799b":["3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["6d061c6ac0252e445714563a37eb8aa9816ce369","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"879f5e74b68e6faa45251db337bb1e1a9e9be647":["6d061c6ac0252e445714563a37eb8aa9816ce369"],"08970e5b8411182a29412c177eff67ec1110095b":["73bb5a57dc75b54a39494f99986599cae7dff417"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["6d061c6ac0252e445714563a37eb8aa9816ce369","879f5e74b68e6faa45251db337bb1e1a9e9be647"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6d061c6ac0252e445714563a37eb8aa9816ce369"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","caa40272511a69bd4ad04b8242ae420932f5799b"],"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["d4d69c535930b5cce125cff868d40f6373dc27d4","73bb5a57dc75b54a39494f99986599cae7dff417"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6d061c6ac0252e445714563a37eb8aa9816ce369"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6d061c6ac0252e445714563a37eb8aa9816ce369":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08970e5b8411182a29412c177eff67ec1110095b"],"73bb5a57dc75b54a39494f99986599cae7dff417":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"caa40272511a69bd4ad04b8242ae420932f5799b":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"879f5e74b68e6faa45251db337bb1e1a9e9be647":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"08970e5b8411182a29412c177eff67ec1110095b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":["caa40272511a69bd4ad04b8242ae420932f5799b"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","6d061c6ac0252e445714563a37eb8aa9816ce369"],"6d061c6ac0252e445714563a37eb8aa9816ce369":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","879f5e74b68e6faa45251db337bb1e1a9e9be647","c7492bcb52be51e55d596134b95b2e53cc4ffb91","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"73bb5a57dc75b54a39494f99986599cae7dff417":["08970e5b8411182a29412c177eff67ec1110095b","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","aba371508186796cc6151d8223a5b4e16d02e26e","95303ff3749680c743b9425f9cf99e6e4065e8a8","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}