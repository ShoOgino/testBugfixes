{"path":"backwards/src/java/org/apache/lucene/search/FieldCacheImpl.Cache#get(IndexReader,Entry).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/FieldCacheImpl.Cache#get(IndexReader,Entry).mjava","pathOld":"/dev/null","sourceNew":"    public Object get(IndexReader reader, Entry key) throws IOException {\n      Map<Entry,Object> innerCache;\n      Object value;\n      final Object readerKey = reader.getFieldCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          innerCache = new HashMap<Entry,Object>();\n          readerCache.put(readerKey, innerCache);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            // Only check if key.custom (the parser) is\n            // non-null; else, we check twice for a single\n            // call to FieldCache.getXXX\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/FieldCacheImpl.Cache#get(IndexReader,Entry).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/FieldCacheImpl.Cache#get(IndexReader,Entry).mjava","sourceNew":"    public Object get(IndexReader reader, Entry key) throws IOException {\n      Map<Entry,Object> innerCache;\n      Object value;\n      final Object readerKey = reader.getFieldCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          innerCache = new HashMap<Entry,Object>();\n          readerCache.put(readerKey, innerCache);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            // Only check if key.custom (the parser) is\n            // non-null; else, we check twice for a single\n            // call to FieldCache.getXXX\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n\n","sourceOld":"    public Object get(IndexReader reader, Entry key) throws IOException {\n      Map<Entry,Object> innerCache;\n      Object value;\n      final Object readerKey = reader.getFieldCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          innerCache = new HashMap<Entry,Object>();\n          readerCache.put(readerKey, innerCache);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            // Only check if key.custom (the parser) is\n            // non-null; else, we check twice for a single\n            // call to FieldCache.getXXX\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}