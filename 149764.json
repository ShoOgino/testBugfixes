{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":5,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","sourceNew":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":5,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","sourceNew":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["622a708571e534680618b3c5e0c28ac539a47776"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["622a708571e534680618b3c5e0c28ac539a47776","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e17b020972a0d6e8d6823f545571a66646a167"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}