{"path":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#rename(Path,Path).mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#rename(Path,Path).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean rename(Path src, Path dst) throws IOException {\n    // Attempt rename using Java API.\n    File srcFile = pathToFile(src);\n    File dstFile = pathToFile(dst);\n    if (srcFile.renameTo(dstFile)) {\n      return true;\n    }\n\n    // Else try POSIX style rename on Windows only\n    if (Shell.WINDOWS &&\n        handleEmptyDstDirectoryOnWindows(src, srcFile, dst, dstFile)) {\n      return true;\n    }\n\n    // The fallback behavior accomplishes the rename by a full copy.\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Falling through to a copy of \" + src + \" to \" + dst);\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#rename(Path,Path).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean rename(Path src, Path dst) throws IOException {\n    // Attempt rename using Java API.\n    File srcFile = pathToFile(src);\n    File dstFile = pathToFile(dst);\n    if (srcFile.renameTo(dstFile)) {\n      return true;\n    }\n\n    // Else try POSIX style rename on Windows only\n    if (Shell.WINDOWS &&\n        handleEmptyDstDirectoryOnWindows(src, srcFile, dst, dstFile)) {\n      return true;\n    }\n\n    // The fallback behavior accomplishes the rename by a full copy.\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Falling through to a copy of \" + src + \" to \" + dst);\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bdf107cf16be0f22504ae184fed81596665a244"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}