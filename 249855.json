{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException\n   */\n  public abstract FieldComparator setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException\n   */\n  public abstract FieldComparator setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException\n   */\n  public abstract FieldComparator<T> setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException\n   */\n  public abstract FieldComparator setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException\n   */\n  public abstract FieldComparator<T> setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException\n   */\n  public abstract FieldComparator setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException if there is a low-level IO error\n   */\n  public abstract FieldComparator<T> setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException\n   */\n  public abstract FieldComparator<T> setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  /**\n   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to\n   * the current reader (you must add docBase if you need to\n   * map it to a top-level docID).\n   * \n   * @param context current reader context\n   * @return the comparator to use for this segment; most\n   *   comparators can just return \"this\" to reuse the same\n   *   comparator across segments\n   * @throws IOException if there is a low-level IO error\n   */\n  public abstract FieldComparator<T> setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}