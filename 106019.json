{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter#doTestStopPositons(StopFilter).mjava","commits":[{"id":"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","date":1465936684,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter#doTestStopPositons(StopFilter).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestStopFilter#doTestStopPositons(StopFilter).mjava","sourceNew":"  private void doTestStopPositons(StopFilter stpf) throws IOException {\n    CharTermAttribute termAtt = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    for (int i=0; i<20; i+=3) {\n      assertTrue(stpf.incrementToken());\n      log(\"Token \"+i+\": \"+stpf);\n      String w = English.intToEnglish(i).trim();\n      assertEquals(\"expecting token \"+i+\" to be \"+w,w,termAtt.toString());\n      assertEquals(\"all but first token must have position increment of 3\",i==0?1:3,posIncrAtt.getPositionIncrement());\n    }\n    assertFalse(stpf.incrementToken());\n    stpf.end();\n    stpf.close();\n  }\n\n","sourceOld":"  private void doTestStopPositons(StopFilter stpf) throws IOException {\n    CharTermAttribute termAtt = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    for (int i=0; i<20; i+=3) {\n      assertTrue(stpf.incrementToken());\n      log(\"Token \"+i+\": \"+stpf);\n      String w = English.intToEnglish(i).trim();\n      assertEquals(\"expecting token \"+i+\" to be \"+w,w,termAtt.toString());\n      assertEquals(\"all but first token must have position increment of 3\",i==0?1:3,posIncrAtt.getPositionIncrement());\n    }\n    assertFalse(stpf.incrementToken());\n    stpf.end();\n    stpf.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter#doTestStopPositons(StopFilter).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestStopFilter#doTestStopPositons(StopFilter).mjava","sourceNew":"  private void doTestStopPositons(StopFilter stpf) throws IOException {\n    CharTermAttribute termAtt = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    for (int i=0; i<20; i+=3) {\n      assertTrue(stpf.incrementToken());\n      log(\"Token \"+i+\": \"+stpf);\n      String w = English.intToEnglish(i).trim();\n      assertEquals(\"expecting token \"+i+\" to be \"+w,w,termAtt.toString());\n      assertEquals(\"all but first token must have position increment of 3\",i==0?1:3,posIncrAtt.getPositionIncrement());\n    }\n    assertFalse(stpf.incrementToken());\n    stpf.end();\n    stpf.close();\n  }\n\n","sourceOld":"  private void doTestStopPositons(StopFilter stpf) throws IOException {\n    CharTermAttribute termAtt = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    for (int i=0; i<20; i+=3) {\n      assertTrue(stpf.incrementToken());\n      log(\"Token \"+i+\": \"+stpf);\n      String w = English.intToEnglish(i).trim();\n      assertEquals(\"expecting token \"+i+\" to be \"+w,w,termAtt.toString());\n      assertEquals(\"all but first token must have position increment of 3\",i==0?1:3,posIncrAtt.getPositionIncrement());\n    }\n    assertFalse(stpf.incrementToken());\n    stpf.end();\n    stpf.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5529b83dfe8f452a536b7afe14b0f26b33033c","date":1544111330,"type":4,"author":"Diego Ceccarelli","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter#doTestStopPositons(StopFilter).mjava","sourceNew":null,"sourceOld":"  private void doTestStopPositons(StopFilter stpf) throws IOException {\n    CharTermAttribute termAtt = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    for (int i=0; i<20; i+=3) {\n      assertTrue(stpf.incrementToken());\n      log(\"Token \"+i+\": \"+stpf);\n      String w = English.intToEnglish(i).trim();\n      assertEquals(\"expecting token \"+i+\" to be \"+w,w,termAtt.toString());\n      assertEquals(\"all but first token must have position increment of 3\",i==0?1:3,posIncrAtt.getPositionIncrement());\n    }\n    assertFalse(stpf.incrementToken());\n    stpf.end();\n    stpf.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5529b83dfe8f452a536b7afe14b0f26b33033c":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb5529b83dfe8f452a536b7afe14b0f26b33033c"]},"commit2Childs":{"cb5529b83dfe8f452a536b7afe14b0f26b33033c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["cb5529b83dfe8f452a536b7afe14b0f26b33033c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}