{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter#close().mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"038e2a9b07e2f8ae58336613cea227bf8b973484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}