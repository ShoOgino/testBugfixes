{"path":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","commits":[{"id":"ccf7fc9b3111449ddc1a53959fd3b922bafcd508","date":1330021629,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","pathOld":"/dev/null","sourceNew":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    PhraseQuery q1 = new PhraseQuery();\n    q1.add(t);\n    q1.add(t);\n    PhraseQuery q2 = new PhraseQuery();\n    q2.add(t);\n    q2.add(t);\n    for (int i = 0; i < 10; i++) {\n      q1.setSlop(i);\n      q2.setSlop(i+1);\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","pathOld":"/dev/null","sourceNew":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    PhraseQuery q1 = new PhraseQuery();\n    q1.add(t);\n    q1.add(t);\n    PhraseQuery q2 = new PhraseQuery();\n    q2.add(t);\n    q2.add(t);\n    for (int i = 0; i < 10; i++) {\n      q1.setSlop(i);\n      q2.setSlop(i+1);\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b97b669a6c8dac1437c3856f4133d83c986515ae","date":1427703853,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","sourceNew":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    for (int i = 0; i < 10; i++) {\n      PhraseQuery q1 = new PhraseQuery();\n      q1.add(t);\n      q1.add(t);\n      q1.setSlop(i);\n      PhraseQuery q2 = new PhraseQuery();\n      q2.add(t);\n      q2.add(t);\n      q2.setSlop(i+1);\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","sourceOld":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    PhraseQuery q1 = new PhraseQuery();\n    q1.add(t);\n    q1.add(t);\n    PhraseQuery q2 = new PhraseQuery();\n    q2.add(t);\n    q2.add(t);\n    for (int i = 0; i < 10; i++) {\n      q1.setSlop(i);\n      q2.setSlop(i+1);\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","sourceNew":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    for (int i = 0; i < 10; i++) {\n      PhraseQuery q1 = new PhraseQuery();\n      q1.add(t);\n      q1.add(t);\n      q1.setSlop(i);\n      PhraseQuery q2 = new PhraseQuery();\n      q2.add(t);\n      q2.add(t);\n      q2.setSlop(i+1);\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","sourceOld":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    PhraseQuery q1 = new PhraseQuery();\n    q1.add(t);\n    q1.add(t);\n    PhraseQuery q2 = new PhraseQuery();\n    q2.add(t);\n    q2.add(t);\n    for (int i = 0; i < 10; i++) {\n      q1.setSlop(i);\n      q2.setSlop(i+1);\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery2#testRepetitiveIncreasingSloppiness().mjava","sourceNew":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    for (int i = 0; i < 10; i++) {\n      PhraseQuery q1 = new PhraseQuery(i, t.field(), t.bytes(), t.bytes());\n      PhraseQuery q2 = new PhraseQuery(i + 1, t.field(), t.bytes(), t.bytes());\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","sourceOld":"  /** \"A A\"~N ⊆ \"A A\"~N+1 */\n  public void testRepetitiveIncreasingSloppiness() throws Exception {\n    Term t = randomTerm();\n    for (int i = 0; i < 10; i++) {\n      PhraseQuery q1 = new PhraseQuery();\n      q1.add(t);\n      q1.add(t);\n      q1.setSlop(i);\n      PhraseQuery q2 = new PhraseQuery();\n      q2.add(t);\n      q2.add(t);\n      q2.setSlop(i+1);\n      assertSubsetOf(q1, q2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ccf7fc9b3111449ddc1a53959fd3b922bafcd508","b97b669a6c8dac1437c3856f4133d83c986515ae"],"e9e1499c5d26c936238506df90a3c02c76707722":["b97b669a6c8dac1437c3856f4133d83c986515ae"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ccf7fc9b3111449ddc1a53959fd3b922bafcd508"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b97b669a6c8dac1437c3856f4133d83c986515ae":["ccf7fc9b3111449ddc1a53959fd3b922bafcd508"],"ccf7fc9b3111449ddc1a53959fd3b922bafcd508":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9e1499c5d26c936238506df90a3c02c76707722"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e9e1499c5d26c936238506df90a3c02c76707722":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","ccf7fc9b3111449ddc1a53959fd3b922bafcd508"],"b97b669a6c8dac1437c3856f4133d83c986515ae":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e9e1499c5d26c936238506df90a3c02c76707722"],"ccf7fc9b3111449ddc1a53959fd3b922bafcd508":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b97b669a6c8dac1437c3856f4133d83c986515ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}