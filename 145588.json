{"path":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool.Options#parse(String[]).mjava","commits":[{"id":"ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e","date":1580938267,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool.Options#parse(String[]).mjava","pathOld":"/dev/null","sourceNew":"    static Options parse(String args[]) throws ReflectiveOperationException {\n      Options options = new Options();\n      int index = 0;\n      while (index < args.length) {\n        if (!args[index].startsWith(\"-\")) {\n          break;\n        }\n        if (args[index] == \"--\") {\n          break;\n        }\n        switch(args[index]) {\n          case \"-merge-policy\":\n            String clazzName = args[++index];\n            Class<? extends MergePolicy> clazz = Class.forName(clazzName).asSubclass(MergePolicy.class);\n            options.config.setMergePolicy(clazz.getConstructor().newInstance());\n            break;\n          case \"-max-segments\":\n            options.maxSegments = Integer.parseInt(args[++index]);\n            break;\n          case \"-verbose\":\n            options.config.setInfoStream(System.err);\n            break;\n          default: throw new IllegalArgumentException(\"unrecognized option: '\" + args[index] + \"'\\n\" + USAGE);\n        }\n        index++;\n      }\n\n      // process any remaining arguments as the target and source index paths.\n      int numPaths = args.length - index;\n      if (numPaths < 3) {\n        throw new IllegalArgumentException(\"not enough parameters.\\n\" + USAGE);\n      }\n\n      options.mergedIndexPath = args[index];\n      options.indexPaths = new String[numPaths - 1];\n      System.arraycopy(args, index + 1, options.indexPaths, 0, options.indexPaths.length);\n      return options;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e"],"ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}