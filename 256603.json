{"path":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","commits":[{"id":"2252a4efd304715a7a65ac0c9b167d312d09997a","date":1427361661,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to be default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to be default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1029001a4f14c09987075ddbda784d088dac73e4","date":1502323132,"type":3,"author":"Adam Frey","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to by default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","sourceOld":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to be default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to by default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","sourceOld":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to be default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to by default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","sourceOld":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to be default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d470946953c3ba2bd69d984efbfdc9017ddbb85","date":1569425608,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(NodeConfig,String).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to by default (optional)\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","sourceOld":"  /**\n   * Create an EmbeddedSolrServer using a NodeConfig\n   *\n   * @param nodeConfig      the configuration\n   * @param defaultCoreName the core to route requests to by default\n   */\n  public EmbeddedSolrServer(NodeConfig nodeConfig, String defaultCoreName) {\n    this(load(new CoreContainer(nodeConfig)), defaultCoreName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2252a4efd304715a7a65ac0c9b167d312d09997a"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["2252a4efd304715a7a65ac0c9b167d312d09997a","1029001a4f14c09987075ddbda784d088dac73e4"],"1029001a4f14c09987075ddbda784d088dac73e4":["2252a4efd304715a7a65ac0c9b167d312d09997a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["2252a4efd304715a7a65ac0c9b167d312d09997a","1029001a4f14c09987075ddbda784d088dac73e4"],"2252a4efd304715a7a65ac0c9b167d312d09997a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d470946953c3ba2bd69d984efbfdc9017ddbb85":["1029001a4f14c09987075ddbda784d088dac73e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d470946953c3ba2bd69d984efbfdc9017ddbb85"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"1029001a4f14c09987075ddbda784d088dac73e4":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","2d470946953c3ba2bd69d984efbfdc9017ddbb85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2252a4efd304715a7a65ac0c9b167d312d09997a"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":[],"2252a4efd304715a7a65ac0c9b167d312d09997a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","58884af1f68e9d61c217c753fbd6266d86a63b14","1029001a4f14c09987075ddbda784d088dac73e4","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"2d470946953c3ba2bd69d984efbfdc9017ddbb85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}