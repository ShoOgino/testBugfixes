{"path":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getPrintableId().mjava","commits":[{"id":"671279fa1676e7f2755c2745a25abd77a169f992","date":1312053489,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getPrintableId().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getPrintableId(IndexSchema).mjava","sourceNew":"   public String getPrintableId() {\n     IndexSchema schema = req.getSchema();\n     SchemaField sf = schema.getUniqueKeyField();\n     if (solrDoc != null && sf != null) {\n       SolrInputField field = solrDoc.getField(sf.getName());\n       if (field != null) {\n         return field.getFirstValue().toString();\n       }\n     }\n     return \"(null)\";\n   }\n\n","sourceOld":"   public String getPrintableId(IndexSchema schema) {\n     SchemaField sf = schema.getUniqueKeyField();\n     if (indexedId != null && sf != null) {\n       return sf.getType().indexedToReadable(indexedId);\n     }\n\n     if (doc != null) {\n       return schema.printableUniqueKey(doc);\n     }\n\n     if (solrDoc != null && sf != null) {\n       SolrInputField field = solrDoc.getField(sf.getName());\n       if (field != null) {\n         return field.getFirstValue().toString();\n       }\n     }\n     return \"(null)\";\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de1af7f190be3bcd342eb343f1f1801cad51126e","date":1385585015,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getPrintableId().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getPrintableId().mjava","sourceNew":"   public String getPrintableId() {\n    if (req != null) {\n      IndexSchema schema = req.getSchema();\n      SchemaField sf = schema.getUniqueKeyField();\n      if (solrDoc != null && sf != null) {\n        SolrInputField field = solrDoc.getField(sf.getName());\n        if (field != null) {\n          return field.getFirstValue().toString();\n        }\n      }\n    }\n     return \"(null)\";\n   }\n\n","sourceOld":"   public String getPrintableId() {\n     IndexSchema schema = req.getSchema();\n     SchemaField sf = schema.getUniqueKeyField();\n     if (solrDoc != null && sf != null) {\n       SolrInputField field = solrDoc.getField(sf.getName());\n       if (field != null) {\n         return field.getFirstValue().toString();\n       }\n     }\n     return \"(null)\";\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getPrintableId().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getPrintableId().mjava","sourceNew":"   public String getPrintableId() {\n    if (req != null) {\n      IndexSchema schema = req.getSchema();\n      SchemaField sf = schema.getUniqueKeyField();\n      if (solrDoc != null && sf != null) {\n        SolrInputField field = solrDoc.getField(sf.getName());\n        if (field != null) {\n          return field.getFirstValue().toString();\n        }\n      }\n    }\n     return \"(null)\";\n   }\n\n","sourceOld":"   public String getPrintableId() {\n     IndexSchema schema = req.getSchema();\n     SchemaField sf = schema.getUniqueKeyField();\n     if (solrDoc != null && sf != null) {\n       SolrInputField field = solrDoc.getField(sf.getName());\n       if (field != null) {\n         return field.getFirstValue().toString();\n       }\n     }\n     return \"(null)\";\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"671279fa1676e7f2755c2745a25abd77a169f992":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"de1af7f190be3bcd342eb343f1f1801cad51126e":["671279fa1676e7f2755c2745a25abd77a169f992"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["671279fa1676e7f2755c2745a25abd77a169f992","de1af7f190be3bcd342eb343f1f1801cad51126e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de1af7f190be3bcd342eb343f1f1801cad51126e"]},"commit2Childs":{"671279fa1676e7f2755c2745a25abd77a169f992":["de1af7f190be3bcd342eb343f1f1801cad51126e","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"de1af7f190be3bcd342eb343f1f1801cad51126e":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["671279fa1676e7f2755c2745a25abd77a169f992"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}