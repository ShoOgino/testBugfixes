{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","commits":[{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  private final void ensureInitialized(ThreadState state) {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  private final void ensureInitialized(ThreadState state) {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  private final void ensureInitialized(ThreadState state) {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6b7c6630218ed9693cdb8643276513f9f0043f4","date":1406648084,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n          directory, config, infoStream, deleteQueue, infos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2165505a28a4f836f04ed5eb23bc64a6faae1b1e","date":1418824313,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(),\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950882a2bd2a5f9dc16a154871584eaa643d882a","date":1436366563,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer, writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c02b804ab16489b95429791a2d8fb0e0728354d4","date":1436551798,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer, writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","sourceOld":"  private final void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer, writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5898ca35059bc3a89ba6a275ec92a5c32057aedc","date":1436893905,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private void ensureInitialized(ThreadState state) throws IOException {\n    if (state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer, writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","sourceOld":"  private void ensureInitialized(ThreadState state) throws IOException {\n    if (state.isActive() && state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(\n          writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer, writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7","date":1524496660,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":"  private void ensureInitialized(ThreadState state) throws IOException {\n    if (state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(indexCreatedVersionMajor, segmentNameSupplier.get(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                pendingNumDocs, enableTestPoints);\n    }\n  }\n\n","sourceOld":"  private void ensureInitialized(ThreadState state) throws IOException {\n    if (state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(writer.globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(writer, writer.newSegmentName(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                writer.pendingNumDocs, writer.enableTestPoints);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#ensureInitialized(ThreadState).mjava","sourceNew":null,"sourceOld":"  private void ensureInitialized(ThreadState state) throws IOException {\n    if (state.dwpt == null) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldNumberMap);\n      state.dwpt = new DocumentsWriterPerThread(indexCreatedVersionMajor, segmentNameSupplier.get(), directoryOrig,\n                                                directory, config, infoStream, deleteQueue, infos,\n                                                pendingNumDocs, enableTestPoints);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"7af110b00ea8df9429309d83e38e0533d82e144f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["7af110b00ea8df9429309d83e38e0533d82e144f","3394716f52b34ab259ad5247e7595d9f9db6e935"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["5898ca35059bc3a89ba6a275ec92a5c32057aedc"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"c02b804ab16489b95429791a2d8fb0e0728354d4":["950882a2bd2a5f9dc16a154871584eaa643d882a"],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["d6b7c6630218ed9693cdb8643276513f9f0043f4"],"618635065f043788c9e034f96ca5cd5cea1b4592":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["7af110b00ea8df9429309d83e38e0533d82e144f","52c7e49be259508735752fba88085255014a6ecf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"950882a2bd2a5f9dc16a154871584eaa643d882a":["618635065f043788c9e034f96ca5cd5cea1b4592"],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"52c7e49be259508735752fba88085255014a6ecf":["7af110b00ea8df9429309d83e38e0533d82e144f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"],"5898ca35059bc3a89ba6a275ec92a5c32057aedc":["c02b804ab16489b95429791a2d8fb0e0728354d4"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7af110b00ea8df9429309d83e38e0533d82e144f":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","3394716f52b34ab259ad5247e7595d9f9db6e935","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["264935965977b4a9e2f3920420647072c9c49176"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"c02b804ab16489b95429791a2d8fb0e0728354d4":["5898ca35059bc3a89ba6a275ec92a5c32057aedc"],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["618635065f043788c9e034f96ca5cd5cea1b4592"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","d6b7c6630218ed9693cdb8643276513f9f0043f4"],"618635065f043788c9e034f96ca5cd5cea1b4592":["950882a2bd2a5f9dc16a154871584eaa643d882a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"950882a2bd2a5f9dc16a154871584eaa643d882a":["c02b804ab16489b95429791a2d8fb0e0728354d4"],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"5898ca35059bc3a89ba6a275ec92a5c32057aedc":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}