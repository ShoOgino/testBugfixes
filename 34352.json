{"path":"solr/core/src/java/org/apache/solr/search/StrParser#getSortDirection().mjava","commits":[{"id":"051c3069a96e986b8fa0435398a73a922ce85418","date":1447853599,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/StrParser#getSortDirection().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getSortDirection().mjava","sourceNew":"    /**\n     * Sort direction or null if current position does not indicate a \n     * sort direction. (True is desc, False is asc).  \n     * Position is advanced to after the comma (or end) when result is non null \n     */\n    public Boolean getSortDirection() throws SyntaxError {\n      final int startPos = pos;\n      final String order = getId(null);\n\n      Boolean top = null;\n\n      if (null != order) {\n        final String orderLowerCase = order.toLowerCase(Locale.ROOT);\n        if (\"desc\".equals(orderLowerCase) || \"top\".equals(orderLowerCase)) {\n          top = true;\n        } else if (\"asc\".equals(orderLowerCase) || \"bottom\".equals(orderLowerCase)) {\n          top = false;\n        }\n\n        // it's not a legal direction if more stuff comes after it\n        eatws();\n        final char c = ch();\n        if (0 == c) {\n          // :NOOP\n        } else if (',' == c) {\n          pos++;\n        } else {\n          top = null;\n        }\n      }\n\n      if (null == top) pos = startPos; // no direction, reset\n      return top;\n    }\n\n","sourceOld":"    /**\n     * Sort direction or null if current position does not indicate a \n     * sort direction. (True is desc, False is asc).  \n     * Position is advanced to after the comma (or end) when result is non null \n     */\n    public Boolean getSortDirection() throws SyntaxError {\n      final int startPos = pos;\n      final String order = getId(null);\n\n      Boolean top = null;\n\n      if (null != order) {\n        final String orderLowerCase = order.toLowerCase(Locale.ROOT);\n        if (\"desc\".equals(orderLowerCase) || \"top\".equals(orderLowerCase)) {\n          top = true;\n        } else if (\"asc\".equals(orderLowerCase) || \"bottom\".equals(orderLowerCase)) {\n          top = false;\n        }\n\n        // it's not a legal direction if more stuff comes after it\n        eatws();\n        final char c = ch();\n        if (0 == c) {\n          // :NOOP\n        } else if (',' == c) {\n          pos++;\n        } else {\n          top = null;\n        }\n      }\n\n      if (null == top) pos = startPos; // no direction, reset\n      return top;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"051c3069a96e986b8fa0435398a73a922ce85418":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["051c3069a96e986b8fa0435398a73a922ce85418"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["051c3069a96e986b8fa0435398a73a922ce85418"],"051c3069a96e986b8fa0435398a73a922ce85418":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}