{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestPhraseWildcardQuery#searchAndCheckResultsMultiplePhraseWildcards(String[],int,int,boolean,String[][]).mjava","commits":[{"id":"b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e","date":1574848425,"type":0,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestPhraseWildcardQuery#searchAndCheckResultsMultiplePhraseWildcards(String[],int,int,boolean,String[][]).mjava","pathOld":"/dev/null","sourceNew":"  protected void searchAndCheckResultsMultiplePhraseWildcards(String[] fields, int maxExpansions, int slop,\n                                                              boolean segmentOptimizationEnabled, String[][] multiPhraseTerms) throws IOException {\n    BooleanQuery.Builder phraseWildcardQueryBuilder = new BooleanQuery.Builder();\n    BooleanQuery.Builder multiPhraseQueryBuilder = new BooleanQuery.Builder();\n    BooleanQuery.Builder spanNearQueryBuilder = new BooleanQuery.Builder();\n    for (String[] terms : multiPhraseTerms) {\n      BooleanClause.Occur occur = random().nextBoolean() ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n      phraseWildcardQueryBuilder.add(disMaxQuery(phraseWildcardQueries(fields, maxExpansions, slop, segmentOptimizationEnabled, terms)), occur);\n      multiPhraseQueryBuilder.add(disMaxQuery(multiPhraseQueries(fields, maxExpansions, slop, terms)), occur);\n      spanNearQueryBuilder.add(disMaxQuery(spanNearQueries(fields, slop, terms)), occur);\n    }\n    searchAndCheckSameResults(\n        phraseWildcardQueryBuilder.build(),\n        multiPhraseQueryBuilder.build(),\n        spanNearQueryBuilder.build(),\n        segmentOptimizationEnabled\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e"]},"commit2Childs":{"b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}