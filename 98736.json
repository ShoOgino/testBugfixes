{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDistance#computeSquaredNormalDistance(GeoPoint).mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDistance#computeSquaredNormalDistance(GeoPoint).mjava","pathOld":"/dev/null","sourceNew":"    /** Compute the square of this shape's normal \"distance\" to the GeoPoint.\n     * A return value of Double.MAX_VALUE should be returned for\n     * points outside of the shape.\n     *@param point is the point to compute the distance to.\n     *@return the square of the normal distance, defined as the perpendicular\n     * distance from\n     * from the point to one of the shape's bounding plane.  Normal\n     * distances can therefore typically only go up to PI/2, except\n     * when they represent the sum of a sequence of normal distances.\n     */\n    public double computeSquaredNormalDistance(GeoPoint point);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDistance#computeSquaredNormalDistance(GeoPoint).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDistance#computeSquaredNormalDistance(GeoPoint).mjava","sourceNew":"  /**\n   * Compute the square of this shape's normal \"distance\" to the GeoPoint.\n   * A return value of Double.MAX_VALUE should be returned for\n   * points outside of the shape.\n   *\n   * @param point is the point to compute the distance to.\n   * @return the square of the normal distance, defined as the perpendicular\n   * distance from\n   * from the point to one of the shape's bounding plane.  Normal\n   * distances can therefore typically only go up to PI/2, except\n   * when they represent the sum of a sequence of normal distances.\n   */\n  public double computeSquaredNormalDistance(GeoPoint point);\n\n","sourceOld":"    /** Compute the square of this shape's normal \"distance\" to the GeoPoint.\n     * A return value of Double.MAX_VALUE should be returned for\n     * points outside of the shape.\n     *@param point is the point to compute the distance to.\n     *@return the square of the normal distance, defined as the perpendicular\n     * distance from\n     * from the point to one of the shape's bounding plane.  Normal\n     * distances can therefore typically only go up to PI/2, except\n     * when they represent the sum of a sequence of normal distances.\n     */\n    public double computeSquaredNormalDistance(GeoPoint point);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDistance#computeSquaredNormalDistance(GeoPoint).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compute the square of this shape's normal \"distance\" to the GeoPoint.\n   * A return value of Double.MAX_VALUE should be returned for\n   * points outside of the shape.\n   *\n   * @param point is the point to compute the distance to.\n   * @return the square of the normal distance, defined as the perpendicular\n   * distance from\n   * from the point to one of the shape's bounding plane.  Normal\n   * distances can therefore typically only go up to PI/2, except\n   * when they represent the sum of a sequence of normal distances.\n   */\n  public double computeSquaredNormalDistance(GeoPoint point);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9908748d960ccb7706a20e81289a656237780b6c","date":1435716223,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDistance#computeSquaredNormalDistance(GeoPoint).mjava","sourceNew":null,"sourceOld":"  /**\n   * Compute the square of this shape's normal \"distance\" to the GeoPoint.\n   * A return value of Double.MAX_VALUE should be returned for\n   * points outside of the shape.\n   *\n   * @param point is the point to compute the distance to.\n   * @return the square of the normal distance, defined as the perpendicular\n   * distance from\n   * from the point to one of the shape's bounding plane.  Normal\n   * distances can therefore typically only go up to PI/2, except\n   * when they represent the sum of a sequence of normal distances.\n   */\n  public double computeSquaredNormalDistance(GeoPoint point);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2997acf74723385bd84aff1ea0b12af4aefde77":["851e4197476b684154a7b65f996f535522e67400"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9908748d960ccb7706a20e81289a656237780b6c":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9908748d960ccb7706a20e81289a656237780b6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"851e4197476b684154a7b65f996f535522e67400":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["9908748d960ccb7706a20e81289a656237780b6c"],"9908748d960ccb7706a20e81289a656237780b6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}