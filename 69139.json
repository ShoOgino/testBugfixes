{"path":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9cc9d77712aba3662f24632df7539ab75e3667","date":1309095238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getLiveDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getLiveDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getLiveDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seek(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getDeletedDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getLiveDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getLiveDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getLiveDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = tenum.docs(MultiFields.getLiveDocs(reader), tdocs);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = newDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(random, dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n\n    TermsEnum tenum = MultiFields.getTerms(reader, \"foo\").iterator(null);\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    DocsEnum tdocs = null;\n    for (int i=0; i<iter; i++) {\n      tenum.seekCeil(new BytesRef(\"val\"));\n      tdocs = _TestUtil.docs(random, tenum, MultiFields.getLiveDocs(reader), tdocs, false);\n      while (tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        ret += tdocs.docID();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["872cff1d3a554e0cd64014cd97f88d3002b0f491","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["fd9cc9d77712aba3662f24632df7539ab75e3667"],"3cc749c053615f5871f3b95715fe292f34e70a53":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["b65b350ca9588f9fc76ce7d6804160d06c45ff42"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["3cc749c053615f5871f3b95715fe292f34e70a53"],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","28427ef110c4c5bf5b4057731b83110bd1e13724"],"2553b00f699380c64959ccb27991289aae87be2e":["1f653cfcf159baeaafe5d01682a911e95bba4012","fd9cc9d77712aba3662f24632df7539ab75e3667"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","1f653cfcf159baeaafe5d01682a911e95bba4012"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1f653cfcf159baeaafe5d01682a911e95bba4012","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["2553b00f699380c64959ccb27991289aae87be2e","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["3cc749c053615f5871f3b95715fe292f34e70a53","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["872cff1d3a554e0cd64014cd97f88d3002b0f491","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["3cc749c053615f5871f3b95715fe292f34e70a53","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"3cc749c053615f5871f3b95715fe292f34e70a53":["872cff1d3a554e0cd64014cd97f88d3002b0f491","b65b350ca9588f9fc76ce7d6804160d06c45ff42"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","b65b350ca9588f9fc76ce7d6804160d06c45ff42","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"2553b00f699380c64959ccb27991289aae87be2e":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","fd9cc9d77712aba3662f24632df7539ab75e3667"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["5f4e87790277826a2aea119328600dfb07761f32","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","2553b00f699380c64959ccb27991289aae87be2e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5f4e87790277826a2aea119328600dfb07761f32","28427ef110c4c5bf5b4057731b83110bd1e13724"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}