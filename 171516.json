{"path":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#addDefaultApps(ContextHandlerCollection,String,Configuration).mjava","commits":[{"id":"99b97f030e743d8dd4d7685202f71718d7e5af22","date":1548957620,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#addDefaultApps(ContextHandlerCollection,String,Configuration).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add default apps.\n   * @param appDir The application directory\n   */\n  protected void addDefaultApps(ContextHandlerCollection parent,\n                                final String appDir, Configuration conf) {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it's enabled.\n    String logDir = System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled = conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir != null && logsEnabled) {\n      ServletContextHandler logContext =\n          new ServletContextHandler(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map<String, String> params = logContext.getInitParams();\n        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler = new SessionHandler();\n      handler.setHttpOnly(true);\n      handler.getSessionCookieConfig().setSecure(true);\n      logContext.setSessionHandler(handler);\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(logContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    ServletContextHandler staticContext =\n        new ServletContextHandler(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map<String, String> params = staticContext.getInitParams();\n    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n    SessionHandler handler = new SessionHandler();\n    handler.setHttpOnly(true);\n    handler.getSessionCookieConfig().setSecure(true);\n    staticContext.setSessionHandler(handler);\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b74c124d68d8e306d6ef09624f3cd053b8a2fd","date":1548981962,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#addDefaultApps(ContextHandlerCollection,String,Configuration).mjava","sourceNew":null,"sourceOld":"  /**\n   * Add default apps.\n   * @param appDir The application directory\n   */\n  protected void addDefaultApps(ContextHandlerCollection parent,\n                                final String appDir, Configuration conf) {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it's enabled.\n    String logDir = System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled = conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir != null && logsEnabled) {\n      ServletContextHandler logContext =\n          new ServletContextHandler(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map<String, String> params = logContext.getInitParams();\n        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler = new SessionHandler();\n      handler.setHttpOnly(true);\n      handler.getSessionCookieConfig().setSecure(true);\n      logContext.setSessionHandler(handler);\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(logContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    ServletContextHandler staticContext =\n        new ServletContextHandler(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map<String, String> params = staticContext.getInitParams();\n    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n    SessionHandler handler = new SessionHandler();\n    handler.setHttpOnly(true);\n    handler.getSessionCookieConfig().setSecure(true);\n    staticContext.setSessionHandler(handler);\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#addDefaultApps(ContextHandlerCollection,String,Configuration).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add default apps.\n   * @param appDir The application directory\n   */\n  protected void addDefaultApps(ContextHandlerCollection parent,\n                                final String appDir, Configuration conf) {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it's enabled.\n    String logDir = System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled = conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir != null && logsEnabled) {\n      ServletContextHandler logContext =\n          new ServletContextHandler(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map<String, String> params = logContext.getInitParams();\n        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler = new SessionHandler();\n      handler.setHttpOnly(true);\n      handler.getSessionCookieConfig().setSecure(true);\n      logContext.setSessionHandler(handler);\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(logContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    ServletContextHandler staticContext =\n        new ServletContextHandler(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map<String, String> params = staticContext.getInitParams();\n    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n    SessionHandler handler = new SessionHandler();\n    handler.setHttpOnly(true);\n    handler.getSessionCookieConfig().setSecure(true);\n    staticContext.setSessionHandler(handler);\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44ca189138a5b6e1989d12ab992fab60e235ddc7"]},"commit2Childs":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}