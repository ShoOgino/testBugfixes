{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"89f8b19763ea545f1e428dfa5efb8235beaaa05e","date":1151436680,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * @throws IOException \n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            super.processRequest(request,response);\n            if(this.authenticated){\n            try {\n                ServerBaseFeed feed = createDeleteFeed(request);\n                \n                GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(ServiceFactory.class,ComponentType.SERVICEFACTORY);\n                if(serviceFactory == null){\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"required component is not available\");\n                    throw new FeedHandlerException(\"Can't save feed - ServiceFactory is null\");\n                }\n                serviceFactory.getAdminService().deleteFeed(feed);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n            }catch (Exception e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n                setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"can not create feed\");\n            } \n            }\n            sendResponse(response);\n           \n        \n        \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @throws IOException \n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            super.processRequest(request,response);\n            if(this.authenticated){\n                AdminService service = null;\n            try {\n                ServerBaseFeed feed = createDeleteFeed(request);\n                \n                GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(ServiceFactory.class,ComponentType.SERVICEFACTORY);\n                if(serviceFactory == null){\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"required component is not available\");\n                    throw new FeedHandlerException(\"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.deleteFeed(feed);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n            }catch (Exception e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n                setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"can not create feed\");\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n            }\n            sendResponse(response);\n           \n        \n        \n    }\n\n","sourceOld":"    /**\n     * @throws IOException \n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            super.processRequest(request,response);\n            if(this.authenticated){\n            try {\n                ServerBaseFeed feed = createDeleteFeed(request);\n                \n                GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(ServiceFactory.class,ComponentType.SERVICEFACTORY);\n                if(serviceFactory == null){\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"required component is not available\");\n                    throw new FeedHandlerException(\"Can't save feed - ServiceFactory is null\");\n                }\n                serviceFactory.getAdminService().deleteFeed(feed);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n            }catch (Exception e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n                setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"can not create feed\");\n            } \n            }\n            sendResponse(response);\n           \n        \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @throws IOException \n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            super.processRequest(request,response);\n            if(this.authenticated){\n                AdminService service = null;\n            try {\n                ServerBaseFeed feed = createDeleteFeed(request);\n                \n                GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(ServiceFactory.class,ComponentType.SERVICEFACTORY);\n                if(serviceFactory == null){\n                    setError(GDataResponse.SERVER_ERROR,\"required component is not available\");\n                    throw new FeedHandlerException(\"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.deleteFeed(feed);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n            }catch (ServiceException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n                setError(e.getErrorCode(),\"can not create feed\");\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n            }\n            sendResponse(response);\n           \n        \n        \n    }\n\n","sourceOld":"    /**\n     * @throws IOException \n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            super.processRequest(request,response);\n            if(this.authenticated){\n                AdminService service = null;\n            try {\n                ServerBaseFeed feed = createDeleteFeed(request);\n                \n                GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(ServiceFactory.class,ComponentType.SERVICEFACTORY);\n                if(serviceFactory == null){\n                    setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"required component is not available\");\n                    throw new FeedHandlerException(\"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.deleteFeed(feed);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n            }catch (Exception e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n                setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\"can not create feed\");\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n            }\n            sendResponse(response);\n           \n        \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DeleteFeedHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @throws IOException \n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            super.processRequest(request,response);\n            if(this.authenticated){\n                AdminService service = null;\n            try {\n                ServerBaseFeed feed = createDeleteFeed(request);\n                \n                GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(ServiceFactory.class,ComponentType.SERVICEFACTORY);\n                if(serviceFactory == null){\n                    setError(GDataResponse.SERVER_ERROR,\"required component is not available\");\n                    throw new FeedHandlerException(\"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.deleteFeed(feed);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n            }catch (ServiceException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n                setError(e.getErrorCode(),\"can not create feed\");\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n            }\n            sendResponse(response);\n           \n        \n        \n    }\n\n","sourceOld":"    /**\n     * @throws IOException \n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            super.processRequest(request,response);\n            if(this.authenticated){\n                AdminService service = null;\n            try {\n                ServerBaseFeed feed = createDeleteFeed(request);\n                \n                GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n                ServiceFactory serviceFactory = registry.lookup(ServiceFactory.class,ComponentType.SERVICEFACTORY);\n                if(serviceFactory == null){\n                    setError(GDataResponse.SERVER_ERROR,\"required component is not available\");\n                    throw new FeedHandlerException(\"Can't save feed - ServiceFactory is null\");\n                }\n                service = serviceFactory.getAdminService();\n                service.deleteFeed(feed);\n            } catch (FeedHandlerException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n            }catch (ServiceException e) {\n                LOG.error(\"Can not delete feed -- \"+e.getMessage(),e);\n                setError(e.getErrorCode(),\"can not create feed\");\n            }finally{\n                if(service != null)\n                    service.close();\n            }\n            }\n            sendResponse(response);\n           \n        \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}