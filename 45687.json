{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","commits":[{"id":"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","date":1454767455,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","pathOld":"/dev/null","sourceNew":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13ea66b549e25413e4e3057bf3492ab828899110","date":1454958424,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","sourceNew":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, 0, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b0febf62c2d9baeee7db38998d9197700ccbab9","date":1454958476,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","sourceNew":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, 0, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1883fc56f404231ea9b9a6b841afe9d3ec00f8e","date":1455182738,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","sourceNew":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  @Nightly\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, 0, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, 0, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","pathOld":"/dev/null","sourceNew":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  @Nightly\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, 0, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dede24fb16615594e9570fb29829cbffa1315a1f","date":1589579471,"type":3,"author":"erick","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testReplicaCrashNoCommit().mjava","sourceNew":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  @Nightly\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, 0, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n    docs.close();\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  // Start up, index 10 docs, replicate, but crash and restart the replica without committing it:\n  @Nightly\n  public void testReplicaCrashNoCommit() throws Exception {\n\n    Path primaryPath = createTempDir(\"primary\");\n    NodeProcess primary = startNode(-1, 0, primaryPath, -1, false);\n\n    Path replicaPath = createTempDir(\"replica\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, replicaPath, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica:\n    replica.crash();\n\n    // Restart replica:\n    replica = startNode(primary.tcpPort, 1, replicaPath, -1, false);\n\n    // On startup the replica searches the last commit (empty here):\n    assertVersionAndHits(replica, 0, 0);\n\n    // Ask replica to sync:\n    replica.newNRTPoint(primaryVersion1, 0, primary.tcpPort);\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b0febf62c2d9baeee7db38998d9197700ccbab9":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","13ea66b549e25413e4e3057bf3492ab828899110"],"b1883fc56f404231ea9b9a6b841afe9d3ec00f8e":["13ea66b549e25413e4e3057bf3492ab828899110"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1883fc56f404231ea9b9a6b841afe9d3ec00f8e"],"dede24fb16615594e9570fb29829cbffa1315a1f":["68496c2200e559fb7802f7575427b7a482659afb"],"13ea66b549e25413e4e3057bf3492ab828899110":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dede24fb16615594e9570fb29829cbffa1315a1f"]},"commit2Childs":{"1b0febf62c2d9baeee7db38998d9197700ccbab9":[],"b1883fc56f404231ea9b9a6b841afe9d3ec00f8e":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"68496c2200e559fb7802f7575427b7a482659afb":["dede24fb16615594e9570fb29829cbffa1315a1f"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["1b0febf62c2d9baeee7db38998d9197700ccbab9","13ea66b549e25413e4e3057bf3492ab828899110"],"13ea66b549e25413e4e3057bf3492ab828899110":["1b0febf62c2d9baeee7db38998d9197700ccbab9","b1883fc56f404231ea9b9a6b841afe9d3ec00f8e"],"dede24fb16615594e9570fb29829cbffa1315a1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1b0febf62c2d9baeee7db38998d9197700ccbab9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}