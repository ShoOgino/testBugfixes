{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","commits":[{"id":"79700663e164dece87bed4adfd3e28bab6cb1385","date":1425241849,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","pathOld":"/dev/null","sourceNew":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    try {\n      attributes.put(\"bogus\", \"bogus\");\n      fail(\"shouldn't be able to modify attributes\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"299a2348fa24151d150182211b6208a38e5e3450","date":1425304608,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","pathOld":"/dev/null","sourceNew":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    try {\n      attributes.put(\"bogus\", \"bogus\");\n      fail(\"shouldn't be able to modify attributes\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","pathOld":"/dev/null","sourceNew":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    try {\n      attributes.put(\"bogus\", \"bogus\");\n      fail(\"shouldn't be able to modify attributes\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","sourceNew":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    // shouldn't be able to modify attributes\n    expectThrows(UnsupportedOperationException.class, () -> {\n      attributes.put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    try {\n      attributes.put(\"bogus\", \"bogus\");\n      fail(\"shouldn't be able to modify attributes\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","bugFix":["79700663e164dece87bed4adfd3e28bab6cb1385"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7e4ca6dc9612ff741d8713743e2bccfae5eadac","date":1528093718,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","sourceNew":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder(new FieldInfos.FieldNumbers(null));\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    // shouldn't be able to modify attributes\n    expectThrows(UnsupportedOperationException.class, () -> {\n      attributes.put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    // shouldn't be able to modify attributes\n    expectThrows(UnsupportedOperationException.class, () -> {\n      attributes.put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","sourceNew":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder(new FieldInfos.FieldNumbers(null));\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    // shouldn't be able to modify attributes\n    expectThrows(UnsupportedOperationException.class, () -> {\n      attributes.put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    // shouldn't be able to modify attributes\n    expectThrows(UnsupportedOperationException.class, () -> {\n      attributes.put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseFieldInfoFormatTestCase#testImmutableAttributes().mjava","sourceNew":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder(new FieldInfos.FieldNumbers(null));\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    // shouldn't be able to modify attributes\n    expectThrows(UnsupportedOperationException.class, () -> {\n      attributes.put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test field infos attributes coming back are not mutable */\n  public void testImmutableAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    SegmentInfo segmentInfo = newSegmentInfo(dir, \"_123\");\n    FieldInfos.Builder builder = new FieldInfos.Builder();\n    FieldInfo fi = builder.getOrAdd(\"field\");\n    fi.setIndexOptions(TextField.TYPE_STORED.indexOptions());\n    addAttributes(fi);\n    fi.putAttribute(\"foo\", \"bar\");\n    fi.putAttribute(\"bar\", \"baz\");\n    FieldInfos infos = builder.finish();\n    codec.fieldInfosFormat().write(dir, segmentInfo, \"\", infos, IOContext.DEFAULT);\n    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, \"\", IOContext.DEFAULT);\n    assertEquals(1, infos2.size());\n    assertNotNull(infos2.fieldInfo(\"field\"));\n    Map<String,String> attributes = infos2.fieldInfo(\"field\").attributes();\n    // shouldn't be able to modify attributes\n    expectThrows(UnsupportedOperationException.class, () -> {\n      attributes.put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79700663e164dece87bed4adfd3e28bab6cb1385"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["05fe562aa248790944d43cdd478f512572835ba0","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["05fe562aa248790944d43cdd478f512572835ba0"],"05fe562aa248790944d43cdd478f512572835ba0":["79700663e164dece87bed4adfd3e28bab6cb1385"],"79700663e164dece87bed4adfd3e28bab6cb1385":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f592209545c71895260367152601e9200399776d":["05fe562aa248790944d43cdd478f512572835ba0","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"299a2348fa24151d150182211b6208a38e5e3450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79700663e164dece87bed4adfd3e28bab6cb1385"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","79700663e164dece87bed4adfd3e28bab6cb1385","299a2348fa24151d150182211b6208a38e5e3450"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"79700663e164dece87bed4adfd3e28bab6cb1385":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","05fe562aa248790944d43cdd478f512572835ba0","299a2348fa24151d150182211b6208a38e5e3450"],"05fe562aa248790944d43cdd478f512572835ba0":["b70042a8a492f7054d480ccdd2be9796510d4327","b7e4ca6dc9612ff741d8713743e2bccfae5eadac","f592209545c71895260367152601e9200399776d"],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f592209545c71895260367152601e9200399776d":[],"299a2348fa24151d150182211b6208a38e5e3450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","299a2348fa24151d150182211b6208a38e5e3450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}