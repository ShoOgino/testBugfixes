{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter#closeResources().mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter#closeResources().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter#closeResources().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter#closeResources().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter#closeResources().mjava","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"]},"commit2Childs":{"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}