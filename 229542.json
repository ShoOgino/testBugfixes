{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntIntStrategy#IntIntStrategy(int,int,String,String,int,int,boolean,boolean,IntIntOpenHashMap).mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntIntStrategy#IntIntStrategy(int,int,String,String,int,int,boolean,boolean,IntIntOpenHashMap).mjava","pathOld":"/dev/null","sourceNew":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      if(max) {\n        comp = new MaxIntComp();\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.docScores = new LongArrayList();\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      } else {\n        this.docs = new IntArrayList();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a9c4a5022409b649909f75244642a57739b3598","date":1422812185,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntIntStrategy#IntIntStrategy(int,int,String,String,int,int,boolean,boolean,IntIntOpenHashMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntIntStrategy#IntIntStrategy(int,int,String,String,int,int,boolean,boolean,IntIntOpenHashMap).mjava","sourceNew":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      if(max) {\n        comp = new MaxIntComp();\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.docScores = new LongArrayList();\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      } else {\n        this.docs = new IntArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntIntStrategy#IntIntStrategy(int,int,String,String,int,int,boolean,boolean,IntIntHashMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntIntStrategy#IntIntStrategy(int,int,String,String,int,int,boolean,boolean,IntIntOpenHashMap).mjava","sourceNew":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a9c4a5022409b649909f75244642a57739b3598":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["0a9c4a5022409b649909f75244642a57739b3598"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["0a9c4a5022409b649909f75244642a57739b3598"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"0a9c4a5022409b649909f75244642a57739b3598":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}