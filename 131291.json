{"path":"lucene/core/src/java/org/apache/lucene/util/packed/BlockPackedReader#reset(DataInput,long).mjava","commits":[{"id":"eda61b1e90b490cc5837200e04c02639a0d272c7","date":1358795519,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BlockPackedReader#reset(DataInput,long).mjava","pathOld":"/dev/null","sourceNew":"  /** Reset the current reader to wrap a stream of <code>valueCount</code>\n   * values contained in <code>in</code>. The block size remains unchanged. */\n  public void reset(DataInput in, long valueCount) {\n    this.in = in;\n    assert valueCount >= 0;\n    this.valueCount = valueCount;\n    off = blockSize;\n    ord = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BlockPackedReader#reset(DataInput,long).mjava","pathOld":"/dev/null","sourceNew":"  /** Reset the current reader to wrap a stream of <code>valueCount</code>\n   * values contained in <code>in</code>. The block size remains unchanged. */\n  public void reset(DataInput in, long valueCount) {\n    this.in = in;\n    assert valueCount >= 0;\n    this.valueCount = valueCount;\n    off = blockSize;\n    ord = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37b84753dc1f66eba4973779932885fe42cde001","date":1358812051,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BlockPackedReaderIterator#reset(DataInput,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BlockPackedReader#reset(DataInput,long).mjava","sourceNew":"  /** Reset the current reader to wrap a stream of <code>valueCount</code>\n   * values contained in <code>in</code>. The block size remains unchanged. */\n  public void reset(DataInput in, long valueCount) {\n    this.in = in;\n    assert valueCount >= 0;\n    this.valueCount = valueCount;\n    off = blockSize;\n    ord = 0;\n  }\n\n","sourceOld":"  /** Reset the current reader to wrap a stream of <code>valueCount</code>\n   * values contained in <code>in</code>. The block size remains unchanged. */\n  public void reset(DataInput in, long valueCount) {\n    this.in = in;\n    assert valueCount >= 0;\n    this.valueCount = valueCount;\n    off = blockSize;\n    ord = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BlockPackedReaderIterator#reset(DataInput,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BlockPackedReader#reset(DataInput,long).mjava","sourceNew":"  /** Reset the current reader to wrap a stream of <code>valueCount</code>\n   * values contained in <code>in</code>. The block size remains unchanged. */\n  public void reset(DataInput in, long valueCount) {\n    this.in = in;\n    assert valueCount >= 0;\n    this.valueCount = valueCount;\n    off = blockSize;\n    ord = 0;\n  }\n\n","sourceOld":"  /** Reset the current reader to wrap a stream of <code>valueCount</code>\n   * values contained in <code>in</code>. The block size remains unchanged. */\n  public void reset(DataInput in, long valueCount) {\n    this.in = in;\n    assert valueCount >= 0;\n    this.valueCount = valueCount;\n    off = blockSize;\n    ord = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eda61b1e90b490cc5837200e04c02639a0d272c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["eda61b1e90b490cc5837200e04c02639a0d272c7","37b84753dc1f66eba4973779932885fe42cde001"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37b84753dc1f66eba4973779932885fe42cde001":["07155cdd910937cdf6877e48884d5782845c8b8b"],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eda61b1e90b490cc5837200e04c02639a0d272c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"eda61b1e90b490cc5837200e04c02639a0d272c7":["d4d69c535930b5cce125cff868d40f6373dc27d4","07155cdd910937cdf6877e48884d5782845c8b8b"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eda61b1e90b490cc5837200e04c02639a0d272c7","07155cdd910937cdf6877e48884d5782845c8b8b"],"37b84753dc1f66eba4973779932885fe42cde001":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"07155cdd910937cdf6877e48884d5782845c8b8b":["37b84753dc1f66eba4973779932885fe42cde001"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}