{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#reset(IntBlockTermState,int).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#reset(IntBlockTermState,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#reset(Bits,IntBlockTermState,int).mjava","sourceNew":"    public PostingsEnum reset(IntBlockTermState termState, int flags) throws IOException {\n      docFreq = termState.docFreq;\n      totalTermFreq = indexHasFreq ? termState.totalTermFreq : docFreq;\n      docTermStartFP = termState.docStartFP;\n      skipOffset = termState.skipOffset;\n      singletonDocID = termState.singletonDocID;\n      if (docFreq > 1) {\n        if (docIn == null) {\n          // lazy init\n          docIn = startDocIn.clone();\n        }\n        docIn.seek(docTermStartFP);\n      }\n\n      doc = -1;\n      this.needsFreq = PostingsEnum.featureRequested(flags, PostingsEnum.FREQS);\n      if (indexHasFreq == false || needsFreq == false) {\n        Arrays.fill(freqBuffer, 1);\n      }\n      accum = 0;\n      docUpto = 0;\n      nextSkipDoc = BLOCK_SIZE - 1; // we won't skip if target is found in first block\n      docBufferUpto = BLOCK_SIZE;\n      skipped = false;\n      return this;\n    }\n\n","sourceOld":"    public PostingsEnum reset(Bits liveDocs, IntBlockTermState termState, int flags) throws IOException {\n      this.liveDocs = liveDocs;\n\n      docFreq = termState.docFreq;\n      totalTermFreq = indexHasFreq ? termState.totalTermFreq : docFreq;\n      docTermStartFP = termState.docStartFP;\n      skipOffset = termState.skipOffset;\n      singletonDocID = termState.singletonDocID;\n      if (docFreq > 1) {\n        if (docIn == null) {\n          // lazy init\n          docIn = startDocIn.clone();\n        }\n        docIn.seek(docTermStartFP);\n      }\n\n      doc = -1;\n      this.needsFreq = PostingsEnum.featureRequested(flags, PostingsEnum.FREQS);\n      if (indexHasFreq == false || needsFreq == false) {\n        Arrays.fill(freqBuffer, 1);\n      }\n      accum = 0;\n      docUpto = 0;\n      nextSkipDoc = BLOCK_SIZE - 1; // we won't skip if target is found in first block\n      docBufferUpto = BLOCK_SIZE;\n      skipped = false;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9089237f2fb93105f12a1135e60257f4cf8ed41","date":1562086738,"type":3,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#reset(IntBlockTermState,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#reset(IntBlockTermState,int).mjava","sourceNew":"    public PostingsEnum reset(IntBlockTermState termState, int flags) throws IOException {\n      docFreq = termState.docFreq;\n      totalTermFreq = indexHasFreq ? termState.totalTermFreq : docFreq;\n      docTermStartFP = termState.docStartFP;\n      skipOffset = termState.skipOffset;\n      singletonDocID = termState.singletonDocID;\n      if (docFreq > 1) {\n        if (docIn == null) {\n          // lazy init\n          docIn = startDocIn.clone();\n        }\n        docIn.seek(docTermStartFP);\n      }\n\n      doc = -1;\n      this.needsFreq = PostingsEnum.featureRequested(flags, PostingsEnum.FREQS);\n      this.isFreqsRead = true;\n      if (indexHasFreq == false || needsFreq == false) {\n        Arrays.fill(freqBuffer, 1);\n      }\n      accum = 0;\n      docUpto = 0;\n      nextSkipDoc = BLOCK_SIZE - 1; // we won't skip if target is found in first block\n      docBufferUpto = BLOCK_SIZE;\n      skipped = false;\n      return this;\n    }\n\n","sourceOld":"    public PostingsEnum reset(IntBlockTermState termState, int flags) throws IOException {\n      docFreq = termState.docFreq;\n      totalTermFreq = indexHasFreq ? termState.totalTermFreq : docFreq;\n      docTermStartFP = termState.docStartFP;\n      skipOffset = termState.skipOffset;\n      singletonDocID = termState.singletonDocID;\n      if (docFreq > 1) {\n        if (docIn == null) {\n          // lazy init\n          docIn = startDocIn.clone();\n        }\n        docIn.seek(docTermStartFP);\n      }\n\n      doc = -1;\n      this.needsFreq = PostingsEnum.featureRequested(flags, PostingsEnum.FREQS);\n      if (indexHasFreq == false || needsFreq == false) {\n        Arrays.fill(freqBuffer, 1);\n      }\n      accum = 0;\n      docUpto = 0;\n      nextSkipDoc = BLOCK_SIZE - 1; // we won't skip if target is found in first block\n      docBufferUpto = BLOCK_SIZE;\n      skipped = false;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#reset(IntBlockTermState,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#reset(IntBlockTermState,int).mjava","sourceNew":"    public PostingsEnum reset(IntBlockTermState termState, int flags) throws IOException {\n      docFreq = termState.docFreq;\n      totalTermFreq = indexHasFreq ? termState.totalTermFreq : docFreq;\n      docTermStartFP = termState.docStartFP;\n      skipOffset = termState.skipOffset;\n      singletonDocID = termState.singletonDocID;\n      if (docFreq > 1) {\n        if (docIn == null) {\n          // lazy init\n          docIn = startDocIn.clone();\n        }\n        docIn.seek(docTermStartFP);\n      }\n\n      doc = -1;\n      this.needsFreq = PostingsEnum.featureRequested(flags, PostingsEnum.FREQS);\n      this.isFreqsRead = true;\n      if (indexHasFreq == false || needsFreq == false) {\n        Arrays.fill(freqBuffer, 1);\n      }\n      accum = 0;\n      docUpto = 0;\n      nextSkipDoc = BLOCK_SIZE - 1; // we won't skip if target is found in first block\n      docBufferUpto = BLOCK_SIZE;\n      skipped = false;\n      return this;\n    }\n\n","sourceOld":"    public PostingsEnum reset(IntBlockTermState termState, int flags) throws IOException {\n      docFreq = termState.docFreq;\n      totalTermFreq = indexHasFreq ? termState.totalTermFreq : docFreq;\n      docTermStartFP = termState.docStartFP;\n      skipOffset = termState.skipOffset;\n      singletonDocID = termState.singletonDocID;\n      if (docFreq > 1) {\n        if (docIn == null) {\n          // lazy init\n          docIn = startDocIn.clone();\n        }\n        docIn.seek(docTermStartFP);\n      }\n\n      doc = -1;\n      this.needsFreq = PostingsEnum.featureRequested(flags, PostingsEnum.FREQS);\n      this.isFreqsRead = true;\n      if (indexHasFreq == false || needsFreq == false) {\n        Arrays.fill(freqBuffer, 1);\n      }\n      accum = 0;\n      docUpto = 0;\n      nextSkipDoc = BLOCK_SIZE - 1; // we won't skip if target is found in first block\n      docBufferUpto = BLOCK_SIZE;\n      skipped = false;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["a9089237f2fb93105f12a1135e60257f4cf8ed41"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9089237f2fb93105f12a1135e60257f4cf8ed41":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a9089237f2fb93105f12a1135e60257f4cf8ed41"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a9089237f2fb93105f12a1135e60257f4cf8ed41":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}