{"path":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#rewrite(IndexReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#rewrite(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#rewrite(IndexReader).mjava","sourceNew":"  /*(non-Javadoc) @see org.apache.lucene.search.Query#rewrite(org.apache.lucene.index.IndexReader) */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    CustomScoreQuery clone = null;\n    \n    final Query sq = subQuery.rewrite(reader);\n    if (sq != subQuery) {\n      clone = (CustomScoreQuery) clone();\n      clone.subQuery = sq;\n    }\n\n    for(int i = 0; i < valSrcQueries.length; i++) {\n      final ValueSourceQuery v = (ValueSourceQuery) valSrcQueries[i].rewrite(reader);\n      if (v != valSrcQueries[i]) {\n        if (clone == null) clone = (CustomScoreQuery) clone();\n        clone.valSrcQueries[i] = v;\n      }\n    }\n    \n    return (clone == null) ? this : clone;\n  }\n\n","sourceOld":"  /*(non-Javadoc) @see org.apache.lucene.search.Query#rewrite(org.apache.lucene.index.IndexReader) */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    CustomScoreQuery clone = null;\n    \n    final Query sq = subQuery.rewrite(reader);\n    if (sq != subQuery) {\n      clone = (CustomScoreQuery) clone();\n      clone.subQuery = sq;\n    }\n\n    for(int i = 0; i < valSrcQueries.length; i++) {\n      final ValueSourceQuery v = (ValueSourceQuery) valSrcQueries[i].rewrite(reader);\n      if (v != valSrcQueries[i]) {\n        if (clone == null) clone = (CustomScoreQuery) clone();\n        clone.valSrcQueries[i] = v;\n      }\n    }\n    \n    return (clone == null) ? this : clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8fda790e002fff32e201cbd0f7bed4c2b333a64","date":1309401082,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#rewrite(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#rewrite(IndexReader).mjava","sourceNew":"  /*(non-Javadoc) @see org.apache.lucene.search.Query#rewrite(org.apache.lucene.index.IndexReader) */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    CustomScoreQuery clone = null;\n    \n    final Query sq = subQuery.rewrite(reader);\n    if (sq != subQuery) {\n      clone = (CustomScoreQuery) clone();\n      clone.subQuery = sq;\n    }\n\n    for(int i = 0; i < scoringQueries.length; i++) {\n      final Query v = scoringQueries[i].rewrite(reader);\n      if (v != scoringQueries[i]) {\n        if (clone == null) clone = (CustomScoreQuery) clone();\n        clone.scoringQueries[i] = v;\n      }\n    }\n    \n    return (clone == null) ? this : clone;\n  }\n\n","sourceOld":"  /*(non-Javadoc) @see org.apache.lucene.search.Query#rewrite(org.apache.lucene.index.IndexReader) */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    CustomScoreQuery clone = null;\n    \n    final Query sq = subQuery.rewrite(reader);\n    if (sq != subQuery) {\n      clone = (CustomScoreQuery) clone();\n      clone.subQuery = sq;\n    }\n\n    for(int i = 0; i < valSrcQueries.length; i++) {\n      final ValueSourceQuery v = (ValueSourceQuery) valSrcQueries[i].rewrite(reader);\n      if (v != valSrcQueries[i]) {\n        if (clone == null) clone = (CustomScoreQuery) clone();\n        clone.valSrcQueries[i] = v;\n      }\n    }\n    \n    return (clone == null) ? this : clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  /*(non-Javadoc) @see org.apache.lucene.search.Query#rewrite(org.apache.lucene.index.IndexReader) */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    CustomScoreQuery clone = null;\n    \n    final Query sq = subQuery.rewrite(reader);\n    if (sq != subQuery) {\n      clone = (CustomScoreQuery) clone();\n      clone.subQuery = sq;\n    }\n\n    for(int i = 0; i < valSrcQueries.length; i++) {\n      final ValueSourceQuery v = (ValueSourceQuery) valSrcQueries[i].rewrite(reader);\n      if (v != valSrcQueries[i]) {\n        if (clone == null) clone = (CustomScoreQuery) clone();\n        clone.valSrcQueries[i] = v;\n      }\n    }\n    \n    return (clone == null) ? this : clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  /*(non-Javadoc) @see org.apache.lucene.search.Query#rewrite(org.apache.lucene.index.IndexReader) */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    CustomScoreQuery clone = null;\n    \n    final Query sq = subQuery.rewrite(reader);\n    if (sq != subQuery) {\n      clone = (CustomScoreQuery) clone();\n      clone.subQuery = sq;\n    }\n\n    for(int i = 0; i < valSrcQueries.length; i++) {\n      final ValueSourceQuery v = (ValueSourceQuery) valSrcQueries[i].rewrite(reader);\n      if (v != valSrcQueries[i]) {\n        if (clone == null) clone = (CustomScoreQuery) clone();\n        clone.valSrcQueries[i] = v;\n      }\n    }\n    \n    return (clone == null) ? this : clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["9454a6510e2db155fb01faa5c049b06ece95fab9","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["9454a6510e2db155fb01faa5c049b06ece95fab9","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c8fda790e002fff32e201cbd0f7bed4c2b333a64","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}