{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(BytesRefHash,SliceByteStartArray,int,int,float,int,long).mjava","commits":[{"id":"30fd30bfbfa6b9e036bcd99c8339712e965d4a63","date":1351859294,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(BytesRefHash,SliceByteStartArray,int,int,float,int,long).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","sourceNew":"    public Info(BytesRefHash terms, SliceByteStartArray sliceArray, int numTokens, int numOverlapTokens, float boost, int lastPosition, long sumTotalTermFreq) {\n      this.terms = terms;\n      this.sliceArray = sliceArray; \n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.lastPosition = lastPosition;\n    }\n\n","sourceOld":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      long sum = 0;\n      for(Map.Entry<BytesRef,ArrayIntList> ent : terms.entrySet()) {\n        sum += ent.getValue().size();\n      }\n      sumTotalTermFreq = sum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2eceb3be6e29e3ad7ee08d5025a431c3812aa0d9","date":1392385887,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(BytesRefHash,SliceByteStartArray,int,int,float,int,int,long).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(BytesRefHash,SliceByteStartArray,int,int,float,int,long).mjava","sourceNew":"    public Info(BytesRefHash terms, SliceByteStartArray sliceArray, int numTokens, int numOverlapTokens, float boost, int lastPosition, int lastOffset, long sumTotalTermFreq) {\n      this.terms = terms;\n      this.sliceArray = sliceArray; \n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.lastPosition = lastPosition;\n      this.lastOffset = lastOffset;\n    }\n\n","sourceOld":"    public Info(BytesRefHash terms, SliceByteStartArray sliceArray, int numTokens, int numOverlapTokens, float boost, int lastPosition, long sumTotalTermFreq) {\n      this.terms = terms;\n      this.sliceArray = sliceArray; \n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.lastPosition = lastPosition;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2eceb3be6e29e3ad7ee08d5025a431c3812aa0d9"],"2eceb3be6e29e3ad7ee08d5025a431c3812aa0d9":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"]},"commit2Childs":{"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["2eceb3be6e29e3ad7ee08d5025a431c3812aa0d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2eceb3be6e29e3ad7ee08d5025a431c3812aa0d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}