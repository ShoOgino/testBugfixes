{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getWordsIterator();\n    assertNull(tf.getComparator());\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getWordsIterator();\n    assertNull(tf.getComparator());\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getWordsIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getWordsIterator();\n    assertNull(tf.getComparator());\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getEntryIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getWordsIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.shutdown();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getEntryIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getEntryIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer.commit();\n    writer.shutdown();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getEntryIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.commit();\n    writer.shutdown();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getEntryIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/TestHighFrequencyDictionary#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getEntryIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer.commit();\n    writer.shutdown();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new HighFrequencyDictionary(ir, \"bogus\", 0.1f);\n    BytesRefIterator tf = dictionary.getEntryIterator();\n    assertNull(tf.next());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}