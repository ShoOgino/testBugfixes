{"path":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare;\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare;\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare;\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare;\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare;\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare;\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/PlainTextDictionary.FileIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare.get();\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      boolean success = false;\n      BytesRef result;\n      try {\n        String line;\n        if ((line = in.readLine()) != null) {\n          spare.copyChars(line);\n          result = spare;\n        } else {\n          done = true;\n          IOUtils.close(in);\n          result = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      return result;\n    }\n\n","bugFix":["d334a3e8e6b94298d8cf2802a403a096c06f0b92"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}