{"path":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","commits":[{"id":"a493e6d0c3ad86bd55c0a1360d110142e948f2bd","date":1289406991,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PerFieldCodecWrapper.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsConsumer> it = consumers.iterator();\n      IOException err = null;\n      while (it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsConsumer> it = codecs.values().iterator();\n      IOException err = null;\n      while(it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":2,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PerFieldCodecWrapper.FieldsReader#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsConsumer> it = consumers.iterator();\n      IOException err = null;\n      while (it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsProducer> it = codecs.values().iterator();\n      IOException err = null;\n      while(it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsConsumer> it = consumers.iterator();\n      IOException err = null;\n      while (it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      IOUtils.closeSafely(false, consumers);\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsConsumer> it = consumers.iterator();\n      IOException err = null;\n      while (it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      IOUtils.closeSafely(false, consumers);\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsConsumer> it = consumers.iterator();\n      IOException err = null;\n      while (it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      IOUtils.closeSafely(false, consumers);\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      Iterator<FieldsConsumer> it = consumers.iterator();\n      IOException err = null;\n      while (it.hasNext()) {\n        try {\n          it.next().close();\n        } catch (IOException ioe) {\n          // keep first IOException we hit but keep\n          // closing the rest\n          if (err == null) {\n            err = ioe;\n          }\n        }\n      }\n      if (err != null) {\n        throw err;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      IOUtils.close(consumers);\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      IOUtils.closeSafely(false, consumers);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.FieldsConsumerAndID#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PerFieldCodecWrapper.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      fieldsConsumer.close();\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      IOUtils.close(consumers);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["efb7a19703a037c29e30440260d393500febc1f4"],"7b91922b55d15444d554721b352861d028eb8278":["24230fe54121f9be9d85f2c2067536296785e421"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd","efb7a19703a037c29e30440260d393500febc1f4"],"efb7a19703a037c29e30440260d393500febc1f4":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["85a883878c0af761245ab048babc63d099f835f3","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["7b91922b55d15444d554721b352861d028eb8278"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"efb7a19703a037c29e30440260d393500febc1f4":["24230fe54121f9be9d85f2c2067536296785e421","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","efb7a19703a037c29e30440260d393500febc1f4","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"85a883878c0af761245ab048babc63d099f835f3":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}