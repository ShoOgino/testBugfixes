{"path":"solr/core/src/java/org/apache/solr/rest/RestManager.RestManagerManagedResource#applyUpdatesToManagedData(Object).mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager.RestManagerManagedResource#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Registers a new {@link ManagedResource}.\n     *\n     * Called during PUT/POST processing to apply updates to the managed data passed from the client.\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      Map<String,String> info = (Map<String,String>)updates;      \n      // this is where we'd register a new ManagedResource\n      String implClass = info.get(\"class\");\n      String resourceId = info.get(\"resourceId\");\n      log.info(\"Creating a new ManagedResource of type {} at path {}\", \n          implClass, resourceId);\n      Class<? extends ManagedResource> clazz = \n          solrResourceLoader.findClass(implClass, ManagedResource.class);\n      \n      // add this new resource to the RestManager\n      restManager.addManagedResource(resourceId, clazz);\n\n      // we only store ManagedResources that don't have observers as those that do\n      // are already implicitly defined\n      List<Map<String,String>> managedList = new ArrayList<>();\n      for (ManagedResourceRegistration reg : restManager.registry.getRegistered()) {\n        if (reg.observers.isEmpty()) {\n          managedList.add(reg.getInfo());\n        }\n      }          \n      return managedList;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager.RestManagerManagedResource#applyUpdatesToManagedData(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager.RestManagerManagedResource#applyUpdatesToManagedData(Object).mjava","sourceNew":"    /**\n     * Registers a new {@link ManagedResource}.\n     *\n     * Called during PUT/POST processing to apply updates to the managed data passed from the client.\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      Map<String,String> info = (Map<String,String>)updates;\n      // this is where we'd register a new ManagedResource\n      String implClass = info.get(\"class\");\n      String resourceId = info.get(\"resourceId\");\n      log.info(\"Creating a new ManagedResource of type {} at path {}\",\n          implClass, resourceId);\n      Class<? extends ManagedResource> clazz =\n          solrResourceLoader.findClass(implClass, ManagedResource.class);\n\n      // add this new resource to the RestManager\n      restManager.addManagedResource(resourceId, clazz);\n\n      // we only store ManagedResources that don't have observers as those that do\n      // are already implicitly defined\n      List<Map<String,String>> managedList = new ArrayList<>();\n      for (ManagedResourceRegistration reg : restManager.registry.getRegistered()) {\n        if (reg.observers.isEmpty()) {\n          managedList.add(reg.getInfo());\n        }\n      }\n      return managedList;\n    }\n\n","sourceOld":"    /**\n     * Registers a new {@link ManagedResource}.\n     *\n     * Called during PUT/POST processing to apply updates to the managed data passed from the client.\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      Map<String,String> info = (Map<String,String>)updates;      \n      // this is where we'd register a new ManagedResource\n      String implClass = info.get(\"class\");\n      String resourceId = info.get(\"resourceId\");\n      log.info(\"Creating a new ManagedResource of type {} at path {}\", \n          implClass, resourceId);\n      Class<? extends ManagedResource> clazz = \n          solrResourceLoader.findClass(implClass, ManagedResource.class);\n      \n      // add this new resource to the RestManager\n      restManager.addManagedResource(resourceId, clazz);\n\n      // we only store ManagedResources that don't have observers as those that do\n      // are already implicitly defined\n      List<Map<String,String>> managedList = new ArrayList<>();\n      for (ManagedResourceRegistration reg : restManager.registry.getRegistered()) {\n        if (reg.observers.isEmpty()) {\n          managedList.add(reg.getInfo());\n        }\n      }          \n      return managedList;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}