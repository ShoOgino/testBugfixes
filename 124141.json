{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/analysis/AnalysisChainDialogFactory#analysisChain().mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/analysis/AnalysisChainDialogFactory#analysisChain().mjava","pathOld":"/dev/null","sourceNew":"  private JPanel analysisChain() {\n    JPanel panel = new JPanel(new GridBagLayout());\n    panel.setOpaque(false);\n\n    GridBagConstraints c = new GridBagConstraints();\n    c.fill = GridBagConstraints.HORIZONTAL;\n    c.insets = new Insets(5, 5, 5, 5);\n\n    c.gridx = 0;\n    c.gridy = 0;\n    c.weightx = 0.1;\n    c.weighty = 0.5;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.charfilters\")), c);\n\n    String[] charFilters = analyzer.getCharFilterFactories().stream().map(f -> f.getClass().getName()).toArray(String[]::new);\n    JList<String> charFilterList = new JList<>(charFilters);\n    charFilterList.setVisibleRowCount(charFilters.length == 0 ? 1 : Math.min(charFilters.length, 5));\n    c.gridx = 1;\n    c.gridy = 0;\n    c.weightx = 0.5;\n    c.weighty = 0.5;\n    panel.add(new JScrollPane(charFilterList), c);\n\n    c.gridx = 0;\n    c.gridy = 1;\n    c.weightx = 0.1;\n    c.weighty = 0.1;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.tokenizer\")), c);\n\n    String tokenizer = analyzer.getTokenizerFactory().getClass().getName();\n    JTextField tokenizerTF = new JTextField(tokenizer);\n    tokenizerTF.setColumns(30);\n    tokenizerTF.setEditable(false);\n    tokenizerTF.setPreferredSize(new Dimension(300, 25));\n    tokenizerTF.setBorder(BorderFactory.createLineBorder(Color.gray));\n    c.gridx = 1;\n    c.gridy = 1;\n    c.weightx = 0.5;\n    c.weighty = 0.1;\n    panel.add(tokenizerTF, c);\n\n    c.gridx = 0;\n    c.gridy = 2;\n    c.weightx = 0.1;\n    c.weighty = 0.5;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.tokenfilters\")), c);\n\n    String[] tokenFilters = analyzer.getTokenFilterFactories().stream().map(f -> f.getClass().getName()).toArray(String[]::new);\n    JList<String> tokenFilterList = new JList<>(tokenFilters);\n    tokenFilterList.setVisibleRowCount(tokenFilters.length == 0 ? 1 : Math.min(tokenFilters.length, 5));\n    tokenFilterList.setMinimumSize(new Dimension(300, 25));\n    c.gridx = 1;\n    c.gridy = 2;\n    c.weightx = 0.5;\n    c.weighty = 0.5;\n    panel.add(new JScrollPane(tokenFilterList), c);\n\n    return panel;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a1b9d0d0992557a1e5ce918e02fe32aeb267468","date":1561868844,"type":3,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/analysis/AnalysisChainDialogFactory#analysisChain().mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/analysis/AnalysisChainDialogFactory#analysisChain().mjava","sourceNew":"  private JPanel analysisChain() {\n    JPanel panel = new JPanel(new GridBagLayout());\n    panel.setOpaque(false);\n\n    GridBagConstraints c = new GridBagConstraints();\n    c.fill = GridBagConstraints.HORIZONTAL;\n    c.insets = new Insets(5, 5, 5, 5);\n\n    c.gridx = 0;\n    c.gridy = 0;\n    c.weightx = 0.1;\n    c.weighty = 0.5;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.charfilters\")), c);\n\n    String[] charFilters = analyzer.getCharFilterFactories().stream().map(f -> CharFilterFactory.findSPIName(f.getClass())).toArray(String[]::new);\n    JList<String> charFilterList = new JList<>(charFilters);\n    charFilterList.setVisibleRowCount(charFilters.length == 0 ? 1 : Math.min(charFilters.length, 5));\n    c.gridx = 1;\n    c.gridy = 0;\n    c.weightx = 0.5;\n    c.weighty = 0.5;\n    panel.add(new JScrollPane(charFilterList), c);\n\n    c.gridx = 0;\n    c.gridy = 1;\n    c.weightx = 0.1;\n    c.weighty = 0.1;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.tokenizer\")), c);\n\n    String tokenizer = TokenizerFactory.findSPIName(analyzer.getTokenizerFactory().getClass());\n    JTextField tokenizerTF = new JTextField(tokenizer);\n    tokenizerTF.setColumns(30);\n    tokenizerTF.setEditable(false);\n    tokenizerTF.setPreferredSize(new Dimension(300, 25));\n    tokenizerTF.setBorder(BorderFactory.createLineBorder(Color.gray));\n    c.gridx = 1;\n    c.gridy = 1;\n    c.weightx = 0.5;\n    c.weighty = 0.1;\n    panel.add(tokenizerTF, c);\n\n    c.gridx = 0;\n    c.gridy = 2;\n    c.weightx = 0.1;\n    c.weighty = 0.5;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.tokenfilters\")), c);\n\n    String[] tokenFilters = analyzer.getTokenFilterFactories().stream().map(f -> TokenFilterFactory.findSPIName(f.getClass())).toArray(String[]::new);\n    JList<String> tokenFilterList = new JList<>(tokenFilters);\n    tokenFilterList.setVisibleRowCount(tokenFilters.length == 0 ? 1 : Math.min(tokenFilters.length, 5));\n    tokenFilterList.setMinimumSize(new Dimension(300, 25));\n    c.gridx = 1;\n    c.gridy = 2;\n    c.weightx = 0.5;\n    c.weighty = 0.5;\n    panel.add(new JScrollPane(tokenFilterList), c);\n\n    return panel;\n  }\n\n","sourceOld":"  private JPanel analysisChain() {\n    JPanel panel = new JPanel(new GridBagLayout());\n    panel.setOpaque(false);\n\n    GridBagConstraints c = new GridBagConstraints();\n    c.fill = GridBagConstraints.HORIZONTAL;\n    c.insets = new Insets(5, 5, 5, 5);\n\n    c.gridx = 0;\n    c.gridy = 0;\n    c.weightx = 0.1;\n    c.weighty = 0.5;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.charfilters\")), c);\n\n    String[] charFilters = analyzer.getCharFilterFactories().stream().map(f -> f.getClass().getName()).toArray(String[]::new);\n    JList<String> charFilterList = new JList<>(charFilters);\n    charFilterList.setVisibleRowCount(charFilters.length == 0 ? 1 : Math.min(charFilters.length, 5));\n    c.gridx = 1;\n    c.gridy = 0;\n    c.weightx = 0.5;\n    c.weighty = 0.5;\n    panel.add(new JScrollPane(charFilterList), c);\n\n    c.gridx = 0;\n    c.gridy = 1;\n    c.weightx = 0.1;\n    c.weighty = 0.1;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.tokenizer\")), c);\n\n    String tokenizer = analyzer.getTokenizerFactory().getClass().getName();\n    JTextField tokenizerTF = new JTextField(tokenizer);\n    tokenizerTF.setColumns(30);\n    tokenizerTF.setEditable(false);\n    tokenizerTF.setPreferredSize(new Dimension(300, 25));\n    tokenizerTF.setBorder(BorderFactory.createLineBorder(Color.gray));\n    c.gridx = 1;\n    c.gridy = 1;\n    c.weightx = 0.5;\n    c.weighty = 0.1;\n    panel.add(tokenizerTF, c);\n\n    c.gridx = 0;\n    c.gridy = 2;\n    c.weightx = 0.1;\n    c.weighty = 0.5;\n    panel.add(new JLabel(MessageUtils.getLocalizedMessage(\"analysis.dialog.chain.label.tokenfilters\")), c);\n\n    String[] tokenFilters = analyzer.getTokenFilterFactories().stream().map(f -> f.getClass().getName()).toArray(String[]::new);\n    JList<String> tokenFilterList = new JList<>(tokenFilters);\n    tokenFilterList.setVisibleRowCount(tokenFilters.length == 0 ? 1 : Math.min(tokenFilters.length, 5));\n    tokenFilterList.setMinimumSize(new Dimension(300, 25));\n    c.gridx = 1;\n    c.gridy = 2;\n    c.weightx = 0.5;\n    c.weighty = 0.5;\n    panel.add(new JScrollPane(tokenFilterList), c);\n\n    return panel;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a1b9d0d0992557a1e5ce918e02fe32aeb267468":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a1b9d0d0992557a1e5ce918e02fe32aeb267468"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"4a1b9d0d0992557a1e5ce918e02fe32aeb267468":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["4a1b9d0d0992557a1e5ce918e02fe32aeb267468"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}