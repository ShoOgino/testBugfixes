{"path":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","commits":[{"id":"9ba07da07950fc728766b05e28f9b21754a4acce","date":1429110306,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void run() {\n      final long timeToStop = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(timeToRunSec);\n      while (System.currentTimeMillis() < timeToStop && failure.get() == null) {\n        createCollection(collectionName);\n        deleteCollection();\n        searchNonExistingCollection();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54bb8da55080e4569804e0661b83a3c72cbd8d4d","date":1429691126,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final long timeToStop = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(timeToRunSec);\n      while (System.currentTimeMillis() < timeToStop && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final long timeToStop = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(timeToRunSec);\n      while (System.currentTimeMillis() < timeToStop && failure.get() == null) {\n        createCollection(collectionName);\n        deleteCollection();\n        searchNonExistingCollection();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final TimeOut timeout = new TimeOut(timeToRunSec, TimeUnit.SECONDS);\n      while (! timeout.hasTimedOut() && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final long timeToStop = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(timeToRunSec);\n      while (System.currentTimeMillis() < timeToStop && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final TimeOut timeout = new TimeOut(timeToRunSec, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n      while (! timeout.hasTimedOut() && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final TimeOut timeout = new TimeOut(timeToRunSec, TimeUnit.SECONDS);\n      while (! timeout.hasTimedOut() && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final TimeOut timeout = new TimeOut(timeToRunSec, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n      while (! timeout.hasTimedOut() && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final TimeOut timeout = new TimeOut(timeToRunSec, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n      while (! timeout.hasTimedOut() && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConcurrentDeleteAndCreateCollectionTest.CreateDeleteCollectionThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final TimeOut timeout = new TimeOut(timeToRunSec, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n      while (! timeout.hasTimedOut() && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final TimeOut timeout = new TimeOut(timeToRunSec, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n      while (! timeout.hasTimedOut() && failure.get() == null) {\n        doWork();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"9ba07da07950fc728766b05e28f9b21754a4acce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["9ba07da07950fc728766b05e28f9b21754a4acce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ba07da07950fc728766b05e28f9b21754a4acce":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ba07da07950fc728766b05e28f9b21754a4acce"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}