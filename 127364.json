{"path":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.RetryNode#hashCode().mjava","commits":[{"id":"91e069c492cf4895697ef7b81df0ffb9a8bd4b48","date":1382134253,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.RetryNode#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.RetryNode#hashCode().mjava","sourceNew":"    @Override\n    public int hashCode() {\n      final int prime = 31;\n      int result = super.hashCode();\n      result = prime * result\n          + ((collection == null) ? 0 : collection.hashCode());\n      result = prime * result + ((shardId == null) ? 0 : shardId.hashCode());\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int hashCode() {\n      final int prime = 31;\n      int result = super.hashCode();\n      result = prime * result\n          + ((collection == null) ? 0 : collection.hashCode());\n      result = prime * result + ((shardId == null) ? 0 : shardId.hashCode());\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cf9c2ec975506bab465b6b2be92cb9bffc84d3","date":1533596209,"type":5,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.ForwardNode#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.RetryNode#hashCode().mjava","sourceNew":"    @Override\n    public int hashCode() {\n      final int prime = 31;\n      int result = super.hashCode();\n      result = prime * result\n          + ((collection == null) ? 0 : collection.hashCode());\n      result = prime * result + ((shardId == null) ? 0 : shardId.hashCode());\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int hashCode() {\n      final int prime = 31;\n      int result = super.hashCode();\n      result = prime * result\n          + ((collection == null) ? 0 : collection.hashCode());\n      result = prime * result + ((shardId == null) ? 0 : shardId.hashCode());\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0cf9c2ec975506bab465b6b2be92cb9bffc84d3"],"c0cf9c2ec975506bab465b6b2be92cb9bffc84d3":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["c0cf9c2ec975506bab465b6b2be92cb9bffc84d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c0cf9c2ec975506bab465b6b2be92cb9bffc84d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}