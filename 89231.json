{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","commits":[{"id":"fe999fc2d95d6fea71f960bf9556858387ba21f5","date":1363294860,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testErrorCases() throws Exception {\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/cores\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = getSolrAdmin().request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    \n    assertTrue(gotExp);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","sourceNew":"  @Test\n  public void testErrorCases() throws Exception {\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/cores\");\n    expectThrows(SolrException.class, () -> getSolrAdmin().request(request));\n  }\n\n","sourceOld":"  @Test\n  public void testErrorCases() throws Exception {\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/cores\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = getSolrAdmin().request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    \n    assertTrue(gotExp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","sourceNew":"  @Test\n  public void testErrorCases() throws Exception {\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/cores\");\n    expectThrows(SolrException.class, () -> getSolrAdmin().request(request));\n  }\n\n","sourceOld":"  @Test\n  public void testErrorCases() throws Exception {\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/cores\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = getSolrAdmin().request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    \n    assertTrue(gotExp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testErrorCases().mjava","sourceNew":"  @Test\n  public void testErrorCases() throws Exception {\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/cores\");\n    expectThrows(SolrException.class, () -> getSolrAdmin().request(request));\n  }\n\n","sourceOld":"  @Test\n  public void testErrorCases() throws Exception {\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/cores\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = getSolrAdmin().request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    \n    assertTrue(gotExp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe999fc2d95d6fea71f960bf9556858387ba21f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["fe999fc2d95d6fea71f960bf9556858387ba21f5"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["fe999fc2d95d6fea71f960bf9556858387ba21f5","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["fe999fc2d95d6fea71f960bf9556858387ba21f5","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"fe999fc2d95d6fea71f960bf9556858387ba21f5":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe999fc2d95d6fea71f960bf9556858387ba21f5"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}