{"path":"src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","commits":[{"id":"10b17ff7ad534c3b34a34944d80a87d217011d9c","date":1263262796,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writeArrayOpener(sz);\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writeArraySeparator();\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writeMapOpener(1);\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writeMapCloser();\n      }\n\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writeArrayOpener(sz);\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writeArraySeparator();\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writeMapOpener(1);\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writeMapCloser();\n      }\n\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writeArrayOpener(sz);\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writeArraySeparator();\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writeMapOpener(1);\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writeMapCloser();\n      }\n\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writeArrayOpener(sz);\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writeArraySeparator();\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writeMapOpener(1);\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writeMapCloser();\n      }\n\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}