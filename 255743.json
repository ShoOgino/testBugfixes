{"path":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ec890fad2ea96317f4429e0aa0085bb25673641","date":1326669938,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), termsFilePointer);\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), termsFilePointer);\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), termsFilePointer);\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), termsFilePointer);\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new IntsRef(), termsFilePointer);\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["1ec890fad2ea96317f4429e0aa0085bb25673641"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["1ec890fad2ea96317f4429e0aa0085bb25673641","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["1ec890fad2ea96317f4429e0aa0085bb25673641","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1ec890fad2ea96317f4429e0aa0085bb25673641":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["817882884229bace7dc5d1b75f6b0e4aa1e47122","3a119bbc8703c10faa329ec201c654b3a35a1e3e","5b6fdfce35d0adb18836cf8711abe487a934df33"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["1ec890fad2ea96317f4429e0aa0085bb25673641"],"1ec890fad2ea96317f4429e0aa0085bb25673641":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}