{"path":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"434ff4225627b937a533128f8746eb1e9009fc95","date":1153247240,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\r\n    RubyWriter w = new RubyWriter(writer, req, rsp);\r\n    w.writeResponse();\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c0e301b711811c6aaee90440cc1a7925fdd1a1e","date":1153259525,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    RubyWriter w = new RubyWriter(writer, req, rsp);\n    w.writeResponse();\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\r\n    RubyWriter w = new RubyWriter(writer, req, rsp);\r\n    w.writeResponse();\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8eb6c8a345eb88b08768b150ffd0bd8088827260","date":1161193988,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":" public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    RubyWriter w = new RubyWriter(writer, req, rsp);\n    w.writeResponse();\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    RubyWriter w = new RubyWriter(writer, req, rsp);\n    w.writeResponse();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a4448d83dfaeb6f97ff61f9e1e9b61f550afc39","date":1192829165,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":" public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    RubyWriter w = new RubyWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":" public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    RubyWriter w = new RubyWriter(writer, req, rsp);\n    w.writeResponse();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b17ff7ad534c3b34a34944d80a87d217011d9c","date":1263262796,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/RubyResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":" public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    RubyWriter w = new RubyWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":" public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    RubyWriter w = new RubyWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["434ff4225627b937a533128f8746eb1e9009fc95"],"434ff4225627b937a533128f8746eb1e9009fc95":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["6a4448d83dfaeb6f97ff61f9e1e9b61f550afc39"],"6a4448d83dfaeb6f97ff61f9e1e9b61f550afc39":["8eb6c8a345eb88b08768b150ffd0bd8088827260"],"8eb6c8a345eb88b08768b150ffd0bd8088827260":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["8eb6c8a345eb88b08768b150ffd0bd8088827260"],"434ff4225627b937a533128f8746eb1e9009fc95":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["434ff4225627b937a533128f8746eb1e9009fc95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":[],"6a4448d83dfaeb6f97ff61f9e1e9b61f550afc39":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"8eb6c8a345eb88b08768b150ffd0bd8088827260":["6a4448d83dfaeb6f97ff61f9e1e9b61f550afc39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["10b17ff7ad534c3b34a34944d80a87d217011d9c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}