{"path":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        weights.add(clauses.get(i).getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        weights.add(clauses.get(i).getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680afea24788497408a554fb2e56812496e8c7c4","date":1282663439,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        weights.add(clauses.get(i).getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        weights.add(clauses.get(i).getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":null,"sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":null,"sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["680afea24788497408a554fb2e56812496e8c7c4","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["680afea24788497408a554fb2e56812496e8c7c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"680afea24788497408a554fb2e56812496e8c7c4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","680afea24788497408a554fb2e56812496e8c7c4"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"680afea24788497408a554fb2e56812496e8c7c4":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["680afea24788497408a554fb2e56812496e8c7c4","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}