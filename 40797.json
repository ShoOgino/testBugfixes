{"path":"solr/core/src/java/org/apache/solr/response/ArrayOfNamedValuePairJSONWriter[JSONResponseWriter]#writeDouble(String,String).mjava","commits":[{"id":"be24bc5afb9111e35bec7963fc84f96ebd98d9ee","date":1477912779,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/ArrayOfNamedValuePairJSONWriter[JSONResponseWriter]#writeDouble(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeDouble(String name, String val) throws IOException {\n    ifNeededWriteTypeAsKey(\"double\");\n    super.writeDouble(name, val);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/ArrayOfNamedValuePairJSONWriter[JSONResponseWriter]#writeDouble(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeDouble(String name, String val) throws IOException {\n    ifNeededWriteTypeAsKey(\"double\");\n    super.writeDouble(name, val);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87f40a063571d1870bae89b6d191c3cb53b10f5e","date":1482933535,"type":5,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/ArrayOfNameTypeValueJSONWriter[JSONResponseWriter]#writeDouble(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/ArrayOfNamedValuePairJSONWriter[JSONResponseWriter]#writeDouble(String,String).mjava","sourceNew":"  @Override\n  public void writeDouble(String name, String val) throws IOException {\n    ifNeededWriteTypeAndValueKey(\"double\");\n    super.writeDouble(name, val);\n  }\n\n","sourceOld":"  @Override\n  public void writeDouble(String name, String val) throws IOException {\n    ifNeededWriteTypeAsKey(\"double\");\n    super.writeDouble(name, val);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/ArrayOfNamedValuePairJSONWriter[JSONResponseWriter]#writeDouble(String,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeDouble(String name, String val) throws IOException {\n    ifNeededWriteTypeAsKey(\"double\");\n    super.writeDouble(name, val);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"320888923ec13b91f53082558f01f4c9960dd226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87f40a063571d1870bae89b6d191c3cb53b10f5e"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["320888923ec13b91f53082558f01f4c9960dd226","87f40a063571d1870bae89b6d191c3cb53b10f5e"]},"commit2Childs":{"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["87f40a063571d1870bae89b6d191c3cb53b10f5e","320888923ec13b91f53082558f01f4c9960dd226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be24bc5afb9111e35bec7963fc84f96ebd98d9ee","320888923ec13b91f53082558f01f4c9960dd226"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"320888923ec13b91f53082558f01f4c9960dd226":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}