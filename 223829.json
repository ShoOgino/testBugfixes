{"path":"contrib/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","commits":[{"id":"1bcb8188c913f065f67695825687a2db25b423e7","date":1263497628,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","pathOld":"/dev/null","sourceNew":"  public void testTrecTopicsReader() throws Exception {\n    File workDir = new File(System.getProperty(\"benchmark.work.dir\",\"work\"));\n    assertTrue(\"Bad workDir: \" + workDir, \n        workDir.exists() && workDir.isDirectory());\n    \n    // <tests src dir> for topics/qrels files:\n    //  src/test/org/apache/lucene/benchmark/quality\n    File srcTestDir = new File(new File(new File(new File(new File(\n      new File(new File(workDir.getAbsoluteFile().getParentFile(),\n        \"src\"),\"test\"),\"org\"),\"apache\"),\"lucene\"),\"benchmark\"),\"quality\");\n    \n    // prepare topics\n    File topicsFile = new File(srcTestDir, \"trecTopics.txt\");\n    assertTrue(\"Bad topicsFile: \" + topicsFile, \n        topicsFile.exists() && topicsFile.isFile());\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new FileReader(topicsFile)));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c972e92a005a8b26f565dfaa00d04e46df5cb025","date":1266752436,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","pathOld":"contrib/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","sourceNew":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, \"UTF-8\")));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","sourceOld":"  public void testTrecTopicsReader() throws Exception {\n    File workDir = new File(System.getProperty(\"benchmark.work.dir\",\"work\"));\n    assertTrue(\"Bad workDir: \" + workDir, \n        workDir.exists() && workDir.isDirectory());\n    \n    // <tests src dir> for topics/qrels files:\n    //  src/test/org/apache/lucene/benchmark/quality\n    File srcTestDir = new File(new File(new File(new File(new File(\n      new File(new File(workDir.getAbsoluteFile().getParentFile(),\n        \"src\"),\"test\"),\"org\"),\"apache\"),\"lucene\"),\"benchmark\"),\"quality\");\n    \n    // prepare topics\n    File topicsFile = new File(srcTestDir, \"trecTopics.txt\");\n    assertTrue(\"Bad topicsFile: \" + topicsFile, \n        topicsFile.exists() && topicsFile.isFile());\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new FileReader(topicsFile)));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","pathOld":"contrib/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","sourceNew":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, \"UTF-8\")));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","sourceOld":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, \"UTF-8\")));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c972e92a005a8b26f565dfaa00d04e46df5cb025":["1bcb8188c913f065f67695825687a2db25b423e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c972e92a005a8b26f565dfaa00d04e46df5cb025"],"1bcb8188c913f065f67695825687a2db25b423e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bcb8188c913f065f67695825687a2db25b423e7"],"c972e92a005a8b26f565dfaa00d04e46df5cb025":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1bcb8188c913f065f67695825687a2db25b423e7":["c972e92a005a8b26f565dfaa00d04e46df5cb025"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}