{"path":"lucene/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","sourceNew":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","sourceOld":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","sourceNew":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","sourceOld":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}