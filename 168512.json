{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","commits":[{"id":"0622fbd990643ae4cacb693db6a0c82cf8916ae2","date":1397637446,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","pathOld":"/dev/null","sourceNew":"  public Boolean checkValid(String coll, int version){\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if(collection ==null) return null;\n    if(collection.getVersion() < version){\n      log.info(\"server older than client {}<{}\",collection.getVersion(),version);\n      DocCollection nu = getExternCollectionFresh(this, coll);\n      if(nu.getVersion()> collection.getVersion()){\n        updateExternCollection(nu);\n        collection = nu;\n      }\n    }\n    if(collection.getVersion() == version) return Boolean.TRUE;\n    log.info(\"wrong version from client {}!={} \",version, collection.getVersion());\n    return Boolean.FALSE;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5a233896b7f16ac9b4ed601ef8207d98f1f0500","date":1398857046,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","sourceNew":null,"sourceOld":"  public Boolean checkValid(String coll, int version){\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if(collection ==null) return null;\n    if(collection.getVersion() < version){\n      log.info(\"server older than client {}<{}\",collection.getVersion(),version);\n      DocCollection nu = getExternCollectionFresh(this, coll);\n      if(nu.getVersion()> collection.getVersion()){\n        updateExternCollection(nu);\n        collection = nu;\n      }\n    }\n    if(collection.getVersion() == version) return Boolean.TRUE;\n    log.info(\"wrong version from client {}!={} \",version, collection.getVersion());\n    return Boolean.FALSE;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6f693ed86f289b2e42b46684409b3997f2c264a","date":1404319832,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","pathOld":"/dev/null","sourceNew":"  public Boolean checkValid(String coll, int version){\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if(collection ==null) return null;\n    if(collection.getZNodeVersion() < version){\n      log.info(\"server older than client {}<{}\",collection.getZNodeVersion(),version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if(nu.getZNodeVersion()> collection.getZNodeVersion()){\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    if(collection.getZNodeVersion() == version) return Boolean.TRUE;\n    log.debug(\"wrong version from client {}!={} \",version, collection.getZNodeVersion());\n    return Boolean.FALSE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4c07fa58a256dccf8b95364855fd5e9ad4d1401","date":1404386015,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","sourceNew":null,"sourceOld":"  public Boolean checkValid(String coll, int version){\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if(collection ==null) return null;\n    if(collection.getZNodeVersion() < version){\n      log.info(\"server older than client {}<{}\",collection.getZNodeVersion(),version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if(nu.getZNodeVersion()> collection.getZNodeVersion()){\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    if(collection.getZNodeVersion() == version) return Boolean.TRUE;\n    log.debug(\"wrong version from client {}!={} \",version, collection.getZNodeVersion());\n    return Boolean.FALSE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279b175e5e66258442d2123a50f052219a9cc1b","date":1410531077,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","pathOld":"/dev/null","sourceNew":"  public Boolean checkValid(String coll, int version) {\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if (collection == null) return null;\n    if (collection.getZNodeVersion() < version) {\n      log.debug(\"server older than client {}<{}\", collection.getZNodeVersion(), version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if (nu.getZNodeVersion() > collection.getZNodeVersion()) {\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    \n    if (collection.getZNodeVersion() == version) {\n      return Boolean.TRUE;\n    }\n    \n    log.debug(\"wrong version from client {}!={} \", version, collection.getZNodeVersion());\n    \n    return Boolean.FALSE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e92ecc804db94989e3c224b898b8dc978ebb584f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"624a78aada85c97f657fe582ce06976b10067343","date":1420577629,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","sourceNew":"  public Boolean checkValid(String coll, int version) {\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if (collection == null) return null;\n    if (collection.getZNodeVersion() < version) {\n      log.debug(\"server older than client {}<{}\", collection.getZNodeVersion(), version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if (nu == null) return null;\n      if (nu.getZNodeVersion() > collection.getZNodeVersion()) {\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    \n    if (collection.getZNodeVersion() == version) {\n      return Boolean.TRUE;\n    }\n    \n    log.debug(\"wrong version from client {}!={} \", version, collection.getZNodeVersion());\n    \n    return Boolean.FALSE;\n  }\n\n","sourceOld":"  public Boolean checkValid(String coll, int version) {\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if (collection == null) return null;\n    if (collection.getZNodeVersion() < version) {\n      log.debug(\"server older than client {}<{}\", collection.getZNodeVersion(), version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if (nu.getZNodeVersion() > collection.getZNodeVersion()) {\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    \n    if (collection.getZNodeVersion() == version) {\n      return Boolean.TRUE;\n    }\n    \n    log.debug(\"wrong version from client {}!={} \", version, collection.getZNodeVersion());\n    \n    return Boolean.FALSE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a20a867de92263c94258f9778db64a5efc7956d","date":1424955868,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#compareStateVersions(String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","sourceNew":"  public Integer compareStateVersions(String coll, int version) {\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if (collection == null) return null;\n    if (collection.getZNodeVersion() < version) {\n      log.debug(\"server older than client {}<{}\", collection.getZNodeVersion(), version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if (nu == null) return -1 ;\n      if (nu.getZNodeVersion() > collection.getZNodeVersion()) {\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    \n    if (collection.getZNodeVersion() == version) {\n      return null;\n    }\n    \n    log.debug(\"wrong version from client {}!={} \", version, collection.getZNodeVersion());\n    \n    return collection.getZNodeVersion();\n  }\n\n","sourceOld":"  public Boolean checkValid(String coll, int version) {\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if (collection == null) return null;\n    if (collection.getZNodeVersion() < version) {\n      log.debug(\"server older than client {}<{}\", collection.getZNodeVersion(), version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if (nu == null) return null;\n      if (nu.getZNodeVersion() > collection.getZNodeVersion()) {\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    \n    if (collection.getZNodeVersion() == version) {\n      return Boolean.TRUE;\n    }\n    \n    log.debug(\"wrong version from client {}!={} \", version, collection.getZNodeVersion());\n    \n    return Boolean.FALSE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#checkValid(String,int).mjava","sourceNew":null,"sourceOld":"  public Boolean checkValid(String coll, int version) {\n    DocCollection collection = clusterState.getCollectionOrNull(coll);\n    if (collection == null) return null;\n    if (collection.getZNodeVersion() < version) {\n      log.debug(\"server older than client {}<{}\", collection.getZNodeVersion(), version);\n      DocCollection nu = getCollectionLive(this, coll);\n      if (nu == null) return null;\n      if (nu.getZNodeVersion() > collection.getZNodeVersion()) {\n        updateWatchedCollection(nu);\n        collection = nu;\n      }\n    }\n    \n    if (collection.getZNodeVersion() == version) {\n      return Boolean.TRUE;\n    }\n    \n    log.debug(\"wrong version from client {}!={} \", version, collection.getZNodeVersion());\n    \n    return Boolean.FALSE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["624a78aada85c97f657fe582ce06976b10067343","0a20a867de92263c94258f9778db64a5efc7956d"],"0a20a867de92263c94258f9778db64a5efc7956d":["624a78aada85c97f657fe582ce06976b10067343"],"a6f693ed86f289b2e42b46684409b3997f2c264a":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"624a78aada85c97f657fe582ce06976b10067343":["9279b175e5e66258442d2123a50f052219a9cc1b"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a20a867de92263c94258f9778db64a5efc7956d"],"9279b175e5e66258442d2123a50f052219a9cc1b":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0a20a867de92263c94258f9778db64a5efc7956d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a6f693ed86f289b2e42b46684409b3997f2c264a":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"],"624a78aada85c97f657fe582ce06976b10067343":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0a20a867de92263c94258f9778db64a5efc7956d"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["9279b175e5e66258442d2123a50f052219a9cc1b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"9279b175e5e66258442d2123a50f052219a9cc1b":["624a78aada85c97f657fe582ce06976b10067343"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}