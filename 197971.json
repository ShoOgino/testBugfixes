{"path":"src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","commits":[{"id":"6db660b56f04fdb2853d25cdee8ee0d36559a521","date":1233313968,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","pathOld":"/dev/null","sourceNew":"  public void testParallelReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, true);\n    final Directory dir2 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir2, true);\n    IndexReader r1 = IndexReader.open(dir1);\n    IndexReader r2 = IndexReader.open(dir2);\n\n    ParallelReader pr1 = new ParallelReader();\n    pr1.add(r1);\n    pr1.add(r2);\n\n    performDefaultTests(pr1);\n    pr1.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","sourceNew":"  public void testParallelReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, true);\n    final Directory dir2 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir2, true);\n    IndexReader r1 = IndexReader.open(dir1, false);\n    IndexReader r2 = IndexReader.open(dir2, false);\n\n    ParallelReader pr1 = new ParallelReader();\n    pr1.add(r1);\n    pr1.add(r2);\n\n    performDefaultTests(pr1);\n    pr1.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testParallelReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, true);\n    final Directory dir2 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir2, true);\n    IndexReader r1 = IndexReader.open(dir1);\n    IndexReader r2 = IndexReader.open(dir2);\n\n    ParallelReader pr1 = new ParallelReader();\n    pr1.add(r1);\n    pr1.add(r2);\n\n    performDefaultTests(pr1);\n    pr1.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","sourceNew":"  public void testParallelReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, true);\n    final Directory dir2 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir2, true);\n    IndexReader r1 = IndexReader.open(dir1, false);\n    IndexReader r2 = IndexReader.open(dir2, false);\n\n    ParallelReader pr1 = new ParallelReader();\n    pr1.add(r1);\n    pr1.add(r2);\n\n    performDefaultTests(pr1);\n    pr1.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testParallelReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, true);\n    final Directory dir2 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir2, true);\n    IndexReader r1 = IndexReader.open(dir1);\n    IndexReader r2 = IndexReader.open(dir2);\n\n    ParallelReader pr1 = new ParallelReader();\n    pr1.add(r1);\n    pr1.add(r2);\n\n    performDefaultTests(pr1);\n    pr1.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testParallelReader().mjava","sourceNew":"  public void testParallelReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, true);\n    final Directory dir2 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir2, true);\n    IndexReader r1 = IndexReader.open(dir1, false);\n    IndexReader r2 = IndexReader.open(dir2, false);\n\n    ParallelReader pr1 = new ParallelReader();\n    pr1.add(r1);\n    pr1.add(r2);\n\n    performDefaultTests(pr1);\n    pr1.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testParallelReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, true);\n    final Directory dir2 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir2, true);\n    IndexReader r1 = IndexReader.open(dir1, false);\n    IndexReader r2 = IndexReader.open(dir2, false);\n\n    ParallelReader pr1 = new ParallelReader();\n    pr1.add(r1);\n    pr1.add(r2);\n\n    performDefaultTests(pr1);\n    pr1.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["6db660b56f04fdb2853d25cdee8ee0d36559a521","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}