{"path":"lucene/core/src/test/org/apache/lucene/document/TestField#testTextFieldString().mjava","commits":[{"id":"3a3635dad24b0681f0088f2ef680456482cdb451","date":1344025573,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testTextFieldString().mjava","pathOld":"/dev/null","sourceNew":"  public void testTextFieldString() throws Exception {\n    Field fields[] = new Field[] {\n        new TextField(\"foo\", \"bar\", Field.Store.NO),\n        new TextField(\"foo\", \"bar\", Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      field.setBoost(5f);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      trySetFloatValue(field);\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      field.setStringValue(\"baz\");\n      field.setTokenStream(new CannedTokenStream(new Token(\"foo\", 0, 3)));\n      \n      assertEquals(\"baz\", field.stringValue());\n      assertEquals(5f, field.boost(), 0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testTextFieldString().mjava","pathOld":"/dev/null","sourceNew":"  public void testTextFieldString() throws Exception {\n    Field fields[] = new Field[] {\n        new TextField(\"foo\", \"bar\", Field.Store.NO),\n        new TextField(\"foo\", \"bar\", Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      field.setBoost(5f);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      trySetFloatValue(field);\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      field.setStringValue(\"baz\");\n      field.setTokenStream(new CannedTokenStream(new Token(\"foo\", 0, 3)));\n      \n      assertEquals(\"baz\", field.stringValue());\n      assertEquals(5f, field.boost(), 0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testTextFieldString().mjava","pathOld":"/dev/null","sourceNew":"  public void testTextFieldString() throws Exception {\n    Field fields[] = new Field[] {\n        new TextField(\"foo\", \"bar\", Field.Store.NO),\n        new TextField(\"foo\", \"bar\", Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      field.setBoost(5f);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      trySetFloatValue(field);\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      field.setStringValue(\"baz\");\n      field.setTokenStream(new CannedTokenStream(new Token(\"foo\", 0, 3)));\n      \n      assertEquals(\"baz\", field.stringValue());\n      assertEquals(5f, field.boost(), 0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testTextFieldString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testTextFieldString().mjava","sourceNew":"  public void testTextFieldString() throws Exception {\n    Field fields[] = new Field[] {\n        new TextField(\"foo\", \"bar\", Field.Store.NO),\n        new TextField(\"foo\", \"bar\", Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      trySetFloatValue(field);\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      field.setStringValue(\"baz\");\n      field.setTokenStream(new CannedTokenStream(new Token(\"foo\", 0, 3)));\n      \n      assertEquals(\"baz\", field.stringValue());\n    }\n  }\n\n","sourceOld":"  public void testTextFieldString() throws Exception {\n    Field fields[] = new Field[] {\n        new TextField(\"foo\", \"bar\", Field.Store.NO),\n        new TextField(\"foo\", \"bar\", Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      field.setBoost(5f);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      trySetFloatValue(field);\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      field.setStringValue(\"baz\");\n      field.setTokenStream(new CannedTokenStream(new Token(\"foo\", 0, 3)));\n      \n      assertEquals(\"baz\", field.stringValue());\n      assertEquals(5f, field.boost(), 0f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a3635dad24b0681f0088f2ef680456482cdb451"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a3635dad24b0681f0088f2ef680456482cdb451"],"acd9883560fd89e6448b2b447302fe543040cd4f":["3a3635dad24b0681f0088f2ef680456482cdb451"],"3a3635dad24b0681f0088f2ef680456482cdb451":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","3a3635dad24b0681f0088f2ef680456482cdb451"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"3a3635dad24b0681f0088f2ef680456482cdb451":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}