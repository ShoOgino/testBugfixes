{"path":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","commits":[{"id":"c55f8ed39db09042eb12b26e85d104958d4739a3","date":1332334591,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    Assert.assertEquals(1, result.getFailureCount());\n    String consoleOut = super.getSysErr() + \"\\n\\n\" + super.getSysOut();\n    Assert.assertTrue(consoleOut.contains(\"-Dtests.seed=\"));\n    Assert.assertTrue(consoleOut.contains(\"foobar\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ed97703eb37066163749ca2f635433a2f2184a5","date":1332623674,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","sourceNew":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    Assert.assertEquals(1, result.getFailureCount());\n    String consoleOut = super.getSysErr() + \"\\n\\n\" + super.getSysOut();\n    Assert.assertTrue(consoleOut.contains(\"-Dtests.seed=\"));\n    Assert.assertTrue(consoleOut.contains(\"-Dtestmethod=testFoo\"));\n    Assert.assertTrue(consoleOut.contains(\"foobar\"));\n  }\n\n","sourceOld":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    Assert.assertEquals(1, result.getFailureCount());\n    String consoleOut = super.getSysErr() + \"\\n\\n\" + super.getSysOut();\n    Assert.assertTrue(consoleOut.contains(\"-Dtests.seed=\"));\n    Assert.assertTrue(consoleOut.contains(\"foobar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","sourceNew":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    Assert.assertEquals(1, result.getFailureCount());\n    Failure f = result.getFailures().get(0);\n    String trace = f.getTrace();\n    Assert.assertTrue(trace.contains(\"SeedInfo.seed(\"));\n    Assert.assertTrue(trace.contains(\"foobar\"));\n  }\n\n","sourceOld":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    Assert.assertEquals(1, result.getFailureCount());\n    String consoleOut = super.getSysErr() + \"\\n\\n\" + super.getSysOut();\n    Assert.assertTrue(consoleOut.contains(\"-Dtests.seed=\"));\n    Assert.assertTrue(consoleOut.contains(\"-Dtestmethod=testFoo\"));\n    Assert.assertTrue(consoleOut.contains(\"foobar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518","date":1398331323,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","sourceNew":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    assertFailureCount(1, result);\n    Failure f = result.getFailures().get(0);\n    String trace = f.getTrace();\n    Assert.assertTrue(trace.contains(\"SeedInfo.seed(\"));\n    Assert.assertTrue(trace.contains(\"foobar\"));\n  }\n\n","sourceOld":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    Assert.assertEquals(1, result.getFailureCount());\n    Failure f = result.getFailures().get(0);\n    String trace = f.getTrace();\n    Assert.assertTrue(trace.contains(\"SeedInfo.seed(\"));\n    Assert.assertTrue(trace.contains(\"foobar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d524d41bd211f811312cf6639e3792dae4df6cbb","date":1398850727,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","sourceNew":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    assertFailureCount(1, result);\n    Failure f = result.getFailures().get(0);\n    String trace = f.getTrace();\n    Assert.assertTrue(trace.contains(\"SeedInfo.seed(\"));\n    Assert.assertTrue(trace.contains(\"foobar\"));\n  }\n\n","sourceOld":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    Assert.assertEquals(1, result.getFailureCount());\n    Failure f = result.getFailures().get(0);\n    String trace = f.getTrace();\n    Assert.assertTrue(trace.contains(\"SeedInfo.seed(\"));\n    Assert.assertTrue(trace.contains(\"foobar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/util/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestSeedFromUncaught#testUncaughtDumpsSeed().mjava","sourceNew":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    assertFailureCount(1, result);\n    Failure f = result.getFailures().get(0);\n    String trace = f.getTrace();\n    Assert.assertTrue(trace.contains(\"SeedInfo.seed(\"));\n    Assert.assertTrue(trace.contains(\"foobar\"));\n  }\n\n","sourceOld":"  /**\n   * Verify super method calls on {@link LuceneTestCase#setUp()}.\n   */\n  @Test\n  public void testUncaughtDumpsSeed() {\n    Result result = JUnitCore.runClasses(ThrowInUncaught.class);\n    assertFailureCount(1, result);\n    Failure f = result.getFailures().get(0);\n    String trace = f.getTrace();\n    Assert.assertTrue(trace.contains(\"SeedInfo.seed(\"));\n    Assert.assertTrue(trace.contains(\"foobar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ed97703eb37066163749ca2f635433a2f2184a5":["c55f8ed39db09042eb12b26e85d104958d4739a3"],"d524d41bd211f811312cf6639e3792dae4df6cbb":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0ed97703eb37066163749ca2f635433a2f2184a5"],"c55f8ed39db09042eb12b26e85d104958d4739a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"0ed97703eb37066163749ca2f635433a2f2184a5":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"d524d41bd211f811312cf6639e3792dae4df6cbb":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c55f8ed39db09042eb12b26e85d104958d4739a3"],"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d524d41bd211f811312cf6639e3792dae4df6cbb","e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c55f8ed39db09042eb12b26e85d104958d4739a3":["0ed97703eb37066163749ca2f635433a2f2184a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}