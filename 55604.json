{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanNearQuery#testBuilder().mjava","commits":[{"id":"d93cbfb813cfdd4c109bb21027667b71ad40e0a2","date":1438704905,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanNearQuery#testBuilder().mjava","pathOld":"/dev/null","sourceNew":"  public void testBuilder() throws Exception {\n\n    // Can't add subclauses from different fields\n    try {\n      SpanNearQuery.newOrderedNearQuery(\"field1\").addClause(new SpanTermQuery(new Term(\"field2\", \"term\")));\n      fail(\"Expected an error when adding a clause with a different field\");\n    }\n    catch (IllegalArgumentException e) {}\n\n    // Can't add gaps to unordered queries\n    try {\n      SpanNearQuery.newUnorderedNearQuery(\"field1\").addGap(1);\n      fail(\"Expected an error when adding a gap to an unordered query\");\n    }\n    catch (IllegalArgumentException e) {}\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanNearQuery#testBuilder().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanNearQuery#testBuilder().mjava","sourceNew":"  public void testBuilder() throws Exception {\n\n    // Can't add subclauses from different fields\n    expectThrows(IllegalArgumentException.class, () -> {\n      SpanNearQuery.newOrderedNearQuery(\"field1\").addClause(new SpanTermQuery(new Term(\"field2\", \"term\")));\n    });\n\n    // Can't add gaps to unordered queries\n    expectThrows(IllegalArgumentException.class, () -> {\n      SpanNearQuery.newUnorderedNearQuery(\"field1\").addGap(1);\n    });\n\n  }\n\n","sourceOld":"  public void testBuilder() throws Exception {\n\n    // Can't add subclauses from different fields\n    try {\n      SpanNearQuery.newOrderedNearQuery(\"field1\").addClause(new SpanTermQuery(new Term(\"field2\", \"term\")));\n      fail(\"Expected an error when adding a clause with a different field\");\n    }\n    catch (IllegalArgumentException e) {}\n\n    // Can't add gaps to unordered queries\n    try {\n      SpanNearQuery.newUnorderedNearQuery(\"field1\").addGap(1);\n      fail(\"Expected an error when adding a gap to an unordered query\");\n    }\n    catch (IllegalArgumentException e) {}\n\n  }\n\n","bugFix":["d93cbfb813cfdd4c109bb21027667b71ad40e0a2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d93cbfb813cfdd4c109bb21027667b71ad40e0a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["d93cbfb813cfdd4c109bb21027667b71ad40e0a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"d93cbfb813cfdd4c109bb21027667b71ad40e0a2":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d93cbfb813cfdd4c109bb21027667b71ad40e0a2"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}