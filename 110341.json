{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","commits":[{"id":"d374631bb6f5665bd5907a6186a9bb283a315f7d","date":1336345692,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","pathOld":"/dev/null","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4ef80fac452dc9fe7ee68e418183ebbeb8d4001c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ef80fac452dc9fe7ee68e418183ebbeb8d4001c","date":1370731787,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random());\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.shutdown();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.shutdown();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9c5c0e8e826d8fd169840564bcf8606cf81d15b","date":1473715404,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","sourceNew":null,"sourceOld":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","sourceNew":null,"sourceOld":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","sourceNew":null,"sourceOld":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testGiga().mjava","sourceNew":null,"sourceOld":"  public void testGiga() throws Exception {\n\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new SlowFuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ef80fac452dc9fe7ee68e418183ebbeb8d4001c":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d0ef034a4f10871667ae75181537775ddcf8ade4","89424def13674ea17829b41c5883c54ecc31a132"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["4ef80fac452dc9fe7ee68e418183ebbeb8d4001c"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d0ef034a4f10871667ae75181537775ddcf8ade4","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["d0ef034a4f10871667ae75181537775ddcf8ade4","b9c5c0e8e826d8fd169840564bcf8606cf81d15b"]},"commit2Childs":{"4ef80fac452dc9fe7ee68e418183ebbeb8d4001c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","b9c5c0e8e826d8fd169840564bcf8606cf81d15b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["4ef80fac452dc9fe7ee68e418183ebbeb8d4001c"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}