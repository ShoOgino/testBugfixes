{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#lookupPrefix(FST[Long],FST.BytesReader,BytesRef,Arc[Long]).mjava","commits":[{"id":"d0af0c31a687dd847212ae59f661152896c76516","date":1380727430,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#lookupPrefix(FST[Long],FST.BytesReader,BytesRef,Arc[Long]).mjava","pathOld":"/dev/null","sourceNew":"  // NOTE: copied from WFSTCompletionLookup & tweaked\n  private Long lookupPrefix(FST<Long> fst, FST.BytesReader bytesReader,\n                            BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n\n    Long output = fst.outputs.getNoOutput();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output = fst.outputs.add(output, arc.output);\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#lookupPrefix(FST[Long],FST.BytesReader,BytesRef,Arc[Long]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#lookupPrefix(FST[Long],FST.BytesReader,BytesRef,Arc[Long]).mjava","sourceNew":"  // NOTE: copied from WFSTCompletionLookup & tweaked\n  private Long lookupPrefix(FST<Long> fst, FST.BytesReader bytesReader,\n                            BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n\n    Long output = fst.outputs.getNoOutput();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output = fst.outputs.add(output, arc.output());\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":"  // NOTE: copied from WFSTCompletionLookup & tweaked\n  private Long lookupPrefix(FST<Long> fst, FST.BytesReader bytesReader,\n                            BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n\n    Long output = fst.outputs.getNoOutput();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output = fst.outputs.add(output, arc.output);\n      }\n    }\n    \n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#lookupPrefix(FST[Long],FST.BytesReader,BytesRef,Arc[Long]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#lookupPrefix(FST[Long],FST.BytesReader,BytesRef,Arc[Long]).mjava","sourceNew":"  // NOTE: copied from WFSTCompletionLookup & tweaked\n  private Long lookupPrefix(FST<Long> fst, FST.BytesReader bytesReader,\n                            BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n\n    Long output = fst.outputs.getNoOutput();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output = fst.outputs.add(output, arc.output());\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":"  // NOTE: copied from WFSTCompletionLookup & tweaked\n  private Long lookupPrefix(FST<Long> fst, FST.BytesReader bytesReader,\n                            BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n\n    Long output = fst.outputs.getNoOutput();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output = fst.outputs.add(output, arc.output);\n      }\n    }\n    \n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["d0af0c31a687dd847212ae59f661152896c76516"],"d0af0c31a687dd847212ae59f661152896c76516":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["d0af0c31a687dd847212ae59f661152896c76516","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54204c8a3ca26aeafd273139fc29baf70d0f6786"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0af0c31a687dd847212ae59f661152896c76516":["54204c8a3ca26aeafd273139fc29baf70d0f6786","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0af0c31a687dd847212ae59f661152896c76516"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}