{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#get(BytesRef,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#get(BytesRef,int).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefList}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefList}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      spare.offset = offsets[ord];\n      spare.length = ord == lastElement - 1 ? currentOffset - spare.offset\n          : offsets[ord + 1] - spare.offset;\n      pool.copyFrom(spare);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefList}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefList}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      spare.offset = offsets[ord];\n      spare.length = ord == lastElement - 1 ? currentOffset - spare.offset\n          : offsets[ord + 1] - spare.offset;\n      pool.copyFrom(spare);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30fd30bfbfa6b9e036bcd99c8339712e965d4a63","date":1351859294,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#get(BytesRef,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefList}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefList}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.copyFrom(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefList}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefList}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      spare.offset = offsets[ord];\n      spare.length = ord == lastElement - 1 ? currentOffset - spare.offset\n          : offsets[ord + 1] - spare.offset;\n      pool.copyFrom(spare);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":["a4e3a7c47e11ff0c156c646c37d20af7249370d2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ce73f585d17f53055185a19beb46db23d76e0ad9","date":1353077110,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#get(BytesRef,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.copyFrom(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefList}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefList}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.copyFrom(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#get(BytesRef,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefList}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefList}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.copyFrom(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63","ce73f585d17f53055185a19beb46db23d76e0ad9"],"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["ce73f585d17f53055185a19beb46db23d76e0ad9","d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}