{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","sourceNew":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","sourceOld":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ee056ec8e953928ee49a691090634eed1fa4d6b","date":1274852580,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String,boolean).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","sourceNew":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText, boolean quoted)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText, quoted);\n  }\n\n","sourceOld":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e4a95ed08968b85d84e9fba82424f1fd945fbb","date":1274878310,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String,boolean).mjava","sourceNew":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","sourceOld":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText, boolean quoted)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText, quoted);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f0d8e9a3f2e45eeea14a4803eaac02a0865097","date":1279565910,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String,boolean).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","sourceNew":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText, boolean quoted)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText, quoted);\n  }\n\n","sourceOld":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"5f4e87790277826a2aea119328600dfb07761f32":["33e4a95ed08968b85d84e9fba82424f1fd945fbb","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["55f0d8e9a3f2e45eeea14a4803eaac02a0865097"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["5f4e87790277826a2aea119328600dfb07761f32","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"5f4e87790277826a2aea119328600dfb07761f32":[],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}