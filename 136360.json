{"path":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","pathOld":"/dev/null","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","sourceNew":null,"sourceOld":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","pathOld":"src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","pathOld":"/dev/null","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","pathOld":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","pathOld":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","pathOld":"solr/src/java/org/apache/solr/search/FastLRUCache#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Serializable> lst = new SimpleOrderedMap<Serializable>();\n    if (cache == null)  return lst;\n    ConcurrentLRUCache.Stats stats = cache.getStats();\n    long lookups = stats.getCumulativeLookups();\n    long hits = stats.getCumulativeHits();\n    long inserts = stats.getCumulativePuts();\n    long evictions = stats.getCumulativeEvictions();\n    long size = stats.getCurrentSize();\n\n    lst.add(\"lookups\", lookups);\n    lst.add(\"hits\", hits);\n    lst.add(\"hitratio\", calcHitRatio(lookups, hits));\n    lst.add(\"inserts\", inserts);\n    lst.add(\"evictions\", evictions);\n    lst.add(\"size\", size);\n\n    lst.add(\"warmupTime\", warmupTime);\n\n    long clookups = 0;\n    long chits = 0;\n    long cinserts = 0;\n    long cevictions = 0;\n\n    // NOTE: It is safe to iterate on a CopyOnWriteArrayList\n    for (ConcurrentLRUCache.Stats statistiscs : statsList) {\n      clookups += statistiscs.getCumulativeLookups();\n      chits += statistiscs.getCumulativeHits();\n      cinserts += statistiscs.getCumulativePuts();\n      cevictions += statistiscs.getCumulativeEvictions();\n    }\n    lst.add(\"cumulative_lookups\", clookups);\n    lst.add(\"cumulative_hits\", chits);\n    lst.add(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n    lst.add(\"cumulative_inserts\", cinserts);\n    lst.add(\"cumulative_evictions\", cevictions);\n\n    if (showItems != 0) {\n      Map items = cache.getLatestAccessedItems( showItems == -1 ? Integer.MAX_VALUE : showItems );\n      for (Map.Entry e : (Set <Map.Entry>)items.entrySet()) {\n        Object k = e.getKey();\n        Object v = e.getValue();\n\n        String ks = \"item_\" + k;\n        String vs = v.toString();\n        lst.add(ks,vs);\n      }\n      \n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["1da8d55113b689b06716246649de6f62430f15c0","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}