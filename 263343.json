{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#skipField(int).mjava","commits":[{"id":"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30","date":1327936772,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#skipField(int).mjava","pathOld":"/dev/null","sourceNew":"  private void skipField(int bits) throws IOException {\n    final int numeric = bits & FIELD_IS_NUMERIC_MASK;\n    if (numeric != 0) {\n      switch(numeric) {\n        case FIELD_IS_NUMERIC_INT:\n        case FIELD_IS_NUMERIC_FLOAT:\n          fieldsStream.readInt();\n          return;\n        case FIELD_IS_NUMERIC_LONG:\n        case FIELD_IS_NUMERIC_DOUBLE:\n          fieldsStream.readLong();\n          return;\n        default: \n          throw new CorruptIndexException(\"Invalid numeric type: \" + Integer.toHexString(numeric));\n      }\n    } else {\n      final int length = fieldsStream.readVInt();\n      fieldsStream.seek(fieldsStream.getFilePointer() + length);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#skipField(int).mjava","pathOld":"/dev/null","sourceNew":"  private void skipField(int bits) throws IOException {\n    final int numeric = bits & FIELD_IS_NUMERIC_MASK;\n    if (numeric != 0) {\n      switch(numeric) {\n        case FIELD_IS_NUMERIC_INT:\n        case FIELD_IS_NUMERIC_FLOAT:\n          fieldsStream.readInt();\n          return;\n        case FIELD_IS_NUMERIC_LONG:\n        case FIELD_IS_NUMERIC_DOUBLE:\n          fieldsStream.readLong();\n          return;\n        default: \n          throw new CorruptIndexException(\"Invalid numeric type: \" + Integer.toHexString(numeric));\n      }\n    } else {\n      final int length = fieldsStream.readVInt();\n      fieldsStream.seek(fieldsStream.getFilePointer() + length);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#skipField(int).mjava","pathOld":"/dev/null","sourceNew":"  private void skipField(int bits) throws IOException {\n    final int numeric = bits & FIELD_IS_NUMERIC_MASK;\n    if (numeric != 0) {\n      switch(numeric) {\n        case FIELD_IS_NUMERIC_INT:\n        case FIELD_IS_NUMERIC_FLOAT:\n          fieldsStream.readInt();\n          return;\n        case FIELD_IS_NUMERIC_LONG:\n        case FIELD_IS_NUMERIC_DOUBLE:\n          fieldsStream.readLong();\n          return;\n        default: \n          throw new CorruptIndexException(\"Invalid numeric type: \" + Integer.toHexString(numeric));\n      }\n    } else {\n      final int length = fieldsStream.readVInt();\n      fieldsStream.seek(fieldsStream.getFilePointer() + length);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#skipField(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#skipField(int).mjava","sourceNew":"  private void skipField(int bits) throws IOException {\n    final int numeric = bits & FIELD_IS_NUMERIC_MASK;\n    if (numeric != 0) {\n      switch(numeric) {\n        case FIELD_IS_NUMERIC_INT:\n        case FIELD_IS_NUMERIC_FLOAT:\n          fieldsStream.readInt();\n          return;\n        case FIELD_IS_NUMERIC_LONG:\n        case FIELD_IS_NUMERIC_DOUBLE:\n          fieldsStream.readLong();\n          return;\n        default: \n          throw new CorruptIndexException(\"Invalid numeric type: \" + Integer.toHexString(numeric));\n      }\n    } else {\n      final int length = fieldsStream.readVInt();\n      fieldsStream.seek(fieldsStream.getFilePointer() + length);\n    }\n  }\n\n","sourceOld":"  private void skipField(int bits) throws IOException {\n    final int numeric = bits & FIELD_IS_NUMERIC_MASK;\n    if (numeric != 0) {\n      switch(numeric) {\n        case FIELD_IS_NUMERIC_INT:\n        case FIELD_IS_NUMERIC_FLOAT:\n          fieldsStream.readInt();\n          return;\n        case FIELD_IS_NUMERIC_LONG:\n        case FIELD_IS_NUMERIC_DOUBLE:\n          fieldsStream.readLong();\n          return;\n        default: \n          throw new CorruptIndexException(\"Invalid numeric type: \" + Integer.toHexString(numeric));\n      }\n    } else {\n      final int length = fieldsStream.readVInt();\n      fieldsStream.seek(fieldsStream.getFilePointer() + length);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30"],"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["410e066f093e407222d9681429d209084e783149","296df632fd63421ea20756fa11ad36fbc6f4c8a9","1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}