{"path":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder#getQuery(Element).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder#getQuery(Element).mjava","sourceNew":"\tpublic Query getQuery(Element e) throws ParserException {\n\t\t\n        String field=DOMUtils.getAttributeWithInheritanceOrFail(e,\"fieldName\");\n \t\tString value=DOMUtils.getNonBlankTextOrFail(e);\n  \t\tTermQuery tq = new TermQuery(new Term(field,value));\n  \t\ttq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\n  \t\treturn tq;\n\t\t\n\t}\n\n","sourceOld":"\tpublic Query getQuery(Element e) throws ParserException {\n\t\t\n        String field=DOMUtils.getAttributeWithInheritanceOrFail(e,\"fieldName\");\n \t\tString value=DOMUtils.getNonBlankTextOrFail(e);\n  \t\tTermQuery tq = new TermQuery(new Term(field,value));\n  \t\ttq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\n  \t\treturn tq;\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder#getQuery(Element).mjava","sourceNew":"  public Query getQuery(Element e) throws ParserException {\n    String field = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    String value = DOMUtils.getNonBlankTextOrFail(e);\n    TermQuery tq = new TermQuery(new Term(field, value));\n    tq.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n    return tq;\n  }\n\n","sourceOld":"\tpublic Query getQuery(Element e) throws ParserException {\n\t\t\n        String field=DOMUtils.getAttributeWithInheritanceOrFail(e,\"fieldName\");\n \t\tString value=DOMUtils.getNonBlankTextOrFail(e);\n  \t\tTermQuery tq = new TermQuery(new Term(field,value));\n  \t\ttq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\n  \t\treturn tq;\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/TermQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder#getQuery(Element).mjava","sourceNew":"  public Query getQuery(Element e) throws ParserException {\n    String field = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    String value = DOMUtils.getNonBlankTextOrFail(e);\n    TermQuery tq = new TermQuery(new Term(field, value));\n    tq.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n    return tq;\n  }\n\n","sourceOld":"  public Query getQuery(Element e) throws ParserException {\n    String field = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    String value = DOMUtils.getNonBlankTextOrFail(e);\n    TermQuery tq = new TermQuery(new Term(field, value));\n    tq.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n    return tq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}