{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData#getTotals(String).mjava","commits":[{"id":"226abb667f503323e0d9473af1883fa03ef3a3fd","date":1163596173,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData#getTotals(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Get total values from all data points of a given type. */\n  public TimeData getTotals(String label) {\n    Vector v = (Vector) data.get(label);\n      if (v == null)\n      {\n          return null;\n      }\n    TimeData res = new TimeData(\"TOTAL \" + label);\n    for (int i = 0; i < v.size(); i++) {\n      TimeData td = (TimeData) v.get(i);\n      res.count += td.count;\n      res.elapsed += td.elapsed;\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData#getTotals(String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData#getTotals(String).mjava","sourceNew":"  /** Get total values from all data points of a given type. */\n  public TimeData getTotals(String label) {\n    Vector<TimeData> v = data.get(label);\n      if (v == null)\n      {\n          return null;\n      }\n    TimeData res = new TimeData(\"TOTAL \" + label);\n    for (int i = 0; i < v.size(); i++) {\n      TimeData td = v.get(i);\n      res.count += td.count;\n      res.elapsed += td.elapsed;\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Get total values from all data points of a given type. */\n  public TimeData getTotals(String label) {\n    Vector v = (Vector) data.get(label);\n      if (v == null)\n      {\n          return null;\n      }\n    TimeData res = new TimeData(\"TOTAL \" + label);\n    for (int i = 0; i < v.size(); i++) {\n      TimeData td = (TimeData) v.get(i);\n      res.count += td.count;\n      res.elapsed += td.elapsed;\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData#getTotals(String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData#getTotals(String).mjava","sourceNew":"  /** Get total values from all data points of a given type. */\n  public TimeData getTotals(String label) {\n    Vector<TimeData> v = data.get(label);\n      if (v == null)\n      {\n          return null;\n      }\n    TimeData res = new TimeData(\"TOTAL \" + label);\n    for (int i = 0; i < v.size(); i++) {\n      TimeData td = v.get(i);\n      res.count += td.count;\n      res.elapsed += td.elapsed;\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Get total values from all data points of a given type. */\n  public TimeData getTotals(String label) {\n    Vector<TimeData> v = data.get(label);\n      if (v == null)\n      {\n          return null;\n      }\n    TimeData res = new TimeData(\"TOTAL \" + label);\n    for (int i = 0; i < v.size(); i++) {\n      TimeData td = v.get(i);\n      res.count += td.count;\n      res.elapsed += td.elapsed;\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"226abb667f503323e0d9473af1883fa03ef3a3fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["226abb667f503323e0d9473af1883fa03ef3a3fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4e1ce9be74263e9659aad8a6ee1f213193710b71"]},"commit2Childs":{"226abb667f503323e0d9473af1883fa03ef3a3fd":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["226abb667f503323e0d9473af1883fa03ef3a3fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}