{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","commits":[{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"/dev/null","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = _TestUtil.getTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException\");\n    } catch (FileNotFoundException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException\");\n    } catch (FileNotFoundException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52","cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52","date":1370989568,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = _TestUtil.getTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = _TestUtil.getTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException\");\n    } catch (FileNotFoundException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException\");\n    } catch (FileNotFoundException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = TestUtil.getTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = _TestUtil.getTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = TestUtil.createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = TestUtil.getTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = TestUtil.createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = TestUtil.getTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    Files.delete(dirFile.toPath());\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    dirFile.delete();\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    Files.delete(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    File dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    Files.delete(dirFile.toPath());\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    Files.delete(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    assumeFalse(\"test deletes files directly\", TestUtil.hasVirusChecker(dir));\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9","date":1454454426,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (TestUtil.hasVirusChecker(dir)) {\n      dir.close();\n      assumeTrue(\"test deletes files directly\", false);\n    }\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    assumeFalse(\"test deletes files directly\", TestUtil.hasVirusChecker(dir));\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34d6426cef006e0c3625cabe7a7ec1c2b08bc501","date":1454683374,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (TestUtil.hasVirusChecker(dir)) {\n      dir.close();\n      assumeTrue(\"test deletes files directly\", false);\n    }\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd8a7e622c1138188be79e193b1dc52f3f0889a5","date":1564419078,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    expectThrowsAnyOf(Arrays.asList(FileNotFoundException.class, NoSuchFileException.class),\n        () -> DirectoryReader.open(dir)\n    );\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    expectThrowsAnyOf(Arrays.asList(FileNotFoundException.class, NoSuchFileException.class),\n        () -> DirectoryReader.open(dir)\n    );\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testOpenReaderAfterDelete().mjava","sourceNew":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    expectThrowsAnyOf(Arrays.asList(FileNotFoundException.class, NoSuchFileException.class),\n        () -> DirectoryReader.open(dir)\n    );\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    expectThrowsAnyOf(Arrays.asList(FileNotFoundException.class, NoSuchFileException.class),\n        () -> DirectoryReader.open(dir)\n    );\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testOpenReaderAfterDelete() throws IOException {\n    Path dirFile = createTempDir(\"deletetest\");\n    Directory dir = newFSDirectory(dirFile);\n    if (dir instanceof BaseDirectoryWrapper) {\n      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!\n    }\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n\n    IOUtils.rm(dirFile);\n\n    // Make sure we still get a CorruptIndexException (not NPE):\n    try {\n      DirectoryReader.open(dir);\n      fail(\"expected FileNotFoundException/NoSuchFileException\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":["fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9"],"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"f8061ddd97f3352007d927dae445884a6f3d857b":["22989c36ff05c657df26dd3377b37c9ad35859bc","cd8a7e622c1138188be79e193b1dc52f3f0889a5"],"fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9":["6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cd8a7e622c1138188be79e193b1dc52f3f0889a5"]},"commit2Childs":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":[],"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"f4abec28b874149a7223e32cc7a01704c27790de":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9":["34d6426cef006e0c3625cabe7a7ec1c2b08bc501"],"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["cd8a7e622c1138188be79e193b1dc52f3f0889a5","f8061ddd97f3352007d927dae445884a6f3d857b","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["34d6426cef006e0c3625cabe7a7ec1c2b08bc501","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}