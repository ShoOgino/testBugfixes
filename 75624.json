{"path":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","commits":[{"id":"1cc5dbfc6e08aba50c1bec2e00de1f129f85db34","date":1351548783,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa4edb64993bc5b128a0fcbeae7dae892a714e8a","date":1356623317,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce58244be71dcade436d9313669202ebc249466b","date":1357224775,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3e7752e8a5e963c6939aaa99c36134147a5ece","date":1479805653,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"avgTimePerRequest\");\n    Double termTime = (Double) termStats.get(\"avgTimePerRequest\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"avgTimePerRequest\");\n    Double termTime = (Double) termStats.get(\"avgTimePerRequest\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"totalTime\");\n    Double termTime = (Double) termStats.get(\"totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    Map<String,Object> updateStats = MetricUtils.convertMetrics(updateHandler.getMetricRegistry(), updateHandler.getMetricNames());\n    Map<String,Object> termStats = MetricUtils.convertMetrics(termHandler.getMetricRegistry(), termHandler.getMetricNames());\n\n    Long updateTime = (Long) updateStats.get(\"UPDATE./update.totalTime\");\n    Long termTime = (Long) termStats.get(\"QUERY./terms.totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"avgTimePerRequest\");\n    Double termTime = (Double) termStats.get(\"avgTimePerRequest\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    Map<String,Object> updateStats = MetricUtils.convertMetrics(updateHandler.getMetricRegistry(), updateHandler.getMetricNames());\n    Map<String,Object> termStats = MetricUtils.convertMetrics(termHandler.getMetricRegistry(), termHandler.getMetricNames());\n\n    Long updateTime = (Long) updateStats.get(\"UPDATE./update.totalTime\");\n    Long termTime = (Long) termStats.get(\"QUERY./terms.totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    NamedList updateStats = updateHandler.getStatistics();\n    NamedList termStats = termHandler.getStatistics();\n\n    Double updateTime = (Double) updateStats.get(\"avgTimePerRequest\");\n    Double termTime = (Double) termStats.get(\"avgTimePerRequest\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/RequestHandlersTest#testStatistics().mjava","sourceNew":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    Map<String,Object> updateStats = updateHandler.getSolrMetricsContext().getMetricsSnapshot();\n    Map<String,Object> termStats = termHandler.getSolrMetricsContext().getMetricsSnapshot();\n\n    Long updateTime = (Long) updateStats.get(\"UPDATE./update.totalTime\");\n    Long termTime = (Long) termStats.get(\"QUERY./terms.totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","sourceOld":"  @Test\n  public void testStatistics() {\n    SolrCore core = h.getCore();\n    SolrRequestHandler updateHandler = core.getRequestHandler(\"/update\");\n    SolrRequestHandler termHandler = core.getRequestHandler(\"/terms\");\n\n    assertU(adoc(\"id\", \"47\",\n        \"text\", \"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"));\n    assertU(commit());\n\n    Map<String,Object> updateStats = MetricUtils.convertMetrics(updateHandler.getMetricRegistry(), updateHandler.getMetricNames());\n    Map<String,Object> termStats = MetricUtils.convertMetrics(termHandler.getMetricRegistry(), termHandler.getMetricNames());\n\n    Long updateTime = (Long) updateStats.get(\"UPDATE./update.totalTime\");\n    Long termTime = (Long) termStats.get(\"QUERY./terms.totalTime\");\n\n    assertFalse(\"RequestHandlers should not share statistics!\", updateTime.equals(termTime));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["ce58244be71dcade436d9313669202ebc249466b","19275ba31e621f6da1b83bf13af75233876fd3d4"],"727bb765ff2542275f6d31f67be18d7104bae148":["19275ba31e621f6da1b83bf13af75233876fd3d4","0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["816521ebaad5add9cb96bb88c577394e2938c40b"],"aa4edb64993bc5b128a0fcbeae7dae892a714e8a":["1cc5dbfc6e08aba50c1bec2e00de1f129f85db34"],"1cc5dbfc6e08aba50c1bec2e00de1f129f85db34":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ce58244be71dcade436d9313669202ebc249466b":["aa4edb64993bc5b128a0fcbeae7dae892a714e8a"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ce58244be71dcade436d9313669202ebc249466b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","727bb765ff2542275f6d31f67be18d7104bae148","816521ebaad5add9cb96bb88c577394e2938c40b"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"727bb765ff2542275f6d31f67be18d7104bae148":[],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa4edb64993bc5b128a0fcbeae7dae892a714e8a":["ce58244be71dcade436d9313669202ebc249466b"],"1cc5dbfc6e08aba50c1bec2e00de1f129f85db34":["aa4edb64993bc5b128a0fcbeae7dae892a714e8a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1cc5dbfc6e08aba50c1bec2e00de1f129f85db34"],"ce58244be71dcade436d9313669202ebc249466b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["0f3e7752e8a5e963c6939aaa99c36134147a5ece","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","727bb765ff2542275f6d31f67be18d7104bae148"],"816521ebaad5add9cb96bb88c577394e2938c40b":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}