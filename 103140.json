{"path":"solr/core/src/java/org/apache/solr/rest/RestManager.ManagedEndpoint#doInit(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager.ManagedEndpoint#doInit(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager.ManagedEndpoint#doInit().mjava","sourceNew":"    /**\n     * Initialize objects needed to handle a request to the REST API. Specifically,\n     * we lookup the RestManager using the ThreadLocal SolrRequestInfo and then\n     * dynamically locate the ManagedResource associated with the request URI.\n     */\n    @Override\n    public void doInit(SolrQueryRequest solrRequest, SolrQueryResponse solrResponse) {\n      super.doInit(solrRequest, solrResponse);\n\n      final String resourceId = resolveResourceId(solrRequest.getPath());\n      managedResource = restManager.getManagedResourceOrNull(resourceId);\n      if (managedResource == null) {\n        // see if we have a registered endpoint one-level up ...\n        int lastSlashAt = resourceId.lastIndexOf('/');\n        if (lastSlashAt != -1) {\n          String parentResourceId = resourceId.substring(0,lastSlashAt);          \n          log.info(\"Resource not found for {}, looking for parent: {}\",\n              resourceId, parentResourceId);          \n          managedResource = restManager.getManagedResourceOrNull(parentResourceId);\n          if (managedResource != null) {\n            // verify this resource supports child resources\n            if (!(managedResource instanceof ManagedResource.ChildResourceSupport)) {\n              String errMsg = String.format(Locale.ROOT,\n                  \"%s does not support child resources!\", managedResource.getResourceId());\n              throw new SolrException(ErrorCode.BAD_REQUEST, errMsg);\n            }\n            \n            childId = resourceId.substring(lastSlashAt+1);\n            log.info(\"Found parent resource {} for child: {}\", \n                parentResourceId, childId);\n          }\n        }\n      }    \n\n      if (managedResource == null) {\n        final String method = getSolrRequest().getHttpMethod();\n        if (\"PUT\".equals(method) || \"POST\".equals(method)) {\n          // delegate create requests to the RestManager\n          managedResource = restManager.endpoint;\n        } else {\n          throw new SolrException(ErrorCode.BAD_REQUEST,\n              \"No REST managed resource registered for path \"+resourceId);\n        }\n      }\n\n      log.info(\"Found ManagedResource [{}] for {}\", managedResource, resourceId);\n    }\n\n","sourceOld":"    /**\n     * Initialize objects needed to handle a request to the REST API. Specifically,\n     * we lookup the RestManager using the ThreadLocal SolrRequestInfo and then\n     * dynamically locate the ManagedResource associated with the request URI.\n     */\n    @Override\n    public void doInit() throws ResourceException {\n      super.doInit();      \n      \n      // get the relative path to the requested resource, which is\n      // needed to locate ManagedResource impls at runtime\n      String resourceId = resolveResourceId(getRequest());\n\n      // supports a request for a registered resource or its child\n      RestManager restManager = \n          RestManager.getRestManager(SolrRequestInfo.getRequestInfo());\n      \n      managedResource = restManager.getManagedResourceOrNull(resourceId);      \n      if (managedResource == null) {\n        // see if we have a registered endpoint one-level up ...\n        int lastSlashAt = resourceId.lastIndexOf('/');\n        if (lastSlashAt != -1) {\n          String parentResourceId = resourceId.substring(0,lastSlashAt);          \n          log.info(\"Resource not found for {}, looking for parent: {}\",\n              resourceId, parentResourceId);          \n          managedResource = restManager.getManagedResourceOrNull(parentResourceId);\n          if (managedResource != null) {\n            // verify this resource supports child resources\n            if (!(managedResource instanceof ManagedResource.ChildResourceSupport)) {\n              String errMsg = String.format(Locale.ROOT,\n                  \"%s does not support child resources!\", managedResource.getResourceId());\n              throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, errMsg);\n            }\n            \n            childId = resourceId.substring(lastSlashAt+1);\n            log.info(\"Found parent resource {} for child: {}\", \n                parentResourceId, childId);\n          }\n        }\n      }    \n      \n      if (managedResource == null) {\n        if (Method.PUT.equals(getMethod()) || Method.POST.equals(getMethod())) {\n          // delegate create requests to the RestManager\n          managedResource = restManager.endpoint;\n        } else {        \n          throw new ResourceException(Status.CLIENT_ERROR_NOT_FOUND, \n              \"No REST managed resource registered for path \"+resourceId);\n        }\n      }\n      \n      log.info(\"Found ManagedResource [{}] for {}\", managedResource, resourceId);\n    }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}