{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrClient#add(SolrInputDocument,int).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrClient#add(SolrInputDocument,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","sourceNew":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws IOException If there is a low-level I/O error.\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","sourceOld":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws IOException If there is a low-level I/O error.\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df","date":1425554964,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrClient#add(SolrInputDocument,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrClient#add(SolrInputDocument,int).mjava","sourceNew":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   *\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen\n   *\n   * @return an {@link org.apache.solr.client.solrj.response.UpdateResponse} from the server\n   *\n   * @throws IOException         if there is a communication error with the server\n   * @throws SolrServerException if there is an error on the server\n   *\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    return add(null, doc, commitWithinMs);\n  }\n\n","sourceOld":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws IOException If there is a low-level I/O error.\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrClient#add(SolrInputDocument,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrClient#add(SolrInputDocument,int).mjava","sourceNew":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   *\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen\n   *\n   * @return an {@link org.apache.solr.client.solrj.response.UpdateResponse} from the server\n   *\n   * @throws IOException         if there is a communication error with the server\n   * @throws SolrServerException if there is an error on the server\n   *\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    return add(null, doc, commitWithinMs);\n  }\n\n","sourceOld":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws IOException If there is a low-level I/O error.\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}