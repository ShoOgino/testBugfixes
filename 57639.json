{"path":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,Path,Path,Integer,Path,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,String,String,LogWatcherConfig,CloudConfig,Integer,int,int,boolean,String,SolrResourceLoader,Properties,PluginInfo[],MetricsConfig,PluginInfo).mjava","commits":[{"id":"a2be0a2886c76942ff986465eabde7b858895dc9","date":1555349228,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,Path,Path,Integer,Path,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,String,String,LogWatcherConfig,CloudConfig,Integer,int,int,boolean,String,SolrResourceLoader,Properties,PluginInfo[],MetricsConfig,PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,Path,Path,Path,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,String,String,LogWatcherConfig,CloudConfig,Integer,int,int,boolean,String,SolrResourceLoader,Properties,PluginInfo[],MetricsConfig,PluginInfo).mjava","sourceNew":"  private NodeConfig(String nodeName, Path coreRootDirectory, Path solrDataHome, Integer booleanQueryMaxClauseCount,\n                     Path configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass,\n                     String healthCheckHandlerClass, String infoHandlerClass, String configSetsHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, Integer coreLoadThreads, int replayUpdatesThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath, SolrResourceLoader loader,\n                     Properties solrProperties, PluginInfo[] backupRepositoryPlugins,\n                     MetricsConfig metricsConfig, PluginInfo transientCacheConfig) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.solrDataHome = solrDataHome;\n    this.booleanQueryMaxClauseCount = booleanQueryMaxClauseCount;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.healthCheckHandlerClass = healthCheckHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.configSetsHandlerClass = configSetsHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.replayUpdatesThreads = replayUpdatesThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n    this.backupRepositoryPlugins = backupRepositoryPlugins;\n    this.metricsConfig = metricsConfig;\n    this.transientCacheConfig = transientCacheConfig;\n\n    if (this.cloudConfig != null && this.getCoreLoadThreadCount(false) < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","sourceOld":"  private NodeConfig(String nodeName, Path coreRootDirectory, Path solrDataHome, Path configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass,\n                     String healthCheckHandlerClass, String infoHandlerClass, String configSetsHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, Integer coreLoadThreads, int replayUpdatesThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath, SolrResourceLoader loader,\n                     Properties solrProperties, PluginInfo[] backupRepositoryPlugins,\n                     MetricsConfig metricsConfig, PluginInfo transientCacheConfig) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.solrDataHome = solrDataHome;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.healthCheckHandlerClass = healthCheckHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.configSetsHandlerClass = configSetsHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.replayUpdatesThreads = replayUpdatesThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n    this.backupRepositoryPlugins = backupRepositoryPlugins;\n    this.metricsConfig = metricsConfig;\n    this.transientCacheConfig = transientCacheConfig;\n\n    if (this.cloudConfig != null && this.getCoreLoadThreadCount(false) < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbaf96cfda5422c42955ce34344f0e01839894ea","date":1559675051,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,Path,Path,Integer,Path,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,String,String,LogWatcherConfig,CloudConfig,Integer,int,int,boolean,String,SolrResourceLoader,Properties,PluginInfo[],MetricsConfig,PluginInfo,PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,Path,Path,Integer,Path,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,String,String,LogWatcherConfig,CloudConfig,Integer,int,int,boolean,String,SolrResourceLoader,Properties,PluginInfo[],MetricsConfig,PluginInfo).mjava","sourceNew":"  private NodeConfig(String nodeName, Path coreRootDirectory, Path solrDataHome, Integer booleanQueryMaxClauseCount,\n                     Path configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass,\n                     String healthCheckHandlerClass, String infoHandlerClass, String configSetsHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, Integer coreLoadThreads, int replayUpdatesThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath, SolrResourceLoader loader,\n                     Properties solrProperties, PluginInfo[] backupRepositoryPlugins,\n                     MetricsConfig metricsConfig, PluginInfo transientCacheConfig, PluginInfo tracerConfig) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.solrDataHome = solrDataHome;\n    this.booleanQueryMaxClauseCount = booleanQueryMaxClauseCount;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.healthCheckHandlerClass = healthCheckHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.configSetsHandlerClass = configSetsHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.replayUpdatesThreads = replayUpdatesThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n    this.backupRepositoryPlugins = backupRepositoryPlugins;\n    this.metricsConfig = metricsConfig;\n    this.transientCacheConfig = transientCacheConfig;\n    this.tracerConfig = tracerConfig;\n\n    if (this.cloudConfig != null && this.getCoreLoadThreadCount(false) < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","sourceOld":"  private NodeConfig(String nodeName, Path coreRootDirectory, Path solrDataHome, Integer booleanQueryMaxClauseCount,\n                     Path configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass,\n                     String healthCheckHandlerClass, String infoHandlerClass, String configSetsHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, Integer coreLoadThreads, int replayUpdatesThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath, SolrResourceLoader loader,\n                     Properties solrProperties, PluginInfo[] backupRepositoryPlugins,\n                     MetricsConfig metricsConfig, PluginInfo transientCacheConfig) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.solrDataHome = solrDataHome;\n    this.booleanQueryMaxClauseCount = booleanQueryMaxClauseCount;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.healthCheckHandlerClass = healthCheckHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.configSetsHandlerClass = configSetsHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.replayUpdatesThreads = replayUpdatesThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n    this.backupRepositoryPlugins = backupRepositoryPlugins;\n    this.metricsConfig = metricsConfig;\n    this.transientCacheConfig = transientCacheConfig;\n\n    if (this.cloudConfig != null && this.getCoreLoadThreadCount(false) < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a2be0a2886c76942ff986465eabde7b858895dc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["a2be0a2886c76942ff986465eabde7b858895dc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cbaf96cfda5422c42955ce34344f0e01839894ea"]},"commit2Childs":{"a2be0a2886c76942ff986465eabde7b858895dc9":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a2be0a2886c76942ff986465eabde7b858895dc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}