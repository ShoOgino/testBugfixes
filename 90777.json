{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.DisjunctionMaxWeight#scorer(LeafReaderContext,Bits,boolean).mjava","commits":[{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.DisjunctionMaxWeight#scorer(LeafReaderContext,Bits,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.DisjunctionMaxWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    /** Create the scorer used to score our associated DisjunctionMaxQuery */\n    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      List<Scorer> scorers = new ArrayList<>();\n      for (Weight w : weights) {\n        // we will advance() subscorers\n        Scorer subScorer = w.scorer(context, acceptDocs, needsScores);\n        if (subScorer != null) {\n          scorers.add(subScorer);\n        }\n      }\n      if (scorers.isEmpty()) {\n        // no sub-scorers had any documents\n        return null;\n      } else if (scorers.size() == 1) {\n        // only one sub-scorer in this segment\n        return scorers.get(0);\n      } else {\n        return new DisjunctionMaxScorer(this, tieBreakerMultiplier, scorers.toArray(new Scorer[scorers.size()]));\n      }\n    }\n\n","sourceOld":"    /** Create the scorer used to score our associated DisjunctionMaxQuery */\n    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      List<Scorer> scorers = new ArrayList<>();\n      for (Weight w : weights) {\n        // we will advance() subscorers\n        Scorer subScorer = w.scorer(context, acceptDocs);\n        if (subScorer != null) {\n          scorers.add(subScorer);\n        }\n      }\n      if (scorers.isEmpty()) {\n        // no sub-scorers had any documents\n        return null;\n      } else if (scorers.size() == 1) {\n        // only one sub-scorer in this segment\n        return scorers.get(0);\n      } else {\n        return new DisjunctionMaxScorer(this, tieBreakerMultiplier, scorers.toArray(new Scorer[scorers.size()]));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.DisjunctionMaxWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.DisjunctionMaxWeight#scorer(LeafReaderContext,Bits,boolean).mjava","sourceNew":"    /** Create the scorer used to score our associated DisjunctionMaxQuery */\n    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      List<Scorer> scorers = new ArrayList<>();\n      for (Weight w : weights) {\n        // we will advance() subscorers\n        Scorer subScorer = w.scorer(context, acceptDocs);\n        if (subScorer != null) {\n          scorers.add(subScorer);\n        }\n      }\n      if (scorers.isEmpty()) {\n        // no sub-scorers had any documents\n        return null;\n      } else if (scorers.size() == 1) {\n        // only one sub-scorer in this segment\n        return scorers.get(0);\n      } else {\n        return new DisjunctionMaxScorer(this, tieBreakerMultiplier, scorers.toArray(new Scorer[scorers.size()]));\n      }\n    }\n\n","sourceOld":"    /** Create the scorer used to score our associated DisjunctionMaxQuery */\n    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      List<Scorer> scorers = new ArrayList<>();\n      for (Weight w : weights) {\n        // we will advance() subscorers\n        Scorer subScorer = w.scorer(context, acceptDocs, needsScores);\n        if (subScorer != null) {\n          scorers.add(subScorer);\n        }\n      }\n      if (scorers.isEmpty()) {\n        // no sub-scorers had any documents\n        return null;\n      } else if (scorers.size() == 1) {\n        // only one sub-scorer in this segment\n        return scorers.get(0);\n      } else {\n        return new DisjunctionMaxScorer(this, tieBreakerMultiplier, scorers.toArray(new Scorer[scorers.size()]));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb17639909a369c1e64866842e5c213440acc17e"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}