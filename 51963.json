{"path":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","commits":[{"id":"610ea64c35555f78954a3969b2df27aa3fd8343d","date":1413838070,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWithLocalParam() throws Exception {\n    assertEquals(\"foo\", QueryElevationComponent.stripLocalParams(\"foo\"));\n    assertEquals(\"foo\", QueryElevationComponent.stripLocalParams(\"{!param=value}foo\"));\n    assertEquals(\"\", QueryElevationComponent.stripLocalParams(\"{!param=value}\"));\n    assertEquals(\"{!notTerminated\", QueryElevationComponent.stripLocalParams(\"{!notTerminated\"));\n    assertEquals(\"{notLocalParam}foo\", QueryElevationComponent.stripLocalParams(\"{notLocalParam}foo\"));\n    assertEquals(null, QueryElevationComponent.stripLocalParams(null));\n\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959","date":1413904387,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","sourceNew":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testWithLocalParam() throws Exception {\n    assertEquals(\"foo\", QueryElevationComponent.stripLocalParams(\"foo\"));\n    assertEquals(\"foo\", QueryElevationComponent.stripLocalParams(\"{!param=value}foo\"));\n    assertEquals(\"\", QueryElevationComponent.stripLocalParams(\"{!param=value}\"));\n    assertEquals(\"{!notTerminated\", QueryElevationComponent.stripLocalParams(\"{!notTerminated\"));\n    assertEquals(\"{notLocalParam}foo\", QueryElevationComponent.stripLocalParams(\"{notLocalParam}foo\"));\n    assertEquals(null, QueryElevationComponent.stripLocalParams(null));\n\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":["610ea64c35555f78954a3969b2df27aa3fd8343d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","sourceNew":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","sourceNew":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testWithLocalParam().mjava","sourceNew":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testWithLocalParam() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND}AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n      assertQ(\"\", req(CommonParams.Q, \"{!q.op=AND v='AAAA'}\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='1']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[1]/bool[@name='[elevated]'][.='true']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"610ea64c35555f78954a3969b2df27aa3fd8343d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959"],"28288370235ed02234a64753cdbf0c6ec096304a":["fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959":["610ea64c35555f78954a3969b2df27aa3fd8343d"]},"commit2Childs":{"610ea64c35555f78954a3969b2df27aa3fd8343d":["fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["610ea64c35555f78954a3969b2df27aa3fd8343d","0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"fe1ca67cfc99f55eaa3e9e1e00ed8be9a61c9959":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}