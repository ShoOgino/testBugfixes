{"path":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScore) {\n          return subQueryScore + valSrcScore;\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpl) {\n          float valSrcScore = valSrcExpl == null ? 0 : valSrcExpl.getValue();\n          Explanation exp = new Explanation(valSrcScore + subQueryExpl.getValue(), \"custom score: sum of:\");\n          exp.addDetail(subQueryExpl);\n          if (valSrcExpl != null) {\n            exp.addDetail(valSrcExpl);\n          }\n          return exp;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScore) {\n          return subQueryScore + valSrcScore;\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpl) {\n          List<Explanation> subs = new ArrayList<>();\n          subs.add(subQueryExpl);\n          if (valSrcExpl != null) {\n            subs.add(valSrcExpl);\n          }\n          float valSrcScore = valSrcExpl == null ? 0 : valSrcExpl.getValue();\n          return Explanation.match(valSrcScore + subQueryExpl.getValue(), \"custom score: sum of:\", subs);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScore) {\n          return subQueryScore + valSrcScore;\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpl) {\n          float valSrcScore = valSrcExpl == null ? 0 : valSrcExpl.getValue();\n          Explanation exp = new Explanation(valSrcScore + subQueryExpl.getValue(), \"custom score: sum of:\");\n          exp.addDetail(subQueryExpl);\n          if (valSrcExpl != null) {\n            exp.addDetail(valSrcExpl);\n          }\n          return exp;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScore) {\n          return subQueryScore + valSrcScore;\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpl) {\n          List<Explanation> subs = new ArrayList<>();\n          subs.add(subQueryExpl);\n          if (valSrcExpl != null) {\n            subs.add(valSrcExpl);\n          }\n          float valSrcScore = valSrcExpl == null ? 0 : valSrcExpl.getValue();\n          return Explanation.match(valSrcScore + subQueryExpl.getValue(), \"custom score: sum of:\", subs);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a82662cae660e76ded4de1e9b451633e523d83e1":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["a82662cae660e76ded4de1e9b451633e523d83e1"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}