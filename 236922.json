{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#lastModified(Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#lastModified(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#lastModified(Directory).mjava","sourceNew":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory2) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory2) {\n        @Override\n        public Object doBody(String segmentFileName) throws IOException {\n          return Long.valueOf(directory2.fileModified(segmentFileName));\n        }\n      }.run()).longValue();\n  }\n\n","sourceOld":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory2) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory2) {\n        @Override\n        public Object doBody(String segmentFileName) throws IOException {\n          return Long.valueOf(directory2.fileModified(segmentFileName));\n        }\n      }.run()).longValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#lastModified(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory2) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory2) {\n        @Override\n        public Object doBody(String segmentFileName) throws IOException {\n          return Long.valueOf(directory2.fileModified(segmentFileName));\n        }\n      }.run()).longValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#lastModified(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory2) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory2) {\n        @Override\n        public Object doBody(String segmentFileName) throws IOException {\n          return Long.valueOf(directory2.fileModified(segmentFileName));\n        }\n      }.run()).longValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#lastModified(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory2) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory2) {\n        @Override\n        public Object doBody(String segmentFileName) throws IOException {\n          return Long.valueOf(directory2.fileModified(segmentFileName));\n        }\n      }.run()).longValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"893d07555f01912f57b453a320e4d46363a31b50":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["9454a6510e2db155fb01faa5c049b06ece95fab9","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"893d07555f01912f57b453a320e4d46363a31b50":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","893d07555f01912f57b453a320e4d46363a31b50","5b6fdfce35d0adb18836cf8711abe487a934df33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["893d07555f01912f57b453a320e4d46363a31b50","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}