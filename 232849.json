{"path":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","commits":[{"id":"df63e0c4264f6da210aa1c1c3cb609554f4f43af","date":1161929844,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void assertWildcardQueryEquals(String query, boolean lowercase, String result, boolean allowLeadingWildcard)\n    throws Exception {\n    QueryParser qp = getParser(null);\n    qp.setLowercaseExpandedTerms(lowercase);\n    qp.setAllowLeadingWildcard(allowLeadingWildcard);\n    Query q = qp.parse(query);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"WildcardQuery /\" + query + \"/ yielded /\" + s\n           + \"/, expecting /\" + result + \"/\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","sourceNew":"  public void assertWildcardQueryEquals(String query, boolean lowercase, String result, boolean allowLeadingWildcard)\n    throws Exception {\n    QueryParser qp = getParser(null);\n    qp.setLowercaseExpandedTerms(lowercase);\n    qp.setAllowLeadingWildcard(allowLeadingWildcard);\n    Query q = qp.parse(query);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"WildcardQuery /\" + query + \"/ yielded /\" + s\n           + \"/, expecting /\" + result + \"/\");\n    }\n  }\n\n","sourceOld":"  public void assertWildcardQueryEquals(String query, boolean lowercase, String result, boolean allowLeadingWildcard)\n    throws Exception {\n    QueryParser qp = getParser(null);\n    qp.setLowercaseExpandedTerms(lowercase);\n    qp.setAllowLeadingWildcard(allowLeadingWildcard);\n    Query q = qp.parse(query);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"WildcardQuery /\" + query + \"/ yielded /\" + s\n           + \"/, expecting /\" + result + \"/\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df63e0c4264f6da210aa1c1c3cb609554f4f43af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["df63e0c4264f6da210aa1c1c3cb609554f4f43af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df63e0c4264f6da210aa1c1c3cb609554f4f43af"],"df63e0c4264f6da210aa1c1c3cb609554f4f43af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}