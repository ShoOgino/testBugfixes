{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct the named stemming filter.\n   *\n   * Available stemmers are listed in {@link org.tartarus.snowball.ext}.\n   * The name of a stemmer is the part of the class name before \"Stemmer\",\n   * e.g., the stemmer in {@link org.tartarus.snowball.ext.EnglishStemmer} is named \"English\".\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {      \n      Class<?> stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}