{"path":"src/test/org/apache/lucene/search/TestRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#incrementToken().mjava","commits":[{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/TestRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#next(Token).mjava","sourceNew":"      public boolean incrementToken() throws IOException {\n        int count = input.read(buffer);\n        if (done)\n          return false;\n        else {\n          done = true;\n          if (count == 1) {\n            termAtt.termBuffer()[0] = buffer[0];\n            termAtt.setTermLength(1);\n          } else\n            termAtt.setTermLength(0);\n          return true;\n        }\n      }\n\n","sourceOld":"      public final Token next(final Token reusableToken) throws IOException {\n        int count = input.read(buffer);\n        if (done)\n          return null;\n        else {\n          done = true;\n          if (count == 1) {\n            reusableToken.termBuffer()[0] = buffer[0];\n            reusableToken.setTermLength(1);\n          } else\n            reusableToken.setTermLength(0);\n          return reusableToken;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/TestRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#incrementToken().mjava","sourceNew":"      public boolean incrementToken() throws IOException {\n        int count = input.read(buffer);\n        if (done)\n          return false;\n        else {\n          done = true;\n          if (count == 1) {\n            termAtt.termBuffer()[0] = buffer[0];\n            termAtt.setTermLength(1);\n          } else\n            termAtt.setTermLength(0);\n          return true;\n        }\n      }\n\n","sourceOld":"      public boolean incrementToken() throws IOException {\n        int count = input.read(buffer);\n        if (done)\n          return false;\n        else {\n          done = true;\n          if (count == 1) {\n            termAtt.termBuffer()[0] = buffer[0];\n            termAtt.setTermLength(1);\n          } else\n            termAtt.setTermLength(0);\n          return true;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f612096ab5275c4821d05f126bf45a89f4782b8":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f612096ab5275c4821d05f126bf45a89f4782b8"]},"commit2Childs":{"0f612096ab5275c4821d05f126bf45a89f4782b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}