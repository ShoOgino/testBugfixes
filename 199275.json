{"path":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","commits":[{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a configuration instance from an input stream. */\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    super(file, is, \"/config/\");\n    this.configFile = file;\n    defaultIndexConfig = new SolrIndexConfig(this, null, null);\n    mainIndexConfig = new SolrIndexConfig(this, \"mainIndex\", defaultIndexConfig);\n    \n    booleanQueryMaxClauseCount = getInt(\"query/maxBooleanClauses\", BooleanQuery.getMaxClauseCount());\n    filtOptEnabled = getBool(\"query/boolTofilterOptimizer/@enabled\", false);\n    filtOptCacheSize = getInt(\"query/boolTofilterOptimizer/@cacheSize\",32);\n    filtOptThreshold = getFloat(\"query/boolTofilterOptimizer/@threshold\",.05f);\n    \n    useFilterForSortedQuery = getBool(\"query/useFilterForSortedQuery\", false);\n    queryResultWindowSize = getInt(\"query/queryResultWindowSize\", 1);\n    queryResultMaxDocsCached = getInt(\"query/queryResultMaxDocsCached\", Integer.MAX_VALUE);\n    enableLazyFieldLoading = getBool(\"query/enableLazyFieldLoading\", false);\n\n    \n    filterCacheConfig = CacheConfig.getConfig(this, \"query/filterCache\");\n    queryResultCacheConfig = CacheConfig.getConfig(this, \"query/queryResultCache\");\n    documentCacheConfig = CacheConfig.getConfig(this, \"query/documentCache\");\n    userCacheConfigs = CacheConfig.getMultipleConfigs(this, \"query/cache\");\n    org.apache.solr.search.SolrIndexSearcher.initRegenerators(this);\n\n    hashSetInverseLoadFactor = 1.0f / getFloat(\"//HashDocSet/@loadFactor\",0.75f);\n    hashDocSetMaxSize= getInt(\"//HashDocSet/@maxSize\",-1);\n    \n    pingQueryParams = readPingQueryParams(this);\n    Config.log.info(\"Loaded SolrConfig: \" + file);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe3c163c8df3fb3e4248c30f8ae8034cc786589","date":1189317596,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","sourceNew":"  /** Creates a configuration instance from an input stream. */\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    super(file, is, \"/config/\");\n    this.configFile = file;\n    defaultIndexConfig = new SolrIndexConfig(this, null, null);\n    mainIndexConfig = new SolrIndexConfig(this, \"mainIndex\", defaultIndexConfig);\n    \n    booleanQueryMaxClauseCount = getInt(\"query/maxBooleanClauses\", BooleanQuery.getMaxClauseCount());\n    filtOptEnabled = getBool(\"query/boolTofilterOptimizer/@enabled\", false);\n    filtOptCacheSize = getInt(\"query/boolTofilterOptimizer/@cacheSize\",32);\n    filtOptThreshold = getFloat(\"query/boolTofilterOptimizer/@threshold\",.05f);\n    \n    useFilterForSortedQuery = getBool(\"query/useFilterForSortedQuery\", false);\n    queryResultWindowSize = getInt(\"query/queryResultWindowSize\", 1);\n    queryResultMaxDocsCached = getInt(\"query/queryResultMaxDocsCached\", Integer.MAX_VALUE);\n    enableLazyFieldLoading = getBool(\"query/enableLazyFieldLoading\", false);\n\n    \n    filterCacheConfig = CacheConfig.getConfig(this, \"query/filterCache\");\n    queryResultCacheConfig = CacheConfig.getConfig(this, \"query/queryResultCache\");\n    documentCacheConfig = CacheConfig.getConfig(this, \"query/documentCache\");\n    userCacheConfigs = CacheConfig.getMultipleConfigs(this, \"query/cache\");\n    org.apache.solr.search.SolrIndexSearcher.initRegenerators(this);\n\n    hashSetInverseLoadFactor = 1.0f / getFloat(\"//HashDocSet/@loadFactor\",0.75f);\n    hashDocSetMaxSize= getInt(\"//HashDocSet/@maxSize\",-1);\n    \n    pingQueryParams = readPingQueryParams(this);\n    Config.log.info(\"Loaded SolrConfig: \" + file);\n    \n    // TODO -- at solr 2.0. this should go away\n    config = this;\n  }\n\n","sourceOld":"  /** Creates a configuration instance from an input stream. */\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    super(file, is, \"/config/\");\n    this.configFile = file;\n    defaultIndexConfig = new SolrIndexConfig(this, null, null);\n    mainIndexConfig = new SolrIndexConfig(this, \"mainIndex\", defaultIndexConfig);\n    \n    booleanQueryMaxClauseCount = getInt(\"query/maxBooleanClauses\", BooleanQuery.getMaxClauseCount());\n    filtOptEnabled = getBool(\"query/boolTofilterOptimizer/@enabled\", false);\n    filtOptCacheSize = getInt(\"query/boolTofilterOptimizer/@cacheSize\",32);\n    filtOptThreshold = getFloat(\"query/boolTofilterOptimizer/@threshold\",.05f);\n    \n    useFilterForSortedQuery = getBool(\"query/useFilterForSortedQuery\", false);\n    queryResultWindowSize = getInt(\"query/queryResultWindowSize\", 1);\n    queryResultMaxDocsCached = getInt(\"query/queryResultMaxDocsCached\", Integer.MAX_VALUE);\n    enableLazyFieldLoading = getBool(\"query/enableLazyFieldLoading\", false);\n\n    \n    filterCacheConfig = CacheConfig.getConfig(this, \"query/filterCache\");\n    queryResultCacheConfig = CacheConfig.getConfig(this, \"query/queryResultCache\");\n    documentCacheConfig = CacheConfig.getConfig(this, \"query/documentCache\");\n    userCacheConfigs = CacheConfig.getMultipleConfigs(this, \"query/cache\");\n    org.apache.solr.search.SolrIndexSearcher.initRegenerators(this);\n\n    hashSetInverseLoadFactor = 1.0f / getFloat(\"//HashDocSet/@loadFactor\",0.75f);\n    hashDocSetMaxSize= getInt(\"//HashDocSet/@maxSize\",-1);\n    \n    pingQueryParams = readPingQueryParams(this);\n    Config.log.info(\"Loaded SolrConfig: \" + file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","sourceNew":"  @Deprecated\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException \n  {\n    this( null, file, is );\n  }\n\n","sourceOld":"  /** Creates a configuration instance from an input stream. */\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    super(file, is, \"/config/\");\n    this.configFile = file;\n    defaultIndexConfig = new SolrIndexConfig(this, null, null);\n    mainIndexConfig = new SolrIndexConfig(this, \"mainIndex\", defaultIndexConfig);\n    \n    booleanQueryMaxClauseCount = getInt(\"query/maxBooleanClauses\", BooleanQuery.getMaxClauseCount());\n    filtOptEnabled = getBool(\"query/boolTofilterOptimizer/@enabled\", false);\n    filtOptCacheSize = getInt(\"query/boolTofilterOptimizer/@cacheSize\",32);\n    filtOptThreshold = getFloat(\"query/boolTofilterOptimizer/@threshold\",.05f);\n    \n    useFilterForSortedQuery = getBool(\"query/useFilterForSortedQuery\", false);\n    queryResultWindowSize = getInt(\"query/queryResultWindowSize\", 1);\n    queryResultMaxDocsCached = getInt(\"query/queryResultMaxDocsCached\", Integer.MAX_VALUE);\n    enableLazyFieldLoading = getBool(\"query/enableLazyFieldLoading\", false);\n\n    \n    filterCacheConfig = CacheConfig.getConfig(this, \"query/filterCache\");\n    queryResultCacheConfig = CacheConfig.getConfig(this, \"query/queryResultCache\");\n    documentCacheConfig = CacheConfig.getConfig(this, \"query/documentCache\");\n    userCacheConfigs = CacheConfig.getMultipleConfigs(this, \"query/cache\");\n    org.apache.solr.search.SolrIndexSearcher.initRegenerators(this);\n\n    hashSetInverseLoadFactor = 1.0f / getFloat(\"//HashDocSet/@loadFactor\",0.75f);\n    hashDocSetMaxSize= getInt(\"//HashDocSet/@maxSize\",-1);\n    \n    pingQueryParams = readPingQueryParams(this);\n    Config.log.info(\"Loaded SolrConfig: \" + file);\n    \n    // TODO -- at solr 2.0. this should go away\n    config = this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","sourceNew":"  @Deprecated\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    this( new SolrResourceLoader(null), file, is );\n  }\n\n","sourceOld":"  @Deprecated\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException \n  {\n    this( null, file, is );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc6ab6902f8f70ae43365947ccf44c25986906d","date":1204603577,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","sourceNew":"  /** Creates a configuration instance from a configuration name and stream.\n   * A default resource loader will be created (@see SolrResourceLoader).\n   * If the stream is null, the resource loader will open the configuration stream.\n   * If the stream is not null, no attempt to load the resource will occur (the name is not used).\n   *@param name the configuration name\n   *@param is the configuration stream\n   */\n  public SolrConfig(String name, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    this( (SolrResourceLoader) null, name, is );\n  }\n\n","sourceOld":"  @Deprecated\n  public SolrConfig(String file, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    this( new SolrResourceLoader(null), file, is );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#SolrConfig(String,InputStream).mjava","sourceNew":"  /** Creates a configuration instance from a configuration name and stream.\n   * A default resource loader will be created (@see SolrResourceLoader).\n   * If the stream is null, the resource loader will open the configuration stream.\n   * If the stream is not null, no attempt to load the resource will occur (the name is not used).\n   *@param name the configuration name\n   *@param is the configuration stream\n   */\n  public SolrConfig(String name, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    this( (SolrResourceLoader) null, name, is );\n  }\n\n","sourceOld":"  /** Creates a configuration instance from a configuration name and stream.\n   * A default resource loader will be created (@see SolrResourceLoader).\n   * If the stream is null, the resource loader will open the configuration stream.\n   * If the stream is not null, no attempt to load the resource will occur (the name is not used).\n   *@param name the configuration name\n   *@param is the configuration stream\n   */\n  public SolrConfig(String name, InputStream is)\n  throws ParserConfigurationException, IOException, SAXException {\n    this( (SolrResourceLoader) null, name, is );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["6d6338c87060be5f66757a94945975f3bbd377a9"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6d6338c87060be5f66757a94945975f3bbd377a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["ad94625fb8d088209f46650c8097196fec67f00c"],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}