{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharStream> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharStream> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharStream> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharStream> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharStream> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19786ac48e7c7cb2da0d29218e579be4c750f8ff","date":1357748196,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43","date":1529312258,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr, false);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr, false);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#newCharFilterChain(Random,Reader).mjava","sourceNew":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr, false);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","sourceOld":"    private CharFilterSpec newCharFilterChain(Random random, Reader reader) {\n      CharFilterSpec spec = new CharFilterSpec();\n      spec.reader = reader;\n      StringBuilder descr = new StringBuilder();\n      int numFilters = random.nextInt(3);\n      for (int i = 0; i < numFilters; i++) {\n        while (true) {\n          final Constructor<? extends CharFilter> ctor = charfilters.get(random.nextInt(charfilters.size()));\n          final Object args[] = newCharFilterArgs(random, spec.reader, ctor.getParameterTypes());\n          if (broken(ctor, args)) {\n            continue;\n          }\n          reader = createComponent(ctor, args, descr);\n          if (reader != null) {\n            spec.reader = reader;\n            break;\n          }\n        }\n      }\n      spec.toString = descr.toString();\n      return spec;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19786ac48e7c7cb2da0d29218e579be4c750f8ff":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["19786ac48e7c7cb2da0d29218e579be4c750f8ff","b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43":["19786ac48e7c7cb2da0d29218e579be4c750f8ff"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["fc706b1e03a539d44d99998108feb684bb44cbb2","19786ac48e7c7cb2da0d29218e579be4c750f8ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["19786ac48e7c7cb2da0d29218e579be4c750f8ff","b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"]},"commit2Childs":{"19786ac48e7c7cb2da0d29218e579be4c750f8ff":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b8c072c5e1c6ed1643a8c71758930b6b13ccbd43","4e6354dd7c71fe122926fc53d7d29f715b1283db","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["19786ac48e7c7cb2da0d29218e579be4c750f8ff","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}