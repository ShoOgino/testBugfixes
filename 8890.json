{"path":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(LeafReader...).mjava","commits":[{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(LeafReader...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(IndexReader...).mjava","sourceNew":"  /** Calls {@link IndexWriter#addIndexes(LeafReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(LeafReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","sourceOld":"  /** Calls {@link IndexWriter#addIndexes(IndexReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(IndexReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(CodecReader...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(LeafReader...).mjava","sourceNew":"  /** Calls {@link IndexWriter#addIndexes(CodecReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(CodecReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","sourceOld":"  /** Calls {@link IndexWriter#addIndexes(LeafReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(LeafReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["505bff044e47a553f461b6f4484d1d08faf4ac85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}