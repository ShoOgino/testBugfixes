{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/Service#getFeed(GDataRequest,GDataResponse).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/Service#getFeed(GDataRequest,GDataResponse).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * Service method to retrieve a requested Feed. The feed will also be added to \n     * the given <code>FeedResponse</code> instance and can also be accessed \n     * via the <code>FeedResponse</code> object. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the requested feed \n     *  \n     * @throws ServiceException - \n     *             If the storage can not be accessed or the requested feed does \n     *             not exist. \n     */ \n    public abstract BaseFeed getFeed(final GDataRequest request, final GDataResponse response) \n            throws ServiceException; \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/Service#getFeed(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/Service#getFeed(GDataRequest,GDataResponse).mjava","sourceNew":"    /** \n     * Service method to retrieve a requested Feed. The feed will also be added to \n     * the given <code>FeedResponse</code> instance and can also be accessed \n     * via the <code>FeedResponse</code> object. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the requested feed \n     *  \n     * @throws ServiceException - \n     *             If the storage can not be accessed or the requested feed does \n     *             not exist. \n     */ \n    public abstract BaseFeed getFeed(final GDataRequest request, final GDataResponse response) \n            throws ServiceException; \n\n","sourceOld":"    /** \n     * Service method to retrieve a requested Feed. The feed will also be added to \n     * the given <code>FeedResponse</code> instance and can also be accessed \n     * via the <code>FeedResponse</code> object. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the requested feed \n     *  \n     * @throws ServiceException - \n     *             If the storage can not be accessed or the requested feed does \n     *             not exist. \n     */ \n    public abstract BaseFeed getFeed(final GDataRequest request, final GDataResponse response) \n            throws ServiceException; \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}