{"path":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrement().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrement().mjava","pathOld":"/dev/null","sourceNew":"  public void testPositionIncrement() throws Exception {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"a\", new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(\"the\", \"in\", \"are\", \"this\")));\n    qp.setEnablePositionIncrements(true);\n    String qtxt = \"\\\"the words in poisitions pos02578 are stopped in this phrasequery\\\"\";\n    //               0         2                      5           7  8\n    int expectedPositions[] = {1,3,4,6,9};\n    PhraseQuery pq = (PhraseQuery) qp.parse(qtxt);\n    //System.out.println(\"Query text: \"+qtxt);\n    //System.out.println(\"Result: \"+pq);\n    Term t[] = pq.getTerms();\n    int pos[] = pq.getPositions();\n    for (int i = 0; i < t.length; i++) {\n      //System.out.println(i+\". \"+t[i]+\"  pos: \"+pos[i]);\n      assertEquals(\"term \"+i+\" = \"+t[i]+\" has wrong term-position!\",expectedPositions[i],pos[i]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrement().mjava","pathOld":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrement().mjava","sourceNew":"  public void testPositionIncrement() throws Exception {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"a\", new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(\"the\", \"in\", \"are\", \"this\")));\n    qp.setEnablePositionIncrements(true);\n    String qtxt = \"\\\"the words in poisitions pos02578 are stopped in this phrasequery\\\"\";\n    //               0         2                      5           7  8\n    int expectedPositions[] = {1,3,4,6,9};\n    PhraseQuery pq = (PhraseQuery) qp.parse(qtxt);\n    //System.out.println(\"Query text: \"+qtxt);\n    //System.out.println(\"Result: \"+pq);\n    Term t[] = pq.getTerms();\n    int pos[] = pq.getPositions();\n    for (int i = 0; i < t.length; i++) {\n      //System.out.println(i+\". \"+t[i]+\"  pos: \"+pos[i]);\n      assertEquals(\"term \"+i+\" = \"+t[i]+\" has wrong term-position!\",expectedPositions[i],pos[i]);\n    }\n  }\n\n","sourceOld":"  public void testPositionIncrement() throws Exception {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"a\", new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(\"the\", \"in\", \"are\", \"this\")));\n    qp.setEnablePositionIncrements(true);\n    String qtxt = \"\\\"the words in poisitions pos02578 are stopped in this phrasequery\\\"\";\n    //               0         2                      5           7  8\n    int expectedPositions[] = {1,3,4,6,9};\n    PhraseQuery pq = (PhraseQuery) qp.parse(qtxt);\n    //System.out.println(\"Query text: \"+qtxt);\n    //System.out.println(\"Result: \"+pq);\n    Term t[] = pq.getTerms();\n    int pos[] = pq.getPositions();\n    for (int i = 0; i < t.length; i++) {\n      //System.out.println(i+\". \"+t[i]+\"  pos: \"+pos[i]);\n      assertEquals(\"term \"+i+\" = \"+t[i]+\" has wrong term-position!\",expectedPositions[i],pos[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}