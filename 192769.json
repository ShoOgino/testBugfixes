{"path":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetrics).mjava","commits":[{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetrics).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetrics metrics) {\n    this.metrics = metrics.getChildInfo(this);\n    // Metrics\n    numErrors = this.metrics.meter(this, \"errors\", getCategory().toString());\n    requests = this.metrics.counter(this, \"requests\", getCategory().toString());\n    numAuthenticated = this.metrics.counter(this, \"authenticated\",getCategory().toString());\n    numPassThrough = this.metrics.counter(this, \"passThrough\",  getCategory().toString());\n    numWrongCredentials = this.metrics.counter(this, \"failWrongCredentials\",getCategory().toString());\n    numMissingCredentials = this.metrics.counter(this,  \"failMissingCredentials\",getCategory().toString());\n    requestTimes = this.metrics.timer(this,\"requestTimes\", getCategory().toString());\n    totalTime = this.metrics.counter(this,\"totalTime\", getCategory().toString());\n    metricNames.addAll(Arrays.asList(\"errors\", \"requests\", \"authenticated\", \"passThrough\",\n        \"failWrongCredentials\", \"failMissingCredentials\", \"requestTimes\", \"totalTime\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb84bc9b527d348a4d5b6abb028ab8aae43e62ac","date":1566566638,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetrics).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetrics).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetrics metrics) {\n    this.metrics = metrics.getChildInfo(this);\n    // Metrics\n    numErrors = this.metrics.meter(this, \"errors\", getCategory().toString());\n    requests = this.metrics.counter(this, \"requests\", getCategory().toString());\n    numAuthenticated = this.metrics.counter(this, \"authenticated\",getCategory().toString());\n    numPassThrough = this.metrics.counter(this, \"passThrough\",  getCategory().toString());\n    numWrongCredentials = this.metrics.counter(this, \"failWrongCredentials\",getCategory().toString());\n    numMissingCredentials = this.metrics.counter(this,  \"failMissingCredentials\",getCategory().toString());\n    requestTimes = this.metrics.timer(this,\"requestTimes\", getCategory().toString());\n    totalTime = this.metrics.counter(this,\"totalTime\", getCategory().toString());\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics metrics) {\n    this.metrics = metrics.getChildInfo(this);\n    // Metrics\n    numErrors = this.metrics.meter(this, \"errors\", getCategory().toString());\n    requests = this.metrics.counter(this, \"requests\", getCategory().toString());\n    numAuthenticated = this.metrics.counter(this, \"authenticated\",getCategory().toString());\n    numPassThrough = this.metrics.counter(this, \"passThrough\",  getCategory().toString());\n    numWrongCredentials = this.metrics.counter(this, \"failWrongCredentials\",getCategory().toString());\n    numMissingCredentials = this.metrics.counter(this,  \"failMissingCredentials\",getCategory().toString());\n    requestTimes = this.metrics.timer(this,\"requestTimes\", getCategory().toString());\n    totalTime = this.metrics.counter(this,\"totalTime\", getCategory().toString());\n    metricNames.addAll(Arrays.asList(\"errors\", \"requests\", \"authenticated\", \"passThrough\",\n        \"failWrongCredentials\", \"failMissingCredentials\", \"requestTimes\", \"totalTime\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17c468812fc0c60f3d66b176339dc70564d8c3cb","date":1567918667,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetrics).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics metrics) {\n    this.metrics = metrics.getChildInfo(this);\n    // Metrics\n    numErrors = this.metrics.meter(this, \"errors\", getCategory().toString());\n    requests = this.metrics.counter(this, \"requests\", getCategory().toString());\n    numAuthenticated = this.metrics.counter(this, \"authenticated\",getCategory().toString());\n    numPassThrough = this.metrics.counter(this, \"passThrough\",  getCategory().toString());\n    numWrongCredentials = this.metrics.counter(this, \"failWrongCredentials\",getCategory().toString());\n    numMissingCredentials = this.metrics.counter(this,  \"failMissingCredentials\",getCategory().toString());\n    requestTimes = this.metrics.timer(this,\"requestTimes\", getCategory().toString());\n    totalTime = this.metrics.counter(this,\"totalTime\", getCategory().toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52275555c0ae3b55430cef26ad7fca3f02440944","date":1568033329,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetrics).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics metrics) {\n    this.metrics = metrics.getChildInfo(this);\n    // Metrics\n    numErrors = this.metrics.meter(this, \"errors\", getCategory().toString());\n    requests = this.metrics.counter(this, \"requests\", getCategory().toString());\n    numAuthenticated = this.metrics.counter(this, \"authenticated\",getCategory().toString());\n    numPassThrough = this.metrics.counter(this, \"passThrough\",  getCategory().toString());\n    numWrongCredentials = this.metrics.counter(this, \"failWrongCredentials\",getCategory().toString());\n    numMissingCredentials = this.metrics.counter(this,  \"failMissingCredentials\",getCategory().toString());\n    requestTimes = this.metrics.timer(this,\"requestTimes\", getCategory().toString());\n    totalTime = this.metrics.counter(this,\"totalTime\", getCategory().toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52275555c0ae3b55430cef26ad7fca3f02440944":["bb84bc9b527d348a4d5b6abb028ab8aae43e62ac","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"bb84bc9b527d348a4d5b6abb028ab8aae43e62ac":["a117d95183986014a31f25bb04e5464ca06d6068"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a117d95183986014a31f25bb04e5464ca06d6068":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["bb84bc9b527d348a4d5b6abb028ab8aae43e62ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52275555c0ae3b55430cef26ad7fca3f02440944"]},"commit2Childs":{"52275555c0ae3b55430cef26ad7fca3f02440944":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb84bc9b527d348a4d5b6abb028ab8aae43e62ac":["52275555c0ae3b55430cef26ad7fca3f02440944","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a117d95183986014a31f25bb04e5464ca06d6068"],"a117d95183986014a31f25bb04e5464ca06d6068":["bb84bc9b527d348a4d5b6abb028ab8aae43e62ac"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["52275555c0ae3b55430cef26ad7fca3f02440944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}