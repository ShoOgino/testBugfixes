{"path":"lucene/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#setMaxSmallSegments(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#setMaxSmallSegments(int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#setMaxSmallSegments(int).mjava","sourceNew":"  public void setMaxSmallSegments(int maxSmallSegments) {\n    if (maxSmallSegments < getMergeFactor()) {\n      throw new IllegalArgumentException(\"maxSmallSegments cannot be less than mergeFactor\");\n    }    \n    _maxSmallSegments = maxSmallSegments;\n    _maxSegments = _numLargeSegments + _maxSmallSegments;\n  }\n\n","sourceOld":"  public void setMaxSmallSegments(int maxSmallSegments) {\n    if (maxSmallSegments < getMergeFactor()) {\n      throw new IllegalArgumentException(\"maxSmallSegments cannot be less than mergeFactor\");\n    }    \n    _maxSmallSegments = maxSmallSegments;\n    _maxSegments = _numLargeSegments + _maxSmallSegments;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03f9c72dc0e9082b70769643013a67c27bb9f444","date":1343580107,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#setMaxSmallSegments(int).mjava","sourceNew":null,"sourceOld":"  public void setMaxSmallSegments(int maxSmallSegments) {\n    if (maxSmallSegments < getMergeFactor()) {\n      throw new IllegalArgumentException(\"maxSmallSegments cannot be less than mergeFactor\");\n    }    \n    _maxSmallSegments = maxSmallSegments;\n    _maxSegments = _numLargeSegments + _maxSmallSegments;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#setMaxSmallSegments(int).mjava","sourceNew":null,"sourceOld":"  public void setMaxSmallSegments(int maxSmallSegments) {\n    if (maxSmallSegments < getMergeFactor()) {\n      throw new IllegalArgumentException(\"maxSmallSegments cannot be less than mergeFactor\");\n    }    \n    _maxSmallSegments = maxSmallSegments;\n    _maxSegments = _numLargeSegments + _maxSmallSegments;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#setMaxSmallSegments(int).mjava","sourceNew":null,"sourceOld":"  public void setMaxSmallSegments(int maxSmallSegments) {\n    if (maxSmallSegments < getMergeFactor()) {\n      throw new IllegalArgumentException(\"maxSmallSegments cannot be less than mergeFactor\");\n    }    \n    _maxSmallSegments = maxSmallSegments;\n    _maxSegments = _numLargeSegments + _maxSmallSegments;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03f9c72dc0e9082b70769643013a67c27bb9f444":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","03f9c72dc0e9082b70769643013a67c27bb9f444"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","03f9c72dc0e9082b70769643013a67c27bb9f444"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03f9c72dc0e9082b70769643013a67c27bb9f444"]},"commit2Childs":{"03f9c72dc0e9082b70769643013a67c27bb9f444":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["03f9c72dc0e9082b70769643013a67c27bb9f444","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}