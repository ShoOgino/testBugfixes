{"path":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","commits":[{"id":"e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3","date":1297940445,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2)\n      w.optimize();\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2)\n      w.optimize();\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a","date":1300293010,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2)\n      w.optimize();\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2)\n      w.optimize();\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader();\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95ae76773bf2b95987d5f9c8f566ab3738953fb4","date":1301758351,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader();\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader();\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a32e313633383bfadd3bbf8b933611c6a07c7c","date":1303945298,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader();\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ebb742ffd3fae76a577a68de595d711f43e6944","date":1305546231,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a88077cb979e262c85e07a7754fba4f5083af113","date":1311955506,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"031ae5afb33da06d0ca4e6006d2fdb9d7594bcf0","date":1312207709,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a3776dccca01c11e7046323cfad46a3b4a471233","2e8d7ba2175f47e280231533f7d3016249cea88b"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":["45669a651c970812a680841b97a77cce06af559f"],"a88077cb979e262c85e07a7754fba4f5083af113":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"031ae5afb33da06d0ca4e6006d2fdb9d7594bcf0":["a88077cb979e262c85e07a7754fba4f5083af113"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a":["e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3"],"e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b91922b55d15444d554721b352861d028eb8278":["031ae5afb33da06d0ca4e6006d2fdb9d7594bcf0"],"5ebb742ffd3fae76a577a68de595d711f43e6944":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["95ae76773bf2b95987d5f9c8f566ab3738953fb4","5ebb742ffd3fae76a577a68de595d711f43e6944"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a"],"45669a651c970812a680841b97a77cce06af559f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":[],"a88077cb979e262c85e07a7754fba4f5083af113":["031ae5afb33da06d0ca4e6006d2fdb9d7594bcf0"],"031ae5afb33da06d0ca4e6006d2fdb9d7594bcf0":["7b91922b55d15444d554721b352861d028eb8278"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["5ebb742ffd3fae76a577a68de595d711f43e6944"],"59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3":["f1bdbf92da222965b46c0a942c3857ba56e5c638","59a137a4ad7cc8cd87bbb06ffe71cc00a7d9236a"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ebb742ffd3fae76a577a68de595d711f43e6944":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","a88077cb979e262c85e07a7754fba4f5083af113"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["45669a651c970812a680841b97a77cce06af559f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1bdbf92da222965b46c0a942c3857ba56e5c638","e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3","c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","2e8d7ba2175f47e280231533f7d3016249cea88b","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f"],"45669a651c970812a680841b97a77cce06af559f":["70a32e313633383bfadd3bbf8b933611c6a07c7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","70a32e313633383bfadd3bbf8b933611c6a07c7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}