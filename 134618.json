{"path":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","commits":[{"id":"539040a2eeaeb2ec1252c35b94773ddf32175f5a","date":1269681454,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeFilterBuilderTestCase#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, null, MaxFieldLength.UNLIMITED);\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, null, MaxFieldLength.UNLIMITED);\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9","date":1270985469,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, null, MaxFieldLength.UNLIMITED);\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10","date":1270996866,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, null, MaxFieldLength.UNLIMITED);\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","date":1271167458,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, null, MaxFieldLength.UNLIMITED);\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","bugFix":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tMockRAMDirectory ramDir = new MockRAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tRandom random = newRandom();\n\t\tMockRAMDirectory ramDir = newDirectory(random);\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tMockRAMDirectory ramDir = new MockRAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tRandom random = newRandom();\n\t\tDirectory ramDir = newDirectory(random);\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tRandom random = newRandom();\n\t\tMockRAMDirectory ramDir = newDirectory(random);\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tRandom random = newRandom();\n\t\tDirectory ramDir = newDirectory(random);\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\n\t\tRAMDirectory ramDir = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader.getTopReaderContext()));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader.getTopReaderContext()));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = IndexReader.open(ramDir, true);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet(reader));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseError() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(false);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tDirectory ramDir = newDirectory();\n\t\tIndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n\t\twriter.commit();\n\t\ttry\n\t\t{\n\t\t\tIndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n\t\t\ttry\n\t\t\t{\n\t\t\t\tassertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\treader.close();\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\twriter.commit();\n\t\t\twriter.close();\n\t\t\tramDir.close();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","1f653cfcf159baeaafe5d01682a911e95bba4012"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1f653cfcf159baeaafe5d01682a911e95bba4012","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","29ef99d61cda9641b6250bf9567329a6e65f901d","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}