{"path":"solr/core/src/test/org/apache/solr/handler/component/DebugComponentTest#testQueryToString().mjava","commits":[{"id":"7f84d51c90072fcb78a446a4dad288060aca5f94","date":1445549611,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DebugComponentTest#testQueryToString().mjava","pathOld":"/dev/null","sourceNew":"  //\n  // NOTE: String representations are not meant to be exact or backward compatible.\n  // For example, foo:bar^3, foo:bar^3.0 and (foo:bar)^3 are equivalent.  Use your\n  // judgement when modifying these tests.\n  //\n  @Test\n  public void testQueryToString() throws Exception {\n\n    // test that both boosts are represented in a double-boost scenario\n    assertQ(req(\"debugQuery\", \"true\", \"indent\",\"true\", \"rows\",\"0\", \"q\", \"(foo_s:aaa^3)^4\"),\n        \"//str[@name='parsedquery'][.='foo_s:aaa^3.0^4.0']\"\n    );\n\n    // test to see that extra parens are avoided\n    assertQ(req(\"debugQuery\", \"true\", \"indent\",\"true\", \"rows\",\"0\", \"q\", \"+foo_s:aaa^3 -bar_s:bbb^0\"),\n        \"//str[@name='parsedquery'][.='+foo_s:aaa^3.0 -bar_s:bbb^0.0']\"\n    );\n\n    // test that parens are added when needed\n    assertQ(req(\"debugQuery\", \"true\", \"indent\", \"true\", \"rows\", \"0\", \"q\", \"foo_s:aaa (bar_s:bbb baz_s:ccc)\"),\n        \"//str[@name='parsedquery'][.='foo_s:aaa (bar_s:bbb baz_s:ccc)']\"\n    );\n\n    // test boosts on subqueries\n    assertQ(req(\"debugQuery\", \"true\", \"indent\", \"true\", \"rows\", \"0\", \"q\", \"foo_s:aaa^3 (bar_s:bbb baz_s:ccc)^4\"),\n        \"//str[@name='parsedquery'][.='foo_s:aaa^3.0 (bar_s:bbb baz_s:ccc)^4.0']\"\n    );\n\n    // test constant score query boost exists\n    assertQ(req(\"debugQuery\", \"true\", \"indent\", \"true\", \"rows\", \"0\", \"q\", \"foo_s:aaa^=3\"),\n        \"//str[@name='parsedquery'][contains(.,'3.0')]\"\n    );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f84d51c90072fcb78a446a4dad288060aca5f94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f84d51c90072fcb78a446a4dad288060aca5f94"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f84d51c90072fcb78a446a4dad288060aca5f94"],"7f84d51c90072fcb78a446a4dad288060aca5f94":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}