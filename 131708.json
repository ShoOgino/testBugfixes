{"path":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","pathOld":"/dev/null","sourceNew":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    try {\n      new MorfologikFilterFactory(new HashMap<String,String>() {{\n        put(\"bogusArg\", \"bogusValue\");\n      }});\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3fe5f0827b0226d3ceab5afaa8badb8af406f3d1","date":1395668848,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","sourceNew":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    try {\n      HashMap<String,String> map = new HashMap<String,String>();\n      map.put(\"bogusArg\", \"bogusValue\");\n      new MorfologikFilterFactory(map);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    }\n  }\n\n","sourceOld":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    try {\n      new MorfologikFilterFactory(new HashMap<String,String>() {{\n        put(\"bogusArg\", \"bogusValue\");\n      }});\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c169d7d02a4ec07ef6cb1d119de39443fa7ff786","date":1441835318,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","sourceNew":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    try {\n      HashMap<String,String> params = new HashMap<String,String>();\n      params.put(\"bogusArg\", \"bogusValue\");\n      new MorfologikFilterFactory(params);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    }\n  }\n\n","sourceOld":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    try {\n      HashMap<String,String> map = new HashMap<String,String>();\n      map.put(\"bogusArg\", \"bogusValue\");\n      new MorfologikFilterFactory(map);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testBogusArguments().mjava","sourceNew":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      HashMap<String,String> params = new HashMap<String,String>();\n      params.put(\"bogusArg\", \"bogusValue\");\n      new MorfologikFilterFactory(params);\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n  }\n\n","sourceOld":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    try {\n      HashMap<String,String> params = new HashMap<String,String>();\n      params.put(\"bogusArg\", \"bogusValue\");\n      new MorfologikFilterFactory(params);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    }\n  }\n\n","bugFix":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["c169d7d02a4ec07ef6cb1d119de39443fa7ff786"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3fe5f0827b0226d3ceab5afaa8badb8af406f3d1":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"c169d7d02a4ec07ef6cb1d119de39443fa7ff786":["3fe5f0827b0226d3ceab5afaa8badb8af406f3d1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["3fe5f0827b0226d3ceab5afaa8badb8af406f3d1"],"3fe5f0827b0226d3ceab5afaa8badb8af406f3d1":["c169d7d02a4ec07ef6cb1d119de39443fa7ff786"],"c169d7d02a4ec07ef6cb1d119de39443fa7ff786":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}