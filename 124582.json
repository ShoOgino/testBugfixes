{"path":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","pathOld":"/dev/null","sourceNew":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","sourceNew":null,"sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","sourceNew":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","pathOld":"/dev/null","sourceNew":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d2901bdb2faeb41d619d969ce5655adf783746d","date":1309912641,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrXMLSerializer#fileCopy(File,File).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","sourceNew":"  /**\n   * Copies a src file to a dest file: used to circumvent the platform\n   * discrepancies regarding renaming files.\n   */\n  private static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis = null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32 * 1024 * 1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } catch (IOException xio) {\n      xforward = xio;\n    } finally {\n      if (fis != null) try {\n        fis.close();\n        fis = null;\n      } catch (IOException xio) {}\n      if (fos != null) try {\n        fos.close();\n        fos = null;\n      } catch (IOException xio) {}\n      if (fcin != null && fcin.isOpen()) try {\n        fcin.close();\n        fcin = null;\n      } catch (IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try {\n        fcout.close();\n        fcout = null;\n      } catch (IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","sourceNew":null,"sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","sourceNew":null,"sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8d2901bdb2faeb41d619d969ce5655adf783746d":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1da8d55113b689b06716246649de6f62430f15c0","8d2901bdb2faeb41d619d969ce5655adf783746d"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["1da8d55113b689b06716246649de6f62430f15c0","8d2901bdb2faeb41d619d969ce5655adf783746d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d2901bdb2faeb41d619d969ce5655adf783746d"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["8d2901bdb2faeb41d619d969ce5655adf783746d","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"8d2901bdb2faeb41d619d969ce5655adf783746d":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}