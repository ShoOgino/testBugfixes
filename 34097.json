{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e8768e9769f9e5175b1d99dcd27600bc9d4374","date":1342373687,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":null,"sourceOld":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":null,"sourceOld":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":null,"sourceOld":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91e8768e9769f9e5175b1d99dcd27600bc9d4374"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aba371508186796cc6151d8223a5b4e16d02e26e","91e8768e9769f9e5175b1d99dcd27600bc9d4374","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}