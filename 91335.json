{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testMultiplePassages().mjava","commits":[{"id":"ffabe030a2b84ad50adb7265da07ee78f1c58f6a","date":1355239263,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testMultiplePassages().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiplePassages() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter(\"body\");\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    String snippets[] = highlighter.highlight(query, searcher, topDocs, 2);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", snippets[0]);\n    assertEquals(\"This <b>test</b> is another <b>test</b>. ... <b>Test</b> <b>test</b> <b>test</b> <b>test</b>.\", snippets[1]);\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bb94551de83b33535d086e8d4222fa6d0c4cfc0","date":1357181547,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testMultiplePassages().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testMultiplePassages().mjava","sourceNew":"  public void testMultiplePassages() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", snippets[0]);\n    assertEquals(\"This <b>test</b> is another <b>test</b>. ... <b>Test</b> <b>test</b> <b>test</b> <b>test</b>.\", snippets[1]);\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiplePassages() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter(\"body\");\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    String snippets[] = highlighter.highlight(query, searcher, topDocs, 2);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", snippets[0]);\n    assertEquals(\"This <b>test</b> is another <b>test</b>. ... <b>Test</b> <b>test</b> <b>test</b> <b>test</b>.\", snippets[1]);\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultiplePassages().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testMultiplePassages().mjava","sourceNew":"  public void testMultiplePassages() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", snippets[0]);\n    assertEquals(\"This <b>test</b> is another <b>test</b>. ... <b>Test</b> <b>test</b> <b>test</b> <b>test</b>.\", snippets[1]);\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiplePassages() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(2, snippets.length);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", snippets[0]);\n    assertEquals(\"This <b>test</b> is another <b>test</b>. ... <b>Test</b> <b>test</b> <b>test</b> <b>test</b>.\", snippets[1]);\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["8bb94551de83b33535d086e8d4222fa6d0c4cfc0"],"ffabe030a2b84ad50adb7265da07ee78f1c58f6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8bb94551de83b33535d086e8d4222fa6d0c4cfc0":["ffabe030a2b84ad50adb7265da07ee78f1c58f6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"]},"commit2Childs":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ffabe030a2b84ad50adb7265da07ee78f1c58f6a":["8bb94551de83b33535d086e8d4222fa6d0c4cfc0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ffabe030a2b84ad50adb7265da07ee78f1c58f6a"],"8bb94551de83b33535d086e8d4222fa6d0c4cfc0":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}