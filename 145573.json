{"path":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","commits":[{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir = null;\n    {\n      SolrCore template = null;\n      try {\n        template = cores.getCore(\"collection1\");\n        instDir = template.getCoreDescriptor().getInstanceDir();\n      } finally {\n        if (null != template) template.close();\n      }\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e332392bbbdd01cb69ad6a89051f483cda38e15e","date":1395758779,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir = null;\n    {\n      SolrCore template = null;\n      try {\n        template = cores.getCore(\"collection1\");\n        instDir = template.getCoreDescriptor().getInstanceDir();\n      } finally {\n        if (null != template) template.close();\n      }\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = new File(dataDir, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = new File(dataDir, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f222f4f2bda21ffd6b39b3362b2412e98e4d5e31","date":1435517625,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            CommonAdminParams.ASYNC, \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            \"async\", \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    Path instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    assertTrue(\"instDir doesn't exist: \" + instDir, Files.exists(instDir));\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDir.toFile(), instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            CommonAdminParams.ASYNC, \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    String instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    final File instDirFile = new File(instDir);\n    assertTrue(\"instDir doesn't exist: \" + instDir, instDirFile.exists());\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDirFile, instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            CommonAdminParams.ASYNC, \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    Path instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    assertTrue(\"instDir doesn't exist: \" + instDir, Files.exists(instDir));\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDir.toFile(), instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            CommonAdminParams.ASYNC, \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n    admin.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    Path instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    assertTrue(\"instDir doesn't exist: \" + instDir, Files.exists(instDir));\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDir.toFile(), instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            CommonAdminParams.ASYNC, \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373","date":1592489632,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminRequestStatusTest#testCoreAdminRequestStatus().mjava","sourceNew":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n    cores.getAllowPaths().add(workDir.toPath()); // Allow core to be created in workDir\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    Path instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    assertTrue(\"instDir doesn't exist: \" + instDir, Files.exists(instDir));\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDir.toFile(), instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            CommonAdminParams.ASYNC, \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n    admin.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCoreAdminRequestStatus() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    Path instDir;\n    try (SolrCore template = cores.getCore(\"collection1\")) {\n      assertNotNull(template);\n      instDir = template.getCoreDescriptor().getInstanceDir();\n    }\n\n    assertTrue(\"instDir doesn't exist: \" + instDir, Files.exists(instDir));\n    final File instPropFile = new File(workDir, \"instProp\");\n    FileUtils.copyDirectory(instDir.toFile(), instPropFile);\n\n    // create a new core (using CoreAdminHandler) w/ properties\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.CREATE.toString(),\n            CoreAdminParams.INSTANCE_DIR, instPropFile.getAbsolutePath(),\n            CoreAdminParams.NAME, \"dummycore\",\n            CommonAdminParams.ASYNC, \"42\"),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    int maxRetries = 10;\n\n    while(maxRetries-- > 0) {\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"42\"),\n            resp\n        );\n      if(resp.getValues().get(\"STATUS\") != null && resp.getValues().get(\"STATUS\").equals(\"completed\"))\n        break;\n      Thread.sleep(1000);\n    }\n\n    assertEquals(\"The status of request was expected to be completed\",\n                 \"completed\", resp.getValues().get(\"STATUS\"));\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.REQUESTSTATUS.toString(),\n            CoreAdminParams.REQUESTID, \"9999999\"),\n            resp\n        );\n\n    assertEquals(\"Was expecting it to be invalid but found a task with the id.\",\n                 \"notfound\", resp.getValues().get(\"STATUS\"));\n\n    admin.shutdown();\n    admin.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f222f4f2bda21ffd6b39b3362b2412e98e4d5e31":["f4abec28b874149a7223e32cc7a01704c27790de"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["ba055e19afc289adcb5bedaf68513793a7254012"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["f222f4f2bda21ffd6b39b3362b2412e98e4d5e31"],"ba055e19afc289adcb5bedaf68513793a7254012":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"]},"commit2Childs":{"f222f4f2bda21ffd6b39b3362b2412e98e4d5e31":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"f4abec28b874149a7223e32cc7a01704c27790de":["f222f4f2bda21ffd6b39b3362b2412e98e4d5e31"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["ba055e19afc289adcb5bedaf68513793a7254012"],"ba055e19afc289adcb5bedaf68513793a7254012":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}