{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/expression/FunctionTest#constantStringTest().mjava","commits":[{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":1,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/expression/FunctionTest#constantStringTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantStringTest().mjava","sourceNew":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","sourceOld":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/expression/FunctionTest#constantStringTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantStringTest().mjava","sourceNew":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","sourceOld":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/expression/FunctionTest#constantStringTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantStringTest().mjava","sourceNew":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","sourceOld":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":5,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/expression/LegacyFunctionTest#constantStringTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/expression/FunctionTest#constantStringTest().mjava","sourceNew":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","sourceOld":"  @Test\n  public void constantStringTest() throws Exception { \n    String result = (String)getStatResult(\"csr\", \"min\", VAL_TYPE.STRING);\n    String calculated = (String)getStatResult(\"csr\", \"minc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n    \n    result = (String)getStatResult(\"csr\", \"max\", VAL_TYPE.STRING);\n    calculated = (String)getStatResult(\"csr\", \"maxc\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), result, calculated);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","3bd4c6955956e76c96eb12dfe64108ed03522983"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}