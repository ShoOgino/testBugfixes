{"path":"lucene/backwards/src/java/org/apache/lucene/index/LogByteSizeMergePolicy#setMinMergeMB(double).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/LogByteSizeMergePolicy#setMinMergeMB(double).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/LogByteSizeMergePolicy#setMinMergeMB(double).mjava","sourceNew":"  /** Sets the minimum size for the lowest level segments.\n   * Any segments below this size are considered to be on\n   * the same level (even if they vary drastically in size)\n   * and will be merged whenever there are mergeFactor of\n   * them.  This effectively truncates the \"long tail\" of\n   * small segments that would otherwise be created into a\n   * single level.  If you set this too large, it could\n   * greatly increase the merging cost during indexing (if\n   * you flush many small segments). */\n  public void setMinMergeMB(double mb) {\n    minMergeSize = (long) (mb*1024*1024);\n  }\n\n","sourceOld":"  /** Sets the minimum size for the lowest level segments.\n   * Any segments below this size are considered to be on\n   * the same level (even if they vary drastically in size)\n   * and will be merged whenever there are mergeFactor of\n   * them.  This effectively truncates the \"long tail\" of\n   * small segments that would otherwise be created into a\n   * single level.  If you set this too large, it could\n   * greatly increase the merging cost during indexing (if\n   * you flush many small segments). */\n  public void setMinMergeMB(double mb) {\n    minMergeSize = (long) (mb*1024*1024);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/LogByteSizeMergePolicy#setMinMergeMB(double).mjava","sourceNew":null,"sourceOld":"  /** Sets the minimum size for the lowest level segments.\n   * Any segments below this size are considered to be on\n   * the same level (even if they vary drastically in size)\n   * and will be merged whenever there are mergeFactor of\n   * them.  This effectively truncates the \"long tail\" of\n   * small segments that would otherwise be created into a\n   * single level.  If you set this too large, it could\n   * greatly increase the merging cost during indexing (if\n   * you flush many small segments). */\n  public void setMinMergeMB(double mb) {\n    minMergeSize = (long) (mb*1024*1024);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}