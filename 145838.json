{"path":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","sourceNew":"  @Override\n  public long readVLong() throws IOException {\n    if (9 <= bufferLength-bufferPosition) {\n      byte b = buffer[bufferPosition++];\n      long i = b & 0x7F;\n      for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n        b = buffer[bufferPosition++];\n        i |= (b & 0x7FL) << shift;\n      }\n      return i;\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","sourceOld":"  @Override\n  public long readVLong() throws IOException {\n    if (9 <= bufferLength-bufferPosition) {\n      byte b = buffer[bufferPosition++];\n      long i = b & 0x7F;\n      for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n        b = buffer[bufferPosition++];\n        i |= (b & 0x7FL) << shift;\n      }\n      return i;\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d91b7936af3081e704512ac1234340133e59904","date":1332109642,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","sourceNew":"  @Override\n  public final long readVLong() throws IOException {\n    if (9 <= bufferLength-bufferPosition) {\n      byte b = buffer[bufferPosition++];\n      long i = b & 0x7FL;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 7;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 14;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 21;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 28;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 35;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 42;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 49;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 56;\n      if ((b & 0x80) == 0) return i;\n      throw new IOException(\"Invalid vLong detected (negative values disallowed)\");\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","sourceOld":"  @Override\n  public long readVLong() throws IOException {\n    if (9 <= bufferLength-bufferPosition) {\n      byte b = buffer[bufferPosition++];\n      long i = b & 0x7F;\n      for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n        b = buffer[bufferPosition++];\n        i |= (b & 0x7FL) << shift;\n      }\n      return i;\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"231a0ded093edb0044905980e2607acfc3f6a954","date":1333229599,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","sourceNew":"  @Override\n  public final long readVLong() throws IOException {\n    if (9 <= bufferLength-bufferPosition) {\n      byte b = buffer[bufferPosition++];\n      if (b >= 0) return b;\n      long i = b & 0x7FL;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 7;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 14;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 21;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 28;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 35;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 42;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 49;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 56;\n      if (b >= 0) return i;\n      throw new IOException(\"Invalid vLong detected (negative values disallowed)\");\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","sourceOld":"  @Override\n  public final long readVLong() throws IOException {\n    if (9 <= bufferLength-bufferPosition) {\n      byte b = buffer[bufferPosition++];\n      long i = b & 0x7FL;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 7;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 14;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 21;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 28;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 35;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 42;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 49;\n      if ((b & 0x80) == 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 56;\n      if ((b & 0x80) == 0) return i;\n      throw new IOException(\"Invalid vLong detected (negative values disallowed)\");\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af9ce763a9d61cb88781e638d593430b71efa7dc","date":1586259009,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#readVLong().mjava","sourceNew":"  @Override\n  public final long readVLong() throws IOException {\n    if (9 <= buffer.remaining()) {\n      byte b = buffer.get();\n      if (b >= 0) return b;\n      long i = b & 0x7FL;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 7;\n      if (b >= 0) return i;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 14;\n      if (b >= 0) return i;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 21;\n      if (b >= 0) return i;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 28;\n      if (b >= 0) return i;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 35;\n      if (b >= 0) return i;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 42;\n      if (b >= 0) return i;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 49;\n      if (b >= 0) return i;\n      b = buffer.get();\n      i |= (b & 0x7FL) << 56;\n      if (b >= 0) return i;\n      throw new IOException(\"Invalid vLong detected (negative values disallowed)\");\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","sourceOld":"  @Override\n  public final long readVLong() throws IOException {\n    if (9 <= bufferLength-bufferPosition) {\n      byte b = buffer[bufferPosition++];\n      if (b >= 0) return b;\n      long i = b & 0x7FL;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 7;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 14;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 21;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 28;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 35;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 42;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 49;\n      if (b >= 0) return i;\n      b = buffer[bufferPosition++];\n      i |= (b & 0x7FL) << 56;\n      if (b >= 0) return i;\n      throw new IOException(\"Invalid vLong detected (negative values disallowed)\");\n    } else {\n      return super.readVLong();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"231a0ded093edb0044905980e2607acfc3f6a954":["7d91b7936af3081e704512ac1234340133e59904"],"af9ce763a9d61cb88781e638d593430b71efa7dc":["231a0ded093edb0044905980e2607acfc3f6a954"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d91b7936af3081e704512ac1234340133e59904":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af9ce763a9d61cb88781e638d593430b71efa7dc"]},"commit2Childs":{"231a0ded093edb0044905980e2607acfc3f6a954":["af9ce763a9d61cb88781e638d593430b71efa7dc"],"af9ce763a9d61cb88781e638d593430b71efa7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7d91b7936af3081e704512ac1234340133e59904"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7d91b7936af3081e704512ac1234340133e59904":["231a0ded093edb0044905980e2607acfc3f6a954"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}