{"path":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","commits":[{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","pathOld":"/dev/null","sourceNew":"\tpublic abstract DocIdSetIterator iterator();\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72156526dd25046a0956ed4b805568cb7e7ecd6f","date":1225469893,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","sourceNew":"\tpublic abstract DocIdSetIterator iterator() throws IOException;\n\n","sourceOld":"\tpublic abstract DocIdSetIterator iterator();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c0b73ec4d2f7d5bf9bd7bb731cc7e6e17ac55d","date":1233243551,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","sourceNew":"  /** Provides a {@link DocIdSetIterator} to access the set. */\n  public abstract DocIdSetIterator iterator() throws IOException;\n\n","sourceOld":"\tpublic abstract DocIdSetIterator iterator() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d6c98c690b593cea727f68742684c979ead1a0a","date":1248688202,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","sourceNew":"  /** Provides a {@link DocIdSetIterator} to access the set.\n   * This may (but is not required to) return null if there\n   * are no docs that match. */\n  public abstract DocIdSetIterator iterator() throws IOException;\n\n","sourceOld":"  /** Provides a {@link DocIdSetIterator} to access the set. */\n  public abstract DocIdSetIterator iterator() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"426517ed3433415d1344cde63edb3872e51b63c8","date":1248696231,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","sourceNew":"  /** Provides a {@link DocIdSetIterator} to access the set.\n   * This implementation can return <code>null</code> or\n   * <code>{@linkplain #EMPTY_DOCIDSET}.iterator()</code> if there\n   * are no docs that match. */\n  public abstract DocIdSetIterator iterator() throws IOException;\n\n","sourceOld":"  /** Provides a {@link DocIdSetIterator} to access the set.\n   * This may (but is not required to) return null if there\n   * are no docs that match. */\n  public abstract DocIdSetIterator iterator() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSet#iterator().mjava","sourceNew":"  /** Provides a {@link DocIdSetIterator} to access the set.\n   * This implementation can return <code>null</code> or\n   * <code>{@linkplain #EMPTY_DOCIDSET}.iterator()</code> if there\n   * are no docs that match. */\n  public abstract DocIdSetIterator iterator() throws IOException;\n\n","sourceOld":"  /** Provides a {@link DocIdSetIterator} to access the set.\n   * This implementation can return <code>null</code> or\n   * <code>{@linkplain #EMPTY_DOCIDSET}.iterator()</code> if there\n   * are no docs that match. */\n  public abstract DocIdSetIterator iterator() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"426517ed3433415d1344cde63edb3872e51b63c8":["8d6c98c690b593cea727f68742684c979ead1a0a"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8d6c98c690b593cea727f68742684c979ead1a0a":["38c0b73ec4d2f7d5bf9bd7bb731cc7e6e17ac55d"],"72156526dd25046a0956ed4b805568cb7e7ecd6f":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"38c0b73ec4d2f7d5bf9bd7bb731cc7e6e17ac55d":["72156526dd25046a0956ed4b805568cb7e7ecd6f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["426517ed3433415d1344cde63edb3872e51b63c8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"426517ed3433415d1344cde63edb3872e51b63c8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["72156526dd25046a0956ed4b805568cb7e7ecd6f"],"8d6c98c690b593cea727f68742684c979ead1a0a":["426517ed3433415d1344cde63edb3872e51b63c8"],"72156526dd25046a0956ed4b805568cb7e7ecd6f":["38c0b73ec4d2f7d5bf9bd7bb731cc7e6e17ac55d"],"38c0b73ec4d2f7d5bf9bd7bb731cc7e6e17ac55d":["8d6c98c690b593cea727f68742684c979ead1a0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}