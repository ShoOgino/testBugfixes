{"path":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","pathOld":"contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","sourceNew":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","sourceOld":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58f6129aa3cc4d7092fe2dacee662b263fb66e94","date":1315473880,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","sourceNew":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles, 0.001);\n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles, 0.001);\n  }\n\n","sourceOld":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb7e38713d15939e085d376c6391e6e6262a81f","date":1329897272,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","sourceNew":null,"sourceOld":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles, 0.001);\n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles, 0.001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","sourceNew":null,"sourceOld":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles, 0.001);\n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles, 0.001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e47768b261c28e7e6032060e8331475c81057953":["58f6129aa3cc4d7092fe2dacee662b263fb66e94","2fb7e38713d15939e085d376c6391e6e6262a81f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e47768b261c28e7e6032060e8331475c81057953"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["58f6129aa3cc4d7092fe2dacee662b263fb66e94"]},"commit2Childs":{"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["e47768b261c28e7e6032060e8331475c81057953","2fb7e38713d15939e085d376c6391e6e6262a81f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e47768b261c28e7e6032060e8331475c81057953":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["58f6129aa3cc4d7092fe2dacee662b263fb66e94"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}