{"path":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","commits":[{"id":"d54c7739bfe85d68f0352823cd70c10c619fad38","date":1228496593,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    Directory dir = FSDirectory.getDirectory(new File(tempDir, \"doesnotexist\"), null);\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    Directory dir = FSDirectory.open(new File(tempDir, \"doesnotexist\"));\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    Directory dir = FSDirectory.getDirectory(new File(tempDir, \"doesnotexist\"), null);\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"73bc1851682757b5184768cbdf6de3f4f5a5f432","date":1244636487,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    Directory dir = FSDirectory.open(new File(tempDir, \"doesnotexist\"));\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    Directory dir = FSDirectory.open(new File(tempDir, \"doesnotexist\"));\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e","date":1244664919,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = FSDirectory.open(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    Directory dir = FSDirectory.open(new File(tempDir, \"doesnotexist\"));\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = FSDirectory.open(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      IndexReader.open(dir, true);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = FSDirectory.open(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = FSDirectory.open(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      IndexReader.open(dir, true);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = FSDirectory.open(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      IndexReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = FSDirectory.open(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      IndexReader.open(dir, true);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // IndexReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = FSDirectory.open(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      IndexReader.open(dir, true);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d54c7739bfe85d68f0352823cd70c10c619fad38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["73bc1851682757b5184768cbdf6de3f4f5a5f432"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["d54c7739bfe85d68f0352823cd70c10c619fad38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"73bc1851682757b5184768cbdf6de3f4f5a5f432":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"d54c7739bfe85d68f0352823cd70c10c619fad38":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d54c7739bfe85d68f0352823cd70c10c619fad38"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["73bc1851682757b5184768cbdf6de3f4f5a5f432"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"73bc1851682757b5184768cbdf6de3f4f5a5f432":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}