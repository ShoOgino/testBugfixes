{"path":"sandbox/projects/appex/src/java/org/krysalis/centipede/ant/task/XmlPropertyTask#addNodeRecursively(org.w3c.dom.Node,String,int).mjava","commits":[{"id":"e3074d05d861bc1436ee03619fdee547f9c51d22","date":1020526983,"type":0,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"sandbox/projects/appex/src/java/org/krysalis/centipede/ant/task/XmlPropertyTask#addNodeRecursively(org.w3c.dom.Node,String,int).mjava","pathOld":"/dev/null","sourceNew":"    void addNodeRecursively(org.w3c.dom.Node node, String text, int index) {\n\n        if (node.hasAttributes()) {\n            org.w3c.dom.NamedNodeMap nodeAttributes = node.getAttributes();\n            for (int i = 0; i < nodeAttributes.getLength(); i++) {\n               Node attributeNode =  nodeAttributes.item(i);\n               String attributeName = text+(text.trim().equals(\"\")?\"\":\".\")+node.getNodeName()+\".\"+attributeNode.getNodeName();\n               String attributeValue = attributeNode.getNodeValue();               \n               log(attributeName+\":\"+attributeValue, Project.MSG_VERBOSE);\n               project.setUserProperty(attributeName,attributeValue);               \n            }\n        }\n       \n        if(node.getNodeType()==Node.TEXT_NODE){\n          String nodeText = node.getNodeValue();\n          if(nodeText.trim().length()!=0)\n          {  \n             log(text+\":\"+nodeText, Project.MSG_VERBOSE);\n             if(index==0){\n               project.setUserProperty(text,nodeText);\n             }\n             \n             project.setUserProperty(text+\"[\"+String.valueOf(index)+\"]\",nodeText);             \n          }\n        }\n               \n          if (node.hasChildNodes()) {\n             text+=((text.trim().equals(\"\")?\"\":\".\")+node.getNodeName());\n             org.w3c.dom.NodeList nodeChildren = node.getChildNodes();\n\n             int numChildren = nodeChildren.getLength();\n\n             StringBuffer childList = new StringBuffer();\n                                \n             for (int i = 0; i < numChildren; i++) {\n                 if(i!=0){childList.append(\",\");}         \n                 childList.append(node.getNodeName()+\"[\"+String.valueOf(index)+\"]\");  \n                 addNodeRecursively(nodeChildren.item(i), text, i);\n             }\n             \n             project.setUserProperty(text+\".list\",childList.toString());     \n             \n         }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35ba86e9cc568fdc800d780c620749584b1d5bc","date":1051838861,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/projects/appex/src/java/org/krysalis/centipede/ant/task/XmlPropertyTask#addNodeRecursively(org.w3c.dom.Node,String,int).mjava","sourceNew":null,"sourceOld":"    void addNodeRecursively(org.w3c.dom.Node node, String text, int index) {\n\n        if (node.hasAttributes()) {\n            org.w3c.dom.NamedNodeMap nodeAttributes = node.getAttributes();\n            for (int i = 0; i < nodeAttributes.getLength(); i++) {\n               Node attributeNode =  nodeAttributes.item(i);\n               String attributeName = text+(text.trim().equals(\"\")?\"\":\".\")+node.getNodeName()+\".\"+attributeNode.getNodeName();\n               String attributeValue = attributeNode.getNodeValue();               \n               log(attributeName+\":\"+attributeValue, Project.MSG_VERBOSE);\n               project.setUserProperty(attributeName,attributeValue);               \n            }\n        }\n       \n        if(node.getNodeType()==Node.TEXT_NODE){\n          String nodeText = node.getNodeValue();\n          if(nodeText.trim().length()!=0)\n          {  \n             log(text+\":\"+nodeText, Project.MSG_VERBOSE);\n             if(index==0){\n               project.setUserProperty(text,nodeText);\n             }\n             \n             project.setUserProperty(text+\"[\"+String.valueOf(index)+\"]\",nodeText);             \n          }\n        }\n               \n          if (node.hasChildNodes()) {\n             text+=((text.trim().equals(\"\")?\"\":\".\")+node.getNodeName());\n             org.w3c.dom.NodeList nodeChildren = node.getChildNodes();\n\n             int numChildren = nodeChildren.getLength();\n\n             StringBuffer childList = new StringBuffer();\n                                \n             for (int i = 0; i < numChildren; i++) {\n                 if(i!=0){childList.append(\",\");}         \n                 childList.append(node.getNodeName()+\"[\"+String.valueOf(index)+\"]\");  \n                 addNodeRecursively(nodeChildren.item(i), text, i);\n             }\n             \n             project.setUserProperty(text+\".list\",childList.toString());     \n             \n         }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35ba86e9cc568fdc800d780c620749584b1d5bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["f35ba86e9cc568fdc800d780c620749584b1d5bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}