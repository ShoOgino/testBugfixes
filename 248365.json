{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47c952a4f0f0e9b74763a0609a3726dbb217164a","date":1347968413,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c5a558d54519c651068ddb202f03befefb1514a7","date":1354382006,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56a558aa5aadd60ae850d1ab090098bc63bdfaf9","date":1355245333,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bc0d7d47c55a6d5319ba7d7ad8a9ae9c7a4d9dd","date":1362061830,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81ec897f0eb789ef9536a8130d1cdb9337ef108a","date":1392217884,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"127.0.0.1:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1088b72b3b4cc45316b7595bd09023c859cd2327","date":1447150009,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9b4296bd51ca61b482138791478afdd0f7d3a3d","date":1498058739,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    assertTrue(CollectionAdminRequest\n        .createCollection(\"control_collection\", 1, 1)\n        .setCreateNodeSet(controlJetty.getNodeName())\n        .process(controlClient).isSuccess());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    assertTrue(CollectionAdminRequest\n        .createCollection(\"control_collection\", 1, 1)\n        .setCreateNodeSet(controlJetty.getNodeName())\n        .process(controlClient).isSuccess());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    assertTrue(CollectionAdminRequest\n        .createCollection(\"control_collection\", 1, 1)\n        .setCreateNodeSet(controlJetty.getNodeName())\n        .process(controlClient).isSuccess());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShardsS = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.setProperty(ZkStateReader.NUM_SHARDS_PROP, \"1\");\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    System.clearProperty(\"collection\");\n    if(numShardsS != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShardsS);\n    } else {\n      System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    }\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    controlJetty.start();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    assertTrue(CollectionAdminRequest\n        .createCollection(\"control_collection\", 1, 1)\n        .setCreateNodeSet(controlJetty.getNodeName())\n        .process(controlClient).isSuccess());\n    \n    ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n        .getZkStateReader();\n\n    waitForRecoveriesToFinish(\"control_collection\", zkStateReader, false, true, 15);\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    assertTrue(CollectionAdminRequest\n        .createCollection(\"control_collection\", 1, 1)\n        .setCreateNodeSet(controlJetty.getNodeName())\n        .process(controlClient).isSuccess());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderRetry(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":["56a558aa5aadd60ae850d1ab090098bc63bdfaf9","e90f09c8e56fa270cdbf5adc76067c67249dac10","1088b72b3b4cc45316b7595bd09023c859cd2327"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    controlJetty.start();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    assertTrue(CollectionAdminRequest\n        .createCollection(\"control_collection\", 1, 1)\n        .setCreateNodeSet(controlJetty.getNodeName())\n        .process(controlClient).isSuccess());\n\n    ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n        .getZkStateReader();\n\n    waitForRecoveriesToFinish(\"control_collection\", zkStateReader, false, true, 15);\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    setupJettySolrHome(controlHome);\n\n    controlJetty = createJetty(controlHome, null);      // let the shardId default to shard1\n    controlJetty.start();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    assertTrue(CollectionAdminRequest\n        .createCollection(\"control_collection\", 1, 1)\n        .setCreateNodeSet(controlJetty.getNodeName())\n        .process(controlClient).isSuccess());\n    \n    ZkStateReader zkStateReader = jettys.get(0).getCoreContainer().getZkController()\n        .getZkStateReader();\n\n    waitForRecoveriesToFinish(\"control_collection\", zkStateReader, false, true, 15);\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      setupJettySolrHome(jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      sb.append(buildUrl(j.getLocalPort()));\n    }\n\n    shards = sb.toString();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","56a558aa5aadd60ae850d1ab090098bc63bdfaf9"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["28288370235ed02234a64753cdbf0c6ec096304a"],"407687e67faf6e1f02a211ca078d8e3eed631027":["47c952a4f0f0e9b74763a0609a3726dbb217164a","c5a558d54519c651068ddb202f03befefb1514a7"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["4bc0d7d47c55a6d5319ba7d7ad8a9ae9c7a4d9dd"],"bafca15d8e408346a67f4282ad1143b88023893b":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["1088b72b3b4cc45316b7595bd09023c859cd2327","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"28288370235ed02234a64753cdbf0c6ec096304a":["1088b72b3b4cc45316b7595bd09023c859cd2327","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"4bc0d7d47c55a6d5319ba7d7ad8a9ae9c7a4d9dd":["56a558aa5aadd60ae850d1ab090098bc63bdfaf9"],"1088b72b3b4cc45316b7595bd09023c859cd2327":["bafca15d8e408346a67f4282ad1143b88023893b"],"c5a558d54519c651068ddb202f03befefb1514a7":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"56a558aa5aadd60ae850d1ab090098bc63bdfaf9":["c5a558d54519c651068ddb202f03befefb1514a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["407687e67faf6e1f02a211ca078d8e3eed631027","c5a558d54519c651068ddb202f03befefb1514a7"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"4bc0d7d47c55a6d5319ba7d7ad8a9ae9c7a4d9dd":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"1088b72b3b4cc45316b7595bd09023c859cd2327":["a9b4296bd51ca61b482138791478afdd0f7d3a3d","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"c5a558d54519c651068ddb202f03befefb1514a7":["407687e67faf6e1f02a211ca078d8e3eed631027","56a558aa5aadd60ae850d1ab090098bc63bdfaf9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"56a558aa5aadd60ae850d1ab090098bc63bdfaf9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4bc0d7d47c55a6d5319ba7d7ad8a9ae9c7a4d9dd"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["47c952a4f0f0e9b74763a0609a3726dbb217164a","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}