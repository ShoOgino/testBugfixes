{"path":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0158ced21948b6626f733c1c42c1e18d94449789","date":1462994341,"type":3,"author":"Bartosz Krasi≈Ñski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsupportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsupportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/FileFloatSource.Cache#resetCache().mjava","sourceNew":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsupportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","sourceOld":"    public void resetCache(){\n      synchronized(readerCache){\n        // Map.clear() is optional and can throw UnsipportedOperationException,\n        // but readerCache is WeakHashMap and it supports clear().\n        readerCache.clear();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["19275ba31e621f6da1b83bf13af75233876fd3d4","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["19275ba31e621f6da1b83bf13af75233876fd3d4","0158ced21948b6626f733c1c42c1e18d94449789"],"0158ced21948b6626f733c1c42c1e18d94449789":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","0158ced21948b6626f733c1c42c1e18d94449789"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0158ced21948b6626f733c1c42c1e18d94449789":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}