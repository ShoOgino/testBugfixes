{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#evaluate(Tuple).mjava","commits":[{"id":"431fcaec9cce0a765cb0d341b8e4e51f133e6519","date":1492023302,"type":0,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Number evaluate(Tuple tuple) throws IOException {\n\n    try {\n      String dateStr = (String) tuple.get(fieldName);\n      if (dateStr != null && !dateStr.isEmpty()) {\n        Instant instant = Instant.parse(dateStr);\n        if (function.equals(FUNCTION.epoch)) return instant.toEpochMilli();\n\n        LocalDateTime date = LocalDateTime.ofInstant(instant, ZoneOffset.UTC);\n        return evaluate(date);\n      }\n    } catch (ClassCastException | DateTimeParseException e) {\n      throw new IOException(String.format(Locale.ROOT,\"Invalid field %s - The field must be a string formatted in the ISO_INSTANT date format.\",fieldName));\n    }\n\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40b789607c421011dabf36a935528a74fb8b2032","date":1492023606,"type":4,"author":"Gethin James","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#evaluate(Tuple).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Number evaluate(Tuple tuple) throws IOException {\n\n    try {\n      String dateStr = (String) tuple.get(fieldName);\n      if (dateStr != null && !dateStr.isEmpty()) {\n        Instant instant = Instant.parse(dateStr);\n        if (function.equals(FUNCTION.epoch)) return instant.toEpochMilli();\n\n        LocalDateTime date = LocalDateTime.ofInstant(instant, ZoneOffset.UTC);\n        return evaluate(date);\n      }\n    } catch (ClassCastException | DateTimeParseException e) {\n      throw new IOException(String.format(Locale.ROOT,\"Invalid field %s - The field must be a string formatted in the ISO_INSTANT date format.\",fieldName));\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"431fcaec9cce0a765cb0d341b8e4e51f133e6519":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"40b789607c421011dabf36a935528a74fb8b2032":["431fcaec9cce0a765cb0d341b8e4e51f133e6519"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["40b789607c421011dabf36a935528a74fb8b2032"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["431fcaec9cce0a765cb0d341b8e4e51f133e6519"],"431fcaec9cce0a765cb0d341b8e4e51f133e6519":["40b789607c421011dabf36a935528a74fb8b2032"],"40b789607c421011dabf36a935528a74fb8b2032":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}