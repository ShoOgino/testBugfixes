{"path":"src/test/org/apache/lucene/search/payloads/BoostingFunctionTermQueryTest#setUp().mjava","commits":[{"id":"4c94837f36779069fd9b6b70e462b57515473d88","date":1249677298,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/BoostingFunctionTermQueryTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa4f1b5e611afe6cb170951e0a9202ff95dc9156","date":1250976267,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/BoostingFunctionTermQueryTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c94837f36779069fd9b6b70e462b57515473d88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["4c94837f36779069fd9b6b70e462b57515473d88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"]},"commit2Childs":{"4c94837f36779069fd9b6b70e462b57515473d88":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c94837f36779069fd9b6b70e462b57515473d88"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}