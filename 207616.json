{"path":"solr/core/src/test/org/apache/solr/util/hll/SparseHLLTest#assertOneRegisterSet(HLL,int,byte).mjava","commits":[{"id":"6faa211c4af605e3cf078a76d200c1dc348973f5","date":1437043657,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/SparseHLLTest#assertOneRegisterSet(HLL,int,byte).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Asserts that only the specified register is set and has the specified value.\n     */\n    private static void assertOneRegisterSet(final HLL hll,\n                                             final int registerIndex,\n                                             final byte registerValue) {\n        final IntByteOpenHashMap sparseProbabilisticStorage = hll.sparseProbabilisticStorage;\n        assertEquals(sparseProbabilisticStorage.size(), 1);\n        assertEquals(sparseProbabilisticStorage.get(registerIndex), registerValue);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/SparseHLLTest#assertOneRegisterSet(HLL,int,byte).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Asserts that only the specified register is set and has the specified value.\n     */\n    private static void assertOneRegisterSet(final HLL hll,\n                                             final int registerIndex,\n                                             final byte registerValue) {\n        final IntByteOpenHashMap sparseProbabilisticStorage = hll.sparseProbabilisticStorage;\n        assertEquals(sparseProbabilisticStorage.size(), 1);\n        assertEquals(sparseProbabilisticStorage.get(registerIndex), registerValue);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/SparseHLLTest#assertOneRegisterSet(HLL,int,byte).mjava","pathOld":"solr/core/src/test/org/apache/solr/util/hll/SparseHLLTest#assertOneRegisterSet(HLL,int,byte).mjava","sourceNew":"    /**\n     * Asserts that only the specified register is set and has the specified value.\n     */\n    private static void assertOneRegisterSet(final HLL hll,\n                                             final int registerIndex,\n                                             final byte registerValue) {\n        final IntByteHashMap sparseProbabilisticStorage = hll.sparseProbabilisticStorage;\n        assertEquals(sparseProbabilisticStorage.size(), 1);\n        assertEquals(sparseProbabilisticStorage.get(registerIndex), registerValue);\n    }\n\n","sourceOld":"    /**\n     * Asserts that only the specified register is set and has the specified value.\n     */\n    private static void assertOneRegisterSet(final HLL hll,\n                                             final int registerIndex,\n                                             final byte registerValue) {\n        final IntByteOpenHashMap sparseProbabilisticStorage = hll.sparseProbabilisticStorage;\n        assertEquals(sparseProbabilisticStorage.size(), 1);\n        assertEquals(sparseProbabilisticStorage.get(registerIndex), registerValue);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6faa211c4af605e3cf078a76d200c1dc348973f5"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6faa211c4af605e3cf078a76d200c1dc348973f5"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}