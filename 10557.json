{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testExplain().mjava","commits":[{"id":"64ff6b743fd4051da7ebb3d397d1ef80833a741a","date":1492023891,"type":1,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testExplain().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testExplain().mjava","sourceNew":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    DatePartEvaluator datePartEvaluator = new DatePartEvaluator(express,factory);\n    Explanation explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    datePartEvaluator = new DatePartEvaluator(express,factory);\n    explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","sourceOld":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    DatePartEvaluator datePartEvaluator = new DatePartEvaluator(express,factory);\n    Explanation explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    datePartEvaluator = new DatePartEvaluator(express,factory);\n    explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c513d69b21508db62cccf741d0cdd9e0171ae1a5","date":1492023892,"type":3,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testExplain().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testExplain().mjava","sourceNew":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    TemporalEvaluatorMonth datePartEvaluator = new TemporalEvaluatorMonth(express,factory);\n    Explanation explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    TemporalEvaluatorDay dayPartEvaluator = new TemporalEvaluatorDay(express,factory);\n    explain = dayPartEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","sourceOld":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    DatePartEvaluator datePartEvaluator = new DatePartEvaluator(express,factory);\n    Explanation explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    datePartEvaluator = new DatePartEvaluator(express,factory);\n    explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testExplain().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    TemporalEvaluatorMonth datePartEvaluator = new TemporalEvaluatorMonth(express,factory);\n    Explanation explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    TemporalEvaluatorDay dayPartEvaluator = new TemporalEvaluatorDay(express,factory);\n    explain = dayPartEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c513d69b21508db62cccf741d0cdd9e0171ae1a5":["64ff6b743fd4051da7ebb3d397d1ef80833a741a"],"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c513d69b21508db62cccf741d0cdd9e0171ae1a5"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"c513d69b21508db62cccf741d0cdd9e0171ae1a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["c513d69b21508db62cccf741d0cdd9e0171ae1a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","64ff6b743fd4051da7ebb3d397d1ef80833a741a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}