{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","commits":[{"id":"5b4df85b7268ca40452d6c01343d8eb00ed1f70a","date":1463171656,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        LOG.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        LOG.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        LOG.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        LOG.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","sourceNew":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        log.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","sourceOld":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        LOG.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","sourceNew":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    if (this.closed) {\n      return;\n    }\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        log.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","sourceOld":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        log.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b366e7dd3172289251a86be96031af4002cd19c","date":1560790783,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(String,DocCollection).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#notifyStateWatchers(Set[String],String,DocCollection).mjava","sourceNew":"  private void notifyStateWatchers(String collection, DocCollection collectionState) {\n    if (this.closed) {\n      return;\n    }\n    try {\n      notifications.submit(new Notification(collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        log.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","sourceOld":"  private void notifyStateWatchers(Set<String> liveNodes, String collection, DocCollection collectionState) {\n    if (this.closed) {\n      return;\n    }\n    try {\n      notifications.submit(new Notification(liveNodes, collection, collectionState));\n    }\n    catch (RejectedExecutionException e) {\n      if (closed == false) {\n        log.error(\"Couldn't run collection notifications for {}\", collection, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b366e7dd3172289251a86be96031af4002cd19c":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b4df85b7268ca40452d6c01343d8eb00ed1f70a"],"5b4df85b7268ca40452d6c01343d8eb00ed1f70a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b366e7dd3172289251a86be96031af4002cd19c"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["7b366e7dd3172289251a86be96031af4002cd19c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad30c6a479e764150a3316e57263319775f1df2","5b4df85b7268ca40452d6c01343d8eb00ed1f70a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"7b366e7dd3172289251a86be96031af4002cd19c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"5b4df85b7268ca40452d6c01343d8eb00ed1f70a":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}