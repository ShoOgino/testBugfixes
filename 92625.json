{"path":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","commits":[{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized Iterable<? extends Accountable> getChildResources() {\n    // Sync only to pull the current set of values:\n    return Accountables.namedAccountables(\"segment\", cache);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5487b7709ebaab4ddceadd24416e0c1d03f267f0","date":1417012003,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","sourceNew":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    final Map<Object, DocIdSet> copy;\n    synchronized (cache) {\n      copy = new HashMap<>(cache);\n    }\n    return Accountables.namedAccountables(\"segment\", copy);\n  }\n\n","sourceOld":"  @Override\n  public synchronized Iterable<? extends Accountable> getChildResources() {\n    // Sync only to pull the current set of values:\n    return Accountables.namedAccountables(\"segment\", cache);\n  }\n\n","bugFix":null,"bugIntro":["a40efbd3252a3520bd6d3eb557ee30c7e355baa8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a40efbd3252a3520bd6d3eb557ee30c7e355baa8","date":1417012490,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","sourceNew":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    final Map<Object, DocIdSet> copy;\n    synchronized (cache) {\n      copy = new HashMap<>(cache);\n    }\n    return Accountables.namedAccountables(\"segment\", copy);\n  }\n\n","bugFix":["5487b7709ebaab4ddceadd24416e0c1d03f267f0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fca6c8418a91a6d30730ad418791ddf59ec3d07a","date":1418666585,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","sourceNew":"  @Override\n  public Iterable<Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ba6ae8e3c153347cbb605024ca7550f5c91b178","date":1420215916,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Iterable<Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    // Sync to pull the current set of values:\n    synchronized (cache) {\n      // no need to clone, Accountable#namedAccountables already copies the data\n      return Accountables.namedAccountables(\"segment\", cache);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ba6ae8e3c153347cbb605024ca7550f5c91b178":["fca6c8418a91a6d30730ad418791ddf59ec3d07a"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["8ba6ae8e3c153347cbb605024ca7550f5c91b178","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"fca6c8418a91a6d30730ad418791ddf59ec3d07a":["a40efbd3252a3520bd6d3eb557ee30c7e355baa8"],"a40efbd3252a3520bd6d3eb557ee30c7e355baa8":["5487b7709ebaab4ddceadd24416e0c1d03f267f0"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["8ba6ae8e3c153347cbb605024ca7550f5c91b178"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"5487b7709ebaab4ddceadd24416e0c1d03f267f0":["0936055c0eed56be3e4ae5c9db5b0e355390736a"]},"commit2Childs":{"8ba6ae8e3c153347cbb605024ca7550f5c91b178":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"fca6c8418a91a6d30730ad418791ddf59ec3d07a":["8ba6ae8e3c153347cbb605024ca7550f5c91b178"],"a40efbd3252a3520bd6d3eb557ee30c7e355baa8":["fca6c8418a91a6d30730ad418791ddf59ec3d07a"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["5487b7709ebaab4ddceadd24416e0c1d03f267f0"],"5487b7709ebaab4ddceadd24416e0c1d03f267f0":["a40efbd3252a3520bd6d3eb557ee30c7e355baa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}