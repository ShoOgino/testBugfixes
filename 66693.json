{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f097b5629709760db07014e3003f8e135746720","date":1327623157,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      log.error(\"startTrackingSearchers: numOpens=\"+numOpens+\"numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043d101f6be7bf8e4c59e3aeeaec954fb1f954f5","date":1327684487,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      try {\n        throw new RuntimeException();\n      } catch (Exception e) {\n        log.error(\"\",e);\n      }\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      log.error(\"startTrackingSearchers: numOpens=\"+numOpens+\"numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      try {\n        throw new RuntimeException();\n      } catch (Exception e) {\n        log.error(\"\",e);\n      }\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5145e70727f776433c2b44ad5b54fe827df96ec4","date":1327690790,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      try {\n        throw new RuntimeException();\n      } catch (Exception e) {\n        log.error(\"\",e);\n      }\n      numOpens = numCloses = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7","date":1327763052,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      try {\n        throw new RuntimeException();\n      } catch (Exception e) {\n        log.error(\"\",e);\n      }\n      numOpens = numCloses = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.get();\n    numCloses = SolrIndexSearcher.numCloses.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#startTrackingSearchers().mjava","sourceNew":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens={} numCloses={}\", numOpens, numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","sourceOld":"  public static void startTrackingSearchers() {\n    numOpens = SolrIndexSearcher.numOpens.getAndSet(0);\n    numCloses = SolrIndexSearcher.numCloses.getAndSet(0);\n    if (numOpens != 0 || numCloses != 0) {\n      // NOTE: some other tests don't use this base class and hence won't reset the counts.\n      log.warn(\"startTrackingSearchers: numOpens=\"+numOpens+\" numCloses=\"+numCloses);\n      numOpens = numCloses = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5145e70727f776433c2b44ad5b54fe827df96ec4":["043d101f6be7bf8e4c59e3aeeaec954fb1f954f5"],"78a55f24d9b493c2a1cecf79f1d78279062b545b":["c26f00b574427b55127e869b935845554afde1fa","043d101f6be7bf8e4c59e3aeeaec954fb1f954f5"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["5145e70727f776433c2b44ad5b54fe827df96ec4","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["c26f00b574427b55127e869b935845554afde1fa","5145e70727f776433c2b44ad5b54fe827df96ec4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["5145e70727f776433c2b44ad5b54fe827df96ec4"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7":["78a55f24d9b493c2a1cecf79f1d78279062b545b","5145e70727f776433c2b44ad5b54fe827df96ec4"],"6f097b5629709760db07014e3003f8e135746720":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"043d101f6be7bf8e4c59e3aeeaec954fb1f954f5":["6f097b5629709760db07014e3003f8e135746720"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"5145e70727f776433c2b44ad5b54fe827df96ec4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fd92b8bcc88e969302510acf77bd6970da3994c4","19275ba31e621f6da1b83bf13af75233876fd3d4","014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"78a55f24d9b493c2a1cecf79f1d78279062b545b":["014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","6f097b5629709760db07014e3003f8e135746720"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7":[],"6f097b5629709760db07014e3003f8e135746720":["043d101f6be7bf8e4c59e3aeeaec954fb1f954f5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"043d101f6be7bf8e4c59e3aeeaec954fb1f954f5":["5145e70727f776433c2b44ad5b54fe827df96ec4","78a55f24d9b493c2a1cecf79f1d78279062b545b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fd92b8bcc88e969302510acf77bd6970da3994c4","014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}