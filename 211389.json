{"path":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","commits":[{"id":"f7178a82d1134111f4511f28bb9ad57573a57d93","date":1354112608,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66d4c05d2724c63d6dcbdb32aab67299d77e3ca1","date":1370803313,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","sourceNew":"  @Test\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n        break;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","sourceOld":"  @Test\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","sourceNew":"  // nocommit: move this to solr?\n  @Test @Ignore\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n        break;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","sourceOld":"  @Test\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n        break;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","sourceNew":null,"sourceOld":"  // nocommit: move this to solr?\n  @Test @Ignore\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n        break;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n        break;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailOnFieldCacheInsanity#testFailOnFieldCacheInsanity().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testFailOnFieldCacheInsanity() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    boolean insane = false;\n    for(Failure f : r.getFailures()) {\n      if (f.getMessage().indexOf(\"Insane\") != -1) {\n        insane = true;\n        break;\n      }\n    }\n    Assert.assertTrue(insane);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66d4c05d2724c63d6dcbdb32aab67299d77e3ca1":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9274621789ce990dbfef455dabdf026bb3184821":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f7178a82d1134111f4511f28bb9ad57573a57d93"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["66d4c05d2724c63d6dcbdb32aab67299d77e3ca1","9274621789ce990dbfef455dabdf026bb3184821"],"f7178a82d1134111f4511f28bb9ad57573a57d93":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["66d4c05d2724c63d6dcbdb32aab67299d77e3ca1"],"56572ec06f1407c066d6b7399413178b33176cd8":["66d4c05d2724c63d6dcbdb32aab67299d77e3ca1","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"66d4c05d2724c63d6dcbdb32aab67299d77e3ca1":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["66d4c05d2724c63d6dcbdb32aab67299d77e3ca1"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f7178a82d1134111f4511f28bb9ad57573a57d93":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","f7178a82d1134111f4511f28bb9ad57573a57d93"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["9274621789ce990dbfef455dabdf026bb3184821"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}