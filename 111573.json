{"path":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":null,"sourceOld":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"406e7055a3e99d3fa6ce49a555a51dd18b321806","date":1282520243,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":["3bd138adad78f6c527ba3046c2be9a6ee8704514"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18260135b66895e9d69aac929b2760331da0c7","date":1285291048,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    @Override\n    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35b388d9df4d2190412cd1cbcc0c391a94bb158","date":1309218318,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.AllScorer#nextDoc().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#nextDoc().mjava","sourceNew":null,"sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    @Override\n    public int nextDoc() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return doc=NO_MORE_DOCS;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        return doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2553b00f699380c64959ccb27991289aae87be2e":["6c18260135b66895e9d69aac929b2760331da0c7","f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","6c18260135b66895e9d69aac929b2760331da0c7"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["6c18260135b66895e9d69aac929b2760331da0c7","f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"6c18260135b66895e9d69aac929b2760331da0c7":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"f35b388d9df4d2190412cd1cbcc0c391a94bb158":["6c18260135b66895e9d69aac929b2760331da0c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"406e7055a3e99d3fa6ce49a555a51dd18b321806":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35b388d9df4d2190412cd1cbcc0c391a94bb158"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","406e7055a3e99d3fa6ce49a555a51dd18b321806"],"6c18260135b66895e9d69aac929b2760331da0c7":["2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"f35b388d9df4d2190412cd1cbcc0c391a94bb158":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"406e7055a3e99d3fa6ce49a555a51dd18b321806":["6c18260135b66895e9d69aac929b2760331da0c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}