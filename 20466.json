{"path":"solr/core/src/test/org/apache/solr/update/RootFieldTest#testLegacyBlockProcessing().mjava","commits":[{"id":"aa4f44656c8081bbc63325a83abdb025eafd5a2b","date":1543200469,"type":0,"author":"Moshe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/RootFieldTest#testLegacyBlockProcessing().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLegacyBlockProcessing() throws Exception\n  {\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");// delete everything!\n\n    // Add child free doc\n    SolrInputDocument docToUpdate = new SolrInputDocument();\n    String docId = \"11\";\n    docToUpdate.addField( \"id\", docId);\n    docToUpdate.addField( \"name\", \"child free doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.set( CommonParams.FL, \"id,name,_root_\" );\n\n    SolrDocumentList results = client.query(query).getResults();\n    assertThat(results.getNumFound(), is(1L));\n    SolrDocument foundDoc = results.get( 0 );\n\n    // Check retrieved field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat( ((List)foundDoc.getFieldValue( \"name\" )).get(0), is(\"child free doc\"));\n\n    String expectedRootValue = expectRoot() ? docId : null;\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n\n    // Update the doc\n    docToUpdate.setField( \"name\", \"updated doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    results = client.query(query).getResults();\n    assertEquals( 1, results.getNumFound() );\n    foundDoc = results.get( 0 );\n\n    // Check updated field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat( ((List)foundDoc.getFieldValue( \"name\" )).get(0), is(\"updated doc\"));\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9640edfb3700f29f143866d5639a53699d77693","date":1543245081,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/RootFieldTest#testLegacyBlockProcessing().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/RootFieldTest#testLegacyBlockProcessing().mjava","sourceNew":"  @Test\n  public void testLegacyBlockProcessing() throws Exception\n  {\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");// delete everything!\n\n    // Add child free doc\n    SolrInputDocument docToUpdate = new SolrInputDocument();\n    String docId = \"11\";\n    docToUpdate.addField( \"id\", docId);\n    docToUpdate.addField( \"name\", \"child free doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.set( CommonParams.FL, \"id,name,_root_\" );\n\n    SolrDocumentList results = client.query(query).getResults();\n    assertThat(results.getNumFound(), is(1L));\n    SolrDocument foundDoc = results.get( 0 );\n\n    // Check retrieved field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat(foundDoc.getFieldValue( \"name\" ), is(\"child free doc\"));\n\n    String expectedRootValue = expectRoot() ? docId : null;\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n\n    // Update the doc\n    docToUpdate.setField( \"name\", \"updated doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    results = client.query(query).getResults();\n    assertEquals( 1, results.getNumFound() );\n    foundDoc = results.get( 0 );\n\n    // Check updated field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat( ((List)foundDoc.getFieldValue( \"name\" )).get(0), is(\"updated doc\"));\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n  }\n\n","sourceOld":"  @Test\n  public void testLegacyBlockProcessing() throws Exception\n  {\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");// delete everything!\n\n    // Add child free doc\n    SolrInputDocument docToUpdate = new SolrInputDocument();\n    String docId = \"11\";\n    docToUpdate.addField( \"id\", docId);\n    docToUpdate.addField( \"name\", \"child free doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.set( CommonParams.FL, \"id,name,_root_\" );\n\n    SolrDocumentList results = client.query(query).getResults();\n    assertThat(results.getNumFound(), is(1L));\n    SolrDocument foundDoc = results.get( 0 );\n\n    // Check retrieved field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat( ((List)foundDoc.getFieldValue( \"name\" )).get(0), is(\"child free doc\"));\n\n    String expectedRootValue = expectRoot() ? docId : null;\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n\n    // Update the doc\n    docToUpdate.setField( \"name\", \"updated doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    results = client.query(query).getResults();\n    assertEquals( 1, results.getNumFound() );\n    foundDoc = results.get( 0 );\n\n    // Check updated field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat( ((List)foundDoc.getFieldValue( \"name\" )).get(0), is(\"updated doc\"));\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3597145e14bb5e4227c1ca197bc72f1803b91f3","date":1543333801,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/RootFieldTest#testLegacyBlockProcessing().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/RootFieldTest#testLegacyBlockProcessing().mjava","sourceNew":"  @Test\n  public void testLegacyBlockProcessing() throws Exception\n  {\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");// delete everything!\n\n    // Add child free doc\n    SolrInputDocument docToUpdate = new SolrInputDocument();\n    String docId = \"11\";\n    docToUpdate.addField( \"id\", docId);\n    docToUpdate.addField( \"name\", \"child free doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.set( CommonParams.FL, \"id,name,_root_\" );\n\n    SolrDocumentList results = client.query(query).getResults();\n    assertThat(results.getNumFound(), is(1L));\n    SolrDocument foundDoc = results.get( 0 );\n\n    // Check retrieved field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat(foundDoc.getFieldValue( \"name\" ), is(\"child free doc\"));\n\n    String expectedRootValue = expectRoot() ? docId : null;\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n\n    // Update the doc\n    docToUpdate.setField( \"name\", \"updated doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    results = client.query(query).getResults();\n    assertEquals( 1, results.getNumFound() );\n    foundDoc = results.get( 0 );\n\n    // Check updated field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat(foundDoc.getFieldValue( \"name\" ), is(\"updated doc\"));\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n  }\n\n","sourceOld":"  @Test\n  public void testLegacyBlockProcessing() throws Exception\n  {\n    SolrClient client = getSolrClient();\n    client.deleteByQuery(\"*:*\");// delete everything!\n\n    // Add child free doc\n    SolrInputDocument docToUpdate = new SolrInputDocument();\n    String docId = \"11\";\n    docToUpdate.addField( \"id\", docId);\n    docToUpdate.addField( \"name\", \"child free doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.set( CommonParams.FL, \"id,name,_root_\" );\n\n    SolrDocumentList results = client.query(query).getResults();\n    assertThat(results.getNumFound(), is(1L));\n    SolrDocument foundDoc = results.get( 0 );\n\n    // Check retrieved field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat(foundDoc.getFieldValue( \"name\" ), is(\"child free doc\"));\n\n    String expectedRootValue = expectRoot() ? docId : null;\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n\n    // Update the doc\n    docToUpdate.setField( \"name\", \"updated doc\" );\n    client.add(docToUpdate);\n    client.commit();\n\n    results = client.query(query).getResults();\n    assertEquals( 1, results.getNumFound() );\n    foundDoc = results.get( 0 );\n\n    // Check updated field values\n    assertThat(foundDoc.getFieldValue( \"id\" ), is(docId));\n    assertThat( ((List)foundDoc.getFieldValue( \"name\" )).get(0), is(\"updated doc\"));\n    assertThat(MESSAGE, foundDoc.getFieldValue( \"_root_\" ), is(expectedRootValue));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa4f44656c8081bbc63325a83abdb025eafd5a2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3597145e14bb5e4227c1ca197bc72f1803b91f3":["d9640edfb3700f29f143866d5639a53699d77693"],"d9640edfb3700f29f143866d5639a53699d77693":["aa4f44656c8081bbc63325a83abdb025eafd5a2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e3597145e14bb5e4227c1ca197bc72f1803b91f3"]},"commit2Childs":{"aa4f44656c8081bbc63325a83abdb025eafd5a2b":["d9640edfb3700f29f143866d5639a53699d77693"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa4f44656c8081bbc63325a83abdb025eafd5a2b"],"e3597145e14bb5e4227c1ca197bc72f1803b91f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9640edfb3700f29f143866d5639a53699d77693":["e3597145e14bb5e4227c1ca197bc72f1803b91f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}