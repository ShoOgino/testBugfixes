{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long).mjava","commits":[{"id":"e3ce1ef883d26aa73919aa2d53991726e96caa13","date":1445421402,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public PointReader getReader(long start) throws IOException {\n    assert closed;\n    return new OfflinePointReader(tempDir, out.getName(), packedBytesLength, start, count-start);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca","date":1457777566,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long).mjava","sourceNew":"  @Override\n  public PointReader getReader(long start) throws IOException {\n    assert closed;\n    return new OfflinePointReader(tempDir, out.getName(), packedBytesLength, start, count-start, longOrds);\n  }\n\n","sourceOld":"  @Override\n  public PointReader getReader(long start) throws IOException {\n    assert closed;\n    return new OfflinePointReader(tempDir, out.getName(), packedBytesLength, start, count-start);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950b7a6881d14da782b60444c11295e3ec50d41a","date":1458379095,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long).mjava","sourceNew":"  @Override\n  public PointReader getReader(long start, long length) throws IOException {\n    assert closed;\n    assert start + length <= count: \"start=\" + start + \" length=\" + length + \" count=\" + count;\n    return new OfflinePointReader(tempDir, out.getName(), packedBytesLength, start, length, longOrds);\n  }\n\n","sourceOld":"  @Override\n  public PointReader getReader(long start) throws IOException {\n    assert closed;\n    return new OfflinePointReader(tempDir, out.getName(), packedBytesLength, start, count-start, longOrds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"950b7a6881d14da782b60444c11295e3ec50d41a":["9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["950b7a6881d14da782b60444c11295e3ec50d41a"]},"commit2Childs":{"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca":["950b7a6881d14da782b60444c11295e3ec50d41a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca"],"950b7a6881d14da782b60444c11295e3ec50d41a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}