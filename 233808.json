{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b7a1bc6030c258e47d63eff3455a2b1bbf32683","date":1339494023,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (readerManager != null) {\n      readerManager.close();\n      readerManager = null;\n    }\n    if (cache != null) {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (reader != null) {\n      reader.close();\n      reader = null;\n    }\n    if (cache != null) {\n      cache.close();\n      cache = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (initializedReaderManager) {\n      readerManager.close();\n      readerManager = null;\n      initializedReaderManager = false;\n    }\n    if (cache != null) {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (readerManager != null) {\n      readerManager.close();\n      readerManager = null;\n    }\n    if (cache != null) {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#closeResources().mjava","sourceNew":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (initializedReaderManager) {\n      readerManager.close();\n      readerManager = null;\n      initializedReaderManager = false;\n    }\n    if (cache != null) {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * A hook for extending classes to close additional resources that were used.\n   * The default implementation closes the {@link IndexReader} as well as the\n   * {@link TaxonomyWriterCache} instances that were used. <br>\n   * <b>NOTE:</b> if you override this method, you should include a\n   * <code>super.closeResources()</code> call in your implementation.\n   */\n  protected synchronized void closeResources() throws IOException {\n    if (readerManager != null) {\n      readerManager.close();\n      readerManager = null;\n    }\n    if (cache != null) {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3d58d08788c3fd51172ba34474cca42499d6391b"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["407687e67faf6e1f02a211ca078d8e3eed631027","3d58d08788c3fd51172ba34474cca42499d6391b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}