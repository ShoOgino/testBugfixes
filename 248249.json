{"path":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    System.setProperty(\"solr.data.dir\", \"./solr/data\");\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    System.setProperty(\"solr.data.dir\", \"./solr/data\");\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    System.setProperty(\"solr.data.dir\", \"./solr/data\");\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    System.setProperty(\"solr.data.dir\", \"./solr/data\");\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    System.setProperty(\"solr.data.dir\", \"./solr/data\");\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"428d058f3e3060b02e78f29628438e6c61819f2f","date":1269377814,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n        + System.getProperty(\"file.separator\")\n        + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    System.setProperty(\"solr.data.dir\", \"./solr/data\");\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b485b7ca1219d7aae3e9e7f0de6d7d156817d35a","date":1280680707,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n        + System.getProperty(\"file.separator\")\n        + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random()));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n        + System.getProperty(\"file.separator\")\n        + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"848cf14d057f83cf4a9ced81c37d4d59ab739e5a","date":1280773472,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random()));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n        + System.getProperty(\"file.separator\")\n        + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random()));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40032bb949077506230e1c180363491942f0a3d1","date":1283613185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random()));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random()));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbacbb60f995079ca6bdfef735fd4881040ec3cf","date":1292341298,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random()));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random()));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n        + System.getProperty(\"file.separator\")\n        + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99f61a1fe3ad0f1957f5e984ee85109ac14366f5","date":1293717591,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", SolrJettyTestBase.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = SolrJettyTestBase.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", SolrJettyTestBase.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = SolrJettyTestBase.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", SolrJettyTestBase.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = SolrJettyTestBase.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = \"../../webapp/web\";\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", SolrJettyTestBase.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = SolrJettyTestBase.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", SolrJettyTestBase.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = SolrJettyTestBase.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", SolrJettyTestBase.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = SolrJettyTestBase.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", SolrJettyTestBase.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = SolrJettyTestBase.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception \n  {\n    super.setUp();\n    System.setProperty(\"solr.solr.home\", ExternalPaths.EXAMPLE_HOME);\n    \n    File dataDir = new File(SolrTestCaseJ4.TEMP_DIR,\n        getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    System.setProperty(\"solr.data.dir\", dataDir.getCanonicalPath());\n    String path = ExternalPaths.WEBAPP_HOME;\n\n    server = new Server(port);\n    // insecure: only use for tests!!!!\n    server.setSessionIdManager(new HashSessionIdManager(new Random(random.nextLong())));\n    new WebAppContext(server, path, context );\n\n    SocketConnector connector = new SocketConnector();\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(0);\n    server.setConnectors(new Connector[]{connector});\n    server.setStopAtShutdown( true );\n    \n    server.start();\n    port = connector.getLocalPort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","99f61a1fe3ad0f1957f5e984ee85109ac14366f5"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["b09c7419b92e982a901698cb401ce22ac35e4b04","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["70ad682703b8585f5d0a637efec044d57ec05efb","b09c7419b92e982a901698cb401ce22ac35e4b04"],"d20d5e40789b1c42f4f926e3174b271256c43657":["99f61a1fe3ad0f1957f5e984ee85109ac14366f5"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["40032bb949077506230e1c180363491942f0a3d1","bbacbb60f995079ca6bdfef735fd4881040ec3cf"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["428d058f3e3060b02e78f29628438e6c61819f2f","bbacbb60f995079ca6bdfef735fd4881040ec3cf"],"428d058f3e3060b02e78f29628438e6c61819f2f":["1da8d55113b689b06716246649de6f62430f15c0"],"b485b7ca1219d7aae3e9e7f0de6d7d156817d35a":["428d058f3e3060b02e78f29628438e6c61819f2f"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"848cf14d057f83cf4a9ced81c37d4d59ab739e5a":["b485b7ca1219d7aae3e9e7f0de6d7d156817d35a"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99f61a1fe3ad0f1957f5e984ee85109ac14366f5"],"99f61a1fe3ad0f1957f5e984ee85109ac14366f5":["bbacbb60f995079ca6bdfef735fd4881040ec3cf"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["d20d5e40789b1c42f4f926e3174b271256c43657"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["99f61a1fe3ad0f1957f5e984ee85109ac14366f5"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b09c7419b92e982a901698cb401ce22ac35e4b04"],"bbacbb60f995079ca6bdfef735fd4881040ec3cf":["40032bb949077506230e1c180363491942f0a3d1"],"40032bb949077506230e1c180363491942f0a3d1":["848cf14d057f83cf4a9ced81c37d4d59ab739e5a"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"45669a651c970812a680841b97a77cce06af559f":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["70ad682703b8585f5d0a637efec044d57ec05efb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"428d058f3e3060b02e78f29628438e6c61819f2f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b485b7ca1219d7aae3e9e7f0de6d7d156817d35a"],"b485b7ca1219d7aae3e9e7f0de6d7d156817d35a":["848cf14d057f83cf4a9ced81c37d4d59ab739e5a"],"1da8d55113b689b06716246649de6f62430f15c0":["428d058f3e3060b02e78f29628438e6c61819f2f"],"848cf14d057f83cf4a9ced81c37d4d59ab739e5a":["40032bb949077506230e1c180363491942f0a3d1"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["45669a651c970812a680841b97a77cce06af559f"],"99f61a1fe3ad0f1957f5e984ee85109ac14366f5":["70ad682703b8585f5d0a637efec044d57ec05efb","d20d5e40789b1c42f4f926e3174b271256c43657","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","b09c7419b92e982a901698cb401ce22ac35e4b04"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["c26f00b574427b55127e869b935845554afde1fa","135621f3a0670a9394eb563224a3b76cc4dddc0f","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"40032bb949077506230e1c180363491942f0a3d1":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","bbacbb60f995079ca6bdfef735fd4881040ec3cf"],"bbacbb60f995079ca6bdfef735fd4881040ec3cf":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99f61a1fe3ad0f1957f5e984ee85109ac14366f5"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}