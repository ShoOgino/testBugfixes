{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeQuery#LatLonShapeQuery(String,QueryRelation,LatLonGeometry[]).mjava","commits":[{"id":"22cd5821b741de2f2eadca41790b86b8260ec739","date":1580367802,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeQuery#LatLonShapeQuery(String,QueryRelation,LatLonGeometry[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a query that matches all indexed shapes to the provided array of {@link LatLonGeometry}\n   */\n  LatLonShapeQuery(String field, QueryRelation queryRelation, LatLonGeometry[] geometries) {\n    super(field, queryRelation);\n    if (queryRelation == QueryRelation.WITHIN) {\n      for (LatLonGeometry geometry : geometries) {\n        if (geometry instanceof Line) {\n          // TODO: line queries do not support within relations\n          throw new IllegalArgumentException(\"LatLonShapeQuery does not support \" + QueryRelation.WITHIN + \" queries with line geometries\");\n        }\n      }\n\n    }\n    this.component2D = LatLonGeometry.create(geometries);\n    this.geometries = geometries.clone();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c42be8d779573d0c86ba775117e17360dbf5a6","date":1583217404,"type":5,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeQuery#LatLonShapeQuery(String,QueryRelation,LatLonGeometry...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeQuery#LatLonShapeQuery(String,QueryRelation,LatLonGeometry[]).mjava","sourceNew":"  /**\n   * Creates a query that matches all indexed shapes to the provided array of {@link LatLonGeometry}\n   */\n  LatLonShapeQuery(String field, QueryRelation queryRelation, LatLonGeometry... geometries) {\n    super(field, queryRelation);\n    if (queryRelation == QueryRelation.WITHIN) {\n      for (LatLonGeometry geometry : geometries) {\n        if (geometry instanceof Line) {\n          // TODO: line queries do not support within relations\n          throw new IllegalArgumentException(\"LatLonShapeQuery does not support \" + QueryRelation.WITHIN + \" queries with line geometries\");\n        }\n      }\n\n    }\n    this.component2D = LatLonGeometry.create(geometries);\n    this.geometries = geometries.clone();\n  }\n\n","sourceOld":"  /**\n   * Creates a query that matches all indexed shapes to the provided array of {@link LatLonGeometry}\n   */\n  LatLonShapeQuery(String field, QueryRelation queryRelation, LatLonGeometry[] geometries) {\n    super(field, queryRelation);\n    if (queryRelation == QueryRelation.WITHIN) {\n      for (LatLonGeometry geometry : geometries) {\n        if (geometry instanceof Line) {\n          // TODO: line queries do not support within relations\n          throw new IllegalArgumentException(\"LatLonShapeQuery does not support \" + QueryRelation.WITHIN + \" queries with line geometries\");\n        }\n      }\n\n    }\n    this.component2D = LatLonGeometry.create(geometries);\n    this.geometries = geometries.clone();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["22cd5821b741de2f2eadca41790b86b8260ec739"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22cd5821b741de2f2eadca41790b86b8260ec739":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56c42be8d779573d0c86ba775117e17360dbf5a6"]},"commit2Childs":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22cd5821b741de2f2eadca41790b86b8260ec739"],"22cd5821b741de2f2eadca41790b86b8260ec739":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}