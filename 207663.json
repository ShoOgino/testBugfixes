{"path":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","commits":[{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Relation relateRangeBBoxToQuery(int minXOffset, int minYOffset, byte[] minTriangle,\n                                            int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    double minLat = decode(NumericUtils.sortableBytesToInt(minTriangle, minYOffset));\n    double minLon = decode(NumericUtils.sortableBytesToInt(minTriangle, minXOffset));\n    double maxLat = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxYOffset));\n    double maxLon = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxXOffset));\n\n    // check internal node against query\n    return line2D.relate(minLat, maxLat, minLon, maxLon);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","sourceNew":"  @Override\n  protected Relation relateRangeBBoxToQuery(int minXOffset, int minYOffset, byte[] minTriangle,\n                                            int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    double minY = decode(NumericUtils.sortableBytesToInt(minTriangle, minYOffset));\n    double minX = decode(NumericUtils.sortableBytesToInt(minTriangle, minXOffset));\n    double maxY = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxYOffset));\n    double maxX = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxXOffset));\n\n    // check internal node against query\n    return line2D.relate(minX, maxX, minY, maxY);\n  }\n\n","sourceOld":"  @Override\n  protected Relation relateRangeBBoxToQuery(int minXOffset, int minYOffset, byte[] minTriangle,\n                                            int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    double minLat = decode(NumericUtils.sortableBytesToInt(minTriangle, minYOffset));\n    double minLon = decode(NumericUtils.sortableBytesToInt(minTriangle, minXOffset));\n    double maxLat = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxYOffset));\n    double maxLon = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxXOffset));\n\n    // check internal node against query\n    return line2D.relate(minLat, maxLat, minLon, maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","sourceNew":"  @Override\n  protected Relation relateRangeBBoxToQuery(int minXOffset, int minYOffset, byte[] minTriangle,\n                                            int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    double minY = decode(NumericUtils.sortableBytesToInt(minTriangle, minYOffset));\n    double minX = decode(NumericUtils.sortableBytesToInt(minTriangle, minXOffset));\n    double maxY = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxYOffset));\n    double maxX = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxXOffset));\n\n    // check internal node against query\n    return line2D.relate(minX, maxX, minY, maxY);\n  }\n\n","sourceOld":"  @Override\n  protected Relation relateRangeBBoxToQuery(int minXOffset, int minYOffset, byte[] minTriangle,\n                                            int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    double minLat = decode(NumericUtils.sortableBytesToInt(minTriangle, minYOffset));\n    double minLon = decode(NumericUtils.sortableBytesToInt(minTriangle, minXOffset));\n    double maxLat = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxYOffset));\n    double maxLon = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxXOffset));\n\n    // check internal node against query\n    return line2D.relate(minLat, maxLat, minLon, maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeLineQuery#relateRangeBBoxToQuery(int,int,byte[],int,int,byte[]).mjava","sourceNew":"  @Override\n  protected Relation relateRangeBBoxToQuery(int minXOffset, int minYOffset, byte[] minTriangle,\n                                            int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    double minY = decode(NumericUtils.sortableBytesToInt(minTriangle, minYOffset));\n    double minX = decode(NumericUtils.sortableBytesToInt(minTriangle, minXOffset));\n    double maxY = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxYOffset));\n    double maxX = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxXOffset));\n\n    // check internal node against query\n    return line2D.relate(minX, maxX, minY, maxY);\n  }\n\n","sourceOld":"  @Override\n  protected Relation relateRangeBBoxToQuery(int minXOffset, int minYOffset, byte[] minTriangle,\n                                            int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    double minY = decode(NumericUtils.sortableBytesToInt(minTriangle, minYOffset));\n    double minX = decode(NumericUtils.sortableBytesToInt(minTriangle, minXOffset));\n    double maxY = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxYOffset));\n    double maxX = decode(NumericUtils.sortableBytesToInt(maxTriangle, maxXOffset));\n\n    // check internal node against query\n    return line2D.relate(minX, maxX, minY, maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"b0b597c65628ca9e73913a07e81691f8229bae35":["c286b0d8c507a88b289407e2fe161effa275c6b0","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["09c1e6d465800c73af60624bf9d4459a19f7940c","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}