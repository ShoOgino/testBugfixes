{"path":"lucene/core/src/java/org/apache/lucene/util/MathUtil#gcd(long,long).mjava","commits":[{"id":"bf317f41f8247db62a955791ebb8a5ab3e7c8d47","date":1366724337,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MathUtil#gcd(long,long).mjava","pathOld":"/dev/null","sourceNew":"  /** Return the greatest common divisor of <code>a</code> and <code>b</code>,\n   *  consistently with {@link BigInteger#gcd(BigInteger)}.\n   *  <p><b>NOTE</b>: A greatest common divisor must be positive, but\n   *  <code>2^64</code> cannot be expressed as a long although it\n   *  is the GCD of {@link Long#MIN_VALUE} and <code>0</code> and the GCD of\n   *  {@link Long#MIN_VALUE} and {@link Long#MIN_VALUE}. So in these 2 cases,\n   *  and only them, this method will return {@link Long#MIN_VALUE}. */\n  // see http://en.wikipedia.org/wiki/Binary_GCD_algorithm#Iterative_version_in_C.2B.2B_using_ctz_.28count_trailing_zeros.29\n  public static long gcd(long a, long b) {\n    a = Math.abs(a);\n    b = Math.abs(b);\n    if (a == 0) {\n      return b;\n    } else if (b == 0) {\n      return a;\n    }\n    final int commonTrailingZeros = Long.numberOfTrailingZeros(a | b);\n    a >>>= Long.numberOfTrailingZeros(a);\n    while (true) {\n      b >>>= Long.numberOfTrailingZeros(b);\n      if (a == b) {\n        break;\n      } else if (a > b || a == Long.MIN_VALUE) { // MIN_VALUE is treated as 2^64\n        final long tmp = a;\n        a = b;\n        b = tmp;\n      }\n      if (a == 1) {\n        break;\n      }\n      b -= a;\n    }\n    return a << commonTrailingZeros;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf317f41f8247db62a955791ebb8a5ab3e7c8d47":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bf317f41f8247db62a955791ebb8a5ab3e7c8d47"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bf317f41f8247db62a955791ebb8a5ab3e7c8d47"],"bf317f41f8247db62a955791ebb8a5ab3e7c8d47":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}