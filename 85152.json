{"path":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","commits":[{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":0,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setCommitData(commitData);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setCommitData(commitData);\n  }\n\n","bugFix":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"138bba875d696cd48f61b681050026222022e937","date":1473262610,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  /*\n  Also see SolrIndexSplitter.setCommitData\n   */\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13734b36bfd631ed6a46b961df376f679e8a3f57","date":1473743967,"type":4,"author":"Varun Thacker","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","sourceNew":null,"sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  /*\n  Also see SolrIndexSplitter.setCommitData\n   */\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString());\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","sourceNew":null,"sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#setCommitData(IndexWriter).mjava","sourceNew":null,"sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  private void setCommitData(IndexWriter iw) {\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,\n        String.valueOf(System.currentTimeMillis()));\n    iw.setCommitData(commitData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"13734b36bfd631ed6a46b961df376f679e8a3f57":["138bba875d696cd48f61b681050026222022e937"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"138bba875d696cd48f61b681050026222022e937":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["71e1a70f18d64b93db3ef618e606d6df5062f747","89424def13674ea17829b41c5883c54ecc31a132"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bcf9886c8ff537aafde14de48ebf744f5673f08b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["71e1a70f18d64b93db3ef618e606d6df5062f747","13734b36bfd631ed6a46b961df376f679e8a3f57"]},"commit2Childs":{"13734b36bfd631ed6a46b961df376f679e8a3f57":["89424def13674ea17829b41c5883c54ecc31a132"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["138bba875d696cd48f61b681050026222022e937","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","89424def13674ea17829b41c5883c54ecc31a132"],"138bba875d696cd48f61b681050026222022e937":["13734b36bfd631ed6a46b961df376f679e8a3f57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}