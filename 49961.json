{"path":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory#parseRules(String,ResourceLoader).mjava","commits":[{"id":"5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb","date":1354558878,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory#parseRules(String,ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  private BreakIterator parseRules(String filename, ResourceLoader loader) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream rulesStream = loader.openResource(filename);\n    BufferedReader reader = new BufferedReader\n        (IOUtils.getDecodingReader(rulesStream, IOUtils.CHARSET_UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      if ( ! line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    reader.close();\n    return new RuleBasedBreakIterator(rules.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory#parseRules(String,ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  private BreakIterator parseRules(String filename, ResourceLoader loader) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream rulesStream = loader.openResource(filename);\n    BufferedReader reader = new BufferedReader\n        (IOUtils.getDecodingReader(rulesStream, IOUtils.CHARSET_UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      if ( ! line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    reader.close();\n    return new RuleBasedBreakIterator(rules.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory#parseRules(String,ResourceLoader).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory#parseRules(String,ResourceLoader).mjava","sourceNew":"  private BreakIterator parseRules(String filename, ResourceLoader loader) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream rulesStream = loader.openResource(filename);\n    BufferedReader reader = new BufferedReader\n        (IOUtils.getDecodingReader(rulesStream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      if ( ! line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    reader.close();\n    return new RuleBasedBreakIterator(rules.toString());\n  }\n\n","sourceOld":"  private BreakIterator parseRules(String filename, ResourceLoader loader) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream rulesStream = loader.openResource(filename);\n    BufferedReader reader = new BufferedReader\n        (IOUtils.getDecodingReader(rulesStream, IOUtils.CHARSET_UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      if ( ! line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    reader.close();\n    return new RuleBasedBreakIterator(rules.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory#parseRules(String,ResourceLoader).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory#parseRules(String,ResourceLoader).mjava","sourceNew":"  private BreakIterator parseRules(String filename, ResourceLoader loader) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream rulesStream = loader.openResource(filename);\n    BufferedReader reader = new BufferedReader\n        (IOUtils.getDecodingReader(rulesStream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      if ( ! line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    reader.close();\n    return new RuleBasedBreakIterator(rules.toString());\n  }\n\n","sourceOld":"  private BreakIterator parseRules(String filename, ResourceLoader loader) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream rulesStream = loader.openResource(filename);\n    BufferedReader reader = new BufferedReader\n        (IOUtils.getDecodingReader(rulesStream, IOUtils.CHARSET_UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      if ( ! line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    reader.close();\n    return new RuleBasedBreakIterator(rules.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb","7d89d7e4e5101347833eea558851bf4209218619"],"5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb"],"7d89d7e4e5101347833eea558851bf4209218619":["5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d89d7e4e5101347833eea558851bf4209218619"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb":["5eb2511ababf862ea11e10761c70ee560cd84510","407687e67faf6e1f02a211ca078d8e3eed631027","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}