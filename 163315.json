{"path":"lucene/src/java/org/apache/lucene/codecs/SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  /**\n   * Write {@link SegmentInfos} data without closing the output. The returned\n   * output will become finished only after a successful completion of\n   * \"two phase commit\" that first calls {@link #prepareCommit(IndexOutput)} and\n   * then {@link #finishCommit(IndexOutput)}.\n   * @param dir directory to write data to\n   * @param segmentsFileName name of the \"segments_N\" file to create\n   * @param infos data to write\n   * @return an instance of {@link IndexOutput} to be used in subsequent \"two\n   * phase commit\" operations as described above.\n   * @throws IOException\n   */\n  public abstract IndexOutput writeInfos(Directory dir, String segmentsFileName, String codecID, SegmentInfos infos, IOContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Write {@link SegmentInfos} data without closing the output. The returned\n   * output will become finished only after a successful completion of\n   * \"two phase commit\" that first calls {@link #prepareCommit(IndexOutput)} and\n   * then {@link #finishCommit(IndexOutput)}.\n   * @param dir directory to write data to\n   * @param segmentsFileName name of the \"segments_N\" file to create\n   * @param infos data to write\n   * @return an instance of {@link IndexOutput} to be used in subsequent \"two\n   * phase commit\" operations as described above.\n   * @throws IOException\n   */\n  public abstract IndexOutput writeInfos(Directory dir, String segmentsFileName, String codecID, SegmentInfos infos, IOContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  /**\n   * Write {@link SegmentInfos} data without closing the output. The returned\n   * output will become finished only after a successful completion of\n   * \"two phase commit\" that first calls {@link #prepareCommit(IndexOutput)} and\n   * then {@link #finishCommit(IndexOutput)}.\n   * @param dir directory to write data to\n   * @param segmentsFileName name of the \"segments_N\" file to create\n   * @param infos data to write\n   * @return an instance of {@link IndexOutput} to be used in subsequent \"two\n   * phase commit\" operations as described above.\n   * @throws IOException\n   */\n  public abstract IndexOutput writeInfos(Directory dir, String segmentsFileName, String codecID, SegmentInfos infos, IOContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Write {@link SegmentInfos} data without closing the output. The returned\n   * output will become finished only after a successful completion of\n   * \"two phase commit\" that first calls {@link #prepareCommit(IndexOutput)} and\n   * then {@link #finishCommit(IndexOutput)}.\n   * @param dir directory to write data to\n   * @param segmentsFileName name of the \"segments_N\" file to create\n   * @param infos data to write\n   * @return an instance of {@link IndexOutput} to be used in subsequent \"two\n   * phase commit\" operations as described above.\n   * @throws IOException\n   */\n  public abstract IndexOutput writeInfos(Directory dir, String segmentsFileName, String codecID, SegmentInfos infos, IOContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}