{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates the path in ZooKeeper, creating each node as necessary.\n   * \n   * e.g. If <code>path=/solr/group/node</code> and none of the nodes, solr,\n   * group, node exist, each will be created.\n   * \n   * @param path\n   * @param retryOnConnLoss\n   * @throws KeeperException\n   * @throws InterruptedException\n   */\n  public void makePath(String path, boolean retryOnConnLoss) throws KeeperException,\n      InterruptedException {\n    makePath(path, null, CreateMode.PERSISTENT, retryOnConnLoss);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates the path in ZooKeeper, creating each node as necessary.\n   * \n   * e.g. If <code>path=/solr/group/node</code> and none of the nodes, solr,\n   * group, node exist, each will be created.\n   * \n   * @param path\n   * @param retryOnConnLoss\n   * @throws KeeperException\n   * @throws InterruptedException\n   */\n  public void makePath(String path, boolean retryOnConnLoss) throws KeeperException,\n      InterruptedException {\n    makePath(path, null, CreateMode.PERSISTENT, retryOnConnLoss);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates the path in ZooKeeper, creating each node as necessary.\n   * \n   * e.g. If <code>path=/solr/group/node</code> and none of the nodes, solr,\n   * group, node exist, each will be created.\n   * \n   * @param path\n   * @param retryOnConnLoss\n   * @throws KeeperException\n   * @throws InterruptedException\n   */\n  public void makePath(String path, boolean retryOnConnLoss) throws KeeperException,\n      InterruptedException {\n    makePath(path, null, CreateMode.PERSISTENT, retryOnConnLoss);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","sourceNew":"  /**\n   * Creates the path in ZooKeeper, creating each node as necessary.\n   * \n   * e.g. If <code>path=/solr/group/node</code> and none of the nodes, solr,\n   * group, node exist, each will be created.\n   */\n  public void makePath(String path, boolean retryOnConnLoss) throws KeeperException,\n      InterruptedException {\n    makePath(path, null, CreateMode.PERSISTENT, retryOnConnLoss);\n  }\n\n","sourceOld":"  /**\n   * Creates the path in ZooKeeper, creating each node as necessary.\n   * \n   * e.g. If <code>path=/solr/group/node</code> and none of the nodes, solr,\n   * group, node exist, each will be created.\n   * \n   * @param path\n   * @param retryOnConnLoss\n   * @throws KeeperException\n   * @throws InterruptedException\n   */\n  public void makePath(String path, boolean retryOnConnLoss) throws KeeperException,\n      InterruptedException {\n    makePath(path, null, CreateMode.PERSISTENT, retryOnConnLoss);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#makePath(String,boolean).mjava","sourceNew":"  /**\n   * Creates the path in ZooKeeper, creating each node as necessary.\n   *\n   * e.g. If <code>path=/solr/group/node</code> and none of the nodes, solr,\n   * group, node exist, each will be created.\n   */\n  public void makePath(String path, boolean retryOnConnLoss) throws KeeperException,\n      InterruptedException {\n    makePath(path, null, CreateMode.PERSISTENT, retryOnConnLoss);\n  }\n\n","sourceOld":"  /**\n   * Creates the path in ZooKeeper, creating each node as necessary.\n   * \n   * e.g. If <code>path=/solr/group/node</code> and none of the nodes, solr,\n   * group, node exist, each will be created.\n   */\n  public void makePath(String path, boolean retryOnConnLoss) throws KeeperException,\n      InterruptedException {\n    makePath(path, null, CreateMode.PERSISTENT, retryOnConnLoss);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86290366cefc1b9d4eced13b430858c4a4c0421d"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}