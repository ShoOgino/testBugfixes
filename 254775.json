{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    File workDir = new File(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = new File(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = new File(workDir, d);\n    }\n    // files\n    collectFiles(dataDir, inputFiles);\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = \"ISO-8859-1\";\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    File workDir = new File(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = new File(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = new File(workDir, d);\n    }\n    // files\n    collectFiles(dataDir, inputFiles);\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = \"ISO-8859-1\";\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    File workDir = new File(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = new File(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = new File(workDir, d);\n    }\n    // files\n    collectFiles(dataDir, inputFiles);\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = StandardCharsets.ISO_8859_1.name();\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    File workDir = new File(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = new File(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = new File(workDir, d);\n    }\n    // files\n    collectFiles(dataDir, inputFiles);\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = \"ISO-8859-1\";\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    File workDir = new File(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = new File(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = new File(workDir, d);\n    }\n    // files\n    collectFiles(dataDir, inputFiles);\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = StandardCharsets.ISO_8859_1.name();\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    File workDir = new File(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = new File(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = new File(workDir, d);\n    }\n    // files\n    collectFiles(dataDir, inputFiles);\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = \"ISO-8859-1\";\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    Path workDir = Paths.get(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = Paths.get(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = workDir.resolve(d);\n    }\n    // files\n    try {\n      collectFiles(dataDir, inputFiles);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = StandardCharsets.ISO_8859_1.name();\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    File workDir = new File(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = new File(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = new File(workDir, d);\n    }\n    // files\n    collectFiles(dataDir, inputFiles);\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = StandardCharsets.ISO_8859_1.name();\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    Path workDir = Paths.get(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = Paths.get(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = workDir.resolve(d);\n    }\n    // files\n    try {\n      collectFiles(dataDir, inputFiles);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).getConstructor().newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).getConstructor().newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = StandardCharsets.ISO_8859_1.name();\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    // dirs\n    Path workDir = Paths.get(config.get(\"work.dir\", \"work\"));\n    String d = config.get(\"docs.dir\", \"trec\");\n    dataDir = Paths.get(d);\n    if (!dataDir.isAbsolute()) {\n      dataDir = workDir.resolve(d);\n    }\n    // files\n    try {\n      collectFiles(dataDir, inputFiles);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    if (inputFiles.size() == 0) {\n      throw new IllegalArgumentException(\"No files in dataDir: \" + dataDir);\n    }\n    // trec doc parser\n    try {\n      String trecDocParserClassName = config.get(\"trec.doc.parser\", \"org.apache.lucene.benchmark.byTask.feeds.TrecGov2Parser\");\n      trecDocParser = Class.forName(trecDocParserClassName).asSubclass(TrecDocParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // html parser\n    try {\n      String htmlParserClassName = config.get(\"html.parser\",\n          \"org.apache.lucene.benchmark.byTask.feeds.DemoHTMLParser\");\n      htmlParser = Class.forName(htmlParserClassName).asSubclass(HTMLParser.class).newInstance();\n    } catch (Exception e) {\n      // Should not get here. Throw runtime exception.\n      throw new RuntimeException(e);\n    }\n    // encoding\n    if (encoding == null) {\n      encoding = StandardCharsets.ISO_8859_1.name();\n    }\n    // iteration exclusion in doc name \n    excludeDocnameIteration = config.get(\"content.source.excludeIteration\", false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7d89d7e4e5101347833eea558851bf4209218619"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["f4abec28b874149a7223e32cc7a01704c27790de"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["7d89d7e4e5101347833eea558851bf4209218619"],"7d89d7e4e5101347833eea558851bf4209218619":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}