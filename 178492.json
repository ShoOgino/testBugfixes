{"path":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#getUniqueMetricTag(String).mjava","commits":[{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#getUniqueMetricTag(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Unique metric name is in the format of A.B.C\n   * A is the parent of B is the parent of C and so on.\n   * If object \"B\" is unregistered , C also must get unregistered.\n   * If object \"A\" is unregistered ,  B , C also must get unregistered.\n   */\n  default String getUniqueMetricTag(String parentName) {\n    String name = getClass().getSimpleName() + \"@\" + Integer.toHexString(hashCode());\n    if (parentName != null && parentName.contains(name)) return parentName;\n    return parentName == null ?\n        name :\n        parentName + \":\" + name;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17c468812fc0c60f3d66b176339dc70564d8c3cb","date":1567918667,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#getUniqueMetricTag(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Unique metric name is in the format of A.B.C\n   * A is the parent of B is the parent of C and so on.\n   * If object \"B\" is unregistered , C also must get unregistered.\n   * If object \"A\" is unregistered ,  B , C also must get unregistered.\n   */\n  default String getUniqueMetricTag(String parentName) {\n    String name = getClass().getSimpleName() + \"@\" + Integer.toHexString(hashCode());\n    if (parentName != null && parentName.contains(name)) return parentName;\n    return parentName == null ?\n        name :\n        parentName + \":\" + name;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52275555c0ae3b55430cef26ad7fca3f02440944","date":1568033329,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#getUniqueMetricTag(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Unique metric name is in the format of A.B.C\n   * A is the parent of B is the parent of C and so on.\n   * If object \"B\" is unregistered , C also must get unregistered.\n   * If object \"A\" is unregistered ,  B , C also must get unregistered.\n   */\n  default String getUniqueMetricTag(String parentName) {\n    String name = getClass().getSimpleName() + \"@\" + Integer.toHexString(hashCode());\n    if (parentName != null && parentName.contains(name)) return parentName;\n    return parentName == null ?\n        name :\n        parentName + \":\" + name;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52275555c0ae3b55430cef26ad7fca3f02440944":["a117d95183986014a31f25bb04e5464ca06d6068","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a117d95183986014a31f25bb04e5464ca06d6068":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["a117d95183986014a31f25bb04e5464ca06d6068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52275555c0ae3b55430cef26ad7fca3f02440944"]},"commit2Childs":{"52275555c0ae3b55430cef26ad7fca3f02440944":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a117d95183986014a31f25bb04e5464ca06d6068"],"a117d95183986014a31f25bb04e5464ca06d6068":["52275555c0ae3b55430cef26ad7fca3f02440944","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["52275555c0ae3b55430cef26ad7fca3f02440944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}