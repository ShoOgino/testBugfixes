{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_prelude().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_prelude().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 31\n            // repeat, line 32\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // goto, line 32\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 32\n                            if (!(in_grouping(g_v, 97, 259)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 33\n                            bra = cursor;\n                            // or, line 33\n                            lab4: do {\n                                v_3 = cursor;\n                                lab5: do {\n                                    // (, line 33\n                                    // literal, line 33\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 33\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 259)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 33\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_3;\n                                // (, line 34\n                                // literal, line 34\n                                if (!(eq_s(1, \"i\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 34\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 259)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 34\n                                slice_from(\"I\");\n                            } while (false);\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 31\n            // repeat, line 32\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // goto, line 32\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 32\n                            if (!(in_grouping(g_v, 97, 259)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 33\n                            bra = cursor;\n                            // or, line 33\n                            lab4: do {\n                                v_3 = cursor;\n                                lab5: do {\n                                    // (, line 33\n                                    // literal, line 33\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 33\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 259)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 33\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_3;\n                                // (, line 34\n                                // literal, line 34\n                                if (!(eq_s(1, \"i\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 34\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 259)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 34\n                                slice_from(\"I\");\n                            } while (false);\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_prelude().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 31\n            // repeat, line 32\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // goto, line 32\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 32\n                            if (!(in_grouping(g_v, 97, 259)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 33\n                            bra = cursor;\n                            // or, line 33\n                            lab4: do {\n                                v_3 = cursor;\n                                lab5: do {\n                                    // (, line 33\n                                    // literal, line 33\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 33\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 259)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 33\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_3;\n                                // (, line 34\n                                // literal, line 34\n                                if (!(eq_s(1, \"i\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 34\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 259)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 34\n                                slice_from(\"I\");\n                            } while (false);\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 31\n            // repeat, line 32\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // goto, line 32\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 32\n                            if (!(in_grouping(g_v, 97, 259)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 33\n                            bra = cursor;\n                            // or, line 33\n                            lab4: do {\n                                v_3 = cursor;\n                                lab5: do {\n                                    // (, line 33\n                                    // literal, line 33\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 33\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 259)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 33\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_3;\n                                // (, line 34\n                                // literal, line 34\n                                if (!(eq_s(1, \"i\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 34\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 259)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 34\n                                slice_from(\"I\");\n                            } while (false);\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}