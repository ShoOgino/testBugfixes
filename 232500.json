{"path":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","commits":[{"id":"865a428869162e0e1a443f1e8670a02f90e03750","date":1496635447,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoggitFlags() throws IOException {\n    String s = \"a{b:c, d [{k1:v1}{k2:v2}]}\";\n    assertNoggitJsonValues((Map) Utils.fromJSON(s.getBytes(UTF_8)));\n    assertNoggitJsonValues((Map) Utils.fromJSONString(s));\n    List<CommandOperation> commands = CommandOperation.parse(new StringReader(s + s));\n    assertEquals(2, commands.size());\n    for (CommandOperation command : commands) {\n      assertEquals(\"a\", command.name);\n      assertEquals( \"v1\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[0]/k1\"));command.getDataMap();\n      assertEquals( \"v2\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[1]/k2\"));command.getDataMap();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoggitFlags() throws IOException {\n    String s = \"a{b:c, d [{k1:v1}{k2:v2}]}\";\n    assertNoggitJsonValues((Map) Utils.fromJSON(s.getBytes(UTF_8)));\n    assertNoggitJsonValues((Map) Utils.fromJSONString(s));\n    List<CommandOperation> commands = CommandOperation.parse(new StringReader(s + s));\n    assertEquals(2, commands.size());\n    for (CommandOperation command : commands) {\n      assertEquals(\"a\", command.name);\n      assertEquals( \"v1\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[0]/k1\"));command.getDataMap();\n      assertEquals( \"v2\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[1]/k2\"));command.getDataMap();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3fc88a06a44fc3112186e9be4562b36713955d","date":1497587751,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","sourceNew":"  public void testNoggitFlags() throws IOException {\n    String s = \"a{b:c, d [{k1:v1}{k2:v2}]}\";\n    assertNoggitJsonValues((Map) Utils.fromJSON(s.getBytes(UTF_8)));\n    assertNoggitJsonValues((Map) fromJSONString(s));\n    List<CommandOperation> commands = CommandOperation.parse(new StringReader(s + s));\n    assertEquals(2, commands.size());\n    for (CommandOperation command : commands) {\n      assertEquals(\"a\", command.name);\n      assertEquals( \"v1\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[0]/k1\"));command.getDataMap();\n      assertEquals( \"v2\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[1]/k2\"));command.getDataMap();\n    }\n  }\n\n","sourceOld":"  public void testNoggitFlags() throws IOException {\n    String s = \"a{b:c, d [{k1:v1}{k2:v2}]}\";\n    assertNoggitJsonValues((Map) Utils.fromJSON(s.getBytes(UTF_8)));\n    assertNoggitJsonValues((Map) Utils.fromJSONString(s));\n    List<CommandOperation> commands = CommandOperation.parse(new StringReader(s + s));\n    assertEquals(2, commands.size());\n    for (CommandOperation command : commands) {\n      assertEquals(\"a\", command.name);\n      assertEquals( \"v1\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[0]/k1\"));command.getDataMap();\n      assertEquals( \"v2\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[1]/k2\"));command.getDataMap();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","sourceNew":"  public void testNoggitFlags() throws IOException {\n    String s = \"a{b:c, d [{k1:v1}{k2:v2}]}\";\n    assertNoggitJsonValues((Map) Utils.fromJSON(s.getBytes(UTF_8)));\n    assertNoggitJsonValues((Map) fromJSONString(s));\n    List<CommandOperation> commands = CommandOperation.parse(new StringReader(s + s));\n    assertEquals(2, commands.size());\n    for (CommandOperation command : commands) {\n      assertEquals(\"a\", command.name);\n      assertEquals( \"v1\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[0]/k1\"));command.getDataMap();\n      assertEquals( \"v2\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[1]/k2\"));command.getDataMap();\n    }\n  }\n\n","sourceOld":"  public void testNoggitFlags() throws IOException {\n    String s = \"a{b:c, d [{k1:v1}{k2:v2}]}\";\n    assertNoggitJsonValues((Map) Utils.fromJSON(s.getBytes(UTF_8)));\n    assertNoggitJsonValues((Map) Utils.fromJSONString(s));\n    List<CommandOperation> commands = CommandOperation.parse(new StringReader(s + s));\n    assertEquals(2, commands.size());\n    for (CommandOperation command : commands) {\n      assertEquals(\"a\", command.name);\n      assertEquals( \"v1\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[0]/k1\"));command.getDataMap();\n      assertEquals( \"v2\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[1]/k2\"));command.getDataMap();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNoggitFlags().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoggitFlags() throws IOException {\n    String s = \"a{b:c, d [{k1:v1}{k2:v2}]}\";\n    assertNoggitJsonValues((Map) Utils.fromJSON(s.getBytes(UTF_8)));\n    assertNoggitJsonValues((Map) fromJSONString(s));\n    List<CommandOperation> commands = CommandOperation.parse(new StringReader(s + s));\n    assertEquals(2, commands.size());\n    for (CommandOperation command : commands) {\n      assertEquals(\"a\", command.name);\n      assertEquals( \"v1\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[0]/k1\"));command.getDataMap();\n      assertEquals( \"v2\" ,Utils.getObjectByPath(command.getDataMap(), true, \"d[1]/k2\"));command.getDataMap();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","865a428869162e0e1a443f1e8670a02f90e03750"],"4d3fc88a06a44fc3112186e9be4562b36713955d":["865a428869162e0e1a443f1e8670a02f90e03750"],"865a428869162e0e1a443f1e8670a02f90e03750":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4d3fc88a06a44fc3112186e9be4562b36713955d"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","4d3fc88a06a44fc3112186e9be4562b36713955d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"865a428869162e0e1a443f1e8670a02f90e03750":["e9017cf144952056066919f1ebc7897ff9bd71b1","4d3fc88a06a44fc3112186e9be4562b36713955d"],"4d3fc88a06a44fc3112186e9be4562b36713955d":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","865a428869162e0e1a443f1e8670a02f90e03750","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}