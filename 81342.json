{"path":"solr/core/src/java/org/apache/solr/util/PackageTool#parsePackageVersion(String).mjava","commits":[{"id":"120bc33d5cbe83eca2e5fce597baf4fef208d579","date":1573735895,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/PackageTool#parsePackageVersion(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parses package name and version in the format \"name:version\" or \"name\"\n   * @return A pair of package name (first) and version (second)\n   */\n  private Pair<String, String> parsePackageVersion(String arg) {\n    String splits[] = arg.split(\":\");\n    if (splits.length > 2) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid package name: \" + arg +\n          \". Didn't match the pattern: <packagename>:<version> or <packagename>\");\n    }\n\n    String packageName = splits[0];\n    String version = splits.length == 2? splits[1]: null;\n    return new Pair(packageName, version);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/PackageTool#parsePackageVersion(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/PackageTool#parsePackageVersion(String).mjava","sourceNew":"  /**\n   * Parses package name and version in the format \"name:version\" or \"name\"\n   * @return A pair of package name (first) and version (second)\n   */\n  private Pair<String, String> parsePackageVersion(String arg) {\n    String[] splits = arg.split(\":\");\n    if (splits.length > 2) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid package name: \" + arg +\n          \". Didn't match the pattern: <packagename>:<version> or <packagename>\");\n    }\n\n    String packageName = splits[0];\n    String version = splits.length == 2? splits[1]: null;\n    return new Pair<>(packageName, version);\n  }\n\n","sourceOld":"  /**\n   * Parses package name and version in the format \"name:version\" or \"name\"\n   * @return A pair of package name (first) and version (second)\n   */\n  private Pair<String, String> parsePackageVersion(String arg) {\n    String splits[] = arg.split(\":\");\n    if (splits.length > 2) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid package name: \" + arg +\n          \". Didn't match the pattern: <packagename>:<version> or <packagename>\");\n    }\n\n    String packageName = splits[0];\n    String version = splits.length == 2? splits[1]: null;\n    return new Pair(packageName, version);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a8891f085f71282bb3ece1b1732b68f07813a3":["120bc33d5cbe83eca2e5fce597baf4fef208d579"],"120bc33d5cbe83eca2e5fce597baf4fef208d579":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["120bc33d5cbe83eca2e5fce597baf4fef208d579"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"120bc33d5cbe83eca2e5fce597baf4fef208d579":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}