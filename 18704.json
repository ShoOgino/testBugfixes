{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","commits":[{"id":"2f13fb377f9b5df46af44bf90a2e507a884f2c30","date":1380476222,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos(SegmentInfoPerCommit).mjava","sourceNew":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos() {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","sourceOld":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos(SegmentInfoPerCommit si) {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","sourceNew":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos() {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","sourceOld":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos() {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<Long,List<FieldInfo>>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<FieldInfo>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0567bdc5c86c94ced64201187cfcef2417d76dda","date":1400678298,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","sourceNew":null,"sourceOld":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos() {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a656b32c3aa151037a8c52e9b134acc3cbf482bc","date":1400688195,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","sourceNew":null,"sourceOld":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos() {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getGenInfos().mjava","sourceNew":null,"sourceOld":"  // returns a gen->List<FieldInfo> mapping. Fields without DV updates have gen=-1\n  private Map<Long,List<FieldInfo>> getGenInfos() {\n    final Map<Long,List<FieldInfo>> genInfos = new HashMap<>();\n    for (FieldInfo fi : fieldInfos) {\n      if (fi.getDocValuesType() == null) {\n        continue;\n      }\n      long gen = fi.getDocValuesGen();\n      List<FieldInfo> infos = genInfos.get(gen);\n      if (infos == null) {\n        infos = new ArrayList<>();\n        genInfos.put(gen, infos);\n      }\n      infos.add(fi);\n    }\n    return genInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2f13fb377f9b5df46af44bf90a2e507a884f2c30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0567bdc5c86c94ced64201187cfcef2417d76dda":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","0567bdc5c86c94ced64201187cfcef2417d76dda"],"b7605579001505896d48b07160075a5c8b8e128e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","0567bdc5c86c94ced64201187cfcef2417d76dda"],"2f13fb377f9b5df46af44bf90a2e507a884f2c30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0567bdc5c86c94ced64201187cfcef2417d76dda"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0567bdc5c86c94ced64201187cfcef2417d76dda","a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f13fb377f9b5df46af44bf90a2e507a884f2c30"],"0567bdc5c86c94ced64201187cfcef2417d76dda":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":[],"b7605579001505896d48b07160075a5c8b8e128e":[],"2f13fb377f9b5df46af44bf90a2e507a884f2c30":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}