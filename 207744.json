{"path":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","commits":[{"id":"b08da0118b8113cffc8f260d0a6c137013c65568","date":1494064335,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc, int slotNum) throws IOException {\n      if (doc > subDv.docID()) {\n        subDv.advance(doc);\n      }\n      if (doc == subDv.docID()) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc, int slotNum) throws IOException {\n      if (doc > subDv.docID()) {\n        subDv.advance(doc);\n      }\n      if (doc == subDv.docID()) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b","date":1518443389,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slotNum) throws IOException {\n      if (subDv.advanceExact(doc)) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slotNum) throws IOException {\n      if (doc > subDv.docID()) {\n        subDv.advance(doc);\n      }\n      if (doc == subDv.docID()) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slotNum) throws IOException {\n      if (subDv.advanceExact(doc)) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slotNum) throws IOException {\n      if (doc > subDv.docID()) {\n        subDv.advance(doc);\n      }\n      if (doc == subDv.docID()) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c705a0d590cf911e7c942df49563ca2ea176e22","date":1526916174,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int,IntFunction[SlotContext]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.SingleValuedOrdAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slotNum, IntFunction<SlotContext> slotContext) throws IOException {\n      if (subDv.advanceExact(doc)) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slotNum) throws IOException {\n      if (subDv.advanceExact(doc)) {\n        int segOrd = subDv.ordValue();\n        int ord = toGlobal==null ? segOrd : (int)toGlobal.get(segOrd);\n        if ((ord - slotOrd[slotNum]) * minmax < 0 || slotOrd[slotNum]==MISSING) {\n          slotOrd[slotNum] = ord;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b08da0118b8113cffc8f260d0a6c137013c65568"],"b08da0118b8113cffc8f260d0a6c137013c65568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b":["b08da0118b8113cffc8f260d0a6c137013c65568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["b08da0118b8113cffc8f260d0a6c137013c65568","81f64a6570bc5d216c5d575c3b29ecb106fa0e6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c705a0d590cf911e7c942df49563ca2ea176e22"]},"commit2Childs":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"b08da0118b8113cffc8f260d0a6c137013c65568":["e9017cf144952056066919f1ebc7897ff9bd71b1","81f64a6570bc5d216c5d575c3b29ecb106fa0e6b","bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","b08da0118b8113cffc8f260d0a6c137013c65568"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["2c705a0d590cf911e7c942df49563ca2ea176e22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}