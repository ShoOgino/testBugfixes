{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    long now = System.nanoTime();\n    long timeout = now + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.nanoTime() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    long now = System.nanoTime();\n    long timeout = now + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.nanoTime() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    long now = System.nanoTime();\n    long timeout = now + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.nanoTime() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bbb741690cdafda7f1f7549c26351c912917a69","date":1453203134,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","date":1471585465,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (!timeout.hasTimedOut()) {\n      aliases = ocmh.zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (!timeout.hasTimedOut()) {\n      aliases = ocmh.zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","sourceNew":null,"sourceOld":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bbb741690cdafda7f1f7549c26351c912917a69":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["3bbb741690cdafda7f1f7549c26351c912917a69","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["3bbb741690cdafda7f1f7549c26351c912917a69"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3bbb741690cdafda7f1f7549c26351c912917a69","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"3bbb741690cdafda7f1f7549c26351c912917a69":["403d05f7f8d69b65659157eff1bc1d2717f04c66","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["3bbb741690cdafda7f1f7549c26351c912917a69"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}