{"path":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","commits":[{"id":"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","date":1463148204,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cbd743a4843f513f793670e3ab0e272bf824faf","date":1518149529,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","sourceNew":"  //TODO Deprecate?\n  public DateMathParser(TimeZone tz) {\n    this(null, tz);\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cbd743a4843f513f793670e3ab0e272bf824faf":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cbd743a4843f513f793670e3ab0e272bf824faf"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0ad30c6a479e764150a3316e57263319775f1df2"],"3cbd743a4843f513f793670e3ab0e272bf824faf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["3cbd743a4843f513f793670e3ab0e272bf824faf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}