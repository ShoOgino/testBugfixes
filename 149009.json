{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentInfoPerCommit,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    IndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentInfoPerCommit info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    IndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    ChecksumIndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openChecksumInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      SimpleTextUtil.checkFooter(in, CHECKSUM);\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    IndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["caf65fa364fcf8ea8ef1032c1247622933af3b04"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    ChecksumIndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openChecksumInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      SimpleTextUtil.checkFooter(in, CHECKSUM);\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    IndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"caf65fa364fcf8ea8ef1032c1247622933af3b04","date":1397057745,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    ChecksumIndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openChecksumInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      SimpleTextUtil.checkFooter(in);\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    ChecksumIndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openChecksumInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      SimpleTextUtil.checkFooter(in, CHECKSUM);\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","bugFix":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    CharsRefBuilder scratchUTF16 = new CharsRefBuilder();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    ChecksumIndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openChecksumInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch.get(), SIZE);\n      int size = parseIntAt(scratch.get(), SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.get().equals(END)) {\n        assert StringHelper.startsWith(scratch.get(), DOC);\n        int docid = parseIntAt(scratch.get(), DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      SimpleTextUtil.checkFooter(in);\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    assert info.hasDeletions();\n    BytesRef scratch = new BytesRef();\n    CharsRef scratchUTF16 = new CharsRef();\n    \n    String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());\n    ChecksumIndexInput in = null;\n    boolean success = false;\n    try {\n      in = dir.openChecksumInput(fileName, context);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      assert StringHelper.startsWith(scratch, SIZE);\n      int size = parseIntAt(scratch, SIZE.length, scratchUTF16);\n      \n      BitSet bits = new BitSet(size);\n      \n      SimpleTextUtil.readLine(in, scratch);\n      while (!scratch.equals(END)) {\n        assert StringHelper.startsWith(scratch, DOC);\n        int docid = parseIntAt(scratch, DOC.length, scratchUTF16);\n        bits.set(docid);\n        SimpleTextUtil.readLine(in, scratch);\n      }\n      \n      SimpleTextUtil.checkFooter(in);\n      \n      success = true;\n      return new SimpleTextBits(bits, size);\n    } finally {\n      if (success) {\n        IOUtils.close(in);\n      } else {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","bugFix":["012ab4f9f96ebd12a6a9e44314cdb1a54171b83e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["caf65fa364fcf8ea8ef1032c1247622933af3b04"],"caf65fa364fcf8ea8ef1032c1247622933af3b04":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","caf65fa364fcf8ea8ef1032c1247622933af3b04"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"caf65fa364fcf8ea8ef1032c1247622933af3b04":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}