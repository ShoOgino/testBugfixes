{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","sourceNew":"  /** Returns null if it's borderline case */\n  protected abstract Boolean circleContainsPoint(double centerLat, double centerLon, double radiusMeters, double pointLat, double pointLon);\n\n","sourceOld":"  /** Returns null if it's borderline case */\n  protected abstract Boolean circleContainsPoint(double centerLat, double centerLon, double radiusMeters, double pointLat, double pointLon);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","sourceNew":"  /** Returns null if it's borderline case */\n  protected abstract Boolean circleContainsPoint(double centerLat, double centerLon, double radiusMeters, double pointLat, double pointLon);\n\n","sourceOld":"  /** Returns null if it's borderline case */\n  protected abstract Boolean circleContainsPoint(double centerLat, double centerLon, double radiusMeters, double pointLat, double pointLon);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3","date":1458680048,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","sourceNew":"  static final boolean circleContainsPoint(double centerLat, double centerLon, double radiusMeters, double pointLat, double pointLon) {\n    double distanceMeters = SloppyMath.haversinMeters(centerLat, centerLon, pointLat, pointLon);\n    boolean result = distanceMeters <= radiusMeters;\n    //System.out.println(\"  shouldMatch?  centerLon=\" + centerLon + \" centerLat=\" + centerLat + \" pointLon=\" + pointLon + \" pointLat=\" + pointLat + \" result=\" + result + \" distanceMeters=\" + (distanceKM * 1000));\n    return result;\n  }\n\n","sourceOld":"  /** Returns null if it's borderline case */\n  protected abstract Boolean circleContainsPoint(double centerLat, double centerLon, double radiusMeters, double pointLat, double pointLon);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1419d3974886c9518c259c786492b4d3660b0b8e","date":1459180094,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#circleContainsPoint(double,double,double,double,double).mjava","sourceNew":null,"sourceOld":"  static final boolean circleContainsPoint(double centerLat, double centerLon, double radiusMeters, double pointLat, double pointLon) {\n    double distanceMeters = SloppyMath.haversinMeters(centerLat, centerLon, pointLat, pointLon);\n    boolean result = distanceMeters <= radiusMeters;\n    //System.out.println(\"  shouldMatch?  centerLon=\" + centerLon + \" centerLat=\" + centerLat + \" pointLon=\" + pointLon + \" pointLat=\" + pointLat + \" result=\" + result + \" distanceMeters=\" + (distanceKM * 1000));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","937923083e4d137932336fc80f3d78758ff698a6"],"1419d3974886c9518c259c786492b4d3660b0b8e":["cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1419d3974886c9518c259c786492b4d3660b0b8e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"1419d3974886c9518c259c786492b4d3660b0b8e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["1419d3974886c9518c259c786492b4d3660b0b8e"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}