{"path":"modules/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#add(CharSequence,CharSequence).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#add(CharSequence,CharSequence).mjava","pathOld":"lucene/contrib/analyzers/stempel/src/java/org/egothor/stemmer/MultiTrie#add(CharSequence,CharSequence).mjava","sourceNew":"  /**\n   * Add an element to this structure consisting of the given key and patch\n   * command. \n   * <p>\n   * This method will return without executing if the <tt>cmd</tt>\n   * parameter's length is 0.\n   * \n   * @param key the key\n   * @param cmd the patch command\n   */\n  @Override\n  public void add(CharSequence key, CharSequence cmd) {\n    if (cmd.length() == 0) {\n      return;\n    }\n    int levels = cmd.length() / BY;\n    while (levels >= tries.size()) {\n      tries.add(new Trie(forward));\n    }\n    for (int i = 0; i < levels; i++) {\n      tries.get(i).add(key, cmd.subSequence(BY * i, BY * i + BY));\n    }\n    tries.get(levels).add(key, EOM_NODE);\n  }\n\n","sourceOld":"  /**\n   * Add an element to this structure consisting of the given key and patch\n   * command. \n   * <p>\n   * This method will return without executing if the <tt>cmd</tt>\n   * parameter's length is 0.\n   * \n   * @param key the key\n   * @param cmd the patch command\n   */\n  @Override\n  public void add(CharSequence key, CharSequence cmd) {\n    if (cmd.length() == 0) {\n      return;\n    }\n    int levels = cmd.length() / BY;\n    while (levels >= tries.size()) {\n      tries.add(new Trie(forward));\n    }\n    for (int i = 0; i < levels; i++) {\n      tries.get(i).add(key, cmd.subSequence(BY * i, BY * i + BY));\n    }\n    tries.get(levels).add(key, EOM_NODE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#add(CharSequence,CharSequence).mjava","pathOld":"modules/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#add(CharSequence,CharSequence).mjava","sourceNew":"  /**\n   * Add an element to this structure consisting of the given key and patch\n   * command. \n   * <p>\n   * This method will return without executing if the <tt>cmd</tt>\n   * parameter's length is 0.\n   * \n   * @param key the key\n   * @param cmd the patch command\n   */\n  @Override\n  public void add(CharSequence key, CharSequence cmd) {\n    if (cmd.length() == 0) {\n      return;\n    }\n    int levels = cmd.length() / BY;\n    while (levels >= tries.size()) {\n      tries.add(new Trie(forward));\n    }\n    for (int i = 0; i < levels; i++) {\n      tries.get(i).add(key, cmd.subSequence(BY * i, BY * i + BY));\n    }\n    tries.get(levels).add(key, EOM_NODE);\n  }\n\n","sourceOld":"  /**\n   * Add an element to this structure consisting of the given key and patch\n   * command. \n   * <p>\n   * This method will return without executing if the <tt>cmd</tt>\n   * parameter's length is 0.\n   * \n   * @param key the key\n   * @param cmd the patch command\n   */\n  @Override\n  public void add(CharSequence key, CharSequence cmd) {\n    if (cmd.length() == 0) {\n      return;\n    }\n    int levels = cmd.length() / BY;\n    while (levels >= tries.size()) {\n      tries.add(new Trie(forward));\n    }\n    for (int i = 0; i < levels; i++) {\n      tries.get(i).add(key, cmd.subSequence(BY * i, BY * i + BY));\n    }\n    tries.get(levels).add(key, EOM_NODE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}