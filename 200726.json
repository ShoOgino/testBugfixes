{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#SimpleFieldWriter(FieldInfo,long).mjava","commits":[{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#SimpleFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#SimpleFieldWriter(FieldInfo,long).mjava","sourceNew":"    SimpleFieldWriter(FieldInfo fieldInfo, long termsFilePointer) {\n      this.fieldInfo = fieldInfo;\n      indexStart = out.getFilePointer();\n      termsStart = lastTermsPointer = termsFilePointer;\n      termLengths = new short[0];\n      termsPointerDeltas = new int[0];\n    }\n\n","sourceOld":"    SimpleFieldWriter(FieldInfo fieldInfo, long termsFilePointer) {\n      this.fieldInfo = fieldInfo;\n      indexStart = out.getFilePointer();\n      termsStart = lastTermsPointer = termsFilePointer;\n      termLengths = new short[0];\n      termsPointerDeltas = new int[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#SimpleFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#SimpleFieldWriter(FieldInfo,long).mjava","sourceNew":"    SimpleFieldWriter(FieldInfo fieldInfo, long termsFilePointer) {\n      this.fieldInfo = fieldInfo;\n      indexStart = out.getFilePointer();\n      termsStart = termsFilePointer;\n      // we write terms+1 offsets, term n's length is n+1 - n\n      try {\n        termOffsets.add(0L);\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","sourceOld":"    SimpleFieldWriter(FieldInfo fieldInfo, long termsFilePointer) {\n      this.fieldInfo = fieldInfo;\n      indexStart = out.getFilePointer();\n      termsStart = lastTermsPointer = termsFilePointer;\n      termLengths = new short[0];\n      termsPointerDeltas = new int[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#SimpleFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#SimpleFieldWriter(FieldInfo,long).mjava","sourceNew":"    SimpleFieldWriter(FieldInfo fieldInfo, long termsFilePointer) {\n      this.fieldInfo = fieldInfo;\n      indexStart = out.getFilePointer();\n      termsStart = termsFilePointer;\n      // we write terms+1 offsets, term n's length is n+1 - n\n      try {\n        termOffsets.add(0L);\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","sourceOld":"    SimpleFieldWriter(FieldInfo fieldInfo, long termsFilePointer) {\n      this.fieldInfo = fieldInfo;\n      indexStart = out.getFilePointer();\n      termsStart = lastTermsPointer = termsFilePointer;\n      termLengths = new short[0];\n      termsPointerDeltas = new int[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a45bec74b98f6fc05f52770cfb425739e6563960":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a45bec74b98f6fc05f52770cfb425739e6563960"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a45bec74b98f6fc05f52770cfb425739e6563960":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}