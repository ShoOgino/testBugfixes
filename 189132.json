{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState).mjava","commits":[{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState,Sorter.DocMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState).mjava","sourceNew":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state, Sorter.DocMap sortMap) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state, sortMap);\n    }\n  }\n\n","sourceOld":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3394716f52b34ab259ad5247e7595d9f9db6e935"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["3394716f52b34ab259ad5247e7595d9f9db6e935","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"52c7e49be259508735752fba88085255014a6ecf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}