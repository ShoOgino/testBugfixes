{"path":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin().mjava","commits":[{"id":"27e851527ef490dd0b790e19b7c62602b5778eb1","date":1337344101,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"3\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"5\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"6\", \"nullfirst\", \"3\")));\n    assertU(commit());\n\n    SolrQueryRequest request =\n        req(\"q\", \"*:*\",\"group\", \"true\", \"group.field\", \"nullfirst\", \"group.main\", \"true\", \"wt\", \"javabin\", \"start\", \"4\", \"rows\", \"10\");\n\n    SolrQueryResponse response = new SolrQueryResponse();\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(request, response));\n      String handlerName = request.getParams().get(CommonParams.QT);\n      h.getCore().execute(h.getCore().getRequestHandler(handlerName), request, response);\n      BinaryResponseWriter responseWriter = new BinaryResponseWriter();\n      responseWriter.write(out, request, response);\n    } finally {\n      request.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n\n    assertEquals(6, ((ResultContext) response.getValues().get(\"response\")).docs.matches());\n    new BinaryResponseParser().processResponse(new ByteArrayInputStream(out.toByteArray()), \"\");\n    out.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"3\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"5\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"6\", \"nullfirst\", \"3\")));\n    assertU(commit());\n\n    SolrQueryRequest request =\n        req(\"q\", \"*:*\",\"group\", \"true\", \"group.field\", \"nullfirst\", \"group.main\", \"true\", \"wt\", \"javabin\", \"start\", \"4\", \"rows\", \"10\");\n\n    SolrQueryResponse response = new SolrQueryResponse();\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(request, response));\n      String handlerName = request.getParams().get(CommonParams.QT);\n      h.getCore().execute(h.getCore().getRequestHandler(handlerName), request, response);\n      BinaryResponseWriter responseWriter = new BinaryResponseWriter();\n      responseWriter.write(out, request, response);\n    } finally {\n      request.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n\n    assertEquals(6, ((ResultContext) response.getValues().get(\"response\")).docs.matches());\n    new BinaryResponseParser().processResponse(new ByteArrayInputStream(out.toByteArray()), \"\");\n    out.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin().mjava","sourceNew":"  @Test\n  public void testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"3\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"5\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"6\", \"nullfirst\", \"3\")));\n    assertU(commit());\n\n    SolrQueryRequest request =\n        req(\"q\", \"*:*\",\"group\", \"true\", \"group.field\", \"nullfirst\", \"group.main\", \"true\", \"wt\", \"javabin\", \"start\", \"4\", \"rows\", \"10\");\n\n    SolrQueryResponse response = new SolrQueryResponse();\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(request, response));\n      String handlerName = request.getParams().get(CommonParams.QT);\n      h.getCore().execute(h.getCore().getRequestHandler(handlerName), request, response);\n      BinaryResponseWriter responseWriter = new BinaryResponseWriter();\n      responseWriter.write(out, request, response);\n    } finally {\n      request.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n\n    assertEquals(6, ((ResultContext) response.getValues().get(\"response\")).getDocList().matches());\n    new BinaryResponseParser().processResponse(new ByteArrayInputStream(out.toByteArray()), \"\");\n    out.close();\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"3\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"5\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"6\", \"nullfirst\", \"3\")));\n    assertU(commit());\n\n    SolrQueryRequest request =\n        req(\"q\", \"*:*\",\"group\", \"true\", \"group.field\", \"nullfirst\", \"group.main\", \"true\", \"wt\", \"javabin\", \"start\", \"4\", \"rows\", \"10\");\n\n    SolrQueryResponse response = new SolrQueryResponse();\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(request, response));\n      String handlerName = request.getParams().get(CommonParams.QT);\n      h.getCore().execute(h.getCore().getRequestHandler(handlerName), request, response);\n      BinaryResponseWriter responseWriter = new BinaryResponseWriter();\n      responseWriter.write(out, request, response);\n    } finally {\n      request.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n\n    assertEquals(6, ((ResultContext) response.getValues().get(\"response\")).docs.matches());\n    new BinaryResponseParser().processResponse(new ByteArrayInputStream(out.toByteArray()), \"\");\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecd75942508378ccc92c3a26f71db6cba9f25784","date":1450708761,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin().mjava","sourceNew":"  @Test\n  public void testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"3\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"5\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"6\", \"nullfirst\", \"3\")));\n    assertU(commit());\n\n    SolrQueryRequest request =\n        req(\"q\", \"*:*\",\"group\", \"true\", \"group.field\", \"nullfirst\", \"group.main\", \"true\", \"wt\", \"javabin\", \"start\", \"4\", \"rows\", \"10\");\n\n    SolrQueryResponse response = new SolrQueryResponse();\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(request, response));\n      String handlerName = request.getParams().get(CommonParams.QT);\n      h.getCore().execute(h.getCore().getRequestHandler(handlerName), request, response);\n      BinaryResponseWriter responseWriter = new BinaryResponseWriter();\n      responseWriter.write(out, request, response);\n    } finally {\n      request.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n\n    assertEquals(6, ((ResultContext) response.getResponse()).getDocList().matches());\n    new BinaryResponseParser().processResponse(new ByteArrayInputStream(out.toByteArray()), \"\");\n    out.close();\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingSimpleFormatArrayIndexOutOfBoundsExceptionWithJavaBin() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"nullfirst\", \"1\")));\n    assertU(add(doc(\"id\", \"3\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"5\", \"nullfirst\", \"2\")));\n    assertU(add(doc(\"id\", \"6\", \"nullfirst\", \"3\")));\n    assertU(commit());\n\n    SolrQueryRequest request =\n        req(\"q\", \"*:*\",\"group\", \"true\", \"group.field\", \"nullfirst\", \"group.main\", \"true\", \"wt\", \"javabin\", \"start\", \"4\", \"rows\", \"10\");\n\n    SolrQueryResponse response = new SolrQueryResponse();\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(request, response));\n      String handlerName = request.getParams().get(CommonParams.QT);\n      h.getCore().execute(h.getCore().getRequestHandler(handlerName), request, response);\n      BinaryResponseWriter responseWriter = new BinaryResponseWriter();\n      responseWriter.write(out, request, response);\n    } finally {\n      request.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n\n    assertEquals(6, ((ResultContext) response.getValues().get(\"response\")).getDocList().matches());\n    new BinaryResponseParser().processResponse(new ByteArrayInputStream(out.toByteArray()), \"\");\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27e851527ef490dd0b790e19b7c62602b5778eb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ecd75942508378ccc92c3a26f71db6cba9f25784":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["27e851527ef490dd0b790e19b7c62602b5778eb1"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","27e851527ef490dd0b790e19b7c62602b5778eb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecd75942508378ccc92c3a26f71db6cba9f25784"]},"commit2Childs":{"27e851527ef490dd0b790e19b7c62602b5778eb1":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27e851527ef490dd0b790e19b7c62602b5778eb1","ef0d8a69209261514c5739c770bba706c2308450"],"ecd75942508378ccc92c3a26f71db6cba9f25784":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}