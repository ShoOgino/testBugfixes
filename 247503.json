{"path":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","commits":[{"id":"d19974432be9aed28ee7dca73bdf01d139e763a9","date":1342822166,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    open = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b6493bfa10477745a1307895992b7323b6e19ec6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    open = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    open = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b6493bfa10477745a1307895992b7323b6e19ec6","date":1343781089,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    open = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","bugFix":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"bugIntro":["e8be981081dfbb55f289ea81845c18faa90a23fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    open = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    open = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30e0912f3a3069b115cfea44ff612c44d6906386","date":1365631344,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && indexPossiblyExists()) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","bugFix":null,"bugIntro":["e8be981081dfbb55f289ea81845c18faa90a23fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"399ef3ff6c22f0627c82ac65f32726f3587a2aa1","date":1379005174,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    super.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    delegate.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n      TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    super.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n      _TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    super.close();\n  }\n\n","bugFix":null,"bugIntro":["e8be981081dfbb55f289ea81845c18faa90a23fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e8be981081dfbb55f289ea81845c18faa90a23fb","date":1419028261,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (isOpen) {\n      isOpen = false;\n      if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n        TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n      }\n    }\n    super.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    isOpen = false;\n    if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n      TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n    }\n    super.close();\n  }\n\n","bugFix":["30e0912f3a3069b115cfea44ff612c44d6906386","b6493bfa10477745a1307895992b7323b6e19ec6","6613659748fe4411a7dcf85266e55db1f95f7315"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0e5953a07337cd41bcde610503024c07073b26","date":1519143251,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (isOpen) {\n      isOpen = false;\n      if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n        TestUtil.checkIndex(this, doSlowChecksOnClose);\n      }\n    }\n    super.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (isOpen) {\n      isOpen = false;\n      if (checkIndexOnClose && DirectoryReader.indexExists(this)) {\n        TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);\n      }\n    }\n    super.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6613659748fe4411a7dcf85266e55db1f95f7315":["399ef3ff6c22f0627c82ac65f32726f3587a2aa1"],"399ef3ff6c22f0627c82ac65f32726f3587a2aa1":["30e0912f3a3069b115cfea44ff612c44d6906386"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","b6493bfa10477745a1307895992b7323b6e19ec6"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d19974432be9aed28ee7dca73bdf01d139e763a9"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e8be981081dfbb55f289ea81845c18faa90a23fb":["6613659748fe4411a7dcf85266e55db1f95f7315"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","b6493bfa10477745a1307895992b7323b6e19ec6"],"b6493bfa10477745a1307895992b7323b6e19ec6":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"30e0912f3a3069b115cfea44ff612c44d6906386":["b6493bfa10477745a1307895992b7323b6e19ec6"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d19974432be9aed28ee7dca73bdf01d139e763a9"],"9a0e5953a07337cd41bcde610503024c07073b26":["e8be981081dfbb55f289ea81845c18faa90a23fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0e5953a07337cd41bcde610503024c07073b26"]},"commit2Childs":{"6613659748fe4411a7dcf85266e55db1f95f7315":["e8be981081dfbb55f289ea81845c18faa90a23fb"],"399ef3ff6c22f0627c82ac65f32726f3587a2aa1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["aba371508186796cc6151d8223a5b4e16d02e26e","b6493bfa10477745a1307895992b7323b6e19ec6","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","d19974432be9aed28ee7dca73bdf01d139e763a9","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"e8be981081dfbb55f289ea81845c18faa90a23fb":["9a0e5953a07337cd41bcde610503024c07073b26"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6493bfa10477745a1307895992b7323b6e19ec6":["8fd5be977c105554c6a7b68afcdbc511439723ab","d6f074e73200c07d54f242d3880a8da5a35ff97b","30e0912f3a3069b115cfea44ff612c44d6906386"],"30e0912f3a3069b115cfea44ff612c44d6906386":["399ef3ff6c22f0627c82ac65f32726f3587a2aa1"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["8fd5be977c105554c6a7b68afcdbc511439723ab"],"9a0e5953a07337cd41bcde610503024c07073b26":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8fd5be977c105554c6a7b68afcdbc511439723ab","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}