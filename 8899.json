{"path":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","commits":[{"id":"42b608e091e7109ddfe2f75201ab73b54f7cb7a3","date":1343108759,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestSmartChineseFactories#testSimple().mjava","sourceNew":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","sourceOld":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestSmartChineseFactories#testSimple().mjava","sourceNew":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","sourceOld":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestSmartChineseFactories#testSimple().mjava","sourceNew":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","sourceOld":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestSmartChineseFactories#testSimple().mjava","sourceNew":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","sourceOld":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","pathOld":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","sourceNew":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    Reader reader = new StringReader(\"我购买了道具和服装。\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory(new HashMap<String,String>());\n    stream = factory.create(stream);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(stream, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","sourceOld":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    String sentence = \"我购买了道具和服装。\";\n    WhitespaceTokenizer ws = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(sentence));\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory();\n    TokenStream ts = factory.create(ws);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(ts, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","pathOld":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","sourceNew":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    Reader reader = new StringReader(\"我购买了道具和服装。\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory(new HashMap<String,String>());\n    stream = factory.create(stream);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(stream, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","sourceOld":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    Reader reader = new StringReader(\"我购买了道具和服装。\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory(new HashMap<String,String>());\n    stream = factory.create(stream);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(stream, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseFactories#testSimple().mjava","sourceNew":null,"sourceOld":"  /** Test showing the behavior with whitespace */\n  public void testSimple() throws Exception {\n    Reader reader = new StringReader(\"我购买了道具和服装。\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    SmartChineseWordTokenFilterFactory factory = new SmartChineseWordTokenFilterFactory(new HashMap<String,String>());\n    stream = factory.create(stream);\n    // TODO: fix smart chinese to not emit punctuation tokens\n    // at the moment: you have to clean up with WDF, or use the stoplist, etc\n    assertTokenStreamContents(stream, \n       new String[] { \"我\", \"购买\", \"了\", \"道具\", \"和\", \"服装\", \",\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42b608e091e7109ddfe2f75201ab73b54f7cb7a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"42b608e091e7109ddfe2f75201ab73b54f7cb7a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","42b608e091e7109ddfe2f75201ab73b54f7cb7a3"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"42b608e091e7109ddfe2f75201ab73b54f7cb7a3":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}