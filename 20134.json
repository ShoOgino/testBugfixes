{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","commits":[{"id":"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7","date":1524496660,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ba24d6f9380e2463dbe5130d27502647f64904","date":1554881362,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc1841e9449be30dd7bcb15d6247b4eb5c83a07b","date":1584454718,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = Objects.requireNonNull(deleteQueue);\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7aff85e853fc8018761caa9a7803b1db411db8c","date":1586893039,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = Objects.requireNonNull(deleteQueue);\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n    // this should be the last call in the ctor\n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = Objects.requireNonNull(deleteQueue);\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, indexWriterConfig.getAnalyzer(), infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = Objects.requireNonNull(deleteQueue);\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n    // this should be the last call in the ctor\n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = Objects.requireNonNull(deleteQueue);\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n    // this should be the last call in the ctor\n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f97270426d92300e08ac1bd1a4ef499ae02e88b7","date":1592503330,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = indexWriterConfig.getInfoStream();\n    this.codec = indexWriterConfig.getCodec();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = Objects.requireNonNull(deleteQueue);\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n    // this should be the last call in the ctor\n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, indexWriterConfig.getAnalyzer(), infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = Objects.requireNonNull(deleteQueue);\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), Collections.emptyMap(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n    // this should be the last call in the ctor\n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7aff85e853fc8018761caa9a7803b1db411db8c":["bc1841e9449be30dd7bcb15d6247b4eb5c83a07b"],"68ba24d6f9380e2463dbe5130d27502647f64904":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["e7aff85e853fc8018761caa9a7803b1db411db8c"],"bc1841e9449be30dd7bcb15d6247b4eb5c83a07b":["68ba24d6f9380e2463dbe5130d27502647f64904"],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f97270426d92300e08ac1bd1a4ef499ae02e88b7"]},"commit2Childs":{"e7aff85e853fc8018761caa9a7803b1db411db8c":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"68ba24d6f9380e2463dbe5130d27502647f64904":["bc1841e9449be30dd7bcb15d6247b4eb5c83a07b"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["68ba24d6f9380e2463dbe5130d27502647f64904"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["f97270426d92300e08ac1bd1a4ef499ae02e88b7"],"bc1841e9449be30dd7bcb15d6247b4eb5c83a07b":["e7aff85e853fc8018761caa9a7803b1db411db8c"],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}