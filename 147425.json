{"path":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValuesWriter#addValue(int,BytesRef).mjava","commits":[{"id":"f366ce28775e2b8ea4e06355009471328711666d","date":1360551293,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n    \n    if (docID != currentDoc) {\n      finishCurrentDoc();\n    }\n\n    // Fill in any holes:\n    while(currentDoc < docID) {\n      pendingCounts.add(0); // no values\n      currentDoc++;\n    }\n\n    addOneValue(value);\n    updateBytesUsed();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n    \n    if (docID != currentDoc) {\n      finishCurrentDoc();\n    }\n\n    // Fill in any holes:\n    while(currentDoc < docID) {\n      pendingCounts.add(0); // no values\n      currentDoc++;\n    }\n\n    addOneValue(value);\n    updateBytesUsed();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5844844466689b1121b12ccb467623f894eb269d","date":1475600453,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    assert docID >= currentDoc;\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    if (docID != currentDoc) {\n      finishCurrentDoc();\n      currentDoc = docID;\n    }\n\n    addOneValue(value);\n    updateBytesUsed();\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n    \n    if (docID != currentDoc) {\n      finishCurrentDoc();\n    }\n\n    // Fill in any holes:\n    while(currentDoc < docID) {\n      pendingCounts.add(0); // no values\n      currentDoc++;\n    }\n\n    addOneValue(value);\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    assert docID >= currentDoc;\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    if (docID != currentDoc) {\n      finishCurrentDoc();\n      currentDoc = docID;\n    }\n\n    addOneValue(value);\n    updateBytesUsed();\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n    \n    if (docID != currentDoc) {\n      finishCurrentDoc();\n    }\n\n    // Fill in any holes:\n    while(currentDoc < docID) {\n      pendingCounts.add(0); // no values\n      currentDoc++;\n    }\n\n    addOneValue(value);\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5844844466689b1121b12ccb467623f894eb269d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f366ce28775e2b8ea4e06355009471328711666d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f366ce28775e2b8ea4e06355009471328711666d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ddbb72a33557d2b5bc22ee95daf3281c43560502","5844844466689b1121b12ccb467623f894eb269d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5844844466689b1121b12ccb467623f894eb269d"]},"commit2Childs":{"5844844466689b1121b12ccb467623f894eb269d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f366ce28775e2b8ea4e06355009471328711666d","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"f366ce28775e2b8ea4e06355009471328711666d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["5844844466689b1121b12ccb467623f894eb269d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}