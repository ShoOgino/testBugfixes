{"path":"lucene/core/src/java/org/apache/lucene/util/LongBitSet#verifyGhostBitsClear().mjava","commits":[{"id":"af918c7c328775f9fadd5870c21f0fafc2a059cc","date":1430253435,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongBitSet#verifyGhostBitsClear().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks if the bits past numBits are clear.\n   * Some methods rely on this implicit assumption: search for \"Depends on the ghost bits being clear!\" \n   * @return true if the bits past numBits are clear.\n   */\n  private boolean verifyGhostBitsClear() {\n    for (int i = numWords; i < bits.length; i++) {\n      if (bits[i] != 0) return false;\n    }\n    \n    if ((numBits & 0x3f) == 0) return true;\n    \n    long mask = -1L << numBits;\n\n    return (bits[numWords - 1] & mask) == 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af918c7c328775f9fadd5870c21f0fafc2a059cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af918c7c328775f9fadd5870c21f0fafc2a059cc"],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}