{"path":"src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","commits":[{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#hits2str(Hits,Hits,int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(Hits hits1, Hits hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length();\n    int len2=hits2==null ? 0 : hits2.length();\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1.id(i)).append('=').append(hits1.score(i));\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2.id(i)).append('=').append(hits2.score(i));\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}