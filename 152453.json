{"path":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","commits":[{"id":"f8c1e95c9ddb89e882eef268cbe52ee0637f9a6e","date":1381993379,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasicUsageWithQuery() throws Exception {\n    checkCorrectClassification(new KNearestNeighborClassifier(1), TECHNOLOGY_INPUT, TECHNOLOGY_RESULT, new MockAnalyzer(random()), textFieldName, categoryFieldName, new TermQuery(new Term(textFieldName, \"it\")));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"360ff513ddb24a30ffa2111a3ef0f91038803100","date":1430403123,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","sourceNew":"  @Test\n  public void testBasicUsageWithQuery() throws Exception {\n    LeafReader leafReader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      leafReader = populateSampleIndex(analyzer);\n      TermQuery query = new TermQuery(new Term(textFieldName, \"it\"));\n      checkCorrectClassification(new KNearestNeighborClassifier(leafReader, analyzer, query, 1, 0, 0, categoryFieldName, textFieldName), TECHNOLOGY_INPUT, TECHNOLOGY_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasicUsageWithQuery() throws Exception {\n    checkCorrectClassification(new KNearestNeighborClassifier(1), TECHNOLOGY_INPUT, TECHNOLOGY_RESULT, new MockAnalyzer(random()), textFieldName, categoryFieldName, new TermQuery(new Term(textFieldName, \"it\")));\n  }\n\n","bugFix":null,"bugIntro":["7161a776f504e35697e4bcb672862f679a4c2a9d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7161a776f504e35697e4bcb672862f679a4c2a9d","date":1439207410,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","sourceNew":"  @Test\n  public void testBasicUsageWithQuery() throws Exception {\n    LeafReader leafReader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      leafReader = populateSampleIndex(analyzer);\n      TermQuery query = new TermQuery(new Term(textFieldName, \"it\"));\n      checkCorrectClassification(new KNearestNeighborClassifier(leafReader, null, analyzer, query, 1, 0, 0, categoryFieldName, textFieldName), TECHNOLOGY_INPUT, TECHNOLOGY_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasicUsageWithQuery() throws Exception {\n    LeafReader leafReader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      leafReader = populateSampleIndex(analyzer);\n      TermQuery query = new TermQuery(new Term(textFieldName, \"it\"));\n      checkCorrectClassification(new KNearestNeighborClassifier(leafReader, analyzer, query, 1, 0, 0, categoryFieldName, textFieldName), TECHNOLOGY_INPUT, TECHNOLOGY_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","bugFix":["360ff513ddb24a30ffa2111a3ef0f91038803100"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba9b7b122d927a15ff4837e3d72876c609fef1b","date":1441232513,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/KNearestNeighborClassifierTest#testBasicUsageWithQuery().mjava","sourceNew":"  @Test\n  public void testBasicUsageWithQuery() throws Exception {\n    LeafReader leafReader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      leafReader = getSampleIndex(analyzer);\n      TermQuery query = new TermQuery(new Term(textFieldName, \"it\"));\n      checkCorrectClassification(new KNearestNeighborClassifier(leafReader, null, analyzer, query, 1, 0, 0, categoryFieldName, textFieldName), TECHNOLOGY_INPUT, TECHNOLOGY_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasicUsageWithQuery() throws Exception {\n    LeafReader leafReader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      leafReader = populateSampleIndex(analyzer);\n      TermQuery query = new TermQuery(new Term(textFieldName, \"it\"));\n      checkCorrectClassification(new KNearestNeighborClassifier(leafReader, null, analyzer, query, 1, 0, 0, categoryFieldName, textFieldName), TECHNOLOGY_INPUT, TECHNOLOGY_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba9b7b122d927a15ff4837e3d72876c609fef1b":["7161a776f504e35697e4bcb672862f679a4c2a9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7161a776f504e35697e4bcb672862f679a4c2a9d":["360ff513ddb24a30ffa2111a3ef0f91038803100"],"f8c1e95c9ddb89e882eef268cbe52ee0637f9a6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba9b7b122d927a15ff4837e3d72876c609fef1b"],"360ff513ddb24a30ffa2111a3ef0f91038803100":["f8c1e95c9ddb89e882eef268cbe52ee0637f9a6e"]},"commit2Childs":{"9ba9b7b122d927a15ff4837e3d72876c609fef1b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f8c1e95c9ddb89e882eef268cbe52ee0637f9a6e"],"7161a776f504e35697e4bcb672862f679a4c2a9d":["9ba9b7b122d927a15ff4837e3d72876c609fef1b"],"f8c1e95c9ddb89e882eef268cbe52ee0637f9a6e":["360ff513ddb24a30ffa2111a3ef0f91038803100"],"360ff513ddb24a30ffa2111a3ef0f91038803100":["7161a776f504e35697e4bcb672862f679a4c2a9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}