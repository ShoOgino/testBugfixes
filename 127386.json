{"path":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","sourceNew":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","sourceOld":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","sourceNew":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","sourceOld":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","sourceNew":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","sourceOld":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464f6dced2dddb86ebb65fba95eb05169c1b2f7e","date":1372221866,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#getConstants(MultiValueSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","sourceNew":"  private double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","sourceOld":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#getConstants(MultiValueSource).mjava","sourceNew":null,"sourceOld":"  private static double[] getConstants(MultiValueSource vs) {\n    if (!(vs instanceof VectorValueSource)) return null;\n    List<ValueSource> sources = ((VectorValueSource)vs).getSources();\n    if (sources.get(0) instanceof ConstNumberSource && sources.get(1) instanceof ConstNumberSource) {\n      return new double[] { ((ConstNumberSource) sources.get(0)).getDouble(), ((ConstNumberSource) sources.get(1)).getDouble()};\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"464f6dced2dddb86ebb65fba95eb05169c1b2f7e":["c26f00b574427b55127e869b935845554afde1fa"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c26f00b574427b55127e869b935845554afde1fa","464f6dced2dddb86ebb65fba95eb05169c1b2f7e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["464f6dced2dddb86ebb65fba95eb05169c1b2f7e"]},"commit2Childs":{"464f6dced2dddb86ebb65fba95eb05169c1b2f7e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["464f6dced2dddb86ebb65fba95eb05169c1b2f7e","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}