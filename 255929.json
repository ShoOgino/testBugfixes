{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","commits":[{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#parseParams().mjava","sourceNew":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<String,Object>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","sourceOld":"  @Test\n  public void parseParams() {\n    Map m = new HashMap();\n    m.put(\"b\",\"B\");\n    VariableResolverImpl vr = new VariableResolverImpl();\n    vr.addNamespace(\"a\",m);\n    List l =  EvaluatorBag.parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((EvaluatorBag.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<String,Object>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","sourceNew":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","sourceOld":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<String,Object>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","sourceNew":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(1d,l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","sourceOld":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","sourceNew":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(1d,l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","sourceOld":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","sourceNew":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(1d,l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","sourceOld":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(new Double(1),l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#parseParams().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void parseParams() {\n    Map<String,Object> m = new HashMap<>();\n    m.put(\"b\",\"B\");\n    VariableResolver vr = new VariableResolver();\n    vr.addNamespace(\"a\",m);\n    List<Object> l = (new Evaluator() {      \n      @Override\n      public String evaluate(String expression, Context context) {\n        return null;\n      }\n    }).parseParams(\" 1 , a.b, 'hello!', 'ds,o,u\\'za',\",vr);\n    assertEquals(1d,l.get(0));\n    assertEquals(\"B\",((Evaluator.VariableWrapper)l.get(1)).resolve());\n    assertEquals(\"hello!\",l.get(2));\n    assertEquals(\"ds,o,u'za\",l.get(3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c7b0ae5716b6c2044195a818e9ae58205175659"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"7c7b0ae5716b6c2044195a818e9ae58205175659":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}