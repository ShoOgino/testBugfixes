{"path":"lucene/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","commits":[{"id":"b3cefb552695b930cefe85eb7880cccdb914be6b","date":1275316631,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Persists all snapshots information. If the given id and segment are not\n   * null, it persists their information as well.\n   */\n  private void persistSnapshotInfos(String id, String segment) throws IOException {\n    writer.deleteAll();\n    Document d = new Document();\n    d.add(new Field(SNAPSHOTS_ID, \"\", Store.YES, Index.NO));\n    for (Entry<String, String> e : super.getSnapshots().entrySet()) {\n      d.add(new Field(e.getKey(), e.getValue(), Store.YES, Index.NO));\n    }\n    if (id != null) {\n      d.add(new Field(id, segment, Store.YES, Index.NO));\n    }\n    writer.addDocument(d);\n    writer.commit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","sourceNew":"  /**\n   * Persists all snapshots information. If the given id and segment are not\n   * null, it persists their information as well.\n   */\n  private void persistSnapshotInfos(String id, String segment) throws IOException {\n    writer.deleteAll();\n    Document d = new Document();\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    d.add(new Field(SNAPSHOTS_ID, ft, \"\"));\n    for (Entry<String, String> e : super.getSnapshots().entrySet()) {\n      d.add(new Field(e.getKey(), ft, e.getValue()));\n    }\n    if (id != null) {\n      d.add(new Field(id, ft, segment));\n    }\n    writer.addDocument(d);\n    writer.commit();\n  }\n\n","sourceOld":"  /**\n   * Persists all snapshots information. If the given id and segment are not\n   * null, it persists their information as well.\n   */\n  private void persistSnapshotInfos(String id, String segment) throws IOException {\n    writer.deleteAll();\n    Document d = new Document();\n    d.add(new Field(SNAPSHOTS_ID, \"\", Store.YES, Index.NO));\n    for (Entry<String, String> e : super.getSnapshots().entrySet()) {\n      d.add(new Field(e.getKey(), e.getValue(), Store.YES, Index.NO));\n    }\n    if (id != null) {\n      d.add(new Field(id, segment, Store.YES, Index.NO));\n    }\n    writer.addDocument(d);\n    writer.commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","sourceNew":"  /**\n   * Persists all snapshots information. If the given id and segment are not\n   * null, it persists their information as well.\n   */\n  private void persistSnapshotInfos(String id, String segment) throws IOException {\n    writer.deleteAll();\n    Document d = new Document();\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    d.add(new Field(SNAPSHOTS_ID, \"\", ft));\n    for (Entry<String, String> e : super.getSnapshots().entrySet()) {\n      d.add(new Field(e.getKey(), e.getValue(), ft));\n    }\n    if (id != null) {\n      d.add(new Field(id, segment, ft));\n    }\n    writer.addDocument(d);\n    writer.commit();\n  }\n\n","sourceOld":"  /**\n   * Persists all snapshots information. If the given id and segment are not\n   * null, it persists their information as well.\n   */\n  private void persistSnapshotInfos(String id, String segment) throws IOException {\n    writer.deleteAll();\n    Document d = new Document();\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    d.add(new Field(SNAPSHOTS_ID, ft, \"\"));\n    for (Entry<String, String> e : super.getSnapshots().entrySet()) {\n      d.add(new Field(e.getKey(), ft, e.getValue()));\n    }\n    if (id != null) {\n      d.add(new Field(id, ft, segment));\n    }\n    writer.addDocument(d);\n    writer.commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#persistSnapshotInfos(String,String).mjava","sourceNew":"  /**\n   * Persists all snapshots information. If the given id and segment are not\n   * null, it persists their information as well.\n   */\n  private void persistSnapshotInfos(String id, String segment) throws IOException {\n    writer.deleteAll();\n    Document d = new Document();\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    d.add(new Field(SNAPSHOTS_ID, \"\", ft));\n    for (Entry<String, String> e : super.getSnapshots().entrySet()) {\n      d.add(new Field(e.getKey(), e.getValue(), ft));\n    }\n    if (id != null) {\n      d.add(new Field(id, segment, ft));\n    }\n    writer.addDocument(d);\n    writer.commit();\n  }\n\n","sourceOld":"  /**\n   * Persists all snapshots information. If the given id and segment are not\n   * null, it persists their information as well.\n   */\n  private void persistSnapshotInfos(String id, String segment) throws IOException {\n    writer.deleteAll();\n    Document d = new Document();\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    d.add(new Field(SNAPSHOTS_ID, \"\", ft));\n    for (Entry<String, String> e : super.getSnapshots().entrySet()) {\n      d.add(new Field(e.getKey(), e.getValue(), ft));\n    }\n    if (id != null) {\n      d.add(new Field(id, segment, ft));\n    }\n    writer.addDocument(d);\n    writer.commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"b3cefb552695b930cefe85eb7880cccdb914be6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["b3cefb552695b930cefe85eb7880cccdb914be6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b3cefb552695b930cefe85eb7880cccdb914be6b":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3cefb552695b930cefe85eb7880cccdb914be6b"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}