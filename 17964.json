{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","commits":[{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testAddIndexesWithClose().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testAddIndexesWithClose().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testAddIndexesWithClose().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithClose().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithClose() throws Throwable {\n    final int NUM_COPY = 3;\n    CommitAndAddIndexes2 c = new CommitAndAddIndexes2(NUM_COPY);\n    //c.writer2.setInfoStream(System.out);\n    c.launchThreads(-1);\n\n    // Close w/o first stopping/joining the threads\n    c.close(true);\n    //c.writer2.close();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"79c2cb24929f2649a8875fb629086171f914d5ce":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["85a883878c0af761245ab048babc63d099f835f3","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["79c2cb24929f2649a8875fb629086171f914d5ce","3a119bbc8703c10faa329ec201c654b3a35a1e3e","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","fd4c4b2a55a46d2c45e3de4514f08e33215caa21","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"85a883878c0af761245ab048babc63d099f835f3":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","79c2cb24929f2649a8875fb629086171f914d5ce","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}