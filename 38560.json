{"path":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","commits":[{"id":"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f","date":1306408552,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"/dev/null","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\");\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\");\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"/dev/null","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\");\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\");\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"/dev/null","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\");\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\");\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\", IOContext.DEFAULT);\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\", IOContext.DEFAULT);\n       IndexInput expected = dir.openInput(\"d1\", IOContext.DEFAULT);\n       IndexInput actual = csr.openInput(\"d1\", IOContext.DEFAULT);\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\");\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\");\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n       dir.copy(csw, \"d1\", \"d1\");\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\");\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\");\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n       dir.copy(csw, \"d1\", \"d1\");\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\");\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\");\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\", newIOContext(random));\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\", newIOContext(random));\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\", IOContext.DEFAULT);\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\", IOContext.DEFAULT);\n       IndexInput expected = dir.openInput(\"d1\", IOContext.DEFAULT);\n       IndexInput actual = csr.openInput(\"d1\", IOContext.DEFAULT);\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n       dir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileWriter csw = new CompoundFileWriter(newDir, \"d.csf\", newIOContext(random));\n       csw.addFile(\"d1\", dir);\n       csw.close();\n\n       CompoundFileReader csr = new CompoundFileReader(newDir, \"d.csf\", newIOContext(random));\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n       dir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n       dir.copy(csw, \"d1\", \"d1\");\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n       dir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n       dir.copy(csw, \"d1\", \"d1\");\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n       IndexInput expected = dir.openInput(\"d1\");\n       IndexInput actual = csr.openInput(\"d1\");\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n       dir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n       csw.close();\n\n       CompoundFileDirectory csr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n       dir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n       csw.close();\n\n       CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testAddExternalFile().mjava","sourceNew":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n       dir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n       csw.close();\n\n       CompoundFileDirectory csr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","sourceOld":"   public void testAddExternalFile() throws IOException {\n       createSequenceFile(dir, \"d1\", (byte) 0, 15);\n\n       Directory newDir = newDirectory();\n       CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n       dir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n       csw.close();\n\n       CompoundFileDirectory csr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n       IndexInput expected = dir.openInput(\"d1\", newIOContext(random));\n       IndexInput actual = csr.openInput(\"d1\", newIOContext(random));\n       assertSameStreams(\"d1\", expected, actual);\n       assertSameSeekBehavior(\"d1\", expected, actual);\n       expected.close();\n       actual.close();\n       csr.close();\n       \n       newDir.close();\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"67aadace85f701c87a4e0721eedcda25d8415a70":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["67aadace85f701c87a4e0721eedcda25d8415a70"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"],"2553b00f699380c64959ccb27991289aae87be2e":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["b6f9be74ca7baaef11857ad002cad40419979516","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["0aab6e810b4b0d3743d6a048be0602801f4b3920","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"]},"commit2Childs":{"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f":["0aab6e810b4b0d3743d6a048be0602801f4b3920","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"67aadace85f701c87a4e0721eedcda25d8415a70":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["2553b00f699380c64959ccb27991289aae87be2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"b6f9be74ca7baaef11857ad002cad40419979516":["d083e83f225b11e5fdd900e83d26ddb385b6955c"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["67aadace85f701c87a4e0721eedcda25d8415a70","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}