{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().mainIndexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["f885550d27f2e8768dae49c3e1adf890f86f7988","ec10d7f440570f813952960ef905138a95114a45","db71c9bced2a5e90a7d21fa3ce2d105f60867412","55688cada84e99928d155229fc2768df65a45bdb"],"bugIntro":["e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().mainIndexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().mainIndexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c2336584348b3646859b03caea74ba6c89f49ab","date":1332511944,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().mainIndexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            if (removeLocks) {\n              log.warn(logid + \"WARNING: Solr index directory '{}' is locked.  Unlocking...\", indexDir);\n              IndexWriter.unlock(dir);\n            } else {\n              log.error(logid + \"Solr index directory '{}' is locked.  Throwing exception\", indexDir);\n              throw new LockObtainFailedException(\"Index locked for write for core \" + name);\n            }\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().mainIndexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","fafd23b8e49a461cdbc22b302dfdea2f2a08d953"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4a5469a71486c4c1e313c7fcb08188d7111195c2","date":1333407337,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().indexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            if (removeLocks) {\n              log.warn(logid + \"WARNING: Solr index directory '{}' is locked.  Unlocking...\", indexDir);\n              IndexWriter.unlock(dir);\n            } else {\n              log.error(logid + \"Solr index directory '{}' is locked.  Throwing exception\", indexDir);\n              throw new LockObtainFailedException(\"Index locked for write for core \" + name);\n            }\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.indexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().mainIndexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            if (removeLocks) {\n              log.warn(logid + \"WARNING: Solr index directory '{}' is locked.  Unlocking...\", indexDir);\n              IndexWriter.unlock(dir);\n            } else {\n              log.error(logid + \"Solr index directory '{}' is locked.  Throwing exception\", indexDir);\n              throw new LockObtainFailedException(\"Index locked for write for core \" + name);\n            }\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e4d5fc8284faca306256427bbbb86017a32002cf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e4d5fc8284faca306256427bbbb86017a32002cf","date":1347055110,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().indexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            if (removeLocks) {\n              log.warn(logid + \"WARNING: Solr index directory '{}' is locked.  Unlocking...\", indexDir);\n              IndexWriter.unlock(dir);\n            } else {\n              log.error(logid + \"Solr index directory '{}' is locked.  Throwing exception\", indexDir);\n              throw new LockObtainFailedException(\"Index locked for write for core \" + name);\n            }\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = SolrIndexWriter.create(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.indexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().indexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            if (removeLocks) {\n              log.warn(logid + \"WARNING: Solr index directory '{}' is locked.  Unlocking...\", indexDir);\n              IndexWriter.unlock(dir);\n            } else {\n              log.error(logid + \"Solr index directory '{}' is locked.  Throwing exception\", indexDir);\n              throw new LockObtainFailedException(\"Index locked for write for core \" + name);\n            }\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.indexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["4a5469a71486c4c1e313c7fcb08188d7111195c2"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df4ed22dc7b048a2e9efa6ee55cb84b9457e9ee5","date":1347730635,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex(boolean reload) {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && !reload) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().indexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            if (removeLocks) {\n              log.warn(logid + \"WARNING: Solr index directory '{}' is locked.  Unlocking...\", indexDir);\n              IndexWriter.unlock(dir);\n            } else {\n              log.error(logid + \"Solr index directory '{}' is locked.  Throwing exception\", indexDir);\n              throw new LockObtainFailedException(\"Index locked for write for core \" + name);\n            }\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = SolrIndexWriter.create(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.indexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = directoryFactory.get(indexDir, getSolrConfig().indexConfig.lockType);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            if (removeLocks) {\n              log.warn(logid + \"WARNING: Solr index directory '{}' is locked.  Unlocking...\", indexDir);\n              IndexWriter.unlock(dir);\n            } else {\n              log.error(logid + \"Solr index directory '{}' is locked.  Throwing exception\", indexDir);\n              throw new LockObtainFailedException(\"Index locked for write for core \" + name);\n            }\n          }\n          directoryFactory.release(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = SolrIndexWriter.create(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.indexConfig, solrDelPolicy, codec, false);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e4d5fc8284faca306256427bbbb86017a32002cf":["4a5469a71486c4c1e313c7fcb08188d7111195c2"],"7b91922b55d15444d554721b352861d028eb8278":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"df4ed22dc7b048a2e9efa6ee55cb84b9457e9ee5":["e4d5fc8284faca306256427bbbb86017a32002cf"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4a5469a71486c4c1e313c7fcb08188d7111195c2":["5c2336584348b3646859b03caea74ba6c89f49ab"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df4ed22dc7b048a2e9efa6ee55cb84b9457e9ee5"],"5c2336584348b3646859b03caea74ba6c89f49ab":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"e4d5fc8284faca306256427bbbb86017a32002cf":["df4ed22dc7b048a2e9efa6ee55cb84b9457e9ee5"],"7b91922b55d15444d554721b352861d028eb8278":["5c2336584348b3646859b03caea74ba6c89f49ab"],"df4ed22dc7b048a2e9efa6ee55cb84b9457e9ee5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"4a5469a71486c4c1e313c7fcb08188d7111195c2":["e4d5fc8284faca306256427bbbb86017a32002cf"],"c26f00b574427b55127e869b935845554afde1fa":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e22ffe8cc51a892ae103df018822d7873e901c2a":["7b91922b55d15444d554721b352861d028eb8278"],"5c2336584348b3646859b03caea74ba6c89f49ab":["4a5469a71486c4c1e313c7fcb08188d7111195c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}