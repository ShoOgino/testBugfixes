{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","commits":[{"id":"2c12bd5aa06553085d5db3011d2f3906ccadd0ac","date":1337939866,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = \"http://localhost:\" + port + context;\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47c952a4f0f0e9b74763a0609a3726dbb217164a","date":1347968413,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = \"http://127.0.0.1:\" + port + context;\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = \"http://localhost:\" + port + context;\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa11c355cd3b3b9207608b85fbd33b34f6f1966e","date":1361303536,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = jetty.getBaseUrl().toString();\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = \"http://127.0.0.1:\" + port + context;\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db38df1327eb9a91d4f733219b3865b3af2650fa","date":1366389326,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = jetty.getBaseUrl().toString();\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setUseMultiPartPost(random().nextBoolean());\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = jetty.getBaseUrl().toString();\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","date":1366986755,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setUseMultiPartPost(random().nextBoolean());\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = jetty.getBaseUrl().toString();\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setUseMultiPartPost(random().nextBoolean());\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleXMLTest#createNewSolrServer().mjava","sourceNew":null,"sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setUseMultiPartPost(random().nextBoolean());\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["db38df1327eb9a91d4f733219b3865b3af2650fa"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["2c12bd5aa06553085d5db3011d2f3906ccadd0ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"db38df1327eb9a91d4f733219b3865b3af2650fa":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e"],"2c12bd5aa06553085d5db3011d2f3906ccadd0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["db38df1327eb9a91d4f733219b3865b3af2650fa"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["bafca15d8e408346a67f4282ad1143b88023893b"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c12bd5aa06553085d5db3011d2f3906ccadd0ac"],"db38df1327eb9a91d4f733219b3865b3af2650fa":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2c12bd5aa06553085d5db3011d2f3906ccadd0ac":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}