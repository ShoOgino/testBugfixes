{"path":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#f(String,Object...).mjava","commits":[{"id":"106fbee5a2b8105d0628067f2c65cd0fedfc19e7","date":1464121813,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#f(String,Object...).mjava","pathOld":"/dev/null","sourceNew":"  public static SolrInputField f(String fieldName, Object... values) {\n    SolrInputField f = new SolrInputField(fieldName);\n    f.setValue(values, 1.0F);\n    // TODO: soooooooooo stupid (but currently neccessary because atomic updates freak out\n    // if the Map with the \"inc\" operation is inside of a collection - even if it's the only \"value\") ...\n    if (1 == values.length) {\n      f.setValue(values[0], 1.0F);\n    } else {\n      f.setValue(values, 1.0F);\n    }\n    return f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#f(String,Object...).mjava","pathOld":"/dev/null","sourceNew":"  public static SolrInputField f(String fieldName, Object... values) {\n    SolrInputField f = new SolrInputField(fieldName);\n    f.setValue(values, 1.0F);\n    // TODO: soooooooooo stupid (but currently neccessary because atomic updates freak out\n    // if the Map with the \"inc\" operation is inside of a collection - even if it's the only \"value\") ...\n    if (1 == values.length) {\n      f.setValue(values[0], 1.0F);\n    } else {\n      f.setValue(values, 1.0F);\n    }\n    return f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#f(String,Object...).mjava","pathOld":"/dev/null","sourceNew":"  public static SolrInputField f(String fieldName, Object... values) {\n    SolrInputField f = new SolrInputField(fieldName);\n    f.setValue(values, 1.0F);\n    // TODO: soooooooooo stupid (but currently neccessary because atomic updates freak out\n    // if the Map with the \"inc\" operation is inside of a collection - even if it's the only \"value\") ...\n    if (1 == values.length) {\n      f.setValue(values[0], 1.0F);\n    } else {\n      f.setValue(values, 1.0F);\n    }\n    return f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#f(String,Object...).mjava","pathOld":"/dev/null","sourceNew":"  public static SolrInputField f(String fieldName, Object... values) {\n    SolrInputField f = new SolrInputField(fieldName);\n    f.setValue(values, 1.0F);\n    // TODO: soooooooooo stupid (but currently neccessary because atomic updates freak out\n    // if the Map with the \"inc\" operation is inside of a collection - even if it's the only \"value\") ...\n    if (1 == values.length) {\n      f.setValue(values[0], 1.0F);\n    } else {\n      f.setValue(values, 1.0F);\n    }\n    return f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#f(String,Object...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#f(String,Object...).mjava","sourceNew":"  public static SolrInputField f(String fieldName, Object... values) {\n    SolrInputField f = new SolrInputField(fieldName);\n    f.setValue(values);\n    // TODO: soooooooooo stupid (but currently neccessary because atomic updates freak out\n    // if the Map with the \"inc\" operation is inside of a collection - even if it's the only \"value\") ...\n    if (1 == values.length) {\n      f.setValue(values[0]);\n    } else {\n      f.setValue(values);\n    }\n    return f;\n  }\n\n","sourceOld":"  public static SolrInputField f(String fieldName, Object... values) {\n    SolrInputField f = new SolrInputField(fieldName);\n    f.setValue(values, 1.0F);\n    // TODO: soooooooooo stupid (but currently neccessary because atomic updates freak out\n    // if the Map with the \"inc\" operation is inside of a collection - even if it's the only \"value\") ...\n    if (1 == values.length) {\n      f.setValue(values[0], 1.0F);\n    } else {\n      f.setValue(values, 1.0F);\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0e121d43b5a10f2df530f406f935102656e9c4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","106fbee5a2b8105d0628067f2c65cd0fedfc19e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83870855d82aba6819217abeff5a40779dbb28b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"acd9883560fd89e6448b2b447302fe543040cd4f":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"106fbee5a2b8105d0628067f2c65cd0fedfc19e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","acd9883560fd89e6448b2b447302fe543040cd4f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","106fbee5a2b8105d0628067f2c65cd0fedfc19e7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"106fbee5a2b8105d0628067f2c65cd0fedfc19e7":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}