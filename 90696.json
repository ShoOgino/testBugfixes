{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","commits":[{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = newFSDirectory(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = newFSDirectory(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0","date":1356250502,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = _TestUtil.getTempDir(\"doesnotexist\");\n    _TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = newFSDirectory(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = _TestUtil.getTempDir(\"doesnotexist\");\n    _TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Directory dir = newFSDirectory(_TestUtil.getTempDir(\"doesnotexist\"));\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = TestUtil.getTempDir(\"doesnotexist\");\n    TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = _TestUtil.getTempDir(\"doesnotexist\");\n    _TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = TestUtil.createTempDir(\"doesnotexist\");\n    TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = TestUtil.getTempDir(\"doesnotexist\");\n    TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = TestUtil.createTempDir(\"doesnotexist\");\n    TestUtil.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = TestUtil.createTempDir(\"doesnotexist\");\n    TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = createTempDir(\"doesnotexist\");\n    TestUtil.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = TestUtil.createTempDir(\"doesnotexist\");\n    TestUtil.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = createTempDir(\"doesnotexist\");\n    TestUtil.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = TestUtil.getTempDir(\"doesnotexist\");\n    TestUtil.rmDir(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = createTempDir(\"doesnotexist\");\n    IOUtils.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = createTempDir(\"doesnotexist\");\n    TestUtil.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    IOUtils.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    File tempDir = createTempDir(\"doesnotexist\");\n    IOUtils.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (NoSuchDirectoryException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    IOUtils.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    IOUtils.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    IOUtils.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    IOUtils.rm(tempDir);\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDir().mjava","sourceNew":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    Directory dir = newFSDirectory(tempDir);\n    expectThrows(IndexNotFoundException.class, () -> {\n      DirectoryReader.open(dir);\n    });\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1468 -- make sure on attempting to open an\n  // DirectoryReader on a non-existent directory, you get a\n  // good exception\n  public void testNoDir() throws Throwable {\n    Path tempDir = createTempDir(\"doesnotexist\");\n    Directory dir = newFSDirectory(tempDir);\n    try {\n      DirectoryReader.open(dir);\n      fail(\"did not hit expected exception\");\n    } catch (IndexNotFoundException nsde) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":["d54c7739bfe85d68f0352823cd70c10c619fad38","f4abec28b874149a7223e32cc7a01704c27790de"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"5a207d19eac354d649c3f0e2cce070017c78125e":["f4abec28b874149a7223e32cc7a01704c27790de","b470f36a9372c97283360b1304eacbde22df6c0d"],"ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["f4abec28b874149a7223e32cc7a01704c27790de","b470f36a9372c97283360b1304eacbde22df6c0d"],"05fe562aa248790944d43cdd478f512572835ba0":["5a207d19eac354d649c3f0e2cce070017c78125e"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["d0d579490a72f2e6297eaa648940611234c57cf1"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"b470f36a9372c97283360b1304eacbde22df6c0d":["f4abec28b874149a7223e32cc7a01704c27790de","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"5a207d19eac354d649c3f0e2cce070017c78125e":["05fe562aa248790944d43cdd478f512572835ba0"],"ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6613659748fe4411a7dcf85266e55db1f95f7315"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4abec28b874149a7223e32cc7a01704c27790de":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b470f36a9372c97283360b1304eacbde22df6c0d","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"d0d579490a72f2e6297eaa648940611234c57cf1":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}