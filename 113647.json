{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionQuerySort#testOptimizedFieldSourceFunctionSorting().mjava","commits":[{"id":"3f7f81a15cd0183e4e6262806b2e491a130e63db","date":1438643602,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionQuerySort#testOptimizedFieldSourceFunctionSorting().mjava","pathOld":"/dev/null","sourceNew":"  public void testOptimizedFieldSourceFunctionSorting() throws IOException {\n    // index contents don't matter for this test.\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(null);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    IndexReader reader = writer.getReader();\n    writer.close();\n    IndexSearcher searcher = newSearcher(reader);\n\n    final boolean reverse = random().nextBoolean();\n    ValueSource vs;\n    SortField sf, vssf;\n\n    vs = new IntFieldSource(\"int_field\");\n    sf = new SortField(\"int_field\", Type.INT, reverse);\n    vssf = vs.getSortField(reverse);\n    assertEquals(sf, vssf);\n    sf = sf.rewrite(searcher);\n    vssf = vssf.rewrite(searcher);\n    assertEquals(sf, vssf);\n    \n    vs = new FloatFieldSource(\"float_field\");\n    sf = new SortField(\"float_field\", Type.FLOAT, reverse);\n    vssf = vs.getSortField(reverse);\n    assertEquals(sf, vssf);\n    sf = sf.rewrite(searcher);\n    vssf = vssf.rewrite(searcher);\n    assertEquals(sf, vssf);\n    \n    vs = new DoubleFieldSource(\"double_field\");\n    sf = new SortField(\"double_field\", Type.DOUBLE, reverse);\n    vssf = vs.getSortField(reverse);\n    assertEquals(sf, vssf);\n    sf = sf.rewrite(searcher);\n    vssf = vssf.rewrite(searcher);\n    assertEquals(sf, vssf);\n    \n    vs = new LongFieldSource(\"long_field\");\n    sf = new SortField(\"long_field\", Type.LONG, reverse);\n    vssf = vs.getSortField(reverse);\n    assertEquals(sf, vssf);\n    sf = sf.rewrite(searcher);\n    vssf = vssf.rewrite(searcher);\n    assertEquals(sf, vssf);\n     \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f7f81a15cd0183e4e6262806b2e491a130e63db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f7f81a15cd0183e4e6262806b2e491a130e63db"]},"commit2Childs":{"3f7f81a15cd0183e4e6262806b2e491a130e63db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f7f81a15cd0183e4e6262806b2e491a130e63db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}