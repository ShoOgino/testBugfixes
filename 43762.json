{"path":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","commits":[{"id":"08932c793647a36953d1816b1060121f48820d3f","date":1277386540,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","pathOld":"/dev/null","sourceNew":"  // chooses from a very limited alphabet to exacerbate the\n  // surrogate seeking required\n  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) 0xd800;\n        // lo\n        buffer[i] = (char) 0xdc00;\n      } else if (t <= 3) {\n        buffer[i] = 'a';\n      }  else if (4 == t) {\n        buffer[i] = 0xe000;\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","pathOld":"/dev/null","sourceNew":"  // chooses from a very limited alphabet to exacerbate the\n  // surrogate seeking required\n  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) 0xd800;\n        // lo\n        buffer[i] = (char) 0xdc00;\n      } else if (t <= 3) {\n        buffer[i] = 'a';\n      }  else if (4 == t) {\n        buffer[i] = 0xe000;\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","sourceNew":"  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) (0xd800 + r.nextInt(2));\n        // lo\n        buffer[i] = (char) (0xdc00 + r.nextInt(2));\n      } else if (t <= 3) {\n        buffer[i] = (char) ('a' + r.nextInt(2));\n      }  else if (4 == t) {\n        buffer[i] = (char) (0xe000 + r.nextInt(2));\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  // chooses from a very limited alphabet to exacerbate the\n  // surrogate seeking required\n  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) 0xd800;\n        // lo\n        buffer[i] = (char) 0xdc00;\n      } else if (t <= 3) {\n        buffer[i] = 'a';\n      }  else if (4 == t) {\n        buffer[i] = 0xe000;\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","sourceNew":"  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) (0xd800 + r.nextInt(2));\n        // lo\n        buffer[i] = (char) (0xdc00 + r.nextInt(2));\n      } else if (t <= 3) {\n        buffer[i] = (char) ('a' + r.nextInt(2));\n      }  else if (4 == t) {\n        buffer[i] = (char) (0xe000 + r.nextInt(2));\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  // chooses from a very limited alphabet to exacerbate the\n  // surrogate seeking required\n  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) 0xd800;\n        // lo\n        buffer[i] = (char) 0xdc00;\n      } else if (t <= 3) {\n        buffer[i] = 'a';\n      }  else if (4 == t) {\n        buffer[i] = 0xe000;\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","sourceNew":"  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) (0xd800 + r.nextInt(2));\n        // lo\n        buffer[i] = (char) (0xdc00 + r.nextInt(2));\n      } else if (t <= 3) {\n        buffer[i] = (char) ('a' + r.nextInt(2));\n      }  else if (4 == t) {\n        buffer[i] = (char) (0xe000 + r.nextInt(2));\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  // chooses from a very limited alphabet to exacerbate the\n  // surrogate seeking required\n  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) 0xd800;\n        // lo\n        buffer[i] = (char) 0xdc00;\n      } else if (t <= 3) {\n        buffer[i] = 'a';\n      }  else if (4 == t) {\n        buffer[i] = 0xe000;\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestSurrogates#makeDifficultRandomUnicodeString(Random).mjava","sourceNew":"  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) (0xd800 + r.nextInt(2));\n        // lo\n        buffer[i] = (char) (0xdc00 + r.nextInt(2));\n      } else if (t <= 3) {\n        buffer[i] = (char) ('a' + r.nextInt(2));\n      }  else if (4 == t) {\n        buffer[i] = (char) (0xe000 + r.nextInt(2));\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String makeDifficultRandomUnicodeString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) (0xd800 + r.nextInt(2));\n        // lo\n        buffer[i] = (char) (0xdc00 + r.nextInt(2));\n      } else if (t <= 3) {\n        buffer[i] = (char) ('a' + r.nextInt(2));\n      }  else if (4 == t) {\n        buffer[i] = (char) (0xe000 + r.nextInt(2));\n      }\n    }\n\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"08932c793647a36953d1816b1060121f48820d3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["08932c793647a36953d1816b1060121f48820d3f","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["08932c793647a36953d1816b1060121f48820d3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","08932c793647a36953d1816b1060121f48820d3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08932c793647a36953d1816b1060121f48820d3f":["4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57","5f4e87790277826a2aea119328600dfb07761f32"],"3242a09f703274d3b9283f2064a1a33064b53a1b":[],"4b103252dee6afa1b6d7a622c773d178788eb85a":["7b91922b55d15444d554721b352861d028eb8278","3242a09f703274d3b9283f2064a1a33064b53a1b"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08932c793647a36953d1816b1060121f48820d3f","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3242a09f703274d3b9283f2064a1a33064b53a1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}