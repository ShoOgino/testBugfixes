{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseStat(String,Object).mjava","commits":[{"id":"d3baf591292785743bfb1fdd65256a3fe5feab71","date":1532454229,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseStat(String,Object).mjava","pathOld":"/dev/null","sourceNew":"  /** Parses simple strings like \"avg(x)\" or robust Maps that may contain local params */\n  private AggValueSource parseStat(String key, Object args) throws SyntaxError {\n    assert null != args;\n\n    if (args instanceof CharSequence) {\n      // Both of these variants are already unpacked for us in this case, and use no local params...\n      // 1) x:{func:'min(foo)'}\n      // 2) x:'min(foo)'\n      return parseStatWithParams(key, null, args.toString());\n    }\n    \n    if (args instanceof Map) {\n      final Map<String,Object> statMap = (Map<String,Object>)args;\n      return parseStatWithParams(key, jsonToSolrParams(statMap), statMap.get(\"func\").toString());\n    }\n      \n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                            \"Stats must be specified as either a simple string, or a json Map\");\n      \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseStat(String,Object).mjava","sourceNew":null,"sourceOld":"  /** Parses simple strings like \"avg(x)\" or robust Maps that may contain local params */\n  private AggValueSource parseStat(String key, Object args) throws SyntaxError {\n    assert null != args;\n\n    if (args instanceof CharSequence) {\n      // Both of these variants are already unpacked for us in this case, and use no local params...\n      // 1) x:{func:'min(foo)'}\n      // 2) x:'min(foo)'\n      return parseStatWithParams(key, null, args.toString());\n    }\n    \n    if (args instanceof Map) {\n      final Map<String,Object> statMap = (Map<String,Object>)args;\n      return parseStatWithParams(key, jsonToSolrParams(statMap), statMap.get(\"func\").toString());\n    }\n      \n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                            \"Stats must be specified as either a simple string, or a json Map\");\n      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["d3baf591292785743bfb1fdd65256a3fe5feab71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3baf591292785743bfb1fdd65256a3fe5feab71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"]},"commit2Childs":{"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3baf591292785743bfb1fdd65256a3fe5feab71"],"d3baf591292785743bfb1fdd65256a3fe5feab71":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}