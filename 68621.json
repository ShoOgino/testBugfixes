{"path":"src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","commits":[{"id":"4b1444275c93a8051a6fe6158639467a144ae0a4","date":1224502393,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reads commitUserData, previously passed to {@link\n   * IndexWriter#commit(String)}, from current index\n   * segments file.  This will return null if {@link\n   * IndexWriter#commit(String)} has never been called for\n   * this index.\n   * \n   * @param directory where the index resides.\n   * @return commit userData.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   *\n   * @see #getCommitUserData()\n   */\n  public static String getCommitUserData(Directory directory) throws CorruptIndexException, IOException {\n    return SegmentInfos.readCurrentUserData(directory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3ab91f3bb602daf6393fa7f78b11afd3400d669","date":1243282044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","sourceNew":"  /**\n   * Reads commitUserData, previously passed to {@link\n   * IndexWriter#commit(Map)}, from current index\n   * segments file.  This will return null if {@link\n   * IndexWriter#commit(Map)} has never been called for\n   * this index.\n   * \n   * @param directory where the index resides.\n   * @return commit userData.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   *\n   * @see #getCommitUserData()\n   */\n  public static Map getCommitUserData(Directory directory) throws CorruptIndexException, IOException {\n    return SegmentInfos.readCurrentUserData(directory);\n  }\n\n","sourceOld":"  /**\n   * Reads commitUserData, previously passed to {@link\n   * IndexWriter#commit(String)}, from current index\n   * segments file.  This will return null if {@link\n   * IndexWriter#commit(String)} has never been called for\n   * this index.\n   * \n   * @param directory where the index resides.\n   * @return commit userData.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   *\n   * @see #getCommitUserData()\n   */\n  public static String getCommitUserData(Directory directory) throws CorruptIndexException, IOException {\n    return SegmentInfos.readCurrentUserData(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f011f01db72fa6f556a9a0843944ecee2de4aaa8","date":1255806907,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","sourceNew":"  /**\n   * Reads commitUserData, previously passed to {@link\n   * IndexWriter#commit(Map)}, from current index\n   * segments file.  This will return null if {@link\n   * IndexWriter#commit(Map)} has never been called for\n   * this index.\n   * \n   * @param directory where the index resides.\n   * @return commit userData.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   *\n   * @see #getCommitUserData()\n   */\n  public static Map<String,String> getCommitUserData(Directory directory) throws CorruptIndexException, IOException {\n    return SegmentInfos.readCurrentUserData(directory);\n  }\n\n","sourceOld":"  /**\n   * Reads commitUserData, previously passed to {@link\n   * IndexWriter#commit(Map)}, from current index\n   * segments file.  This will return null if {@link\n   * IndexWriter#commit(Map)} has never been called for\n   * this index.\n   * \n   * @param directory where the index resides.\n   * @return commit userData.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   *\n   * @see #getCommitUserData()\n   */\n  public static Map getCommitUserData(Directory directory) throws CorruptIndexException, IOException {\n    return SegmentInfos.readCurrentUserData(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getCommitUserData(Directory).mjava","sourceNew":"  /**\n   * Reads commitUserData, previously passed to {@link\n   * IndexWriter#commit(Map)}, from current index\n   * segments file.  This will return null if {@link\n   * IndexWriter#commit(Map)} has never been called for\n   * this index.\n   * \n   * @param directory where the index resides.\n   * @return commit userData.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   *\n   * @see #getCommitUserData()\n   */\n  public static Map<String,String> getCommitUserData(Directory directory) throws CorruptIndexException, IOException {\n    return SegmentInfos.readCurrentUserData(directory);\n  }\n\n","sourceOld":"  /**\n   * Reads commitUserData, previously passed to {@link\n   * IndexWriter#commit(Map)}, from current index\n   * segments file.  This will return null if {@link\n   * IndexWriter#commit(Map)} has never been called for\n   * this index.\n   * \n   * @param directory where the index resides.\n   * @return commit userData.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   *\n   * @see #getCommitUserData()\n   */\n  public static Map<String,String> getCommitUserData(Directory directory) throws CorruptIndexException, IOException {\n    return SegmentInfos.readCurrentUserData(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b1444275c93a8051a6fe6158639467a144ae0a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"]},"commit2Childs":{"4b1444275c93a8051a6fe6158639467a144ae0a4":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}