{"path":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","commits":[{"id":"1fca549db64ee4c87a83a94e7c224506fa20d396","date":1495433449,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation ve = (Violation) that;\n        return Objects.equals(this.shard, (ve).shard) &&\n            Objects.equals(this.coll, (ve).coll) &&\n            Objects.equals(this.node, (ve).node);\n      }\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","date":1495756308,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation v = (Violation) that;\n        return Objects.equals(this.shard, v.shard) &&\n            Objects.equals(this.coll, v.coll) &&\n            Objects.equals(this.node, v.node) &&\n            Objects.equals(this.tagKey, v.tagKey)\n            ;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation ve = (Violation) that;\n        return Objects.equals(this.shard, (ve).shard) &&\n            Objects.equals(this.coll, (ve).coll) &&\n            Objects.equals(this.node, (ve).node);\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation v = (Violation) that;\n        return Objects.equals(this.shard, v.shard) &&\n            Objects.equals(this.coll, v.coll) &&\n            Objects.equals(this.node, v.node) &&\n            Objects.equals(this.tagKey, v.tagKey)\n            ;\n      }\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation v = (Violation) that;\n        return Objects.equals(this.shard, v.shard) &&\n            Objects.equals(this.coll, v.coll) &&\n            Objects.equals(this.node, v.node) &&\n            Objects.equals(this.tagKey, v.tagKey)\n            ;\n      }\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Violation#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation v = (Violation) that;\n        return Objects.equals(this.shard, v.shard) &&\n            Objects.equals(this.coll, v.coll) &&\n            Objects.equals(this.node, v.node) &&\n            Objects.equals(this.tagKey, v.tagKey)\n            ;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation v = (Violation) that;\n        return Objects.equals(this.shard, v.shard) &&\n            Objects.equals(this.coll, v.coll) &&\n            Objects.equals(this.node, v.node) &&\n            Objects.equals(this.tagKey, v.tagKey)\n            ;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Violation#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation v = (Violation) that;\n        return Objects.equals(this.shard, v.shard) &&\n            Objects.equals(this.coll, v.coll) &&\n            Objects.equals(this.node, v.node) &&\n            Objects.equals(this.tagKey, v.tagKey)\n            ;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object that) {\n      if (that instanceof Violation) {\n        Violation v = (Violation) that;\n        return Objects.equals(this.shard, v.shard) &&\n            Objects.equals(this.coll, v.coll) &&\n            Objects.equals(this.node, v.node) &&\n            Objects.equals(this.tagKey, v.tagKey)\n            ;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":["1fca549db64ee4c87a83a94e7c224506fa20d396"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1fca549db64ee4c87a83a94e7c224506fa20d396":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"98f11c416d30e556e0004a9a84960702d12d35b1":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":["98f11c416d30e556e0004a9a84960702d12d35b1"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["98f11c416d30e556e0004a9a84960702d12d35b1"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"1fca549db64ee4c87a83a94e7c224506fa20d396":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74aea047dff7f7c38a2d766827bd20d356f98c6a","1fca549db64ee4c87a83a94e7c224506fa20d396","a513b6a92751e54c76fb5447948c9e7d437163a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}