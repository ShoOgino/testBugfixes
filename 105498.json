{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/OrdinalMappingAtomicReader.OrdinalMappingBinaryDocValues#get(int).mjava","commits":[{"id":"8bc40adb64449806b9414b240913b974b69ade73","date":1404384579,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/OrdinalMappingAtomicReader.OrdinalMappingBinaryDocValues#get(int).mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"synthetic-access\")\n    @Override\n    public BytesRef get(int docID) {\n      try {\n        // NOTE: this isn't quite koscher, because in general\n        // multiple threads can call BinaryDV.get which would\n        // then conflict on the single ordinals instance, but\n        // because this impl is only used for merging, we know\n        // only 1 thread calls us:\n        ordsReader.get(docID, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        return encode(ordinals);\n      } catch (IOException e) {\n        throw new RuntimeException(\"error reading category ordinals for doc \" + docID, e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/OrdinalMappingLeafReader.OrdinalMappingBinaryDocValues#get(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/OrdinalMappingAtomicReader.OrdinalMappingBinaryDocValues#get(int).mjava","sourceNew":"    @SuppressWarnings(\"synthetic-access\")\n    @Override\n    public BytesRef get(int docID) {\n      try {\n        // NOTE: this isn't quite koscher, because in general\n        // multiple threads can call BinaryDV.get which would\n        // then conflict on the single ordinals instance, but\n        // because this impl is only used for merging, we know\n        // only 1 thread calls us:\n        ordsReader.get(docID, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        return encode(ordinals);\n      } catch (IOException e) {\n        throw new RuntimeException(\"error reading category ordinals for doc \" + docID, e);\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"synthetic-access\")\n    @Override\n    public BytesRef get(int docID) {\n      try {\n        // NOTE: this isn't quite koscher, because in general\n        // multiple threads can call BinaryDV.get which would\n        // then conflict on the single ordinals instance, but\n        // because this impl is only used for merging, we know\n        // only 1 thread calls us:\n        ordsReader.get(docID, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        return encode(ordinals);\n      } catch (IOException e) {\n        throw new RuntimeException(\"error reading category ordinals for doc \" + docID, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8bc40adb64449806b9414b240913b974b69ade73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["8bc40adb64449806b9414b240913b974b69ade73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8bc40adb64449806b9414b240913b974b69ade73"],"8bc40adb64449806b9414b240913b974b69ade73":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}