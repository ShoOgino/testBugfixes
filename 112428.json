{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat2#tearDown().mjava","commits":[{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene50PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene50PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene50RWPostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene50PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99eb4a732d1a908f4636ace52928876136bf1896":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","99eb4a732d1a908f4636ace52928876136bf1896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}