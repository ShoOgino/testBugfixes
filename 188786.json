{"path":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery#getMaxFreq(IndexOptions,long,long).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery#getMaxFreq(IndexOptions,long,long).mjava","pathOld":"/dev/null","sourceNew":"  private long getMaxFreq(IndexOptions indexOptions, long ttf, long df) {\n    // TODO: store the max term freq?\n    if (indexOptions.compareTo(IndexOptions.DOCS) <= 0) {\n      // omitTFAP field, tf values are implicitly 1.\n      return 1;\n    } else {\n      assert ttf >= 0;\n      return Math.min(Integer.MAX_VALUE, ttf - df + 1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery#getMaxFreq(IndexOptions,long,long).mjava","pathOld":"/dev/null","sourceNew":"  private long getMaxFreq(IndexOptions indexOptions, long ttf, long df) {\n    // TODO: store the max term freq?\n    if (indexOptions.compareTo(IndexOptions.DOCS) <= 0) {\n      // omitTFAP field, tf values are implicitly 1.\n      return 1;\n    } else {\n      assert ttf >= 0;\n      return Math.min(Integer.MAX_VALUE, ttf - df + 1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ea90bc076fbe82be472db33fc80b00eb0bff44f","date":1526486036,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery#getMaxFreq(IndexOptions,long,long).mjava","sourceNew":null,"sourceOld":"  private long getMaxFreq(IndexOptions indexOptions, long ttf, long df) {\n    // TODO: store the max term freq?\n    if (indexOptions.compareTo(IndexOptions.DOCS) <= 0) {\n      // omitTFAP field, tf values are implicitly 1.\n      return 1;\n    } else {\n      assert ttf >= 0;\n      return Math.min(Integer.MAX_VALUE, ttf - df + 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6ea90bc076fbe82be472db33fc80b00eb0bff44f":["417142ff08fda9cf0b72d5133e63097a166c6458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ea90bc076fbe82be472db33fc80b00eb0bff44f"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"6ea90bc076fbe82be472db33fc80b00eb0bff44f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"417142ff08fda9cf0b72d5133e63097a166c6458":["6ea90bc076fbe82be472db33fc80b00eb0bff44f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}