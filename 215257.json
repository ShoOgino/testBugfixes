{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testDupSuggestFieldValues().mjava","sourceNew":"  @Test\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(300));\n    int[] weights = new int[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = Math.abs(random().nextInt());\n      document.add(new SuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc\"));\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(query, num);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(300));\n    long[] weights = new long[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = Math.abs(random().nextLong());\n      document.add(newSuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(\"suggest_field\", \"abc\", num);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e919be7c57e6b5ae11c5beaa2b528f092f7687c4","date":1432802319,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","sourceNew":"  @Test\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    final int num = Math.min(1000, atLeast(300));\n    int[] weights = new int[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = Math.abs(random().nextInt());\n      document.add(new SuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc\"));\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(query, num);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(300));\n    int[] weights = new int[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = Math.abs(random().nextInt());\n      document.add(new SuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc\"));\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(query, num);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902a92b60648a8925bfd9bb53a78669cd2ea98fd","date":1487797466,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","sourceNew":"  @Test\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    final int num = Math.min(1000, atLeast(300));\n    int[] weights = new int[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = random().nextInt(Integer.MAX_VALUE);\n      document.add(new SuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc\"));\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(query, num, false);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    final int num = Math.min(1000, atLeast(300));\n    int[] weights = new int[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = Math.abs(random().nextInt());\n      document.add(new SuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc\"));\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(query, num);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f","date":1579652839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testDupSuggestFieldValues().mjava","sourceNew":"  @Test @Slow\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    final int num = Math.min(1000, atLeast(100));\n    int[] weights = new int[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = random().nextInt(Integer.MAX_VALUE);\n      document.add(new SuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc\"));\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(query, num, false);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testDupSuggestFieldValues() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    final int num = Math.min(1000, atLeast(300));\n    int[] weights = new int[num];\n    for(int i = 0; i < num; i++) {\n      Document document = new Document();\n      weights[i] = random().nextInt(Integer.MAX_VALUE);\n      document.add(new SuggestField(\"suggest_field\", \"abc\", weights[i]));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    DirectoryReader reader = iw.getReader();\n    Entry[] expectedEntries = new Entry[num];\n    Arrays.sort(weights);\n    for (int i = 1; i <= num; i++) {\n      expectedEntries[i - 1] = new Entry(\"abc\", weights[num - i]);\n    }\n\n    SuggestIndexSearcher suggestIndexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc\"));\n    TopSuggestDocs lookupDocs = suggestIndexSearcher.suggest(query, num, false);\n    assertSuggestions(lookupDocs, expectedEntries);\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"]},"commit2Childs":{"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}