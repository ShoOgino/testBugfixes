{"path":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","commits":[{"id":"c16787e95e3c32c394cf5195e223e39ff5cbda3a","date":1092422102,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new FuzzyQuery that will match terms with a similarity \n   * of at least <code>minimumSimilarity</code> to <code>term</code>.\n   * \n   * @param term the term to search for\n   * @param minimumSimilarity a value between 0 and 1 to set the required similarity\n   *  between the query term and the matching terms. For example, for a\n   *  <code>minimumSimilarity</code> of <code>0.5</code> a term of the same length\n   *  as the query term is considered similar to the query term if the edit distance\n   *  between both terms is less than <code>length(term)*0.5</code>.\n   * @throws IllegalArgumentException if minimumSimilarity is &gt; 1 or &lt; 0\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n    super(term);\n    if (minimumSimilarity > 1.0f)\n      throw new IllegalArgumentException(\"minimumSimilarity > 1\");\n    else if (minimumSimilarity < 0.0f)\n      throw new IllegalArgumentException(\"minimumSimilarity < 0\");\n    this.minimumSimilarity = minimumSimilarity;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b51d06e615dc831227c94b4b16cdd5763692d2d4","date":1095169515,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","sourceNew":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n      this(term, minimumSimilarity, 0);\n  }\n\n","sourceOld":"  /**\n   * Create a new FuzzyQuery that will match terms with a similarity \n   * of at least <code>minimumSimilarity</code> to <code>term</code>.\n   * \n   * @param term the term to search for\n   * @param minimumSimilarity a value between 0 and 1 to set the required similarity\n   *  between the query term and the matching terms. For example, for a\n   *  <code>minimumSimilarity</code> of <code>0.5</code> a term of the same length\n   *  as the query term is considered similar to the query term if the edit distance\n   *  between both terms is less than <code>length(term)*0.5</code>.\n   * @throws IllegalArgumentException if minimumSimilarity is &gt; 1 or &lt; 0\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n    super(term);\n    if (minimumSimilarity > 1.0f)\n      throw new IllegalArgumentException(\"minimumSimilarity > 1\");\n    else if (minimumSimilarity < 0.0f)\n      throw new IllegalArgumentException(\"minimumSimilarity < 0\");\n    this.minimumSimilarity = minimumSimilarity;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d2b17f10a0d622e1a8082a94957764dad150530","date":1097079592,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","sourceNew":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n      this(term, minimumSimilarity, defaultPrefixLength);\n  }\n\n","sourceOld":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n      this(term, minimumSimilarity, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6cac733bfe923fb362d2b289b2996b0bf10ae22e","date":1260443093,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","sourceNew":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n    this(term, minimumSimilarity, defaultPrefixLength);\n  }\n\n","sourceOld":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n      this(term, minimumSimilarity, defaultPrefixLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33098c76721840ff65df95e81a98a5d4a49a777f","date":1266737266,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","sourceNew":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0, Integer.MAX_VALUE)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) {\n    this(term, minimumSimilarity, defaultPrefixLength, defaultMaxExpansions);\n  }\n\n","sourceOld":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) throws IllegalArgumentException {\n    this(term, minimumSimilarity, defaultPrefixLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","pathOld":"src/java/org/apache/lucene/search/FuzzyQuery#FuzzyQuery(Term,float).mjava","sourceNew":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0, Integer.MAX_VALUE)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) {\n    this(term, minimumSimilarity, defaultPrefixLength, defaultMaxExpansions);\n  }\n\n","sourceOld":"  /**\n   * Calls {@link #FuzzyQuery(Term, float) FuzzyQuery(term, minimumSimilarity, 0, Integer.MAX_VALUE)}.\n   */\n  public FuzzyQuery(Term term, float minimumSimilarity) {\n    this(term, minimumSimilarity, defaultPrefixLength, defaultMaxExpansions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d2b17f10a0d622e1a8082a94957764dad150530":["b51d06e615dc831227c94b4b16cdd5763692d2d4"],"33098c76721840ff65df95e81a98a5d4a49a777f":["6cac733bfe923fb362d2b289b2996b0bf10ae22e"],"6cac733bfe923fb362d2b289b2996b0bf10ae22e":["6d2b17f10a0d622e1a8082a94957764dad150530"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b51d06e615dc831227c94b4b16cdd5763692d2d4":["c16787e95e3c32c394cf5195e223e39ff5cbda3a"],"c16787e95e3c32c394cf5195e223e39ff5cbda3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["33098c76721840ff65df95e81a98a5d4a49a777f"]},"commit2Childs":{"6d2b17f10a0d622e1a8082a94957764dad150530":["6cac733bfe923fb362d2b289b2996b0bf10ae22e"],"33098c76721840ff65df95e81a98a5d4a49a777f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6cac733bfe923fb362d2b289b2996b0bf10ae22e":["33098c76721840ff65df95e81a98a5d4a49a777f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c16787e95e3c32c394cf5195e223e39ff5cbda3a"],"b51d06e615dc831227c94b4b16cdd5763692d2d4":["6d2b17f10a0d622e1a8082a94957764dad150530"],"c16787e95e3c32c394cf5195e223e39ff5cbda3a":["b51d06e615dc831227c94b4b16cdd5763692d2d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}