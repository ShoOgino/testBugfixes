{"path":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testFieldNames().mjava","commits":[{"id":"c9644a32526f2e2ae87543b00e8be543aa25f29c","date":1411548458,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testFieldNames().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#testFieldNames().mjava","sourceNew":"  public void testFieldNames() throws Exception {\n    Directory dir1 = getDir1(random());\n    Directory dir2 = getDir2(random());\n    ParallelLeafReader pr = new ParallelLeafReader(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)),\n                                                       SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    FieldInfos fieldInfos = pr.getFieldInfos();\n    assertEquals(4, fieldInfos.size());\n    assertNotNull(fieldInfos.fieldInfo(\"f1\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f2\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f3\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f4\"));\n    pr.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testFieldNames() throws Exception {\n    Directory dir1 = getDir1(random());\n    Directory dir2 = getDir2(random());\n    ParallelLeafReader pr = new ParallelLeafReader(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)),\n                                                       SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    FieldInfos fieldInfos = pr.getFieldInfos();\n    assertEquals(4, fieldInfos.size());\n    assertNotNull(fieldInfos.fieldInfo(\"f1\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f2\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f3\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f4\"));\n    pr.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testFieldNames().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testFieldNames().mjava","sourceNew":"  public void testFieldNames() throws Exception {\n    Directory dir1 = getDir1(random());\n    Directory dir2 = getDir2(random());\n    ParallelLeafReader pr = new ParallelLeafReader(getOnlyLeafReader(DirectoryReader.open(dir1)),\n                                                   getOnlyLeafReader(DirectoryReader.open(dir2)));\n    FieldInfos fieldInfos = pr.getFieldInfos();\n    assertEquals(4, fieldInfos.size());\n    assertNotNull(fieldInfos.fieldInfo(\"f1\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f2\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f3\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f4\"));\n    pr.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testFieldNames() throws Exception {\n    Directory dir1 = getDir1(random());\n    Directory dir2 = getDir2(random());\n    ParallelLeafReader pr = new ParallelLeafReader(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)),\n                                                       SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    FieldInfos fieldInfos = pr.getFieldInfos();\n    assertEquals(4, fieldInfos.size());\n    assertNotNull(fieldInfos.fieldInfo(\"f1\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f2\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f3\"));\n    assertNotNull(fieldInfos.fieldInfo(\"f4\"));\n    pr.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87","6e09a3a223be07d75777515a717312813221fe58"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["c9644a32526f2e2ae87543b00e8be543aa25f29c"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9644a32526f2e2ae87543b00e8be543aa25f29c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}