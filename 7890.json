{"path":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","commits":[{"id":"8476949555f799dff381770c01cfad051a264487","date":1570505073,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if(f.exists(true, false)){\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      f.fetchFromAnyNode();\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849dbf8570155b8e5fd03d8c2274a0a60491051c","date":1570859954,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","sourceNew":"  @Override\n  public boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if (f.exists(true, false)) {\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      f.fetchFromAnyNode();\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public synchronized boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if(f.exists(true, false)){\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      f.fetchFromAnyNode();\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if (f.exists(true, false)) {\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      f.fetchFromAnyNode();\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a6448412ce640b28861f4c00f899484a9adac1","date":1573627357,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","sourceNew":"  @Override\n  public boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if (f.exists(true, false)) {\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      log.info(\"Missing file in package store: {}\", path);\n      if (f.fetchFromAnyNode()) {\n        log.info(\"Successfully downloaded : {}\", path);\n        return true;\n      } else{\n        log.info(\"Unable to download file : {}\", path);\n        return false;\n      }\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if (f.exists(true, false)) {\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      f.fetchFromAnyNode();\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34ccc070314404a909b9af301ea9e64b211f0646","date":1573631914,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#fetch(String,String).mjava","sourceNew":"  @Override\n  public boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if (f.exists(true, false)) {\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      log.info(\"Missing file in package store: {}\", path);\n      if (f.fetchFromAnyNode()) {\n        log.info(\"Successfully downloaded : {}\", path);\n        return true;\n      } else {\n        log.info(\"Unable to download file : {}\", path);\n        return false;\n      }\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean fetch(String path, String from) {\n    if (path == null || path.isEmpty()) return false;\n    FileInfo f = new FileInfo(path);\n    try {\n      if (f.exists(true, false)) {\n        return true;\n      }\n    } catch (IOException e) {\n      log.error(\"Error fetching file \", e);\n      return false;\n\n    }\n\n    if (from == null || \"*\".equals(from)) {\n      log.info(\"Missing file in package store: {}\", path);\n      if (f.fetchFromAnyNode()) {\n        log.info(\"Successfully downloaded : {}\", path);\n        return true;\n      } else{\n        log.info(\"Unable to download file : {}\", path);\n        return false;\n      }\n\n    } else {\n      f.fetchFileFromNodeAndPersist(from);\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34ccc070314404a909b9af301ea9e64b211f0646":["d1a6448412ce640b28861f4c00f899484a9adac1"],"d1a6448412ce640b28861f4c00f899484a9adac1":["849dbf8570155b8e5fd03d8c2274a0a60491051c"],"8476949555f799dff381770c01cfad051a264487":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["8476949555f799dff381770c01cfad051a264487"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["34ccc070314404a909b9af301ea9e64b211f0646"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849dbf8570155b8e5fd03d8c2274a0a60491051c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8476949555f799dff381770c01cfad051a264487","b0b597c65628ca9e73913a07e81691f8229bae35"],"34ccc070314404a909b9af301ea9e64b211f0646":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1a6448412ce640b28861f4c00f899484a9adac1":["34ccc070314404a909b9af301ea9e64b211f0646"],"8476949555f799dff381770c01cfad051a264487":["849dbf8570155b8e5fd03d8c2274a0a60491051c"],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["d1a6448412ce640b28861f4c00f899484a9adac1","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}