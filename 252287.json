{"path":"lucene/core/src/test/org/apache/lucene/search/TestBooleanQueryVisitSubscorers.MyCollector#fillLeaves(Scorable,Set[Scorer]).mjava","commits":[{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanQueryVisitSubscorers.MyCollector#fillLeaves(Scorable,Set[Scorer]).mjava","pathOld":"/dev/null","sourceNew":"    private void fillLeaves(Scorable scorer, Set<Scorer> set) throws IOException {\n      if (scorer instanceof TermScorer) {\n        set.add((Scorer)scorer);\n      } else {\n        for (Scorable.ChildScorable child : scorer.getChildren()) {\n          fillLeaves(child.child, set);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}