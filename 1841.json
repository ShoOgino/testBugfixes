{"path":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","commits":[{"id":"80931fa1f3b04650bde7b20e61b02063a7093ced","date":1333130683,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reads the next char from the input stream.\n   * @return the next char or END_OF_STREAM if end of stream has been reached.\n   */\n  public int read() throws IOException {\n    // initalize the lookahead\n    if (lookaheadChar == UNDEFINED) {\n      lookaheadChar = super.read();\n    }\n    lastChar = lookaheadChar;\n    if (super.ready()) {\n      lookaheadChar = super.read();\n    } else {\n      lookaheadChar = UNDEFINED;\n    }\n    if (lastChar == '\\n') {\n      lineCounter++;\n    } \n    return lastChar;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","sourceNew":"  /**\n   * Reads the next char from the input stream.\n   * @return the next char or END_OF_STREAM if end of stream has been reached.\n   */\n  @Override\n  public int read() throws IOException {\n    // initalize the lookahead\n    if (lookaheadChar == UNDEFINED) {\n      lookaheadChar = super.read();\n    }\n    lastChar = lookaheadChar;\n    if (super.ready()) {\n      lookaheadChar = super.read();\n    } else {\n      lookaheadChar = UNDEFINED;\n    }\n    if (lastChar == '\\n') {\n      lineCounter++;\n    } \n    return lastChar;\n  }\n\n","sourceOld":"  /**\n   * Reads the next char from the input stream.\n   * @return the next char or END_OF_STREAM if end of stream has been reached.\n   */\n  public int read() throws IOException {\n    // initalize the lookahead\n    if (lookaheadChar == UNDEFINED) {\n      lookaheadChar = super.read();\n    }\n    lastChar = lookaheadChar;\n    if (super.ready()) {\n      lookaheadChar = super.read();\n    } else {\n      lookaheadChar = UNDEFINED;\n    }\n    if (lastChar == '\\n') {\n      lineCounter++;\n    } \n    return lastChar;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","sourceNew":"  /**\n   * Reads the next char from the input stream.\n   * @return the next char or END_OF_STREAM if end of stream has been reached.\n   */\n  @Override\n  public int read() throws IOException {\n    // initalize the lookahead\n    if (lookaheadChar == UNDEFINED) {\n      lookaheadChar = super.read();\n    }\n    lastChar = lookaheadChar;\n    if (super.ready()) {\n      lookaheadChar = super.read();\n    } else {\n      lookaheadChar = UNDEFINED;\n    }\n    if (lastChar == '\\n') {\n      lineCounter++;\n    } \n    return lastChar;\n  }\n\n","sourceOld":"  /**\n   * Reads the next char from the input stream.\n   * @return the next char or END_OF_STREAM if end of stream has been reached.\n   */\n  public int read() throws IOException {\n    // initalize the lookahead\n    if (lookaheadChar == UNDEFINED) {\n      lookaheadChar = super.read();\n    }\n    lastChar = lookaheadChar;\n    if (super.ready()) {\n      lookaheadChar = super.read();\n    } else {\n      lookaheadChar = UNDEFINED;\n    }\n    if (lastChar == '\\n') {\n      lineCounter++;\n    } \n    return lastChar;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9","date":1419431639,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/internal/csv/ExtendedBufferedReader#read().mjava","sourceNew":"  /**\n   * Reads the next char from the input stream.\n   * @return the next char or END_OF_STREAM if end of stream has been reached.\n   */\n  @Override\n  public int read() throws IOException {\n    // initialize the lookahead\n    if (lookaheadChar == UNDEFINED) {\n      lookaheadChar = super.read();\n    }\n    lastChar = lookaheadChar;\n    if (super.ready()) {\n      lookaheadChar = super.read();\n    } else {\n      lookaheadChar = UNDEFINED;\n    }\n    if (lastChar == '\\n') {\n      lineCounter++;\n    } \n    return lastChar;\n  }\n\n","sourceOld":"  /**\n   * Reads the next char from the input stream.\n   * @return the next char or END_OF_STREAM if end of stream has been reached.\n   */\n  @Override\n  public int read() throws IOException {\n    // initalize the lookahead\n    if (lookaheadChar == UNDEFINED) {\n      lookaheadChar = super.read();\n    }\n    lastChar = lookaheadChar;\n    if (super.ready()) {\n      lookaheadChar = super.read();\n    } else {\n      lookaheadChar = UNDEFINED;\n    }\n    if (lastChar == '\\n') {\n      lineCounter++;\n    } \n    return lastChar;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["80931fa1f3b04650bde7b20e61b02063a7093ced","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80931fa1f3b04650bde7b20e61b02063a7093ced":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"80931fa1f3b04650bde7b20e61b02063a7093ced":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}