{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#getReverseParamSubstitute(String).mjava","commits":[{"id":"4d3fc88a06a44fc3112186e9be4562b36713955d","date":1497587751,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#getReverseParamSubstitute(String).mjava","pathOld":"/dev/null","sourceNew":"    public Object getReverseParamSubstitute(String param) {\n      String s = paramstoAttr.containsKey(param) ? paramstoAttr.get(param) : param;\n\n      if (prefixSubstitutes != null) {\n        for (Map.Entry<String, String> e : prefixSubstitutes.entrySet()) {\n          if(param.startsWith(e.getValue())){\n            return new Pair<>(e.getKey().substring(0, e.getKey().length() - 1), param.substring(e.getValue().length()));\n          }\n        }\n      }\n      return s;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#getReverseParamSubstitute(String).mjava","pathOld":"/dev/null","sourceNew":"    public Object getReverseParamSubstitute(String param) {\n      String s = paramstoAttr.containsKey(param) ? paramstoAttr.get(param) : param;\n\n      if (prefixSubstitutes != null) {\n        for (Map.Entry<String, String> e : prefixSubstitutes.entrySet()) {\n          if(param.startsWith(e.getValue())){\n            return new Pair<>(e.getKey().substring(0, e.getKey().length() - 1), param.substring(e.getValue().length()));\n          }\n        }\n      }\n      return s;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#getReverseParamSubstitute(String).mjava","pathOld":"/dev/null","sourceNew":"    public Object getReverseParamSubstitute(String param) {\n      String s = paramstoAttr.containsKey(param) ? paramstoAttr.get(param) : param;\n\n      if (prefixSubstitutes != null) {\n        for (Map.Entry<String, String> e : prefixSubstitutes.entrySet()) {\n          if(param.startsWith(e.getValue())){\n            return new Pair<>(e.getKey().substring(0, e.getKey().length() - 1), param.substring(e.getValue().length()));\n          }\n        }\n      }\n      return s;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26de7f978abe868807e55377d3e5837c0a7883d3","date":1516908224,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#getReverseParamSubstitute(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.Meta#getReverseParamSubstitute(String).mjava","sourceNew":"    // TODO document!\n    public Object getReverseParamSubstitute(String param) {//input is v1\n      for (Map.Entry<String, String> e : prefixParamsToAttrs.entrySet()) {\n        final String prefixV1 = e.getKey();\n        final String prefixV2 = e.getValue();\n        if (param.startsWith(prefixV1)) {\n          return new Pair<>(prefixV2.substring(0, prefixV2.length() - 1), param.substring(prefixV1.length()));\n        }\n      }\n      return paramsToAttrs.getOrDefault(param, param);\n    }\n\n","sourceOld":"    public Object getReverseParamSubstitute(String param) {\n      String s = paramstoAttr.containsKey(param) ? paramstoAttr.get(param) : param;\n\n      if (prefixSubstitutes != null) {\n        for (Map.Entry<String, String> e : prefixSubstitutes.entrySet()) {\n          if(param.startsWith(e.getValue())){\n            return new Pair<>(e.getKey().substring(0, e.getKey().length() - 1), param.substring(e.getValue().length()));\n          }\n        }\n      }\n      return s;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3fc88a06a44fc3112186e9be4562b36713955d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"26de7f978abe868807e55377d3e5837c0a7883d3":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4d3fc88a06a44fc3112186e9be4562b36713955d"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4d3fc88a06a44fc3112186e9be4562b36713955d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["26de7f978abe868807e55377d3e5837c0a7883d3"]},"commit2Childs":{"4d3fc88a06a44fc3112186e9be4562b36713955d":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d3fc88a06a44fc3112186e9be4562b36713955d","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"26de7f978abe868807e55377d3e5837c0a7883d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["26de7f978abe868807e55377d3e5837c0a7883d3"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}