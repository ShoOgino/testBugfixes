{"path":"lucene/core/src/java/org/apache/lucene/codecs/FieldsConsumer#merge(MergeState,NormsProducer).mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/FieldsConsumer#merge(MergeState,NormsProducer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/FieldsConsumer#merge(MergeState).mjava","sourceNew":"  /** Merges in the fields from the readers in \n   *  <code>mergeState</code>. The default implementation skips\n   *  and maps around deleted documents, and calls {@link #write(Fields,NormsProducer)}.\n   *  Implementations can override this method for more sophisticated\n   *  merging (bulk-byte copying, etc). */\n  public void merge(MergeState mergeState, NormsProducer norms) throws IOException {\n    final List<Fields> fields = new ArrayList<>();\n    final List<ReaderSlice> slices = new ArrayList<>();\n\n    int docBase = 0;\n\n    for(int readerIndex=0;readerIndex<mergeState.fieldsProducers.length;readerIndex++) {\n      final FieldsProducer f = mergeState.fieldsProducers[readerIndex];\n\n      final int maxDoc = mergeState.maxDocs[readerIndex];\n      f.checkIntegrity();\n      slices.add(new ReaderSlice(docBase, maxDoc, readerIndex));\n      fields.add(f);\n      docBase += maxDoc;\n    }\n\n    Fields mergedFields = new MappedMultiFields(mergeState, \n                                                new MultiFields(fields.toArray(Fields.EMPTY_ARRAY),\n                                                                slices.toArray(ReaderSlice.EMPTY_ARRAY)));\n    write(mergedFields, norms);\n  }\n\n","sourceOld":"  /** Merges in the fields from the readers in \n   *  <code>mergeState</code>. The default implementation skips\n   *  and maps around deleted documents, and calls {@link #write(Fields)}.\n   *  Implementations can override this method for more sophisticated\n   *  merging (bulk-byte copying, etc). */\n  public void merge(MergeState mergeState) throws IOException {\n    final List<Fields> fields = new ArrayList<>();\n    final List<ReaderSlice> slices = new ArrayList<>();\n\n    int docBase = 0;\n\n    for(int readerIndex=0;readerIndex<mergeState.fieldsProducers.length;readerIndex++) {\n      final FieldsProducer f = mergeState.fieldsProducers[readerIndex];\n\n      final int maxDoc = mergeState.maxDocs[readerIndex];\n      f.checkIntegrity();\n      slices.add(new ReaderSlice(docBase, maxDoc, readerIndex));\n      fields.add(f);\n      docBase += maxDoc;\n    }\n\n    Fields mergedFields = new MappedMultiFields(mergeState, \n                                                new MultiFields(fields.toArray(Fields.EMPTY_ARRAY),\n                                                                slices.toArray(ReaderSlice.EMPTY_ARRAY)));\n    write(mergedFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["622a708571e534680618b3c5e0c28ac539a47776"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}