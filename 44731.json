{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","commits":[{"id":"901ca90e401ba1870fce0630240b1aacdd386e49","date":1265972851,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","pathOld":"/dev/null","sourceNew":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","sourceNew":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","sourceNew":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","sourceNew":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","sourceNew":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testDeleteUnusedFiles().mjava","sourceNew":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testDeleteUnusedFiles() throws Exception {\n\n    for(int iter=0;iter<2;iter++) {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"go\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n      IndexReader r;\n      if (iter == 0) {\n        // use NRT\n        r = w.getReader();\n      } else {\n        // don't use NRT\n        w.commit();\n        r = IndexReader.open(dir);\n      }\n\n      List<String> files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      w.addDocument(doc);\n      w.optimize();\n      if (iter == 1) {\n        w.commit();\n      }\n      IndexReader r2 = r.reopen();\n      assertTrue(r != r2);\n      files = Arrays.asList(dir.listAll());\n      assertTrue(files.contains(\"_0.cfs\"));\n      // optimize created this\n      assertTrue(files.contains(\"_2.cfs\"));\n      w.deleteUnusedFiles();\n\n      files = Arrays.asList(dir.listAll());\n      // r still holds this file open\n      assertTrue(files.contains(\"_0.cfs\"));\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      r.close();\n      if (iter == 0) {\n        // on closing NRT reader, it calls writer.deleteUnusedFiles\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      } else {\n        // now writer can remove it\n        w.deleteUnusedFiles();\n        files = Arrays.asList(dir.listAll());\n        assertFalse(files.contains(\"_0.cfs\"));\n      }\n      assertTrue(files.contains(\"_2.cfs\"));\n\n      w.close();\n      r2.close();\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"901ca90e401ba1870fce0630240b1aacdd386e49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["901ca90e401ba1870fce0630240b1aacdd386e49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"901ca90e401ba1870fce0630240b1aacdd386e49":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["901ca90e401ba1870fce0630240b1aacdd386e49"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}