{"path":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseErrorStrict().mjava","commits":[{"id":"539040a2eeaeb2ec1252c35b94773ddf32175f5a","date":1269681454,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseErrorStrict().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeFilterBuilderTestCase#testGetFilterHandleNumericParseErrorStrict().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(true);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\ttry {\n\t\t\tfilterBuilder.getFilter(doc.getDocumentElement());\n\t\t} catch (ParserException e) {\n\t\t\treturn;\n\t\t}\n\t\tfail(\"Expected to throw \" + ParserException.class);\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(true);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\ttry {\n\t\t\tfilterBuilder.getFilter(doc.getDocumentElement());\n\t\t} catch (ParserException e) {\n\t\t\treturn;\n\t\t}\n\t\tfail(\"Expected to throw \" + ParserException.class);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseErrorStrict().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseErrorStrict().mjava","sourceNew":"  public void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(true);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    try {\n      filterBuilder.getFilter(doc.getDocumentElement());\n    } catch (ParserException e) {\n      return;\n    }\n    fail(\"Expected to throw \" + ParserException.class);\n  }\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(true);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\ttry {\n\t\t\tfilterBuilder.getFilter(doc.getDocumentElement());\n\t\t} catch (ParserException e) {\n\t\t\treturn;\n\t\t}\n\t\tfail(\"Expected to throw \" + ParserException.class);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseErrorStrict().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseErrorStrict().mjava","sourceNew":"  public void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(true);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    try {\n      filterBuilder.getFilter(doc.getDocumentElement());\n    } catch (ParserException e) {\n      return;\n    }\n    fail(\"Expected to throw \" + ParserException.class);\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(true);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    try {\n      filterBuilder.getFilter(doc.getDocumentElement());\n    } catch (ParserException e) {\n      return;\n    }\n    fail(\"Expected to throw \" + ParserException.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}