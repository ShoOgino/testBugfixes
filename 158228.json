{"path":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","commits":[{"id":"d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6","date":1184719927,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    SpanFilterResult result = null;\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    synchronized (cache) {  // check cache\n      result = (SpanFilterResult) cache.get(reader);\n      if (result == null) {\n        result = filter.bitSpans(reader);\n        cache.put(reader, result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    SpanFilterResult result = null;\n    if (cache == null) {\n      cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n    }\n\n    synchronized (cache) {  // check cache\n      result = cache.get(reader);\n      if (result == null) {\n        result = filter.bitSpans(reader);\n        cache.put(reader, result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    SpanFilterResult result = null;\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    synchronized (cache) {  // check cache\n      result = (SpanFilterResult) cache.get(reader);\n      if (result == null) {\n        result = filter.bitSpans(reader);\n        cache.put(reader, result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c972cc1d730c09d9b1648fc41aad39afe79e4c5","date":1257716780,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    lock.lock();\n    try {\n      if (cache == null) {\n        cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n      }\n      final SpanFilterResult cached = cache.get(reader);\n      if (cached != null) return cached;\n    } finally {\n      lock.unlock();\n    }\n    \n    final SpanFilterResult result = filter.bitSpans(reader);\n    lock.lock();\n    try {\n      cache.put(reader, result);\n    } finally {\n      lock.unlock();\n    }\n    \n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    SpanFilterResult result = null;\n    if (cache == null) {\n      cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n    }\n\n    synchronized (cache) {  // check cache\n      result = cache.get(reader);\n      if (result == null) {\n        result = filter.bitSpans(reader);\n        cache.put(reader, result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    lock.lock();\n    try {\n      if (cache == null) {\n        cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n      }\n      final SpanFilterResult cached = cache.get(reader);\n      if (cached != null) return cached;\n    } finally {\n      lock.unlock();\n    }\n    \n    final SpanFilterResult result = filter.bitSpans(reader);\n    lock.lock();\n    try {\n      cache.put(reader, result);\n    } finally {\n      lock.unlock();\n    }\n    \n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    lock.lock();\n    try {\n      if (cache == null) {\n        cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n      }\n      final SpanFilterResult cached = cache.get(reader);\n      if (cached != null) return cached;\n    } finally {\n      lock.unlock();\n    }\n    \n    final SpanFilterResult result = filter.bitSpans(reader);\n    lock.lock();\n    try {\n      cache.put(reader, result);\n    } finally {\n      lock.unlock();\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9c972cc1d730c09d9b1648fc41aad39afe79e4c5":["ef82ff03e4016c705811b2658e81471a645c0e49"],"ef82ff03e4016c705811b2658e81471a645c0e49":["d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6"],"d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9c972cc1d730c09d9b1648fc41aad39afe79e4c5"]},"commit2Childs":{"9c972cc1d730c09d9b1648fc41aad39afe79e4c5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ef82ff03e4016c705811b2658e81471a645c0e49":["9c972cc1d730c09d9b1648fc41aad39afe79e4c5"],"d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6":["ef82ff03e4016c705811b2658e81471a645c0e49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}