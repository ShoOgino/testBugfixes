{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testSelectStream().mjava","commits":[{"id":"02f899b620383b2af498238e3c714f5a6b1de2df","date":1452218125,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testSelectStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSelectStream() throws Exception {\n\n    SelectStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new SelectStream(StreamExpressionParser.parse(\"select(\\\"a_s as fieldA\\\", search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\"))\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"select(search(collection1,\"));\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"fl=\\\"id,a_s,a_i,a_f\\\"\"));\n    assertTrue(expressionString.contains(\"sort=\\\"a_f asc, a_i asc\\\"\"));\n    assertTrue(expressionString.contains(\"a_s as fieldA\"));\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testSelectStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testSelectStream().mjava","sourceNew":"  @Test\n  public void testSelectStream() throws Exception {\n    String expressionString;\n    \n    // Basic test\n    try (SelectStream stream = new SelectStream(StreamExpressionParser.parse(\"select(\\\"a_s as fieldA\\\", search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\"))\"), factory)) {\n      expressionString = stream.toExpression(factory).toString();\n      assertTrue(expressionString.contains(\"select(search(collection1,\"));\n      assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n      assertTrue(expressionString.contains(\"fl=\\\"id,a_s,a_i,a_f\\\"\"));\n      assertTrue(expressionString.contains(\"sort=\\\"a_f asc, a_i asc\\\"\"));\n      assertTrue(expressionString.contains(\"a_s as fieldA\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSelectStream() throws Exception {\n\n    SelectStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new SelectStream(StreamExpressionParser.parse(\"select(\\\"a_s as fieldA\\\", search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_i asc\\\"))\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"select(search(collection1,\"));\n    assertTrue(expressionString.contains(\"q=\\\"*:*\\\"\"));\n    assertTrue(expressionString.contains(\"fl=\\\"id,a_s,a_i,a_f\\\"\"));\n    assertTrue(expressionString.contains(\"sort=\\\"a_f asc, a_i asc\\\"\"));\n    assertTrue(expressionString.contains(\"a_s as fieldA\"));\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["02f899b620383b2af498238e3c714f5a6b1de2df"],"02f899b620383b2af498238e3c714f5a6b1de2df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02f899b620383b2af498238e3c714f5a6b1de2df"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"02f899b620383b2af498238e3c714f5a6b1de2df":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}