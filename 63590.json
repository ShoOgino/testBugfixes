{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#init(String,String,SolrParams).mjava","commits":[{"id":"37ba6c2d18fe05b92cb264c3d67e4cae76f75136","date":1495126259,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#init(String,String,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  protected void init(String collectionName, String zkHost, SolrParams params) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = new ModifiableSolrParams(params);\n\n    // If the comparator is null then it was not explicitly set so we will create one using the sort parameter\n    // of the query. While doing this we will also take into account any aliases such that if we are sorting on\n    // fieldA but fieldA is aliased to alias.fieldA then the comparater will be against alias.fieldA.\n\n    if (params.get(\"stmt\") == null) {\n      throw new IOException(\"stmt param expected for search function\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb7aea20cb3c5f43103724bd4ca1159e6a4ae208","date":1495127006,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#init(String,String,SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#init(String,String,SolrParams).mjava","sourceNew":"  protected void init(String collectionName, String zkHost, SolrParams params) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = new ModifiableSolrParams(params);\n\n    if (params.get(\"stmt\") == null) {\n      throw new IOException(\"stmt param expected for sql function\");\n    }\n  }\n\n","sourceOld":"  protected void init(String collectionName, String zkHost, SolrParams params) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = new ModifiableSolrParams(params);\n\n    // If the comparator is null then it was not explicitly set so we will create one using the sort parameter\n    // of the query. While doing this we will also take into account any aliases such that if we are sorting on\n    // fieldA but fieldA is aliased to alias.fieldA then the comparater will be against alias.fieldA.\n\n    if (params.get(\"stmt\") == null) {\n      throw new IOException(\"stmt param expected for search function\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#init(String,String,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  protected void init(String collectionName, String zkHost, SolrParams params) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = new ModifiableSolrParams(params);\n\n    if (params.get(\"stmt\") == null) {\n      throw new IOException(\"stmt param expected for sql function\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cb7aea20cb3c5f43103724bd4ca1159e6a4ae208"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37ba6c2d18fe05b92cb264c3d67e4cae76f75136":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb7aea20cb3c5f43103724bd4ca1159e6a4ae208"],"cb7aea20cb3c5f43103724bd4ca1159e6a4ae208":["37ba6c2d18fe05b92cb264c3d67e4cae76f75136"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","37ba6c2d18fe05b92cb264c3d67e4cae76f75136"],"37ba6c2d18fe05b92cb264c3d67e4cae76f75136":["cb7aea20cb3c5f43103724bd4ca1159e6a4ae208"],"cb7aea20cb3c5f43103724bd4ca1159e6a4ae208":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}