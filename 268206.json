{"path":"src/java/org/apache/lucene/search/MultiTermQuery#setConstantScoreRewrite(boolean).mjava","commits":[{"id":"6f7a11eba51d213f09b96054111cf56a1e5796a3","date":1226364000,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiTermQuery#setConstantScoreRewrite(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void setConstantScoreRewrite(boolean constantScoreRewrite) {\n    this.constantScoreRewrite = constantScoreRewrite;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"753f98c9149281b3259f1c23d70730209896de02","date":1242845215,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiTermQuery#setConstantScoreRewrite(boolean).mjava","pathOld":"src/java/org/apache/lucene/search/MultiTermQuery#setConstantScoreRewrite(boolean).mjava","sourceNew":"  /**\n   * This method determines what method is used during searching:\n   * <ul>\n   *\n   *   <li> When constantScoreRewrite is <code>false</code>\n   *   (the default), the query is rewritten to {@link\n   *   BooleanQuery} with one clause for each term in the\n   *   range.  If the the number of terms in the range\n   *   exceeds {@link BooleanQuery#getMaxClauseCount()}, a\n   *   {@link BooleanQuery.TooManyClauses} exception will be\n   *   thrown during searching.  This mode may also give\n   *   worse performance when the number of terms is large,\n   *   and/or the number of matching documents is large.\n   *\n   *   <li> When constantScoreRewrite is <code>true</code>,\n   *   the query is first rewritten to a filter.  Matching\n   *   documents will identical scores, equal to this\n   *   query's boost.\n   * </ul>\n   */\n  public void setConstantScoreRewrite(boolean constantScoreRewrite) {\n    this.constantScoreRewrite = constantScoreRewrite;\n  }\n\n","sourceOld":"  public void setConstantScoreRewrite(boolean constantScoreRewrite) {\n    this.constantScoreRewrite = constantScoreRewrite;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b20609f6fb2cd074bd08115b0c3280b9646af7c","date":1248480213,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/MultiTermQuery#setConstantScoreRewrite(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * This method determines what method is used during searching:\n   * <ul>\n   *\n   *   <li> When constantScoreRewrite is <code>false</code>\n   *   (the default), the query is rewritten to {@link\n   *   BooleanQuery} with one clause for each term in the\n   *   range.  If the the number of terms in the range\n   *   exceeds {@link BooleanQuery#getMaxClauseCount()}, a\n   *   {@link BooleanQuery.TooManyClauses} exception will be\n   *   thrown during searching.  This mode may also give\n   *   worse performance when the number of terms is large,\n   *   and/or the number of matching documents is large.\n   *\n   *   <li> When constantScoreRewrite is <code>true</code>,\n   *   the query is first rewritten to a filter.  Matching\n   *   documents will identical scores, equal to this\n   *   query's boost.\n   * </ul>\n   */\n  public void setConstantScoreRewrite(boolean constantScoreRewrite) {\n    this.constantScoreRewrite = constantScoreRewrite;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b20609f6fb2cd074bd08115b0c3280b9646af7c":["753f98c9149281b3259f1c23d70730209896de02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b20609f6fb2cd074bd08115b0c3280b9646af7c"],"753f98c9149281b3259f1c23d70730209896de02":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"8b20609f6fb2cd074bd08115b0c3280b9646af7c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"753f98c9149281b3259f1c23d70730209896de02":["8b20609f6fb2cd074bd08115b0c3280b9646af7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["753f98c9149281b3259f1c23d70730209896de02"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}