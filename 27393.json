{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap#analyze(String).mjava","commits":[{"id":"4c9661df01b81c277277a01afbca7851557a2148","date":1133588656,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap#analyze(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Analyzes/transforms the given word on input stream loading. This default implementation simply\n\t * lowercases the word. Override this method with a custom stemming\n\t * algorithm or similar, if desired.\n\t * \n\t * @param word\n\t *            the word to analyze\n\t * @return the same word, or a different word (or null to indicate that the\n\t *         word should be ignored)\n\t */\n\tprotected String analyze(String word) {\n\t\treturn word.toLowerCase();\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f68e24227d5556d33ee6d586fd9010cd9ff8bec","date":1150091176,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap#analyze(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap#analyze(String).mjava","sourceNew":"  /**\n   * Analyzes/transforms the given word on input stream loading. This default implementation simply\n   * lowercases the word. Override this method with a custom stemming\n   * algorithm or similar, if desired.\n   * \n   * @param word\n   *            the word to analyze\n   * @return the same word, or a different word (or null to indicate that the\n   *         word should be ignored)\n   */\n  protected String analyze(String word) {\n    return word.toLowerCase();\n  }\n\n","sourceOld":"\t/**\n\t * Analyzes/transforms the given word on input stream loading. This default implementation simply\n\t * lowercases the word. Override this method with a custom stemming\n\t * algorithm or similar, if desired.\n\t * \n\t * @param word\n\t *            the word to analyze\n\t * @return the same word, or a different word (or null to indicate that the\n\t *         word should be ignored)\n\t */\n\tprotected String analyze(String word) {\n\t\treturn word.toLowerCase();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d68e5c46e6a5ebdf4dafec4a123344092b915cc0","date":1256752193,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymMap#analyze(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap#analyze(String).mjava","sourceNew":"  /**\n   * Analyzes/transforms the given word on input stream loading. This default implementation simply\n   * lowercases the word. Override this method with a custom stemming\n   * algorithm or similar, if desired.\n   * \n   * @param word\n   *            the word to analyze\n   * @return the same word, or a different word (or null to indicate that the\n   *         word should be ignored)\n   */\n  protected String analyze(String word) {\n    return word.toLowerCase();\n  }\n\n","sourceOld":"  /**\n   * Analyzes/transforms the given word on input stream loading. This default implementation simply\n   * lowercases the word. Override this method with a custom stemming\n   * algorithm or similar, if desired.\n   * \n   * @param word\n   *            the word to analyze\n   * @return the same word, or a different word (or null to indicate that the\n   *         word should be ignored)\n   */\n  protected String analyze(String word) {\n    return word.toLowerCase();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c9661df01b81c277277a01afbca7851557a2148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["4c9661df01b81c277277a01afbca7851557a2148"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"]},"commit2Childs":{"4c9661df01b81c277277a01afbca7851557a2148":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c9661df01b81c277277a01afbca7851557a2148"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}