{"path":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon404or503(HttpSolrServer).mjava","commits":[{"id":"02c4407b4b9457dc4320063077c630e4c70f49d6","date":1344098895,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon404or503(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon404(HttpSolrServer).mjava","sourceNew":"  private void waitForNon404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n    printLayout();\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":"  private void waitForNon404(HttpSolrServer collectionClient)\n      throws Exception {\n    \n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        // How do I get the response code!?\n        if (!e.getMessage().contains(\"(404)\")) {\n          throw e;\n        }\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n    printLayout();\n    fail(\"Could not find the new collection - 404 : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon404or503(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon404(HttpSolrServer).mjava","sourceNew":"  private void waitForNon404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n    printLayout();\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":"  private void waitForNon404(HttpSolrServer collectionClient)\n      throws Exception {\n    \n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        // How do I get the response code!?\n        if (!e.getMessage().contains(\"(404)\")) {\n          throw e;\n        }\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n    printLayout();\n    fail(\"Could not find the new collection - 404 : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon404or503(HttpSolrServer).mjava","pathOld":"/dev/null","sourceNew":"  private void waitForNon404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n    printLayout();\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e19067e820b148e8dc0b240da4f2771cf7b68252","date":1347730768,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon404or503(HttpSolrServer).mjava","sourceNew":"  private void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n    printLayout();\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":"  private void waitForNon404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n    printLayout();\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02c4407b4b9457dc4320063077c630e4c70f49d6"],"e19067e820b148e8dc0b240da4f2771cf7b68252":["02c4407b4b9457dc4320063077c630e4c70f49d6"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02c4407b4b9457dc4320063077c630e4c70f49d6"],"02c4407b4b9457dc4320063077c630e4c70f49d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e19067e820b148e8dc0b240da4f2771cf7b68252"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","02c4407b4b9457dc4320063077c630e4c70f49d6"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"e19067e820b148e8dc0b240da4f2771cf7b68252":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"02c4407b4b9457dc4320063077c630e4c70f49d6":["d6f074e73200c07d54f242d3880a8da5a35ff97b","e19067e820b148e8dc0b240da4f2771cf7b68252","8fd5be977c105554c6a7b68afcdbc511439723ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}