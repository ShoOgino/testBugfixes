{"path":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    withOriginal = getBoolean(\"withOriginal\", true);\n    maxPosAsterisk = getInt(\"maxPosAsterisk\", 2);\n    maxPosQuestion = getInt(\"maxPosQuestion\", 1);\n    minTrailing = getInt(\"minTrailing\", 2);\n    maxFractionAsterisk = getFloat(\"maxFractionAsterisk\", 0.0f);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    withOriginal = getBoolean(\"withOriginal\", true);\n    maxPosAsterisk = getInt(\"maxPosAsterisk\", 2);\n    maxPosQuestion = getInt(\"maxPosQuestion\", 1);\n    minTrailing = getInt(\"minTrailing\", 2);\n    maxFractionAsterisk = getFloat(\"maxFractionAsterisk\", 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    withOriginal = getBoolean(\"withOriginal\", true);\n    maxPosAsterisk = getInt(\"maxPosAsterisk\", 2);\n    maxPosQuestion = getInt(\"maxPosQuestion\", 1);\n    minTrailing = getInt(\"minTrailing\", 2);\n    maxFractionAsterisk = getFloat(\"maxFractionAsterisk\", 0.0f);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    withOriginal = getBoolean(\"withOriginal\", true);\n    maxPosAsterisk = getInt(\"maxPosAsterisk\", 2);\n    maxPosQuestion = getInt(\"maxPosQuestion\", 1);\n    minTrailing = getInt(\"minTrailing\", 2);\n    maxFractionAsterisk = getFloat(\"maxFractionAsterisk\", 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    withOriginal = getBoolean(\"withOriginal\", true);\n    maxPosAsterisk = getInt(\"maxPosAsterisk\", 2);\n    maxPosQuestion = getInt(\"maxPosQuestion\", 1);\n    minTrailing = getInt(\"minTrailing\", 2);\n    maxFractionAsterisk = getFloat(\"maxFractionAsterisk\", 0.0f);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    withOriginal = getBoolean(\"withOriginal\", true);\n    maxPosAsterisk = getInt(\"maxPosAsterisk\", 2);\n    maxPosQuestion = getInt(\"maxPosQuestion\", 1);\n    minTrailing = getInt(\"minTrailing\", 2);\n    maxFractionAsterisk = getFloat(\"maxFractionAsterisk\", 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory#init(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    withOriginal = getBoolean(\"withOriginal\", true);\n    maxPosAsterisk = getInt(\"maxPosAsterisk\", 2);\n    maxPosQuestion = getInt(\"maxPosQuestion\", 1);\n    minTrailing = getInt(\"minTrailing\", 2);\n    maxFractionAsterisk = getFloat(\"maxFractionAsterisk\", 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}