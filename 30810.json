{"path":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the length of a file in the directory. */\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = (FileEntry) entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09bd3218e260f27c9a9efa24832b7db41b0490a8","date":1093476857,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","sourceNew":"    /** Returns the length of a file in the directory.\n     * @throws IOException if the file does not exist */\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = (FileEntry) entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","sourceOld":"    /** Returns the length of a file in the directory. */\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = (FileEntry) entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","sourceNew":"    /** Returns the length of a file in the directory.\n     * @throws IOException if the file does not exist */\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","sourceOld":"    /** Returns the length of a file in the directory.\n     * @throws IOException if the file does not exist */\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = (FileEntry) entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","sourceNew":"    /** Returns the length of a file in the directory.\n     * @throws IOException if the file does not exist */\n    @Override\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","sourceOld":"    /** Returns the length of a file in the directory.\n     * @throws IOException if the file does not exist */\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#fileLength(String).mjava","sourceNew":"    /** Returns the length of a file in the directory.\n     * @throws IOException if the file does not exist */\n    @Override\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","sourceOld":"    /** Returns the length of a file in the directory.\n     * @throws IOException if the file does not exist */\n    @Override\n    public long fileLength(String name)\n    throws IOException\n    {\n        FileEntry e = entries.get(name);\n        if (e == null)\n            throw new IOException(\"File \" + name + \" does not exist\");\n        return e.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["09bd3218e260f27c9a9efa24832b7db41b0490a8"],"8a9e385641d717e641408d8fbbc62be8fc766357":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09bd3218e260f27c9a9efa24832b7db41b0490a8":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["8a9e385641d717e641408d8fbbc62be8fc766357"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["09bd3218e260f27c9a9efa24832b7db41b0490a8"],"09bd3218e260f27c9a9efa24832b7db41b0490a8":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}