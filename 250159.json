{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      if (reading != null) {\n        if (useRomaji) {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        } else {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      if (reading != null) {\n        if (useRomaji) {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        } else {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7ef4ab6a073abae174e7995504ac5e3dc402cb6","date":1350790289,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      \n      if (useRomaji) {\n        if (reading == null) {\n          // if its an OOV term, just try the term text\n          buffer.setLength(0);\n          ToStringUtil.getRomanization(buffer, termAttr);\n          termAttr.setEmpty().append(buffer);\n        } else {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        }\n      } else {\n        // just replace the term text with the reading, if it exists\n        if (reading != null) {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      if (reading != null) {\n        if (useRomaji) {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        } else {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      \n      if (useRomaji) {\n        if (reading == null) {\n          // if its an OOV term, just try the term text\n          buffer.setLength(0);\n          ToStringUtil.getRomanization(buffer, termAttr);\n          termAttr.setEmpty().append(buffer);\n        } else {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        }\n      } else {\n        // just replace the term text with the reading, if it exists\n        if (reading != null) {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      if (reading != null) {\n        if (useRomaji) {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        } else {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseReadingFormFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      \n      if (useRomaji) {\n        if (reading == null) {\n          // if it's an OOV term, just try the term text\n          buffer.setLength(0);\n          ToStringUtil.getRomanization(buffer, termAttr);\n          termAttr.setEmpty().append(buffer);\n        } else {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        }\n      } else {\n        // just replace the term text with the reading, if it exists\n        if (reading != null) {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      String reading = readingAttr.getReading();\n      \n      if (useRomaji) {\n        if (reading == null) {\n          // if its an OOV term, just try the term text\n          buffer.setLength(0);\n          ToStringUtil.getRomanization(buffer, termAttr);\n          termAttr.setEmpty().append(buffer);\n        } else {\n          ToStringUtil.getRomanization(termAttr.setEmpty(), reading);\n        }\n      } else {\n        // just replace the term text with the reading, if it exists\n        if (reading != null) {\n          termAttr.setEmpty().append(reading);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["e7ef4ab6a073abae174e7995504ac5e3dc402cb6"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"62e52115b56781006682fd92c6938efaf174304d":["b89678825b68eccaf09e6ab71675fc0b0af1e099","e7ef4ab6a073abae174e7995504ac5e3dc402cb6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7ef4ab6a073abae174e7995504ac5e3dc402cb6":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["62e52115b56781006682fd92c6938efaf174304d","e7ef4ab6a073abae174e7995504ac5e3dc402cb6"],"62e52115b56781006682fd92c6938efaf174304d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"e7ef4ab6a073abae174e7995504ac5e3dc402cb6":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","62e52115b56781006682fd92c6938efaf174304d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e52115b56781006682fd92c6938efaf174304d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}