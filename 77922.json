{"path":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQueryImpl.GeoPointRadiusTermsEnum#accept(BytesRef).mjava","commits":[{"id":"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d","date":1437181221,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQueryImpl.GeoPointRadiusTermsEnum#accept(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * The two-phase query approach. The parent\n     * {@link org.apache.lucene.search.GeoPointTermsEnum#accept} method is called to match\n     * encoded terms that fall within the bounding box of the polygon. Those documents that pass the initial\n     * bounding box filter are then compared to the provided polygon using the\n     * {@link org.apache.lucene.util.GeoUtils#pointInPolygon} method.\n     *\n     * @param term term for candidate document\n     * @return match status\n     */\n    @Override\n    protected AcceptStatus accept(BytesRef term) {\n      // first filter by bounding box\n      AcceptStatus status = super.accept(term);\n      assert status != AcceptStatus.YES_AND_SEEK;\n\n      if (status != AcceptStatus.YES) {\n        return status;\n      }\n\n      final long val = NumericUtils.prefixCodedToLong(term);\n      final double lon = GeoUtils.mortonUnhashLon(val);\n      final double lat = GeoUtils.mortonUnhashLat(val);\n      // post-filter by distance\n      if (!(SloppyMath.haversin(query.centerLat, query.centerLon, lat, lon)*1000.0 <= query.radius)) {\n        return AcceptStatus.NO;\n      }\n\n      return AcceptStatus.YES;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc6e227caf7b84b83df6bb987ca077179f03452f","date":1438419526,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQueryImpl.GeoPointRadiusTermsEnum#postFilterBoundary(BytesRef).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQueryImpl.GeoPointRadiusTermsEnum#accept(BytesRef).mjava","sourceNew":"    /**\n     * The two-phase query approach. The parent\n     * {@link org.apache.lucene.search.GeoPointTermsEnum#accept} method is called to match\n     * encoded terms that fall within the bounding box of the polygon. Those documents that pass the initial\n     * bounding box filter are then compared to the provided distance using the\n     * {@link org.apache.lucene.util.SloppyMath#haversin} method.\n     *\n     * @param term term for candidate document\n     * @return match status\n     */\n    @Override\n    protected AcceptStatus postFilterBoundary(BytesRef term) {\n      final long val = NumericUtils.prefixCodedToLong(term);\n      final double lon = GeoUtils.mortonUnhashLon(val);\n      final double lat = GeoUtils.mortonUnhashLat(val);\n      // post-filter by distance\n      if (SloppyMath.haversin(query.centerLat, query.centerLon, lat, lon) * 1000.0 > query.radius) {\n        return AcceptStatus.NO;\n      }\n      return AcceptStatus.YES;\n    }\n\n","sourceOld":"    /**\n     * The two-phase query approach. The parent\n     * {@link org.apache.lucene.search.GeoPointTermsEnum#accept} method is called to match\n     * encoded terms that fall within the bounding box of the polygon. Those documents that pass the initial\n     * bounding box filter are then compared to the provided polygon using the\n     * {@link org.apache.lucene.util.GeoUtils#pointInPolygon} method.\n     *\n     * @param term term for candidate document\n     * @return match status\n     */\n    @Override\n    protected AcceptStatus accept(BytesRef term) {\n      // first filter by bounding box\n      AcceptStatus status = super.accept(term);\n      assert status != AcceptStatus.YES_AND_SEEK;\n\n      if (status != AcceptStatus.YES) {\n        return status;\n      }\n\n      final long val = NumericUtils.prefixCodedToLong(term);\n      final double lon = GeoUtils.mortonUnhashLon(val);\n      final double lat = GeoUtils.mortonUnhashLat(val);\n      // post-filter by distance\n      if (!(SloppyMath.haversin(query.centerLat, query.centerLon, lat, lon)*1000.0 <= query.radius)) {\n        return AcceptStatus.NO;\n      }\n\n      return AcceptStatus.YES;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc6e227caf7b84b83df6bb987ca077179f03452f":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc6e227caf7b84b83df6bb987ca077179f03452f"]},"commit2Childs":{"fc6e227caf7b84b83df6bb987ca077179f03452f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["fc6e227caf7b84b83df6bb987ca077179f03452f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}