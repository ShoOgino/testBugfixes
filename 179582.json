{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#finishState().mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#finishState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton#finishState().mjava","sourceNew":"  /** Finishes the current state; call this once you are done adding transitions for a state. */\n  public void finishState() {\n    if (curState != -1) {\n      //System.out.println(\"finish: finish current state \" + curState);\n      finishCurrentState();\n      curState = -1;\n    }\n  }\n\n","sourceOld":"  /** Finishes the current state; call this once you are done adding transitions for a state. */\n  public void finishState() {\n    if (curState != -1) {\n      //System.out.println(\"finish: finish current state \" + curState);\n      finishCurrentState();\n      curState = -1;\n    }\n    // nocommit downsize the arrays?\n    //assert getNumStates() > 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bab620c8ab32bb77a62753eca4afb8e47efa87c","date":1402997861,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#finishState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#finishState().mjava","sourceNew":"  /** Finishes the current state; call this once you are done adding\n   *  transitions for a state.  This is automatically called if you\n   *  start adding transitions to a new source state, but for the last\n   *  state you add you need to this method yourself. */\n  public void finishState() {\n    if (curState != -1) {\n      finishCurrentState();\n      curState = -1;\n    }\n  }\n\n","sourceOld":"  /** Finishes the current state; call this once you are done adding transitions for a state. */\n  public void finishState() {\n    if (curState != -1) {\n      //System.out.println(\"finish: finish current state \" + curState);\n      finishCurrentState();\n      curState = -1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#finishState().mjava","pathOld":"/dev/null","sourceNew":"  /** Finishes the current state; call this once you are done adding\n   *  transitions for a state.  This is automatically called if you\n   *  start adding transitions to a new source state, but for the last\n   *  state you add you need to this method yourself. */\n  public void finishState() {\n    if (curState != -1) {\n      finishCurrentState();\n      curState = -1;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bab620c8ab32bb77a62753eca4afb8e47efa87c":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bab620c8ab32bb77a62753eca4afb8e47efa87c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"6bab620c8ab32bb77a62753eca4afb8e47efa87c":["5c84485629d80d203608e8975a1139de9933cc38"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["6bab620c8ab32bb77a62753eca4afb8e47efa87c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}