{"path":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","commits":[{"id":"91e2345fb81b6c1c7faefa550ee5eaafadc54486","date":1469730189,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","pathOld":"/dev/null","sourceNew":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","pathOld":"/dev/null","sourceNew":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","pathOld":"/dev/null","sourceNew":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCoreSnapshots#listSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(\"snapshots\") instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(\"snapshots\");\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(\"indexDirPath\");\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(\"generation\"));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab68488225b6a6c357dda72ed11dedca9914a192":["91e2345fb81b6c1c7faefa550ee5eaafadc54486","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"],"91e2345fb81b6c1c7faefa550ee5eaafadc54486":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["e98520789adb1d5ad05afb4956eca0944a929688"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","91e2345fb81b6c1c7faefa550ee5eaafadc54486"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"91e2345fb81b6c1c7faefa550ee5eaafadc54486":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}