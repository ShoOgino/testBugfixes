{"path":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#migrateStateFormat(ClusterState,ZkNodeProps).mjava","commits":[{"id":"1072b8e47b50f1c4fb039e1f54a736f381d6f809","date":1438956441,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#migrateStateFormat(ClusterState,ZkNodeProps).mjava","pathOld":"/dev/null","sourceNew":"  public ZkWriteCommand migrateStateFormat(ClusterState clusterState, ZkNodeProps message) {\n    final String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n    if (!CollectionMutator.checkKeyExistence(message, ZkStateReader.COLLECTION_PROP)) return ZkStateWriter.NO_OP;\n    DocCollection coll = clusterState.getCollectionOrNull(collection);\n    if (coll == null || coll.getStateFormat() == 2) return ZkStateWriter.NO_OP;\n\n    return new ZkWriteCommand(coll.getName(),\n        new DocCollection(coll.getName(), coll.getSlicesMap(), coll.getProperties(), coll.getRouter(), 0,\n            ZkStateReader.getCollectionPath(collection)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":4,"author":"murblanc","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#migrateStateFormat(ClusterState,ZkNodeProps).mjava","sourceNew":null,"sourceOld":"  public ZkWriteCommand migrateStateFormat(ClusterState clusterState, ZkNodeProps message) {\n    final String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n    if (!CollectionMutator.checkKeyExistence(message, ZkStateReader.COLLECTION_PROP)) return ZkStateWriter.NO_OP;\n    DocCollection coll = clusterState.getCollectionOrNull(collection);\n    if (coll == null || coll.getStateFormat() == 2) return ZkStateWriter.NO_OP;\n\n    return new ZkWriteCommand(coll.getName(),\n        new DocCollection(coll.getName(), coll.getSlicesMap(), coll.getProperties(), coll.getRouter(), 0,\n            ZkStateReader.getCollectionPath(collection)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["1072b8e47b50f1c4fb039e1f54a736f381d6f809"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"1072b8e47b50f1c4fb039e1f54a736f381d6f809":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1072b8e47b50f1c4fb039e1f54a736f381d6f809"],"1072b8e47b50f1c4fb039e1f54a736f381d6f809":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}