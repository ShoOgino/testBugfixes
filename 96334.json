{"path":"lucene/monitor/src/test/org/apache/lucene/monitor/TestPresearcherMatchCollector#testMatchCollectorShowMatches().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/TestPresearcherMatchCollector#testMatchCollectorShowMatches().mjava","pathOld":"/dev/null","sourceNew":"  public void testMatchCollectorShowMatches() throws IOException {\n\n    try (Monitor monitor = new Monitor(ANALYZER, new TermFilteredPresearcher())) {\n      monitor.register(new MonitorQuery(\"1\", parse(\"test\")));\n      monitor.register(new MonitorQuery(\"2\", parse(\"foo bar -baz f2:quuz\")));\n      monitor.register(new MonitorQuery(\"3\", parse(\"foo -test\")));\n      monitor.register(new MonitorQuery(\"4\", parse(\"baz\")));\n      assertEquals(4, monitor.getQueryCount());\n\n      Document doc = new Document();\n      doc.add(newTextField(FIELD, \"this is a foo test\", Field.Store.NO));\n      doc.add(newTextField(\"f2\", \"quuz\", Field.Store.NO));\n\n      PresearcherMatches<QueryMatch> matches = monitor.debug(doc, QueryMatch.SIMPLE_MATCHER);\n\n      assertNotNull(matches.match(\"1\", 0));\n      assertEquals(\" field:test\", matches.match(\"1\", 0).presearcherMatches);\n      assertNotNull(matches.match(\"1\", 0).queryMatch);\n\n      assertNotNull(matches.match(\"2\", 0));\n      String pm = matches.match(\"2\", 0).presearcherMatches;\n      assertThat(pm, containsString(\"field:foo\"));\n      assertThat(pm, containsString(\"f2:quuz\"));\n\n      assertNotNull(matches.match(\"3\", 0));\n      assertEquals(\" field:foo\", matches.match(\"3\", 0).presearcherMatches);\n      assertNull(matches.match(\"3\", 0).queryMatch);\n\n      assertNull(matches.match(\"4\", 0));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}