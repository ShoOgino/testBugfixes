{"path":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","sourceNew":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return new FixedBitSet(context.reader().maxDoc());\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return new FixedBitSet(context.reader().maxDoc());\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","sourceNew":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new FixedBitSet(context.reader().maxDoc());\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n        return new FixedBitSet(context.reader().maxDoc());\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80c55596a764e2d397e982828e75fcac5ce430a0","date":1413987559,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","sourceNew":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new FixedBitDocIdSet(new FixedBitSet(context.reader().maxDoc()));\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new FixedBitSet(context.reader().maxDoc());\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","sourceNew":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new BitDocIdSet(new FixedBitSet(context.reader().maxDoc()));\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new FixedBitDocIdSet(new FixedBitSet(context.reader().maxDoc()));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6","date":1424027250,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","sourceNew":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new BitDocIdSet(new FixedBitSet(context.reader().maxDoc()));\n      }\n      @Override\n      public String toString(String field) {\n        return \"emptyFilter\";\n      }\n    };\n  }\n\n","sourceOld":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new BitDocIdSet(new FixedBitSet(context.reader().maxDoc()));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"099c774ddd27f4ad437ca5df14d153bab0a3affe","date":1424527689,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#getEmptyFilter().mjava","sourceNew":null,"sourceOld":"  private Filter getEmptyFilter() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) {\n        return new BitDocIdSet(new FixedBitSet(context.reader().maxDoc()));\n      }\n      @Override\n      public String toString(String field) {\n        return \"emptyFilter\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80c55596a764e2d397e982828e75fcac5ce430a0":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["80c55596a764e2d397e982828e75fcac5ce430a0"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["099c774ddd27f4ad437ca5df14d153bab0a3affe"]},"commit2Childs":{"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6":["099c774ddd27f4ad437ca5df14d153bab0a3affe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"80c55596a764e2d397e982828e75fcac5ce430a0":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["80c55596a764e2d397e982828e75fcac5ce430a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}