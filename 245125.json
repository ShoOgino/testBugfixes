{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","date":1334628185,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = resourceLoader.newInstance(c.getName(), c);\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a729cb426b43048d8d7a497a214bd89a9a9e25","date":1356712177,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = resourceLoader.newInstance(c.getName(), c);\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList<String>() );\n      }\n      if(searchComp instanceof SearchComponent) {\n        ((SearchComponent)searchComp).setName(name);\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = resourceLoader.newInstance(c.getName(), c);\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = resourceLoader.newInstance(c.getName(), c);\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList<String>() );\n      }\n      if(searchComp instanceof SearchComponent) {\n        ((SearchComponent)searchComp).setName(name);\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = resourceLoader.newInstance(c.getName(), c);\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList() );\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":null,"sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = resourceLoader.newInstance(c.getName(), c);\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList<String>() );\n      }\n      if(searchComp instanceof SearchComponent) {\n        ((SearchComponent)searchComp).setName(name);\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":null,"sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = resourceLoader.newInstance(c.getName(), c);\n      if (searchComp instanceof NamedListInitializedPlugin){\n        ((NamedListInitializedPlugin)searchComp).init( new NamedList<String>() );\n      }\n      if(searchComp instanceof SearchComponent) {\n        ((SearchComponent)searchComp).setName(name);\n      }\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","c3a729cb426b43048d8d7a497a214bd89a9a9e25"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c3a729cb426b43048d8d7a497a214bd89a9a9e25","9aea0485ecacb6734c17da2d02569816c23a69c1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a729cb426b43048d8d7a497a214bd89a9a9e25":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["c3a729cb426b43048d8d7a497a214bd89a9a9e25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9aea0485ecacb6734c17da2d02569816c23a69c1"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c3a729cb426b43048d8d7a497a214bd89a9a9e25":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"c26f00b574427b55127e869b935845554afde1fa":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c3a729cb426b43048d8d7a497a214bd89a9a9e25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}