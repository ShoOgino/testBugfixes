{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestBasicOperations#naiveUnion(List[BytesRef]).mjava","sourceNew":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)));\n  }\n\n","sourceOld":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton [] eachIndividual = new Automaton [strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = BasicAutomata.makeString(bref.utf8ToString());\n    }\n    return BasicOperations.union(Arrays.asList(eachIndividual));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","sourceNew":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n  }\n\n","sourceOld":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54297202372099824b9eb2d6897335b221455496","date":1501840968,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","sourceNew":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)), DEFAULT_MAX_DETERMINIZED_STATES);\n  }\n\n","sourceOld":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#naiveUnion(List[BytesRef]).mjava","sourceNew":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)), DEFAULT_MAX_DETERMINIZED_STATES);\n  }\n\n","sourceOld":"  private static Automaton naiveUnion(List<BytesRef> strings) {\n    Automaton[] eachIndividual = new Automaton[strings.size()];\n    int i = 0;\n    for (BytesRef bref : strings) {\n      eachIndividual[i++] = Automata.makeString(bref.utf8ToString());\n    }\n    return Operations.determinize(Operations.union(Arrays.asList(eachIndividual)),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["8b316f82baae88f5e279893a9cb7eee51fd8902f","54297202372099824b9eb2d6897335b221455496"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54297202372099824b9eb2d6897335b221455496":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54297202372099824b9eb2d6897335b221455496"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54297202372099824b9eb2d6897335b221455496"],"54297202372099824b9eb2d6897335b221455496":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5c84485629d80d203608e8975a1139de9933cc38":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}