{"path":"src/java/org/apache/lucene/index/TermVectorsWriter#addRawDocuments(TermVectorsReader,int[],int[],int).mjava","commits":[{"id":"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33","date":1201260752,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsWriter#addRawDocuments(TermVectorsReader,int[],int[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Do a bulk copy of numDocs documents from reader to our\n   * streams.  This is used to expedite merging, if the\n   * field numbers are congruent.\n   */\n  final void addRawDocuments(TermVectorsReader reader, int[] tvdLengths, int[] tvfLengths, int numDocs) throws IOException {\n    long tvdPosition = tvd.getFilePointer();\n    long tvfPosition = tvf.getFilePointer();\n    long tvdStart = tvdPosition;\n    long tvfStart = tvfPosition;\n    for(int i=0;i<numDocs;i++) {\n      tvx.writeLong(tvdPosition);\n      tvdPosition += tvdLengths[i];\n      tvx.writeLong(tvfPosition);\n      tvfPosition += tvfLengths[i];\n    }\n    tvd.copyBytes(reader.getTvdStream(), tvdPosition-tvdStart);\n    tvf.copyBytes(reader.getTvfStream(), tvfPosition-tvfStart);\n    assert tvd.getFilePointer() == tvdPosition;\n    assert tvf.getFilePointer() == tvfPosition;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#addRawDocuments(TermVectorsReader,int[],int[],int).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsWriter#addRawDocuments(TermVectorsReader,int[],int[],int).mjava","sourceNew":"  /**\n   * Do a bulk copy of numDocs documents from reader to our\n   * streams.  This is used to expedite merging, if the\n   * field numbers are congruent.\n   */\n  final void addRawDocuments(TermVectorsReader reader, int[] tvdLengths, int[] tvfLengths, int numDocs) throws IOException {\n    long tvdPosition = tvd.getFilePointer();\n    long tvfPosition = tvf.getFilePointer();\n    long tvdStart = tvdPosition;\n    long tvfStart = tvfPosition;\n    for(int i=0;i<numDocs;i++) {\n      tvx.writeLong(tvdPosition);\n      tvdPosition += tvdLengths[i];\n      tvx.writeLong(tvfPosition);\n      tvfPosition += tvfLengths[i];\n    }\n    tvd.copyBytes(reader.getTvdStream(), tvdPosition-tvdStart);\n    tvf.copyBytes(reader.getTvfStream(), tvfPosition-tvfStart);\n    assert tvd.getFilePointer() == tvdPosition;\n    assert tvf.getFilePointer() == tvfPosition;\n  }\n\n","sourceOld":"  /**\n   * Do a bulk copy of numDocs documents from reader to our\n   * streams.  This is used to expedite merging, if the\n   * field numbers are congruent.\n   */\n  final void addRawDocuments(TermVectorsReader reader, int[] tvdLengths, int[] tvfLengths, int numDocs) throws IOException {\n    long tvdPosition = tvd.getFilePointer();\n    long tvfPosition = tvf.getFilePointer();\n    long tvdStart = tvdPosition;\n    long tvfStart = tvfPosition;\n    for(int i=0;i<numDocs;i++) {\n      tvx.writeLong(tvdPosition);\n      tvdPosition += tvdLengths[i];\n      tvx.writeLong(tvfPosition);\n      tvfPosition += tvfLengths[i];\n    }\n    tvd.copyBytes(reader.getTvdStream(), tvdPosition-tvdStart);\n    tvf.copyBytes(reader.getTvfStream(), tvfPosition-tvfStart);\n    assert tvd.getFilePointer() == tvdPosition;\n    assert tvf.getFilePointer() == tvfPosition;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"]},"commit2Childs":{"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}