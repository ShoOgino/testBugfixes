{"path":"lucene/core/src/java/org/apache/lucene/search/FilteringNumericLeafComparator#FilteringNumericLeafComparator(LeafFieldComparator,LeafReaderContext,String,boolean,boolean,boolean,int).mjava","commits":[{"id":"e18fac0122568cb02eb2c92608ca703a723bbbd6","date":1592942698,"type":0,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteringNumericLeafComparator#FilteringNumericLeafComparator(LeafFieldComparator,LeafReaderContext,String,boolean,boolean,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  public FilteringNumericLeafComparator(LeafFieldComparator in, LeafReaderContext context, String field,\n        boolean reverse, boolean singleSort, boolean hasTopValue, int bytesCount) throws IOException {\n    this.in = in;\n    this.pointValues = context.reader().getPointValues(field);\n    this.reverse = reverse;\n    this.singleSort = singleSort;\n    this.hasTopValue = hasTopValue;\n    this.maxDoc = context.reader().maxDoc();\n    this.bytesCount = bytesCount;\n    this.maxValueAsBytes = reverse == false ? new byte[bytesCount] : hasTopValue ? new byte[bytesCount] : null;\n    this.minValueAsBytes = reverse ? new byte[bytesCount] : hasTopValue ? new byte[bytesCount] : null;\n\n    // TODO: optimize a case when pointValues are missing only on this segment\n    this.competitiveIterator = pointValues == null ? null : DocIdSetIterator.all(maxDoc);\n    this.iteratorCost = maxDoc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241","date":1599588987,"type":4,"author":"Mayya Sharipova","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteringNumericLeafComparator#FilteringNumericLeafComparator(LeafFieldComparator,LeafReaderContext,String,boolean,boolean,boolean,int).mjava","sourceNew":null,"sourceOld":"  public FilteringNumericLeafComparator(LeafFieldComparator in, LeafReaderContext context, String field,\n        boolean reverse, boolean singleSort, boolean hasTopValue, int bytesCount) throws IOException {\n    this.in = in;\n    this.pointValues = context.reader().getPointValues(field);\n    this.reverse = reverse;\n    this.singleSort = singleSort;\n    this.hasTopValue = hasTopValue;\n    this.maxDoc = context.reader().maxDoc();\n    this.bytesCount = bytesCount;\n    this.maxValueAsBytes = reverse == false ? new byte[bytesCount] : hasTopValue ? new byte[bytesCount] : null;\n    this.minValueAsBytes = reverse ? new byte[bytesCount] : hasTopValue ? new byte[bytesCount] : null;\n\n    // TODO: optimize a case when pointValues are missing only on this segment\n    this.competitiveIterator = pointValues == null ? null : DocIdSetIterator.all(maxDoc);\n    this.iteratorCost = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e18fac0122568cb02eb2c92608ca703a723bbbd6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["e18fac0122568cb02eb2c92608ca703a723bbbd6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e18fac0122568cb02eb2c92608ca703a723bbbd6"],"e18fac0122568cb02eb2c92608ca703a723bbbd6":["e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}