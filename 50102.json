{"path":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","commits":[{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, IndexOptions options, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setIndexOptions(options);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb3ae979101b73b309a7d93892f00f5b643ceb5f","date":1310480073,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param options options for what should be indexed in the postings\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, IndexOptions options, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setIndexOptions(options);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, IndexOptions options, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setIndexOptions(options);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8c18828cd7c43a8460d7f4046d8138278a7eaa","date":1311619509,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param options options for what should be indexed in the postings\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, IndexOptions options, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    if (index.isIndexed()) {\n      f.setOmitNorms(omitNorms);\n      f.setIndexOptions(options);\n      f.setBoost(boost);\n    }\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param options options for what should be indexed in the postings\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, IndexOptions options, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setIndexOptions(options);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param options options for what should be indexed in the postings\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, IndexOptions options, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    if (index.isIndexed()) {\n      f.setOmitNorms(omitNorms);\n      f.setIndexOptions(options);\n      f.setBoost(boost);\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb3ae979101b73b309a7d93892f00f5b643ceb5f":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["4e8c18828cd7c43a8460d7f4046d8138278a7eaa"],"4e8c18828cd7c43a8460d7f4046d8138278a7eaa":["fb3ae979101b73b309a7d93892f00f5b643ceb5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["fb3ae979101b73b309a7d93892f00f5b643ceb5f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"fb3ae979101b73b309a7d93892f00f5b643ceb5f":["4e8c18828cd7c43a8460d7f4046d8138278a7eaa"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e8c18828cd7c43a8460d7f4046d8138278a7eaa":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}