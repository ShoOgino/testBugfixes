{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testExceptionOnSyncMetadata().mjava","commits":[{"id":"d0c334a824d4ce7d739c100bf4ae56111a995e3a","date":1598293184,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testExceptionOnSyncMetadata().mjava","pathOld":"/dev/null","sourceNew":"  public void testExceptionOnSyncMetadata() throws IOException {\n    try (MockDirectoryWrapper dir = newMockDirectory()) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig().setCommitOnClose(false));\n        writer.commit();\n        AtomicBoolean maybeFailDelete = new AtomicBoolean(false);\n        BooleanSupplier failDelete = () -> random().nextBoolean() && maybeFailDelete.get();\n        dir.failOn(new MockDirectoryWrapper.Failure() {\n          @Override\n          public void eval(MockDirectoryWrapper dir)  {\n            if (callStackContains(MockDirectoryWrapper.class, \"syncMetaData\")\n                && callStackContains(SegmentInfos.class, \"finishCommit\")) {\n              throw new RuntimeException(\"boom\");\n            } else if (failDelete.getAsBoolean() &&\n                callStackContains(IndexWriter.class, \"rollbackInternalNoCommit\") && callStackContains(IndexFileDeleter.class, \"deleteFiles\")) {\n              throw new RuntimeException(\"bang\");\n            }\n          }});\n        for (int i = 0; i < 5; i++) {\n          Document doc = new Document();\n          doc.add(newStringField(\"id\", Integer.toString(i), Field.Store.NO));\n          doc.add(new NumericDocValuesField(\"dv\", i));\n          doc.add(new BinaryDocValuesField(\"dv2\", new BytesRef(Integer.toString(i))));\n          doc.add(new SortedDocValuesField(\"dv3\", new BytesRef(Integer.toString(i))));\n          doc.add(new SortedSetDocValuesField(\"dv4\", new BytesRef(Integer.toString(i))));\n          doc.add(new SortedSetDocValuesField(\"dv4\", new BytesRef(Integer.toString(i - 1))));\n          doc.add(new SortedNumericDocValuesField(\"dv5\", i));\n          doc.add(new SortedNumericDocValuesField(\"dv5\", i - 1));\n          doc.add(newTextField(\"text1\", TestUtil.randomAnalysisString(random(), 20, true), Field.Store.NO));\n          // ensure we store something\n          doc.add(new StoredField(\"stored1\", \"foo\"));\n          doc.add(new StoredField(\"stored1\", \"bar\"));\n          // ensure we get some payloads\n          doc.add(newTextField(\"text_payloads\", TestUtil.randomAnalysisString(random(), 6, true), Field.Store.NO));\n          // ensure we get some vectors\n          FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n          ft.setStoreTermVectors(true);\n          doc.add(newField(\"text_vectors\", TestUtil.randomAnalysisString(random(), 6, true), ft));\n          doc.add(new IntPoint(\"point\", random().nextInt()));\n          doc.add(new IntPoint(\"point2d\", random().nextInt(), random().nextInt()));\n          writer.addDocument(new Document());\n        }\n        try {\n          writer.commit();\n          fail();\n        } catch (RuntimeException e) {\n          assertEquals(\"boom\", e.getMessage());\n        }\n        try {\n          maybeFailDelete.set(true);\n          writer.rollback();\n        } catch (RuntimeException e) {\n          assertEquals(\"bang\", e.getMessage());\n        }\n        maybeFailDelete.set(false);\n        assertTrue(writer.isClosed());\n        assertTrue(DirectoryReader.indexExists(dir));\n        DirectoryReader.open(dir).close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0c334a824d4ce7d739c100bf4ae56111a995e3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0c334a824d4ce7d739c100bf4ae56111a995e3a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0c334a824d4ce7d739c100bf4ae56111a995e3a"],"d0c334a824d4ce7d739c100bf4ae56111a995e3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}