{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/QueryDocValues[QueryValueSource]#QueryDocValues(QueryValueSource,LeafReaderContext,Map).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/QueryDocValues[QueryValueSource]#QueryDocValues(QueryValueSource,LeafReaderContext,Map).mjava","pathOld":"/dev/null","sourceNew":"  public QueryDocValues(QueryValueSource vs, LeafReaderContext readerContext, Map fcontext) throws IOException {\n    super(vs);\n\n    this.readerContext = readerContext;\n    this.acceptDocs = readerContext.reader().getLiveDocs();\n    this.defVal = vs.defVal;\n    this.q = vs.q;\n    this.fcontext = fcontext;\n\n    Weight w = fcontext==null ? null : (Weight)fcontext.get(vs);\n    if (w == null) {\n      IndexSearcher weightSearcher;\n      if(fcontext == null) {\n        weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n      } else {\n        weightSearcher = (IndexSearcher)fcontext.get(\"searcher\");\n        if (weightSearcher == null) {\n          weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n        }\n      }\n      vs.createWeight(fcontext, weightSearcher);\n      w = (Weight)fcontext.get(vs);\n    }\n    weight = w;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/QueryDocValues[QueryValueSource]#QueryDocValues(QueryValueSource,LeafReaderContext,Map).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/QueryDocValues[QueryValueSource]#QueryDocValues(QueryValueSource,LeafReaderContext,Map).mjava","sourceNew":"  public QueryDocValues(QueryValueSource vs, LeafReaderContext readerContext, Map fcontext) throws IOException {\n    super(vs);\n\n    this.readerContext = readerContext;\n    this.defVal = vs.defVal;\n    this.q = vs.q;\n    this.fcontext = fcontext;\n\n    Weight w = fcontext==null ? null : (Weight)fcontext.get(vs);\n    if (w == null) {\n      IndexSearcher weightSearcher;\n      if(fcontext == null) {\n        weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n      } else {\n        weightSearcher = (IndexSearcher)fcontext.get(\"searcher\");\n        if (weightSearcher == null) {\n          weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n        }\n      }\n      vs.createWeight(fcontext, weightSearcher);\n      w = (Weight)fcontext.get(vs);\n    }\n    weight = w;\n  }\n\n","sourceOld":"  public QueryDocValues(QueryValueSource vs, LeafReaderContext readerContext, Map fcontext) throws IOException {\n    super(vs);\n\n    this.readerContext = readerContext;\n    this.acceptDocs = readerContext.reader().getLiveDocs();\n    this.defVal = vs.defVal;\n    this.q = vs.q;\n    this.fcontext = fcontext;\n\n    Weight w = fcontext==null ? null : (Weight)fcontext.get(vs);\n    if (w == null) {\n      IndexSearcher weightSearcher;\n      if(fcontext == null) {\n        weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n      } else {\n        weightSearcher = (IndexSearcher)fcontext.get(\"searcher\");\n        if (weightSearcher == null) {\n          weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n        }\n      }\n      vs.createWeight(fcontext, weightSearcher);\n      w = (Weight)fcontext.get(vs);\n    }\n    weight = w;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":5,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/QueryDocValues[QueryValueSource]#QueryDocValues(QueryValueSource,LeafReaderContext,Map[Object,Object]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/QueryDocValues[QueryValueSource]#QueryDocValues(QueryValueSource,LeafReaderContext,Map).mjava","sourceNew":"  public QueryDocValues(QueryValueSource vs, LeafReaderContext readerContext, Map<Object, Object> fcontext) throws IOException {\n    super(vs);\n\n    this.readerContext = readerContext;\n    this.defVal = vs.defVal;\n    this.q = vs.q;\n    this.fcontext = fcontext;\n\n    Weight w = fcontext==null ? null : (Weight)fcontext.get(vs);\n    if (w == null) {\n      IndexSearcher weightSearcher;\n      if(fcontext == null) {\n        weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n      } else {\n        weightSearcher = (IndexSearcher)fcontext.get(\"searcher\");\n        if (weightSearcher == null) {\n          weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n        }\n      }\n      vs.createWeight(fcontext, weightSearcher);\n      w = (Weight)fcontext.get(vs);\n    }\n    weight = w;\n  }\n\n","sourceOld":"  public QueryDocValues(QueryValueSource vs, LeafReaderContext readerContext, Map fcontext) throws IOException {\n    super(vs);\n\n    this.readerContext = readerContext;\n    this.defVal = vs.defVal;\n    this.q = vs.q;\n    this.fcontext = fcontext;\n\n    Weight w = fcontext==null ? null : (Weight)fcontext.get(vs);\n    if (w == null) {\n      IndexSearcher weightSearcher;\n      if(fcontext == null) {\n        weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n      } else {\n        weightSearcher = (IndexSearcher)fcontext.get(\"searcher\");\n        if (weightSearcher == null) {\n          weightSearcher = new IndexSearcher(ReaderUtil.getTopLevelContext(readerContext));\n        }\n      }\n      vs.createWeight(fcontext, weightSearcher);\n      w = (Weight)fcontext.get(vs);\n    }\n    weight = w;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}